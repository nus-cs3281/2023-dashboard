[{"path":"src/main/java/teammates/logic/core/FeedbackResponsesLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javax.annotation.Nullable;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.AttributesDeletionQuery;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.CourseRoster;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackResultFetchType;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.SessionResultsBundle;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackQuestionType;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackRankRecipientsResponseDetails;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackTextResponseDetails;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.common.util.RequestTracer;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackResponsesDb;"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Handles operations related to feedback responses."},{"lineNumber":37,"author":{"gitId":"-"},"content":" *"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * @see FeedbackResponseAttributes"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * @see FeedbackResponsesDb"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public final class FeedbackResponsesLogic {"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final FeedbackResponsesLogic instance \u003d new FeedbackResponsesLogic();"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final FeedbackResponsesDb frDb \u003d FeedbackResponsesDb.inst();"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private FeedbackQuestionsLogic fqLogic;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FeedbackResponseCommentsLogic frcLogic;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private InstructorsLogic instructorsLogic;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StudentsLogic studentsLogic;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private FeedbackResponsesLogic() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static FeedbackResponsesLogic inst() {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void initLogicDependencies() {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        fqLogic \u003d FeedbackQuestionsLogic.inst();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        frcLogic \u003d FeedbackResponseCommentsLogic.inst();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Gets a set of giver identifiers that has at least one response under a feedback session."},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Set\u003cString\u003e getGiverSetThatAnswerFeedbackSession(String courseId, String feedbackSessionName) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return frDb.getGiverSetThatAnswerFeedbackSession(courseId, feedbackSessionName);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Creates a feedback response."},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @return created feedback response"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the response is not valid"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the response already exist"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes createFeedbackResponse(FeedbackResponseAttributes fra)"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityAlreadyExistsException {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return frDb.createEntity(fra);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Gets a feedback response by its ID."},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes getFeedbackResponse("},{"lineNumber":90,"author":{"gitId":"-"},"content":"            String feedbackResponseId) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return frDb.getFeedbackResponse(feedbackResponseId);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Gets a feedback response by its unique key."},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes getFeedbackResponse("},{"lineNumber":98,"author":{"gitId":"-"},"content":"            String feedbackQuestionId, String giverEmail, String recipient) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return frDb.getFeedbackResponse(feedbackQuestionId, giverEmail, recipient);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Gets all responses for a session."},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSession("},{"lineNumber":106,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return frDb.getFeedbackResponsesForSession(feedbackSessionName, courseId);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Gets all responses given to/from a section in a feedback session in a course."},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the name if the session"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @param courseId the course ID of the session"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @param section if null, will retrieve all responses in the session"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @param fetchType if not null, will retrieve responses by giver, receiver sections, or both"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @return a list of responses"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionInSection("},{"lineNumber":120,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, @Nullable String section,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            @Nullable FeedbackResultFetchType fetchType) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (section \u003d\u003d null) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return getFeedbackResponsesForSession(feedbackSessionName, courseId);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return frDb.getFeedbackResponsesForSessionInSection(feedbackSessionName, courseId, section, fetchType);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Gets all responses for a question."},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForQuestion(String feedbackQuestionId) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return frDb.getFeedbackResponsesForQuestion(feedbackQuestionId);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Checks whether there are responses for a question."},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean areThereResponsesForQuestion(String feedbackQuestionId) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return frDb.areThereResponsesForQuestion(feedbackQuestionId);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Gets all responses given to/from a section for a question."},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param feedbackQuestionId the ID of the question"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param section if null, will retrieve all responses for the question"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @return a list of responses"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForQuestionInSection("},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String feedbackQuestionId, @Nullable String section, FeedbackResultFetchType fetchType) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (section \u003d\u003d null) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return getFeedbackResponsesForQuestion(feedbackQuestionId);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return frDb.getFeedbackResponsesForQuestionInSection(feedbackQuestionId, section, fetchType);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Gets all responses given by a user for a question."},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":161,"author":{"gitId":"-"},"content":"            String feedbackQuestionId, String userEmail) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return frDb.getFeedbackResponsesFromGiverForQuestion(feedbackQuestionId, userEmail);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Gets all responses received by a user for a question."},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForReceiverForQuestion("},{"lineNumber":169,"author":{"gitId":"-"},"content":"            String feedbackQuestionId, String userEmail) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return frDb.getFeedbackResponsesForReceiverForQuestion(feedbackQuestionId, userEmail);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Checks whether a giver has responded a session."},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public boolean hasGiverRespondedForSession(String giverIdentifier, String feedbackSessionName, String courseId) {"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return frDb.hasResponsesFromGiverInSession(giverIdentifier, feedbackSessionName, courseId);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Gets all responses received by an user for a course."},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForReceiverForCourse("},{"lineNumber":185,"author":{"gitId":"-"},"content":"            String courseId, String userEmail) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return frDb.getFeedbackResponsesForReceiverForCourse(courseId, userEmail);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Gets all responses given by an user for a course."},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromGiverForCourse("},{"lineNumber":193,"author":{"gitId":"-"},"content":"            String courseId, String userEmail) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return frDb.getFeedbackResponsesFromGiverForCourse(courseId, userEmail);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Get existing feedback responses from student or his team for the given"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * question."},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromStudentOrTeamForQuestion("},{"lineNumber":202,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, StudentAttributes student) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (question.getGiverType() \u003d\u003d FeedbackParticipantType.TEAMS) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return getFeedbackResponsesFromTeamForQuestion("},{"lineNumber":205,"author":{"gitId":"-"},"content":"                    question.getId(), question.getCourseId(), student.getTeam(), null);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return frDb.getFeedbackResponsesFromGiverForQuestion(question.getId(), student.getEmail());"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Checks whether the giver name of a response is visible to an user."},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public boolean isNameVisibleToUser("},{"lineNumber":214,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            FeedbackResponseAttributes response,"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            String userEmail,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            boolean isInstructor, boolean isGiverName, CourseRoster roster) {"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (question \u003d\u003d null) {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // Early return if user is giver"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        if (question.getGiverType() \u003d\u003d FeedbackParticipantType.TEAMS) {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            // if response is given by team, then anyone in the team can see the response"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (roster.isStudentInTeam(userEmail, response.getGiver())) {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            if (response.getGiver().equals(userEmail)) {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return isFeedbackParticipantNameVisibleToUser(question, response,"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                userEmail, isInstructor, isGiverName, roster);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    private boolean isFeedbackParticipantNameVisibleToUser("},{"lineNumber":240,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, FeedbackResponseAttributes response,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            String userEmail, boolean isInstructor, boolean isGiverName, CourseRoster roster) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e showNameTo \u003d isGiverName"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                                                 ? question.getShowGiverNameTo()"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                                                 : question.getShowRecipientNameTo();"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType type : showNameTo) {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            switch (type) {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            case INSTRUCTORS:"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                if (roster.getInstructorForEmail(userEmail) !\u003d null \u0026\u0026 isInstructor) {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            case OWN_TEAM_MEMBERS:"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            case OWN_TEAM_MEMBERS_INCLUDING_SELF:"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                // Refers to Giver\u0027s Team Members"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                if (roster.isStudentsInSameTeam(response.getGiver(), userEmail)) {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            case RECEIVER:"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                // Response to team"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                if (question.getRecipientType().isTeam()) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    if (roster.isStudentInTeam(userEmail, response.getRecipient())) {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                        // this is a team name"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                        return true;"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    // Response to individual"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                } else if (response.getRecipient().equals(userEmail)) {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                } else {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            case RECEIVER_TEAM_MEMBERS:"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                // Response to team; recipient \u003d teamName"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                if (question.getRecipientType().isTeam()) {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    if (roster.isStudentInTeam(userEmail, response.getRecipient())) {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                        // this is a team name"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                        return true;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                } else if (roster.isStudentsInSameTeam(response.getRecipient(), userEmail)) {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    // Response to individual"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            case STUDENTS:"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                if (roster.isStudentInCourse(userEmail)) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                    return true;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            default:"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                assert false : \"Invalid FeedbackParticipantType for showNameTo in \""},{"lineNumber":293,"author":{"gitId":"-"},"content":"                        + \"FeedbackResponseLogic.isFeedbackParticipantNameVisibleToUser()\";"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * Returns true if the responses of the question are visible to students."},{"lineNumber":302,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    public boolean isResponseOfFeedbackQuestionVisibleToStudent(FeedbackQuestionAttributes question) {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        if (question.isResponseVisibleTo(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        boolean isStudentRecipientType \u003d"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                   question.getRecipientType().equals(FeedbackParticipantType.STUDENTS)"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                || question.getRecipientType().equals(FeedbackParticipantType.STUDENTS_EXCLUDING_SELF)"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                || question.getRecipientType().equals(FeedbackParticipantType.STUDENTS_IN_SAME_SECTION)"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                || question.getRecipientType().equals(FeedbackParticipantType.OWN_TEAM_MEMBERS)"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                || question.getRecipientType().equals(FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF)"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                || question.getRecipientType().equals(FeedbackParticipantType.GIVER)"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                   \u0026\u0026 question.getGiverType().equals(FeedbackParticipantType.STUDENTS);"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"        if ((isStudentRecipientType || question.getRecipientType().isTeam())"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                \u0026\u0026 question.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)) {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        if (question.getGiverType() \u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                || question.isResponseVisibleTo(FeedbackParticipantType.OWN_TEAM_MEMBERS)) {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        return question.isResponseVisibleTo(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":328,"author":{"gitId":"-"},"content":"     * Returns true if the responses of the question are visible to instructors."},{"lineNumber":329,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    public boolean isResponseOfFeedbackQuestionVisibleToInstructor(FeedbackQuestionAttributes question) {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        return question.isResponseVisibleTo(FeedbackParticipantType.INSTRUCTORS);"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackQuestionAttributes\u003e getQuestionsForSession("},{"lineNumber":335,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, @Nullable String questionId) {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        if (questionId \u003d\u003d null) {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            return fqLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fqa \u003d fqLogic.getFeedbackQuestion(questionId);"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        return fqa \u003d\u003d null ? Collections.emptyList() : Collections.singletonList(fqa);"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"    private SessionResultsBundle buildResultsBundle("},{"lineNumber":344,"author":{"gitId":"-"},"content":"            boolean isCourseWide, String feedbackSessionName, String courseId, String section, String questionId,"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            boolean isInstructor, String userEmail, InstructorAttributes instructor, StudentAttributes student,"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            CourseRoster roster, List\u003cFeedbackQuestionAttributes\u003e allQuestions,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            List\u003cFeedbackResponseAttributes\u003e allResponses) {"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Map\u003cString, FeedbackQuestionAttributes\u003e allQuestionsMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes qn : allQuestions) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            allQuestionsMap.put(qn.getId(), qn);"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"        // load comment(s)"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseCommentAttributes\u003e allComments;"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        if (questionId \u003d\u003d null) {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            allComments \u003d frcLogic.getFeedbackResponseCommentForSessionInSection(courseId, feedbackSessionName, section);"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            allComments \u003d frcLogic.getFeedbackResponseCommentForQuestionInSection(questionId, section);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        RequestTracer.checkRemainingTime();"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"        // related questions, responses, and comment"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        Map\u003cString, FeedbackQuestionAttributes\u003e relatedQuestionsMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        Map\u003cString, FeedbackResponseAttributes\u003e relatedResponsesMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e relatedCommentsMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        if (isCourseWide) {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            // all questions are related questions when viewing course-wide result"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            for (FeedbackQuestionAttributes qn : allQuestions) {"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                relatedQuestionsMap.put(qn.getId(), qn);"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e studentsEmailInTeam \u003d new HashSet\u003c\u003e();"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        if (student !\u003d null) {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            for (StudentAttributes studentInTeam"},{"lineNumber":376,"author":{"gitId":"-"},"content":"                    : roster.getTeamToMembersTable().getOrDefault(student.getTeam(), Collections.emptyList())) {"},{"lineNumber":377,"author":{"gitId":"-"},"content":"                studentsEmailInTeam.add(studentInTeam.getEmail());"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"        // visibility table for each response and comment"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        Map\u003cString, Boolean\u003e responseGiverVisibilityTable \u003d new HashMap\u003c\u003e();"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        Map\u003cString, Boolean\u003e responseRecipientVisibilityTable \u003d new HashMap\u003c\u003e();"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        Map\u003cLong, Boolean\u003e commentVisibilityTable \u003d new HashMap\u003c\u003e();"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"        // build response"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : allResponses) {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes correspondingQuestion \u003d allQuestionsMap.get(response.getFeedbackQuestionId());"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            if (correspondingQuestion \u003d\u003d null) {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"                // orphan response without corresponding question, ignore it"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":393,"author":{"gitId":"-"},"content":"            // check visibility of response"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            boolean isVisibleResponse \u003d isResponseVisibleForUser("},{"lineNumber":395,"author":{"gitId":"-"},"content":"                    userEmail, isInstructor, student, studentsEmailInTeam, response, correspondingQuestion, instructor);"},{"lineNumber":396,"author":{"gitId":"-"},"content":"            if (!isVisibleResponse) {"},{"lineNumber":397,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":398,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"            // if there are viewable responses, the corresponding question becomes related"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            relatedQuestionsMap.put(response.getFeedbackQuestionId(), correspondingQuestion);"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            relatedResponsesMap.put(response.getId(), response);"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            // generate giver/recipient name visibility table"},{"lineNumber":404,"author":{"gitId":"-"},"content":"            responseGiverVisibilityTable.put(response.getId(),"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                    isNameVisibleToUser(correspondingQuestion, response, userEmail, isInstructor, true, roster));"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            responseRecipientVisibilityTable.put(response.getId(),"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                    isNameVisibleToUser(correspondingQuestion, response, userEmail, isInstructor, false, roster));"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        RequestTracer.checkRemainingTime();"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"        // build comment"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        for (FeedbackResponseCommentAttributes frc : allComments) {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            FeedbackResponseAttributes relatedResponse \u003d relatedResponsesMap.get(frc.getFeedbackResponseId());"},{"lineNumber":414,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes relatedQuestion \u003d relatedQuestionsMap.get(frc.getFeedbackQuestionId());"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            // the comment needs to be relevant to the question and response"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            if (relatedQuestion \u003d\u003d null || relatedResponse \u003d\u003d null) {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":419,"author":{"gitId":"-"},"content":"            // check visibility of comment"},{"lineNumber":420,"author":{"gitId":"-"},"content":"            boolean isVisibleResponseComment \u003d frcLogic.isResponseCommentVisibleForUser("},{"lineNumber":421,"author":{"gitId":"-"},"content":"                    userEmail, isInstructor, student, studentsEmailInTeam, relatedResponse, relatedQuestion, frc);"},{"lineNumber":422,"author":{"gitId":"-"},"content":"            if (!isVisibleResponseComment) {"},{"lineNumber":423,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":424,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"            relatedCommentsMap.computeIfAbsent(relatedResponse.getId(), key -\u003e new ArrayList\u003c\u003e()).add(frc);"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            // generate comment giver name visibility table"},{"lineNumber":428,"author":{"gitId":"-"},"content":"            commentVisibilityTable.put(frc.getId(), frcLogic.isNameVisibleToUser(frc, relatedResponse, userEmail, roster));"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        RequestTracer.checkRemainingTime();"},{"lineNumber":431,"author":{"gitId":"-"},"content":""},{"lineNumber":432,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e existingResponses \u003d new ArrayList\u003c\u003e(relatedResponsesMap.values());"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e missingResponses \u003d Collections.emptyList();"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        if (isCourseWide) {"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            missingResponses \u003d buildMissingResponses("},{"lineNumber":436,"author":{"gitId":"-"},"content":"                    courseId, feedbackSessionName, instructor, responseGiverVisibilityTable,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"                    responseRecipientVisibilityTable, relatedQuestionsMap, existingResponses, roster, section);"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        RequestTracer.checkRemainingTime();"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"        return new SessionResultsBundle(relatedQuestionsMap, existingResponses, missingResponses,"},{"lineNumber":442,"author":{"gitId":"-"},"content":"                responseGiverVisibilityTable, responseRecipientVisibilityTable, relatedCommentsMap,"},{"lineNumber":443,"author":{"gitId":"-"},"content":"                commentVisibilityTable, roster);"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":447,"author":{"gitId":"-"},"content":"     * Gets the session result for a feedback session."},{"lineNumber":448,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":449,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the feedback session name"},{"lineNumber":450,"author":{"gitId":"-"},"content":"     * @param courseId the ID of the course"},{"lineNumber":451,"author":{"gitId":"-"},"content":"     * @param instructorEmail the instructor viewing the feedback session"},{"lineNumber":452,"author":{"gitId":"-"},"content":"     * @param questionId if not null, will only return partial bundle for the question"},{"lineNumber":453,"author":{"gitId":"-"},"content":"     * @param section if not null, will only return partial bundle for the section"},{"lineNumber":454,"author":{"gitId":"-"},"content":"     * @param fetchType if not null, will fetch responses by giver, receiver sections, or both"},{"lineNumber":455,"author":{"gitId":"-"},"content":"     * @return the session result bundle"},{"lineNumber":456,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    public SessionResultsBundle getSessionResultsForCourse("},{"lineNumber":458,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String instructorEmail,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"            @Nullable String questionId, @Nullable String section, @Nullable FeedbackResultFetchType fetchType) {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        CourseRoster roster \u003d new CourseRoster("},{"lineNumber":461,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(courseId),"},{"lineNumber":462,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(courseId));"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"        // load question(s)"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d getQuestionsForSession(feedbackSessionName, courseId, questionId);"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        RequestTracer.checkRemainingTime();"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"        // load response(s)"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e allResponses;"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        // load all response for instructors and passively filter them later"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        if (questionId \u003d\u003d null) {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"            allResponses \u003d getFeedbackResponsesForSessionInSection(feedbackSessionName, courseId, section, fetchType);"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"            allResponses \u003d getFeedbackResponsesForQuestionInSection(questionId, section, fetchType);"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        RequestTracer.checkRemainingTime();"},{"lineNumber":477,"author":{"gitId":"-"},"content":""},{"lineNumber":478,"author":{"gitId":"-"},"content":"        // consider the current viewing user"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d instructorsLogic.getInstructorForEmail(courseId, instructorEmail);"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"        return buildResultsBundle(true, feedbackSessionName, courseId, section, questionId, true, instructorEmail,"},{"lineNumber":482,"author":{"gitId":"-"},"content":"                instructor, null, roster, allQuestions, allResponses);"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":486,"author":{"gitId":"-"},"content":"     * Gets the session result for a feedback session for the given user."},{"lineNumber":487,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":488,"author":{"gitId":"-"},"content":"     * @param feedbackSessionName the feedback session name"},{"lineNumber":489,"author":{"gitId":"-"},"content":"     * @param courseId the ID of the course"},{"lineNumber":490,"author":{"gitId":"-"},"content":"     * @param userEmail the user viewing the feedback session"},{"lineNumber":491,"author":{"gitId":"-"},"content":"     * @param isInstructor true if the user is an instructor"},{"lineNumber":492,"author":{"gitId":"-"},"content":"     * @param questionId if not null, will only return partial bundle for the question"},{"lineNumber":493,"author":{"gitId":"-"},"content":"     * @return the session result bundle"},{"lineNumber":494,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    public SessionResultsBundle getSessionResultsForUser("},{"lineNumber":496,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String userEmail, boolean isInstructor,"},{"lineNumber":497,"author":{"gitId":"-"},"content":"            @Nullable String questionId) {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        CourseRoster roster \u003d new CourseRoster("},{"lineNumber":499,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(courseId),"},{"lineNumber":500,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(courseId));"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"        // load question(s)"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d getQuestionsForSession(feedbackSessionName, courseId, questionId);"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        RequestTracer.checkRemainingTime();"},{"lineNumber":505,"author":{"gitId":"-"},"content":""},{"lineNumber":506,"author":{"gitId":"-"},"content":"        // load response(s)"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d isInstructor ? null : studentsLogic.getStudentForEmail(courseId, userEmail);"},{"lineNumber":508,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d isInstructor ? instructorsLogic.getInstructorForEmail(courseId, userEmail) : null;"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e allResponses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes question : allQuestions) {"},{"lineNumber":511,"author":{"gitId":"-"},"content":"            // load viewable responses for students/instructors proactively"},{"lineNumber":512,"author":{"gitId":"-"},"content":"            // this is cost-effective as in most of time responses for the whole session will not be viewable to individuals"},{"lineNumber":513,"author":{"gitId":"-"},"content":"            List\u003cFeedbackResponseAttributes\u003e viewableResponses \u003d isInstructor"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                    ? getFeedbackResponsesToOrFromInstructorForQuestion(question, instructor)"},{"lineNumber":515,"author":{"gitId":"-"},"content":"                    : getViewableFeedbackResponsesForStudentForQuestion(question, student, roster);"},{"lineNumber":516,"author":{"gitId":"-"},"content":"            allResponses.addAll(viewableResponses);"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        RequestTracer.checkRemainingTime();"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"        return buildResultsBundle(false, feedbackSessionName, courseId, null, questionId, isInstructor, userEmail,"},{"lineNumber":521,"author":{"gitId":"-"},"content":"                instructor, student, roster, allQuestions, allResponses);"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":525,"author":{"gitId":"-"},"content":"     * Builds viewable missing responses for the session for instructor."},{"lineNumber":526,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":527,"author":{"gitId":"-"},"content":"     * @param instructor the instructor"},{"lineNumber":528,"author":{"gitId":"-"},"content":"     * @param responseGiverVisibilityTable"},{"lineNumber":529,"author":{"gitId":"-"},"content":"     *         the giver visibility table which will be updated with the visibility of missing responses"},{"lineNumber":530,"author":{"gitId":"-"},"content":"     * @param responseRecipientVisibilityTable"},{"lineNumber":531,"author":{"gitId":"-"},"content":"     *         the recipient visibility table which will be updated with the visibility of missing responses"},{"lineNumber":532,"author":{"gitId":"-"},"content":"     * @param relatedQuestionsMap the relevant questions"},{"lineNumber":533,"author":{"gitId":"-"},"content":"     * @param existingResponses existing responses"},{"lineNumber":534,"author":{"gitId":"-"},"content":"     * @param courseRoster the course roster"},{"lineNumber":535,"author":{"gitId":"-"},"content":"     * @param section if not null, will only build missing responses for the section"},{"lineNumber":536,"author":{"gitId":"-"},"content":"     * @return a list of missing responses for the session."},{"lineNumber":537,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e buildMissingResponses("},{"lineNumber":539,"author":{"gitId":"-"},"content":"            String courseId, String feedbackSessionName, InstructorAttributes instructor,"},{"lineNumber":540,"author":{"gitId":"-"},"content":"            Map\u003cString, Boolean\u003e responseGiverVisibilityTable, Map\u003cString, Boolean\u003e responseRecipientVisibilityTable,"},{"lineNumber":541,"author":{"gitId":"-"},"content":"            Map\u003cString, FeedbackQuestionAttributes\u003e relatedQuestionsMap,"},{"lineNumber":542,"author":{"gitId":"-"},"content":"            List\u003cFeedbackResponseAttributes\u003e existingResponses, CourseRoster courseRoster, @Nullable String section) {"},{"lineNumber":543,"author":{"gitId":"-"},"content":""},{"lineNumber":544,"author":{"gitId":"-"},"content":"        // first get all possible giver recipient pairs"},{"lineNumber":545,"author":{"gitId":"-"},"content":"        Map\u003cString, Map\u003cString, Set\u003cString\u003e\u003e\u003e questionCompleteGiverRecipientMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes feedbackQuestion : relatedQuestionsMap.values()) {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"            if (feedbackQuestion.getQuestionDetailsCopy().shouldGenerateMissingResponses(feedbackQuestion)) {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"                questionCompleteGiverRecipientMap.put(feedbackQuestion.getId(),"},{"lineNumber":549,"author":{"gitId":"-"},"content":"                        fqLogic.buildCompleteGiverRecipientMap(feedbackQuestion, courseRoster));"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"                questionCompleteGiverRecipientMap.put(feedbackQuestion.getId(), new HashMap\u003c\u003e());"},{"lineNumber":552,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"        // remove the existing responses in those pairs"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes existingResponse : existingResponses) {"},{"lineNumber":557,"author":{"gitId":"-"},"content":"            Map\u003cString, Set\u003cString\u003e\u003e currGiverRecipientMap \u003d"},{"lineNumber":558,"author":{"gitId":"-"},"content":"                    questionCompleteGiverRecipientMap.get(existingResponse.getFeedbackQuestionId());"},{"lineNumber":559,"author":{"gitId":"-"},"content":"            if (!currGiverRecipientMap.containsKey(existingResponse.getGiver())) {"},{"lineNumber":560,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":561,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":562,"author":{"gitId":"-"},"content":"            currGiverRecipientMap.get(existingResponse.getGiver()).remove(existingResponse.getRecipient());"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":564,"author":{"gitId":"-"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e missingResponses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        // build dummy responses"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, Map\u003cString, Set\u003cString\u003e\u003e\u003e currGiverRecipientMapEntry"},{"lineNumber":568,"author":{"gitId":"-"},"content":"                : questionCompleteGiverRecipientMap.entrySet()) {"},{"lineNumber":569,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes correspondingQuestion \u003d"},{"lineNumber":570,"author":{"gitId":"-"},"content":"                    relatedQuestionsMap.get(currGiverRecipientMapEntry.getKey());"},{"lineNumber":571,"author":{"gitId":"-"},"content":"            String questionId \u003d correspondingQuestion.getId();"},{"lineNumber":572,"author":{"gitId":"-"},"content":""},{"lineNumber":573,"author":{"gitId":"-"},"content":"            for (Map.Entry\u003cString, Set\u003cString\u003e\u003e giverRecipientEntry"},{"lineNumber":574,"author":{"gitId":"-"},"content":"                    : currGiverRecipientMapEntry.getValue().entrySet()) {"},{"lineNumber":575,"author":{"gitId":"-"},"content":"                // giver"},{"lineNumber":576,"author":{"gitId":"-"},"content":"                String giverIdentifier \u003d giverRecipientEntry.getKey();"},{"lineNumber":577,"author":{"gitId":"-"},"content":"                CourseRoster.ParticipantInfo giverInfo \u003d courseRoster.getInfoForIdentifier(giverIdentifier);"},{"lineNumber":578,"author":{"gitId":"-"},"content":""},{"lineNumber":579,"author":{"gitId":"-"},"content":"                for (String recipientIdentifier : giverRecipientEntry.getValue()) {"},{"lineNumber":580,"author":{"gitId":"-"},"content":"                    // recipient"},{"lineNumber":581,"author":{"gitId":"-"},"content":"                    CourseRoster.ParticipantInfo recipientInfo \u003d courseRoster.getInfoForIdentifier(recipientIdentifier);"},{"lineNumber":582,"author":{"gitId":"-"},"content":""},{"lineNumber":583,"author":{"gitId":"-"},"content":"                    // skip responses not in current section"},{"lineNumber":584,"author":{"gitId":"-"},"content":"                    if (section !\u003d null"},{"lineNumber":585,"author":{"gitId":"-"},"content":"                            \u0026\u0026 !giverInfo.getSectionName().equals(section)"},{"lineNumber":586,"author":{"gitId":"-"},"content":"                            \u0026\u0026 !recipientInfo.getSectionName().equals(section)) {"},{"lineNumber":587,"author":{"gitId":"-"},"content":"                        continue;"},{"lineNumber":588,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":589,"author":{"gitId":"-"},"content":""},{"lineNumber":590,"author":{"gitId":"-"},"content":"                    FeedbackResponseAttributes missingResponse \u003d"},{"lineNumber":591,"author":{"gitId":"-"},"content":"                            FeedbackResponseAttributes.builder(questionId, giverIdentifier, recipientIdentifier)"},{"lineNumber":592,"author":{"gitId":"-"},"content":"                                    .withCourseId(courseId)"},{"lineNumber":593,"author":{"gitId":"-"},"content":"                                    .withFeedbackSessionName(feedbackSessionName)"},{"lineNumber":594,"author":{"gitId":"-"},"content":"                                    .withGiverSection(giverInfo.getSectionName())"},{"lineNumber":595,"author":{"gitId":"-"},"content":"                                    .withRecipientSection(recipientInfo.getSectionName())"},{"lineNumber":596,"author":{"gitId":"-"},"content":"                                    .withResponseDetails(new FeedbackTextResponseDetails(\"No Response\"))"},{"lineNumber":597,"author":{"gitId":"-"},"content":"                                    .build();"},{"lineNumber":598,"author":{"gitId":"-"},"content":""},{"lineNumber":599,"author":{"gitId":"-"},"content":"                    // check visibility of the missing response"},{"lineNumber":600,"author":{"gitId":"-"},"content":"                    boolean isVisibleResponse \u003d isResponseVisibleForUser("},{"lineNumber":601,"author":{"gitId":"-"},"content":"                            instructor.getEmail(), true, null, Collections.emptySet(),"},{"lineNumber":602,"author":{"gitId":"-"},"content":"                            missingResponse, correspondingQuestion, instructor);"},{"lineNumber":603,"author":{"gitId":"-"},"content":"                    if (!isVisibleResponse) {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"                        continue;"},{"lineNumber":605,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":606,"author":{"gitId":"-"},"content":""},{"lineNumber":607,"author":{"gitId":"-"},"content":"                    // generate giver/recipient name visibility table"},{"lineNumber":608,"author":{"gitId":"-"},"content":"                    responseGiverVisibilityTable.put(missingResponse.getId(),"},{"lineNumber":609,"author":{"gitId":"-"},"content":"                            isNameVisibleToUser(correspondingQuestion, missingResponse,"},{"lineNumber":610,"author":{"gitId":"-"},"content":"                                    instructor.getEmail(), true, true, courseRoster));"},{"lineNumber":611,"author":{"gitId":"-"},"content":"                    responseRecipientVisibilityTable.put(missingResponse.getId(),"},{"lineNumber":612,"author":{"gitId":"-"},"content":"                            isNameVisibleToUser(correspondingQuestion, missingResponse,"},{"lineNumber":613,"author":{"gitId":"-"},"content":"                                    instructor.getEmail(), true, false, courseRoster));"},{"lineNumber":614,"author":{"gitId":"-"},"content":"                    missingResponses.add(missingResponse);"},{"lineNumber":615,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":616,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":"        return missingResponses;"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":621,"author":{"gitId":"-"},"content":""},{"lineNumber":622,"author":{"gitId":"-"},"content":"    boolean isResponseVisibleForUser("},{"lineNumber":623,"author":{"gitId":"-"},"content":"            String userEmail, boolean isInstructor, StudentAttributes student,"},{"lineNumber":624,"author":{"gitId":"-"},"content":"            Set\u003cString\u003e studentsEmailInTeam, FeedbackResponseAttributes response,"},{"lineNumber":625,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes relatedQuestion, InstructorAttributes instructor) {"},{"lineNumber":626,"author":{"gitId":"-"},"content":""},{"lineNumber":627,"author":{"gitId":"-"},"content":"        boolean isVisibleResponse \u003d false;"},{"lineNumber":628,"author":{"gitId":"-"},"content":"        if (isInstructor \u0026\u0026 relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":629,"author":{"gitId":"-"},"content":"                || response.getRecipient().equals(userEmail)"},{"lineNumber":630,"author":{"gitId":"-"},"content":"                \u0026\u0026 relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)"},{"lineNumber":631,"author":{"gitId":"-"},"content":"                || response.getGiver().equals(userEmail)"},{"lineNumber":632,"author":{"gitId":"-"},"content":"                || !isInstructor \u0026\u0026 relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":633,"author":{"gitId":"-"},"content":"            isVisibleResponse \u003d true;"},{"lineNumber":634,"author":{"gitId":"-"},"content":"        } else if (studentsEmailInTeam !\u003d null \u0026\u0026 !isInstructor) {"},{"lineNumber":635,"author":{"gitId":"hhdqirui"},"content":"            if ((relatedQuestion.getRecipientType() \u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":636,"author":{"gitId":"hhdqirui"},"content":"                    || relatedQuestion.getRecipientType() \u003d\u003d FeedbackParticipantType.TEAMS_IN_SAME_SECTION"},{"lineNumber":637,"author":{"gitId":"hhdqirui"},"content":"                    || relatedQuestion.getRecipientType() \u003d\u003d FeedbackParticipantType.TEAMS_EXCLUDING_SELF)"},{"lineNumber":638,"author":{"gitId":"-"},"content":"                    \u0026\u0026 relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)"},{"lineNumber":639,"author":{"gitId":"-"},"content":"                    \u0026\u0026 response.getRecipient().equals(student.getTeam())) {"},{"lineNumber":640,"author":{"gitId":"-"},"content":"                isVisibleResponse \u003d true;"},{"lineNumber":641,"author":{"gitId":"-"},"content":"            } else if (relatedQuestion.getGiverType() \u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":642,"author":{"gitId":"-"},"content":"                    \u0026\u0026 response.getGiver().equals(student.getTeam())) {"},{"lineNumber":643,"author":{"gitId":"-"},"content":"                isVisibleResponse \u003d true;"},{"lineNumber":644,"author":{"gitId":"-"},"content":"            } else if (relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.OWN_TEAM_MEMBERS)"},{"lineNumber":645,"author":{"gitId":"-"},"content":"                    \u0026\u0026 studentsEmailInTeam.contains(response.getGiver())) {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"                isVisibleResponse \u003d true;"},{"lineNumber":647,"author":{"gitId":"-"},"content":"            } else if (relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS)"},{"lineNumber":648,"author":{"gitId":"-"},"content":"                    \u0026\u0026 studentsEmailInTeam.contains(response.getRecipient())) {"},{"lineNumber":649,"author":{"gitId":"-"},"content":"                isVisibleResponse \u003d true;"},{"lineNumber":650,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":651,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        if (isVisibleResponse \u0026\u0026 instructor !\u003d null) {"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            boolean isGiverSectionRestricted \u003d"},{"lineNumber":654,"author":{"gitId":"-"},"content":"                    !instructor.isAllowedForPrivilege(response.getGiverSection(),"},{"lineNumber":655,"author":{"gitId":"-"},"content":"                            response.getFeedbackSessionName(),"},{"lineNumber":656,"author":{"gitId":"-"},"content":"                            Const.InstructorPermissions.CAN_VIEW_SESSION_IN_SECTIONS);"},{"lineNumber":657,"author":{"gitId":"-"},"content":"            // If instructors are not restricted to view the giver\u0027s section,"},{"lineNumber":658,"author":{"gitId":"-"},"content":"            // they are allowed to view responses to GENERAL, subject to visibility options"},{"lineNumber":659,"author":{"gitId":"-"},"content":"            boolean isRecipientSectionRestricted \u003d"},{"lineNumber":660,"author":{"gitId":"-"},"content":"                    relatedQuestion.getRecipientType() !\u003d FeedbackParticipantType.NONE"},{"lineNumber":661,"author":{"gitId":"-"},"content":"                            \u0026\u0026 !instructor.isAllowedForPrivilege(response.getRecipientSection(),"},{"lineNumber":662,"author":{"gitId":"-"},"content":"                            response.getFeedbackSessionName(),"},{"lineNumber":663,"author":{"gitId":"-"},"content":"                            Const.InstructorPermissions.CAN_VIEW_SESSION_IN_SECTIONS);"},{"lineNumber":664,"author":{"gitId":"-"},"content":""},{"lineNumber":665,"author":{"gitId":"-"},"content":"            boolean isNotAllowedForInstructor \u003d isGiverSectionRestricted || isRecipientSectionRestricted;"},{"lineNumber":666,"author":{"gitId":"-"},"content":"            if (isNotAllowedForInstructor) {"},{"lineNumber":667,"author":{"gitId":"-"},"content":"                isVisibleResponse \u003d false;"},{"lineNumber":668,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":670,"author":{"gitId":"-"},"content":"        return isVisibleResponse;"},{"lineNumber":671,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":672,"author":{"gitId":"-"},"content":""},{"lineNumber":673,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":674,"author":{"gitId":"-"},"content":"     * Checks whether there are responses for a course."},{"lineNumber":675,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":676,"author":{"gitId":"-"},"content":"    public boolean hasResponsesForCourse(String courseId) {"},{"lineNumber":677,"author":{"gitId":"-"},"content":"        return frDb.hasFeedbackResponseEntitiesForCourse(courseId);"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":679,"author":{"gitId":"-"},"content":""},{"lineNumber":680,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":681,"author":{"gitId":"-"},"content":"     * Updates a feedback response by {@link FeedbackResponseAttributes.UpdateOptions}."},{"lineNumber":682,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":683,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade updates its associated feedback response comment"},{"lineNumber":684,"author":{"gitId":"-"},"content":"     * (e.g. associated response ID, giverSection and recipientSection)."},{"lineNumber":685,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":686,"author":{"gitId":"-"},"content":"     * \u003cp\u003eIf the giver/recipient field is changed, the response is updated by recreating the response"},{"lineNumber":687,"author":{"gitId":"-"},"content":"     * as question-giver-recipient is the primary key."},{"lineNumber":688,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":689,"author":{"gitId":"-"},"content":"     * @return updated feedback response"},{"lineNumber":690,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":691,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the comment cannot be found"},{"lineNumber":692,"author":{"gitId":"-"},"content":"     * @throws EntityAlreadyExistsException if the response cannot be updated"},{"lineNumber":693,"author":{"gitId":"-"},"content":"     *         by recreation because of an existent response"},{"lineNumber":694,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":695,"author":{"gitId":"-"},"content":"    public FeedbackResponseAttributes updateFeedbackResponseCascade(FeedbackResponseAttributes.UpdateOptions updateOptions)"},{"lineNumber":696,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"},{"lineNumber":697,"author":{"gitId":"-"},"content":""},{"lineNumber":698,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes oldResponse \u003d frDb.getFeedbackResponse(updateOptions.getFeedbackResponseId());"},{"lineNumber":699,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes newResponse \u003d frDb.updateFeedbackResponse(updateOptions);"},{"lineNumber":700,"author":{"gitId":"-"},"content":""},{"lineNumber":701,"author":{"gitId":"-"},"content":"        boolean isResponseIdChanged \u003d !oldResponse.getId().equals(newResponse.getId());"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        boolean isGiverSectionChanged \u003d !oldResponse.getGiverSection().equals(newResponse.getGiverSection());"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        boolean isRecipientSectionChanged \u003d !oldResponse.getRecipientSection().equals(newResponse.getRecipientSection());"},{"lineNumber":704,"author":{"gitId":"-"},"content":""},{"lineNumber":705,"author":{"gitId":"-"},"content":"        if (isResponseIdChanged || isGiverSectionChanged || isRecipientSectionChanged) {"},{"lineNumber":706,"author":{"gitId":"-"},"content":"            List\u003cFeedbackResponseCommentAttributes\u003e responseComments \u003d"},{"lineNumber":707,"author":{"gitId":"-"},"content":"                    frcLogic.getFeedbackResponseCommentForResponse(oldResponse.getId());"},{"lineNumber":708,"author":{"gitId":"-"},"content":"            for (FeedbackResponseCommentAttributes responseComment : responseComments) {"},{"lineNumber":709,"author":{"gitId":"-"},"content":"                FeedbackResponseCommentAttributes.UpdateOptions.Builder updateOptionsBuilder \u003d"},{"lineNumber":710,"author":{"gitId":"-"},"content":"                        FeedbackResponseCommentAttributes.updateOptionsBuilder(responseComment.getId());"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"                if (isResponseIdChanged) {"},{"lineNumber":713,"author":{"gitId":"-"},"content":"                    updateOptionsBuilder.withFeedbackResponseId(newResponse.getId());"},{"lineNumber":714,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":715,"author":{"gitId":"-"},"content":""},{"lineNumber":716,"author":{"gitId":"-"},"content":"                if (isGiverSectionChanged) {"},{"lineNumber":717,"author":{"gitId":"-"},"content":"                    updateOptionsBuilder.withGiverSection(newResponse.getGiverSection());"},{"lineNumber":718,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":719,"author":{"gitId":"-"},"content":""},{"lineNumber":720,"author":{"gitId":"-"},"content":"                if (isRecipientSectionChanged) {"},{"lineNumber":721,"author":{"gitId":"-"},"content":"                    updateOptionsBuilder.withReceiverSection(newResponse.getRecipientSection());"},{"lineNumber":722,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":723,"author":{"gitId":"-"},"content":""},{"lineNumber":724,"author":{"gitId":"-"},"content":"                frcLogic.updateFeedbackResponseComment(updateOptionsBuilder.build());"},{"lineNumber":725,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":727,"author":{"gitId":"-"},"content":""},{"lineNumber":728,"author":{"gitId":"-"},"content":"        return newResponse;"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":732,"author":{"gitId":"-"},"content":"     * Updates responses for a student when his team changes."},{"lineNumber":733,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":734,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThis is done by deleting responses that are no longer relevant to him in his new team."},{"lineNumber":735,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":736,"author":{"gitId":"-"},"content":"    public void updateFeedbackResponsesForChangingTeam("},{"lineNumber":737,"author":{"gitId":"-"},"content":"            String courseId, String userEmail, String oldTeam, String newTeam) {"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes question;"},{"lineNumber":739,"author":{"gitId":"-"},"content":"        // deletes all responses given by the user to team members or given by the user as a representative of a team."},{"lineNumber":740,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesFromUser \u003d"},{"lineNumber":741,"author":{"gitId":"-"},"content":"                getFeedbackResponsesFromGiverForCourse(courseId, userEmail);"},{"lineNumber":742,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responsesFromUser) {"},{"lineNumber":743,"author":{"gitId":"-"},"content":"            question \u003d fqLogic.getFeedbackQuestion(response.getFeedbackQuestionId());"},{"lineNumber":744,"author":{"gitId":"-"},"content":"            if (question.getGiverType() \u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":745,"author":{"gitId":"-"},"content":"                    || isRecipientTypeTeamMembers(question)) {"},{"lineNumber":746,"author":{"gitId":"-"},"content":"                deleteFeedbackResponseCascade(response.getId());"},{"lineNumber":747,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":749,"author":{"gitId":"-"},"content":""},{"lineNumber":750,"author":{"gitId":"-"},"content":"        // Deletes all responses given by other team members to the user."},{"lineNumber":751,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesToUser \u003d"},{"lineNumber":752,"author":{"gitId":"-"},"content":"                getFeedbackResponsesForReceiverForCourse(courseId, userEmail);"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responsesToUser) {"},{"lineNumber":754,"author":{"gitId":"-"},"content":"            question \u003d fqLogic.getFeedbackQuestion(response.getFeedbackQuestionId());"},{"lineNumber":755,"author":{"gitId":"-"},"content":"            if (isRecipientTypeTeamMembers(question)) {"},{"lineNumber":756,"author":{"gitId":"-"},"content":"                deleteFeedbackResponseCascade(response.getId());"},{"lineNumber":757,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":758,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":759,"author":{"gitId":"-"},"content":""},{"lineNumber":760,"author":{"gitId":"-"},"content":"        boolean isOldTeamEmpty \u003d studentsLogic.getStudentsForTeam(oldTeam, courseId).isEmpty();"},{"lineNumber":761,"author":{"gitId":"-"},"content":"        if (isOldTeamEmpty) {"},{"lineNumber":762,"author":{"gitId":"-"},"content":"            deleteFeedbackResponsesInvolvedEntityOfCourseCascade(courseId, oldTeam);"},{"lineNumber":763,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":764,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":765,"author":{"gitId":"-"},"content":""},{"lineNumber":766,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":767,"author":{"gitId":"-"},"content":"     * Updates responses for a student when his section changes."},{"lineNumber":768,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":769,"author":{"gitId":"-"},"content":"    public void updateFeedbackResponsesForChangingSection("},{"lineNumber":770,"author":{"gitId":"-"},"content":"            String courseId, String userEmail, String oldSection, String newSection)"},{"lineNumber":771,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException, InvalidParametersException {"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        updateSectionOfResponsesFromUser(courseId, userEmail, newSection);"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        updateSectionOfResponsesToUser(courseId, userEmail, newSection);"},{"lineNumber":774,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":775,"author":{"gitId":"-"},"content":""},{"lineNumber":776,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":777,"author":{"gitId":"-"},"content":"     * Updates the relevant responses before the deletion of a student."},{"lineNumber":778,"author":{"gitId":"-"},"content":"     * This method takes care of the following:"},{"lineNumber":779,"author":{"gitId":"-"},"content":"     * \u003cul\u003e"},{"lineNumber":780,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e"},{"lineNumber":781,"author":{"gitId":"-"},"content":"     *         Making existing responses of \u0027rank recipient question\u0027 consistent."},{"lineNumber":782,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e"},{"lineNumber":783,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e"},{"lineNumber":784,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":785,"author":{"gitId":"-"},"content":"    public void updateFeedbackResponsesForDeletingStudent(String courseId) {"},{"lineNumber":786,"author":{"gitId":"-"},"content":"        updateRankRecipientQuestionResponsesAfterDeletingStudent(courseId);"},{"lineNumber":787,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":788,"author":{"gitId":"-"},"content":""},{"lineNumber":789,"author":{"gitId":"-"},"content":"    private void updateRankRecipientQuestionResponsesAfterDeletingStudent(String courseId) {"},{"lineNumber":790,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e filteredQuestions \u003d"},{"lineNumber":791,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionForCourseWithType(courseId, FeedbackQuestionType.RANK_RECIPIENTS);"},{"lineNumber":792,"author":{"gitId":"-"},"content":"        CourseRoster roster \u003d new CourseRoster("},{"lineNumber":793,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(courseId),"},{"lineNumber":794,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(courseId));"},{"lineNumber":795,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes question : filteredQuestions) {"},{"lineNumber":796,"author":{"gitId":"-"},"content":"            makeRankRecipientQuestionResponsesConsistent(question, roster);"},{"lineNumber":797,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":798,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":799,"author":{"gitId":"-"},"content":""},{"lineNumber":800,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":801,"author":{"gitId":"-"},"content":"     * Makes the rankings by one giver in the response to a \u0027rank recipient question\u0027 consistent, after deleting a"},{"lineNumber":802,"author":{"gitId":"-"},"content":"     * student."},{"lineNumber":803,"author":{"gitId":"-"},"content":"     * \u003cp\u003e"},{"lineNumber":804,"author":{"gitId":"-"},"content":"     *     Fails silently if the question type is not \u0027rank recipient question\u0027."},{"lineNumber":805,"author":{"gitId":"-"},"content":"     * \u003c/p\u003e"},{"lineNumber":806,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    private void makeRankRecipientQuestionResponsesConsistent("},{"lineNumber":808,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, CourseRoster roster) {"},{"lineNumber":809,"author":{"gitId":"-"},"content":"        if (!question.getQuestionType().equals(FeedbackQuestionType.RANK_RECIPIENTS)) {"},{"lineNumber":810,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":811,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":812,"author":{"gitId":"-"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"        FeedbackParticipantType giverType \u003d question.getGiverType();"},{"lineNumber":814,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responses;"},{"lineNumber":815,"author":{"gitId":"-"},"content":""},{"lineNumber":816,"author":{"gitId":"-"},"content":"        int numberOfRecipients;"},{"lineNumber":817,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes.UpdateOptions\u003e updates \u003d new ArrayList\u003c\u003e();"},{"lineNumber":818,"author":{"gitId":"-"},"content":""},{"lineNumber":819,"author":{"gitId":"-"},"content":"        switch (giverType) {"},{"lineNumber":820,"author":{"gitId":"-"},"content":"        case INSTRUCTORS:"},{"lineNumber":821,"author":{"gitId":"-"},"content":"        case SELF:"},{"lineNumber":822,"author":{"gitId":"-"},"content":"            for (InstructorAttributes instructor : roster.getInstructors()) {"},{"lineNumber":823,"author":{"gitId":"-"},"content":"                numberOfRecipients \u003d"},{"lineNumber":824,"author":{"gitId":"-"},"content":"                        fqLogic.getRecipientsOfQuestion(question, instructor, null, roster).size();"},{"lineNumber":825,"author":{"gitId":"-"},"content":"                responses \u003d getFeedbackResponsesFromGiverForQuestion(question.getId(), instructor.getEmail());"},{"lineNumber":826,"author":{"gitId":"-"},"content":"                updates.addAll(FeedbackRankRecipientsResponseDetails"},{"lineNumber":827,"author":{"gitId":"-"},"content":"                        .getUpdateOptionsForRankRecipientQuestions(responses, numberOfRecipients));"},{"lineNumber":828,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":829,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":830,"author":{"gitId":"-"},"content":"        case TEAMS:"},{"lineNumber":831,"author":{"gitId":"-"},"content":"        case TEAMS_IN_SAME_SECTION:"},{"lineNumber":832,"author":{"gitId":"-"},"content":"            StudentAttributes firstMemberOfTeam;"},{"lineNumber":833,"author":{"gitId":"-"},"content":"            String team;"},{"lineNumber":834,"author":{"gitId":"-"},"content":"            Map\u003cString, List\u003cStudentAttributes\u003e\u003e teams \u003d roster.getTeamToMembersTable();"},{"lineNumber":835,"author":{"gitId":"-"},"content":"            for (Map.Entry\u003cString, List\u003cStudentAttributes\u003e\u003e entry : teams.entrySet()) {"},{"lineNumber":836,"author":{"gitId":"-"},"content":"                team \u003d entry.getKey();"},{"lineNumber":837,"author":{"gitId":"-"},"content":"                firstMemberOfTeam \u003d entry.getValue().get(0);"},{"lineNumber":838,"author":{"gitId":"-"},"content":"                numberOfRecipients \u003d"},{"lineNumber":839,"author":{"gitId":"-"},"content":"                        fqLogic.getRecipientsOfQuestion(question, null, firstMemberOfTeam, roster).size();"},{"lineNumber":840,"author":{"gitId":"-"},"content":"                responses \u003d"},{"lineNumber":841,"author":{"gitId":"-"},"content":"                        getFeedbackResponsesFromTeamForQuestion(question.getId(), question.getCourseId(), team, roster);"},{"lineNumber":842,"author":{"gitId":"-"},"content":"                updates.addAll(FeedbackRankRecipientsResponseDetails"},{"lineNumber":843,"author":{"gitId":"-"},"content":"                        .getUpdateOptionsForRankRecipientQuestions(responses, numberOfRecipients));"},{"lineNumber":844,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":845,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":846,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":847,"author":{"gitId":"-"},"content":"            for (StudentAttributes student : roster.getStudents()) {"},{"lineNumber":848,"author":{"gitId":"-"},"content":"                numberOfRecipients \u003d"},{"lineNumber":849,"author":{"gitId":"-"},"content":"                        fqLogic.getRecipientsOfQuestion(question, null, student, roster).size();"},{"lineNumber":850,"author":{"gitId":"-"},"content":"                responses \u003d getFeedbackResponsesFromGiverForQuestion(question.getId(), student.getEmail());"},{"lineNumber":851,"author":{"gitId":"-"},"content":"                updates.addAll(FeedbackRankRecipientsResponseDetails"},{"lineNumber":852,"author":{"gitId":"-"},"content":"                        .getUpdateOptionsForRankRecipientQuestions(responses, numberOfRecipients));"},{"lineNumber":853,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":854,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":855,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":856,"author":{"gitId":"-"},"content":""},{"lineNumber":857,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes.UpdateOptions update : updates) {"},{"lineNumber":858,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":859,"author":{"gitId":"-"},"content":"                frDb.updateFeedbackResponse(update);"},{"lineNumber":860,"author":{"gitId":"-"},"content":"            } catch (EntityAlreadyExistsException | EntityDoesNotExistException | InvalidParametersException e) {"},{"lineNumber":861,"author":{"gitId":"-"},"content":"                assert false : \"Exception occurred when updating responses after deleting students.\";"},{"lineNumber":862,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":863,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":864,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":865,"author":{"gitId":"-"},"content":""},{"lineNumber":866,"author":{"gitId":"-"},"content":"    private void updateSectionOfResponsesToUser(String courseId, String userEmail, String newSection)"},{"lineNumber":867,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":868,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesToUser \u003d"},{"lineNumber":869,"author":{"gitId":"-"},"content":"                getFeedbackResponsesForReceiverForCourse(courseId, userEmail);"},{"lineNumber":870,"author":{"gitId":"-"},"content":""},{"lineNumber":871,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responsesToUser) {"},{"lineNumber":872,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":873,"author":{"gitId":"-"},"content":"                frDb.updateFeedbackResponse("},{"lineNumber":874,"author":{"gitId":"-"},"content":"                        FeedbackResponseAttributes.updateOptionsBuilder(response.getId())"},{"lineNumber":875,"author":{"gitId":"-"},"content":"                                .withRecipientSection(newSection)"},{"lineNumber":876,"author":{"gitId":"-"},"content":"                                .build());"},{"lineNumber":877,"author":{"gitId":"-"},"content":"            } catch (EntityAlreadyExistsException e) {"},{"lineNumber":878,"author":{"gitId":"-"},"content":"                assert false : \"Not possible to trigger recreating of response\";"},{"lineNumber":879,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":880,"author":{"gitId":"-"},"content":"            frcLogic.updateFeedbackResponseCommentsForResponse(response.getId());"},{"lineNumber":881,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":882,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":883,"author":{"gitId":"-"},"content":""},{"lineNumber":884,"author":{"gitId":"-"},"content":"    private void updateSectionOfResponsesFromUser(String courseId, String userEmail, String newSection)"},{"lineNumber":885,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":886,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesFromUser \u003d"},{"lineNumber":887,"author":{"gitId":"-"},"content":"                getFeedbackResponsesFromGiverForCourse(courseId, userEmail);"},{"lineNumber":888,"author":{"gitId":"-"},"content":""},{"lineNumber":889,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responsesFromUser) {"},{"lineNumber":890,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":891,"author":{"gitId":"-"},"content":"                frDb.updateFeedbackResponse("},{"lineNumber":892,"author":{"gitId":"-"},"content":"                        FeedbackResponseAttributes.updateOptionsBuilder(response.getId())"},{"lineNumber":893,"author":{"gitId":"-"},"content":"                                .withGiverSection(newSection)"},{"lineNumber":894,"author":{"gitId":"-"},"content":"                                .build());"},{"lineNumber":895,"author":{"gitId":"-"},"content":"            } catch (EntityAlreadyExistsException e) {"},{"lineNumber":896,"author":{"gitId":"-"},"content":"                assert false : \"Not possible to trigger recreating of response\";"},{"lineNumber":897,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":898,"author":{"gitId":"-"},"content":"            frcLogic.updateFeedbackResponseCommentsForResponse(response.getId());"},{"lineNumber":899,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":900,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":901,"author":{"gitId":"-"},"content":""},{"lineNumber":902,"author":{"gitId":"-"},"content":"    private boolean isRecipientTypeTeamMembers(FeedbackQuestionAttributes question) {"},{"lineNumber":903,"author":{"gitId":"-"},"content":"        return question.getRecipientType() \u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS"},{"lineNumber":904,"author":{"gitId":"-"},"content":"               || question.getRecipientType() \u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF;"},{"lineNumber":905,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":906,"author":{"gitId":"-"},"content":""},{"lineNumber":907,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":908,"author":{"gitId":"-"},"content":"     * Updates responses for a student when his email changes."},{"lineNumber":909,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":910,"author":{"gitId":"-"},"content":"    public void updateFeedbackResponsesForChangingEmail("},{"lineNumber":911,"author":{"gitId":"-"},"content":"            String courseId, String oldEmail, String newEmail)"},{"lineNumber":912,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":913,"author":{"gitId":"-"},"content":""},{"lineNumber":914,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesFromUser \u003d"},{"lineNumber":915,"author":{"gitId":"-"},"content":"                getFeedbackResponsesFromGiverForCourse(courseId, oldEmail);"},{"lineNumber":916,"author":{"gitId":"-"},"content":""},{"lineNumber":917,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responsesFromUser) {"},{"lineNumber":918,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":919,"author":{"gitId":"-"},"content":"                updateFeedbackResponseCascade("},{"lineNumber":920,"author":{"gitId":"-"},"content":"                        FeedbackResponseAttributes.updateOptionsBuilder(response.getId())"},{"lineNumber":921,"author":{"gitId":"-"},"content":"                                .withGiver(newEmail)"},{"lineNumber":922,"author":{"gitId":"-"},"content":"                                .build());"},{"lineNumber":923,"author":{"gitId":"-"},"content":"                frcLogic.updateFeedbackResponseCommentsEmails(courseId, oldEmail, newEmail);"},{"lineNumber":924,"author":{"gitId":"-"},"content":"            } catch (EntityAlreadyExistsException e) {"},{"lineNumber":925,"author":{"gitId":"-"},"content":"                assert false : \"Feedback response failed to update successfully as email was already in use.\";"},{"lineNumber":926,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":927,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":928,"author":{"gitId":"-"},"content":""},{"lineNumber":929,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesToUser \u003d"},{"lineNumber":930,"author":{"gitId":"-"},"content":"                getFeedbackResponsesForReceiverForCourse(courseId, oldEmail);"},{"lineNumber":931,"author":{"gitId":"-"},"content":""},{"lineNumber":932,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responsesToUser) {"},{"lineNumber":933,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":934,"author":{"gitId":"-"},"content":"                updateFeedbackResponseCascade("},{"lineNumber":935,"author":{"gitId":"-"},"content":"                        FeedbackResponseAttributes.updateOptionsBuilder(response.getId())"},{"lineNumber":936,"author":{"gitId":"-"},"content":"                                .withRecipient(newEmail)"},{"lineNumber":937,"author":{"gitId":"-"},"content":"                                .build());"},{"lineNumber":938,"author":{"gitId":"-"},"content":"            } catch (EntityAlreadyExistsException e) {"},{"lineNumber":939,"author":{"gitId":"-"},"content":"                assert false : \"Feedback response failed to update successfully as email was already in use.\";"},{"lineNumber":940,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":941,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":942,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":943,"author":{"gitId":"-"},"content":""},{"lineNumber":944,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":945,"author":{"gitId":"-"},"content":"     * Deletes responses using {@link AttributesDeletionQuery}."},{"lineNumber":946,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":947,"author":{"gitId":"-"},"content":"    public void deleteFeedbackResponses(AttributesDeletionQuery query) {"},{"lineNumber":948,"author":{"gitId":"-"},"content":"        frDb.deleteFeedbackResponses(query);"},{"lineNumber":949,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":950,"author":{"gitId":"-"},"content":""},{"lineNumber":951,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":952,"author":{"gitId":"-"},"content":"     * Deletes a feedback response cascade its associated comments."},{"lineNumber":953,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":954,"author":{"gitId":"-"},"content":"    public void deleteFeedbackResponseCascade(String responseId) {"},{"lineNumber":955,"author":{"gitId":"-"},"content":"        frcLogic.deleteFeedbackResponseComments("},{"lineNumber":956,"author":{"gitId":"-"},"content":"                AttributesDeletionQuery.builder()"},{"lineNumber":957,"author":{"gitId":"-"},"content":"                        .withResponseId(responseId)"},{"lineNumber":958,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":959,"author":{"gitId":"-"},"content":"        frDb.deleteFeedbackResponse(responseId);"},{"lineNumber":960,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":961,"author":{"gitId":"-"},"content":""},{"lineNumber":962,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":963,"author":{"gitId":"-"},"content":"     * Deletes all feedback responses of a question cascade its associated comments."},{"lineNumber":964,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":965,"author":{"gitId":"-"},"content":"    public void deleteFeedbackResponsesForQuestionCascade(String feedbackQuestionId) {"},{"lineNumber":966,"author":{"gitId":"-"},"content":"        // delete all responses, comments of the question"},{"lineNumber":967,"author":{"gitId":"-"},"content":"        AttributesDeletionQuery query \u003d AttributesDeletionQuery.builder()"},{"lineNumber":968,"author":{"gitId":"-"},"content":"                .withQuestionId(feedbackQuestionId)"},{"lineNumber":969,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":970,"author":{"gitId":"-"},"content":"        deleteFeedbackResponses(query);"},{"lineNumber":971,"author":{"gitId":"-"},"content":"        frcLogic.deleteFeedbackResponseComments(query);"},{"lineNumber":972,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":973,"author":{"gitId":"-"},"content":""},{"lineNumber":974,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":975,"author":{"gitId":"-"},"content":"     * Deletes all feedback responses involved an entity cascade its associated comments."},{"lineNumber":976,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":977,"author":{"gitId":"-"},"content":"     * @param courseId the course id"},{"lineNumber":978,"author":{"gitId":"-"},"content":"     * @param entityEmail the entity email"},{"lineNumber":979,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":980,"author":{"gitId":"-"},"content":"    public void deleteFeedbackResponsesInvolvedEntityOfCourseCascade(String courseId, String entityEmail) {"},{"lineNumber":981,"author":{"gitId":"-"},"content":"        // delete responses from the entity"},{"lineNumber":982,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesFromStudent \u003d"},{"lineNumber":983,"author":{"gitId":"-"},"content":"                getFeedbackResponsesFromGiverForCourse(courseId, entityEmail);"},{"lineNumber":984,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responsesFromStudent) {"},{"lineNumber":985,"author":{"gitId":"-"},"content":"            deleteFeedbackResponseCascade(response.getId());"},{"lineNumber":986,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":987,"author":{"gitId":"-"},"content":""},{"lineNumber":988,"author":{"gitId":"-"},"content":"        // delete responses to the entity"},{"lineNumber":989,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesToStudent \u003d"},{"lineNumber":990,"author":{"gitId":"-"},"content":"                getFeedbackResponsesForReceiverForCourse(courseId, entityEmail);"},{"lineNumber":991,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responsesToStudent) {"},{"lineNumber":992,"author":{"gitId":"-"},"content":"            deleteFeedbackResponseCascade(response.getId());"},{"lineNumber":993,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":994,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":995,"author":{"gitId":"-"},"content":""},{"lineNumber":996,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromTeamForQuestion("},{"lineNumber":997,"author":{"gitId":"-"},"content":"            String feedbackQuestionId, String courseId, String teamName, @Nullable CourseRoster courseRoster) {"},{"lineNumber":998,"author":{"gitId":"-"},"content":""},{"lineNumber":999,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e studentsInTeam \u003d courseRoster \u003d\u003d null"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"                ? studentsLogic.getStudentsForTeam(teamName, courseId) : courseRoster.getTeamToMembersTable().get(teamName);"},{"lineNumber":1002,"author":{"gitId":"-"},"content":""},{"lineNumber":1003,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : studentsInTeam) {"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"            responses.addAll(frDb.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":1005,"author":{"gitId":"-"},"content":"                    feedbackQuestionId, student.getEmail()));"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1007,"author":{"gitId":"-"},"content":""},{"lineNumber":1008,"author":{"gitId":"-"},"content":"        responses.addAll(frDb.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":1009,"author":{"gitId":"-"},"content":"                                        feedbackQuestionId, teamName));"},{"lineNumber":1010,"author":{"gitId":"-"},"content":""},{"lineNumber":1011,"author":{"gitId":"-"},"content":"        return responses;"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1013,"author":{"gitId":"-"},"content":""},{"lineNumber":1014,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"     * Returns feedback responses given/received by an instructor."},{"lineNumber":1016,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesToOrFromInstructorForQuestion("},{"lineNumber":1018,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, InstructorAttributes instructor) {"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"        UniqueResponsesSet viewableResponses \u003d new UniqueResponsesSet();"},{"lineNumber":1020,"author":{"gitId":"-"},"content":""},{"lineNumber":1021,"author":{"gitId":"-"},"content":"        // Add responses that the instructor submitted him/herself"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"        if (question.getGiverType() \u003d\u003d FeedbackParticipantType.INSTRUCTORS) {"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"            viewableResponses.addNewResponses("},{"lineNumber":1024,"author":{"gitId":"-"},"content":"                    getFeedbackResponsesFromGiverForQuestion(question.getFeedbackQuestionId(), instructor.getEmail())"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"            );"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1027,"author":{"gitId":"-"},"content":""},{"lineNumber":1028,"author":{"gitId":"-"},"content":"        // Add responses that user is a receiver of when response is visible to receiver or instructors"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"        if (question.getRecipientType() \u003d\u003d FeedbackParticipantType.INSTRUCTORS"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"                \u0026\u0026 (question.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"                || question.isResponseVisibleTo(FeedbackParticipantType.INSTRUCTORS))) {"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"            viewableResponses.addNewResponses("},{"lineNumber":1033,"author":{"gitId":"-"},"content":"                    getFeedbackResponsesForReceiverForQuestion(question.getFeedbackQuestionId(), instructor.getEmail())"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"            );"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1036,"author":{"gitId":"-"},"content":""},{"lineNumber":1037,"author":{"gitId":"-"},"content":"        return viewableResponses.getResponses();"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1039,"author":{"gitId":"-"},"content":""},{"lineNumber":1040,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"     * Returns viewable feedback responses for a student."},{"lineNumber":1042,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e getViewableFeedbackResponsesForStudentForQuestion("},{"lineNumber":1044,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question, StudentAttributes student, CourseRoster courseRoster) {"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"        UniqueResponsesSet viewableResponses \u003d new UniqueResponsesSet();"},{"lineNumber":1046,"author":{"gitId":"-"},"content":""},{"lineNumber":1047,"author":{"gitId":"-"},"content":"        // Add responses that the student submitted him/herself"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"        if (question.getGiverType() !\u003d FeedbackParticipantType.INSTRUCTORS) {"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"            viewableResponses.addNewResponses("},{"lineNumber":1050,"author":{"gitId":"-"},"content":"                    getFeedbackResponsesFromGiverForQuestion(question.getFeedbackQuestionId(), student.getEmail())"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"            );"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1053,"author":{"gitId":"-"},"content":""},{"lineNumber":1054,"author":{"gitId":"-"},"content":"        // Add responses that user is a receiver of when response is visible to receiver"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"        if (question.getRecipientType() !\u003d FeedbackParticipantType.INSTRUCTORS"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"                \u0026\u0026 question.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)) {"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"            viewableResponses.addNewResponses("},{"lineNumber":1058,"author":{"gitId":"-"},"content":"                    getFeedbackResponsesForReceiverForQuestion(question.getFeedbackQuestionId(), student.getEmail())"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"            );"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1061,"author":{"gitId":"-"},"content":""},{"lineNumber":1062,"author":{"gitId":"-"},"content":"        if (question.isResponseVisibleTo(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"            viewableResponses.addNewResponses(getFeedbackResponsesForQuestion(question.getId()));"},{"lineNumber":1064,"author":{"gitId":"-"},"content":""},{"lineNumber":1065,"author":{"gitId":"-"},"content":"            // Early return as STUDENTS covers all cases below."},{"lineNumber":1066,"author":{"gitId":"-"},"content":"            return viewableResponses.getResponses();"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1068,"author":{"gitId":"-"},"content":""},{"lineNumber":1069,"author":{"gitId":"-"},"content":"        if (question.getRecipientType().isTeam()"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"                \u0026\u0026 question.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)) {"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"            viewableResponses.addNewResponses("},{"lineNumber":1072,"author":{"gitId":"-"},"content":"                    getFeedbackResponsesForReceiverForQuestion(question.getId(), student.getTeam())"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"            );"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1075,"author":{"gitId":"-"},"content":""},{"lineNumber":1076,"author":{"gitId":"-"},"content":"        if (question.getGiverType() \u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"                || question.isResponseVisibleTo(FeedbackParticipantType.OWN_TEAM_MEMBERS)) {"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"            viewableResponses.addNewResponses("},{"lineNumber":1079,"author":{"gitId":"-"},"content":"                    getFeedbackResponsesFromTeamForQuestion("},{"lineNumber":1080,"author":{"gitId":"-"},"content":"                            question.getId(), question.getCourseId(), student.getTeam(), courseRoster));"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1082,"author":{"gitId":"-"},"content":""},{"lineNumber":1083,"author":{"gitId":"-"},"content":"        if (question.isResponseVisibleTo(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS)) {"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"            for (StudentAttributes studentInTeam : courseRoster.getTeamToMembersTable().get(student.getTeam())) {"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"                if (studentInTeam.getEmail().equals(student.getEmail())) {"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"                List\u003cFeedbackResponseAttributes\u003e responses \u003d"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"                        frDb.getFeedbackResponsesForReceiverForQuestion(question.getId(), studentInTeam.getEmail());"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"                viewableResponses.addNewResponses(responses);"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1093,"author":{"gitId":"-"},"content":""},{"lineNumber":1094,"author":{"gitId":"-"},"content":"        return viewableResponses.getResponses();"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1096,"author":{"gitId":"-"},"content":""},{"lineNumber":1097,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"     * Gets the number of feedback responses created within a specified time range."},{"lineNumber":1099,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"    int getNumFeedbackResponsesByTimeRange(Instant startTime, Instant endTime) {"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"        return frDb.getNumFeedbackResponsesByTimeRange(startTime, endTime);"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1103,"author":{"gitId":"-"},"content":""},{"lineNumber":1104,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"     * Set contains only unique response."},{"lineNumber":1106,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"    private static class UniqueResponsesSet {"},{"lineNumber":1108,"author":{"gitId":"-"},"content":""},{"lineNumber":1109,"author":{"gitId":"-"},"content":"        private final Set\u003cString\u003e responseIds;"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"        private final List\u003cFeedbackResponseAttributes\u003e responses;"},{"lineNumber":1111,"author":{"gitId":"-"},"content":""},{"lineNumber":1112,"author":{"gitId":"-"},"content":"        private UniqueResponsesSet() {"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"            responseIds \u003d new HashSet\u003c\u003e();"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"            responses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1116,"author":{"gitId":"-"},"content":""},{"lineNumber":1117,"author":{"gitId":"-"},"content":"        private void addNewResponses(Collection\u003cFeedbackResponseAttributes\u003e newResponses) {"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"            newResponses.forEach(this::addNewResponse);"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1120,"author":{"gitId":"-"},"content":""},{"lineNumber":1121,"author":{"gitId":"-"},"content":"        private void addNewResponse(FeedbackResponseAttributes newResponse) {"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"            if (responseIds.contains(newResponse.getId())) {"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"            responseIds.add(newResponse.getId());"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"            responses.add(newResponse);"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1128,"author":{"gitId":"-"},"content":""},{"lineNumber":1129,"author":{"gitId":"-"},"content":"        private List\u003cFeedbackResponseAttributes\u003e getResponses() {"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"            return responses;"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"hhdqirui":3,"-":1130}},{"path":"src/test/java/teammates/logic/core/FeedbackResponsesLogicTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Comparator;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeMethod;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.AttributesDeletionQuery;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.CourseRoster;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackResultFetchType;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.SessionResultsBundle;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackQuestionType;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackRankRecipientsResponseDetails;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackResponseDetails;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackTextResponseDetails;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.test.AssertHelper;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * SUT: {@link FeedbackResponsesLogic}."},{"lineNumber":39,"author":{"gitId":"-"},"content":" */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class FeedbackResponsesLogicTest extends BaseLogicTest {"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final FeedbackQuestionsLogic fqLogic \u003d FeedbackQuestionsLogic.inst();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final FeedbackResponsesLogic frLogic \u003d FeedbackResponsesLogic.inst();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final FeedbackResponseCommentsLogic frcLogic \u003d FeedbackResponseCommentsLogic.inst();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private DataBundle questionTypeBundle;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private DataBundle responseVisibilityBundle;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // test data is refreshed before each test case"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @BeforeMethod"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void refreshTestData() {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        dataBundle \u003d getTypicalDataBundle();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        questionTypeBundle \u003d loadDataBundle(\"/FeedbackSessionQuestionTypeTest.json\");"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        responseVisibilityBundle \u003d loadDataBundle(\"/FeedbackResponseVisibilityTest.json\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        removeAndRestoreTypicalDataBundle();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // extra test data used on top of typical data bundle"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(loadDataBundle(\"/SpecialCharacterTest.json\"));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(questionTypeBundle);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(responseVisibilityBundle);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void testAreThereResponsesForQuestion() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes questionWithResponse;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes questionWithoutResponse;"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ______TS(\"Check that a question has some responses\");"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        questionWithResponse \u003d getQuestionFromDatabase(\"qn1InSession1InCourse2\");"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.areThereResponsesForQuestion(questionWithResponse.getId()));"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ______TS(\"Check that a question has no responses\");"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        questionWithoutResponse \u003d getQuestionFromDatabase(\"qn2InSession1InCourse2\");"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.areThereResponsesForQuestion(questionWithoutResponse.getId()));"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void testUpdateFeedbackResponseCascade() throws Exception {"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ______TS(\"success: standard update\");"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes responseToUpdate \u003d getResponseFromDatabase(\"response1ForQ2S1C1\");"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        FeedbackResponseDetails frd \u003d new FeedbackTextResponseDetails(\"Updated Response\");"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        frLogic.updateFeedbackResponseCascade("},{"lineNumber":96,"author":{"gitId":"-"},"content":"                FeedbackResponseAttributes.updateOptionsBuilder(responseToUpdate.getId())"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                        .withResponseDetails(frd)"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        responseToUpdate \u003d getResponseFromDatabase(\"response1ForQ2S1C1\");"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(responseToUpdate.toString(),"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponse(responseToUpdate.getId()).toString());"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ______TS(\"failure: recipient one that is already exists\");"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        responseToUpdate \u003d getResponseFromDatabase(\"response1ForQ2S1C1\");"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes existingResponse \u003d"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                FeedbackResponseAttributes.builder("},{"lineNumber":111,"author":{"gitId":"-"},"content":"                        responseToUpdate.getFeedbackQuestionId(), responseToUpdate.getGiver(), \"student3InCourse1@gmail.tmt\")"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(responseToUpdate.getFeedbackSessionName())"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withCourseId(responseToUpdate.getCourseId())"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withGiverSection(responseToUpdate.getGiverSection())"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withRecipientSection(responseToUpdate.getRecipientSection())"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withResponseDetails(responseToUpdate.getResponseDetails())"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        frLogic.createFeedbackResponse(existingResponse);"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes[] finalResponse \u003d new FeedbackResponseAttributes[] { responseToUpdate };"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EntityAlreadyExistsException eaee \u003d assertThrows(EntityAlreadyExistsException.class,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                () -\u003e frLogic.updateFeedbackResponseCascade("},{"lineNumber":124,"author":{"gitId":"-"},"content":"                        FeedbackResponseAttributes.updateOptionsBuilder(finalResponse[0].getId())"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                                .withRecipient(\"student3InCourse1@gmail.tmt\")"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                                .build()));"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        AssertHelper.assertContains(\"Trying to create an entity that exists\", eaee.getMessage());"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        ______TS(\"success: recipient changed to something else\");"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        responseToUpdate.setRecipient(\"student5InCourse1@gmail.tmt\");"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        frLogic.updateFeedbackResponseCascade("},{"lineNumber":134,"author":{"gitId":"-"},"content":"                FeedbackResponseAttributes.updateOptionsBuilder(responseToUpdate.getId())"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                        .withRecipient(responseToUpdate.getRecipient())"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(responseToUpdate.toString(),"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponse(responseToUpdate.getFeedbackQuestionId(), responseToUpdate.getGiver(),"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                        responseToUpdate.getRecipient()).toString());"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertNull(frLogic.getFeedbackResponse("},{"lineNumber":142,"author":{"gitId":"-"},"content":"                responseToUpdate.getFeedbackQuestionId(), responseToUpdate.getGiver(), \"student2InCourse1@gmail.tmt\"));"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        ______TS(\"success: update giver, recipient, giverSection and recipientSection, \""},{"lineNumber":145,"author":{"gitId":"-"},"content":"                + \"should do cascade update to comments\");"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        responseToUpdate \u003d getResponseFromDatabase(\"response1ForQ1S1C1\");"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(frcLogic.getFeedbackResponseCommentForResponse(responseToUpdate.getId()).isEmpty());"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes updatedResponse \u003d frLogic.updateFeedbackResponseCascade("},{"lineNumber":151,"author":{"gitId":"-"},"content":"                FeedbackResponseAttributes.updateOptionsBuilder(responseToUpdate.getId())"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                        .withGiver(\"test@example.com\")"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                        .withGiverSection(\"giverSection\")"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                        .withRecipient(\"test@example.com\")"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                        .withRecipientSection(\"recipientSection\")"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(\"test@example.com\", updatedResponse.getGiver());"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(\"giverSection\", updatedResponse.getGiverSection());"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(\"test@example.com\", updatedResponse.getRecipient());"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(\"recipientSection\", updatedResponse.getRecipientSection());"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(frcLogic.getFeedbackResponseCommentForResponse(responseToUpdate.getId()).isEmpty());"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseCommentAttributes\u003e associatedComments \u003d"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                frcLogic.getFeedbackResponseCommentForResponse(updatedResponse.getId());"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(associatedComments.isEmpty());"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(associatedComments.stream()"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .allMatch(c -\u003e \"giverSection\".equals(c.getGiverSection())"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                        \u0026\u0026 \"recipientSection\".equals(c.getReceiverSection())));"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ______TS(\"failure: invalid params\");"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Cannot have invalid params as all possible invalid params"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // are copied over from an existing response."},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ______TS(\"failure: no such response\");"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(EntityDoesNotExistException.class,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                () -\u003e frLogic.updateFeedbackResponseCascade("},{"lineNumber":178,"author":{"gitId":"-"},"content":"                        FeedbackResponseAttributes.updateOptionsBuilder(\"non-existent\")"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                                .withGiver(\"random\")"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                                .build()));"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void testUpdateFeedbackResponsesForChangingTeam_typicalData_shouldDoCascadeDeletion() throws Exception {"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"        StudentAttributes studentToUpdate \u003d dataBundle.students.get(\"student4InCourse1\");"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // Student 4 has 1 responses to him from team members,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // 1 response from him a team member, and"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // 1 team response from him to another team."},{"lineNumber":191,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes teamQuestion \u003d getQuestionFromDatabase(\"team.members.feedback\");"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(1, getFeedbackResponsesForReceiverForQuestion("},{"lineNumber":193,"author":{"gitId":"-"},"content":"                teamQuestion.getId(), studentToUpdate.getEmail()).size());"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(1,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":196,"author":{"gitId":"-"},"content":"                teamQuestion.getId(), studentToUpdate.getEmail()).size());"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        teamQuestion \u003d getQuestionFromDatabase(\"team.feedback\");"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertEquals(1,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":201,"author":{"gitId":"-"},"content":"                teamQuestion.getId(), studentToUpdate.getTeam()).size());"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // Add one more non-team response"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes responseToAdd \u003d"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                FeedbackResponseAttributes.builder("},{"lineNumber":206,"author":{"gitId":"-"},"content":"                        getQuestionFromDatabase(\"qn1InSession1InCourse1\").getId(),"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                        studentToUpdate.getEmail(), studentToUpdate.getEmail())"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(\"First feedback session\")"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                .withCourseId(\"idOfTypicalCourse1\")"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                .withGiverSection(\"Section 1\")"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .withRecipientSection(\"Section 1\")"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .withResponseDetails(new FeedbackTextResponseDetails(\"New Response to self\"))"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"        frLogic.createFeedbackResponse(responseToAdd);"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // All these responses should be gone after he changes teams"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        frLogic.updateFeedbackResponsesForChangingTeam("},{"lineNumber":220,"author":{"gitId":"-"},"content":"                studentToUpdate.getCourse(), studentToUpdate.getEmail(), studentToUpdate.getTeam(), \"Team 1.2\");"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"        teamQuestion \u003d getQuestionFromDatabase(\"team.members.feedback\");"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertEquals(0, getFeedbackResponsesForReceiverForQuestion("},{"lineNumber":224,"author":{"gitId":"-"},"content":"                teamQuestion.getId(), studentToUpdate.getEmail()).size());"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertEquals(0,"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":227,"author":{"gitId":"-"},"content":"                teamQuestion.getId(), studentToUpdate.getEmail()).size());"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        teamQuestion \u003d getQuestionFromDatabase(\"team.feedback\");"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertEquals(0, getFeedbackResponsesForReceiverForQuestion("},{"lineNumber":231,"author":{"gitId":"-"},"content":"                teamQuestion.getId(), studentToUpdate.getEmail()).size());"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // Non-team response should remain"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(1,"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":237,"author":{"gitId":"-"},"content":"                        getQuestionFromDatabase(\"qn1InSession1InCourse1\").getId(),"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                        studentToUpdate.getEmail()).size());"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Gets all responses for a recipient of a question."},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForReceiverForQuestion("},{"lineNumber":245,"author":{"gitId":"-"},"content":"            String questionId, String receiver) {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e allResponses \u003d frLogic.getFeedbackResponsesForQuestion(questionId);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        return allResponses.stream()"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                .filter(response -\u003e response.getRecipient().equals(receiver))"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void testUpdateFeedbackResponsesForChangingTeam_deleteLastResponse_decreaseResponseRate() {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes responseShouldBeDeleted \u003d"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                getResponseFromDatabase(questionTypeBundle, \"response1ForQ1ContribSession2Course2\");"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        // make sure it\u0027s the last response by the student"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertEquals(1, numResponsesFromGiverInSession(responseShouldBeDeleted.getGiver(),"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                responseShouldBeDeleted.getFeedbackSessionName(),"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                responseShouldBeDeleted.getCourseId()));"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d questionTypeBundle.students.get(\"student2InCourse2\");"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        // the response is given by the student"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        assertEquals(student.getEmail(), responseShouldBeDeleted.getGiver());"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"        int originalResponseRate \u003d getResponseRate(responseShouldBeDeleted.getFeedbackSessionName(),"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                responseShouldBeDeleted.getCourseId());"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"        frLogic.updateFeedbackResponsesForChangingTeam(student.getCourse(), student.getEmail(), student.getTeam(),"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                student.getTeam() + \"tmp\");"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"        int responseRateAfterDeletion \u003d getResponseRate(responseShouldBeDeleted.getFeedbackSessionName(),"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                responseShouldBeDeleted.getCourseId());"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        assertEquals(originalResponseRate - 1, responseRateAfterDeletion);"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public void testUpdateFeedbackResponsesForChangingTeam_noResponseShouldBeDeleted_shouldReaminSameResponseRate() {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes responseShouldBeDeleted \u003d"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                getResponseFromDatabase(questionTypeBundle, \"response1ForQ1RankSession\");"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        // make sure it\u0027s not the last response by the student"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        assertTrue(1 \u003c numResponsesFromGiverInSession(responseShouldBeDeleted.getGiver(),"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                responseShouldBeDeleted.getFeedbackSessionName(),"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                responseShouldBeDeleted.getCourseId()));"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d questionTypeBundle.students.get(\"student1InCourse1\");"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        // the response is given by the student"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        assertEquals(student.getEmail(), responseShouldBeDeleted.getGiver());"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"        int originalResponseRate \u003d getResponseRate(responseShouldBeDeleted.getFeedbackSessionName(),"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                responseShouldBeDeleted.getCourseId());"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"        frLogic.updateFeedbackResponsesForChangingTeam(student.getCourse(), student.getEmail(), student.getTeam(),"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                student.getTeam() + \"tmp\");"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"        int responseRateAfterDeletion \u003d getResponseRate(responseShouldBeDeleted.getFeedbackSessionName(),"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                responseShouldBeDeleted.getCourseId());"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        assertEquals(originalResponseRate, responseRateAfterDeletion);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public void testUpdateResponsesForDeletingStudent_rankRecipientQuestionResponse_newResponsesShouldBeConsistent()"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            throws Exception {"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes distinctRankQuestion \u003d"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                getQuestionFromDatabase(questionTypeBundle, \"qn1InRANKSession\");"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        String courseId \u003d distinctRankQuestion.getCourseId();"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e studentsInCourse \u003d studentsLogic.getStudentsForCourse(courseId);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        Map\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e giverResponseMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : studentsInCourse) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            giverResponseMap.put(student.getEmail(), frLogic.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":310,"author":{"gitId":"-"},"content":"                    distinctRankQuestion.getFeedbackQuestionId(), student.getEmail()));"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"        int numStudents;"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesFromStudent;"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        while (!studentsInCourse.isEmpty()) {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            studentsLogic.deleteStudentCascade(courseId, studentsInCourse.get(0).getEmail());"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            numStudents \u003d studentsLogic.getNumberOfStudentsForCourse(courseId);"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            studentsInCourse \u003d studentsLogic.getStudentsForCourse(courseId);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            for (StudentAttributes student : studentsInCourse) {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                responsesFromStudent \u003d frLogic.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":321,"author":{"gitId":"-"},"content":"                        distinctRankQuestion.getId(), student.getEmail());"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                assertTrue(areRankResponsesConsistent(responsesFromStudent, numStudents));"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                assertTrue(areRankResponsesInSameOrder(giverResponseMap.get(student.getEmail()), responsesFromStudent));"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                giverResponseMap.put(student.getEmail(), responsesFromStudent);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"        refreshTestData();"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes nonDistinctRankQuestion \u003d"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                getQuestionFromDatabase(questionTypeBundle, \"qn2InRANKSession\");"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : studentsInCourse) {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            giverResponseMap.put(student.getEmail(), frLogic.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":334,"author":{"gitId":"-"},"content":"                    nonDistinctRankQuestion.getFeedbackQuestionId(), student.getEmail()));"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"        int numTeamMembers;"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        while (!studentsInCourse.isEmpty()) {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            studentsLogic.deleteStudentCascade(courseId, studentsInCourse.get(0).getEmail());"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            studentsInCourse \u003d studentsLogic.getStudentsForCourse(courseId);"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            for (StudentAttributes student : studentsInCourse) {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                numTeamMembers \u003d studentsLogic.getStudentsForTeam(student.getTeam(), courseId).size();"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                responsesFromStudent \u003d frLogic.getFeedbackResponsesFromGiverForQuestion("},{"lineNumber":344,"author":{"gitId":"-"},"content":"                        nonDistinctRankQuestion.getId(), student.getEmail());"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                assertTrue(areRankResponsesConsistent(responsesFromStudent, numTeamMembers));"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                assertTrue(areRankResponsesInSameOrder(giverResponseMap.get(student.getEmail()), responsesFromStudent));"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                giverResponseMap.put(student.getEmail(), responsesFromStudent);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"    private boolean areRankResponsesConsistent(List\u003cFeedbackResponseAttributes\u003e responses, int maxRank) {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responses) {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            if (!response.getFeedbackQuestionType().equals(FeedbackQuestionType.RANK_RECIPIENTS)) {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            FeedbackRankRecipientsResponseDetails responseDetails \u003d"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                    (FeedbackRankRecipientsResponseDetails) response.getResponseDetails();"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            if (responseDetails.getAnswer() \u003e maxRank) {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":367,"author":{"gitId":"-"},"content":"     * Checks whether two list of responses for \u0027rank recipient question\u0027 have the same order for each recipient."},{"lineNumber":368,"author":{"gitId":"-"},"content":"     * The recipients of the updated responses should be a subset of that of the original responses."},{"lineNumber":369,"author":{"gitId":"-"},"content":"     * @param responses the original response list"},{"lineNumber":370,"author":{"gitId":"-"},"content":"     * @param modifiedResponses the updated response list"},{"lineNumber":371,"author":{"gitId":"-"},"content":"     * @return true if the modified response list maintain the original order of the responses"},{"lineNumber":372,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    private boolean areRankResponsesInSameOrder(List\u003cFeedbackResponseAttributes\u003e responses,"},{"lineNumber":374,"author":{"gitId":"-"},"content":"                                                List\u003cFeedbackResponseAttributes\u003e modifiedResponses) {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        if (responses.isEmpty()) {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"            return modifiedResponses.isEmpty();"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        if (modifiedResponses.isEmpty()) {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"        // Expects responses to rank recipient questions."},{"lineNumber":383,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes r : responses) {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"            assert r.getFeedbackQuestionType().equals(FeedbackQuestionType.RANK_RECIPIENTS);"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes r : modifiedResponses) {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"            assert r.getFeedbackQuestionType().equals(FeedbackQuestionType.RANK_RECIPIENTS);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"        responses.sort(Comparator.comparing("},{"lineNumber":391,"author":{"gitId":"-"},"content":"                response -\u003e ((FeedbackRankRecipientsResponseDetails) response.getResponseDetails()).getAnswer()));"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        modifiedResponses.sort(Comparator.comparing("},{"lineNumber":393,"author":{"gitId":"-"},"content":"                response -\u003e ((FeedbackRankRecipientsResponseDetails) response.getResponseDetails()).getAnswer()));"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"        int pointer1 \u003d 0;"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        int pointer2 \u003d 0;"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        String recipient1Email;"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        String recipient2Email;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        while (pointer1 \u003c responses.size() \u0026\u0026 pointer2 \u003c modifiedResponses.size()) {"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            recipient1Email \u003d responses.get(pointer1).getRecipient();"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            recipient2Email \u003d responses.get(pointer2).getRecipient();"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            if (recipient1Email.equals(recipient2Email)) {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"                pointer1++;"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                pointer2++;"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                pointer1++; // Skips one response from first list."},{"lineNumber":407,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"        return pointer2 \u003d\u003d modifiedResponses.size();"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"    private int numResponsesFromGiverInSession(String studentEmail, String sessionName, String courseId) {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        int numResponses \u003d 0;"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : questionTypeBundle.feedbackResponses.values()) {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            if (response.getGiver().equals(studentEmail) \u0026\u0026 response.getFeedbackSessionName().equals(sessionName)"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                    \u0026\u0026 response.getCourseId().equals(courseId)) {"},{"lineNumber":418,"author":{"gitId":"-"},"content":"                numResponses++;"},{"lineNumber":419,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        return numResponses;"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"    private int getResponseRate(String sessionName, String courseId) {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes sessionFromDatabase \u003d fsLogic.getFeedbackSession(sessionName, courseId);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        return fsLogic.getActualTotalSubmission(sessionFromDatabase);"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    public void testUpdateFeedbackResponsesForChangingEmail() throws Exception {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        ______TS(\"standard update email case\");"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"        // Student 1 currently has 11 responses to him and 2 from himself."},{"lineNumber":434,"author":{"gitId":"-"},"content":"        // Student 1 currently has 1 response comment for responses from instructor to him"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        // and 1 response comment from responses from himself."},{"lineNumber":436,"author":{"gitId":"-"},"content":"        StudentAttributes studentToUpdate \u003d questionTypeBundle.students.get(\"student2InCourse1\");"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesForReceiver \u003d"},{"lineNumber":438,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesForReceiverForCourse("},{"lineNumber":439,"author":{"gitId":"-"},"content":"                        studentToUpdate.getCourse(), studentToUpdate.getEmail());"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesFromGiver \u003d"},{"lineNumber":441,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesFromGiverForCourse("},{"lineNumber":442,"author":{"gitId":"-"},"content":"                        studentToUpdate.getCourse(), studentToUpdate.getEmail());"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e responseIdsToAndFromStudent \u003d new HashSet\u003c\u003e();"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        responseIdsToAndFromStudent.addAll("},{"lineNumber":445,"author":{"gitId":"-"},"content":"                responsesForReceiver.stream().map(FeedbackResponseAttributes::getId).collect(Collectors.toList()));"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        responseIdsToAndFromStudent.addAll("},{"lineNumber":447,"author":{"gitId":"-"},"content":"                responsesFromGiver.stream().map(FeedbackResponseAttributes::getId).collect(Collectors.toList()));"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseCommentAttributes\u003e responseCommentsForStudent \u003d"},{"lineNumber":449,"author":{"gitId":"-"},"content":"                getFeedbackResponseCommentsForResponsesFromDatabase(responseIdsToAndFromStudent);"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"        assertEquals(11, responsesForReceiver.size());"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        assertEquals(8, responsesFromGiver.size());"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        assertEquals(2, responseCommentsForStudent.size());"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        // student\u0027s comment"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        assertTrue(responseCommentsForStudent.stream().anyMatch(r -\u003e r.isCommentFromFeedbackParticipant()));"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        // instructor comment"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        assertTrue(responseCommentsForStudent.stream().anyMatch(r -\u003e !r.isCommentFromFeedbackParticipant()));"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"        frLogic.updateFeedbackResponsesForChangingEmail("},{"lineNumber":460,"author":{"gitId":"-"},"content":"                studentToUpdate.getCourse(), studentToUpdate.getEmail(), \"new@email.tmt\");"},{"lineNumber":461,"author":{"gitId":"-"},"content":""},{"lineNumber":462,"author":{"gitId":"-"},"content":"        responsesForReceiver \u003d frLogic.getFeedbackResponsesForReceiverForCourse("},{"lineNumber":463,"author":{"gitId":"-"},"content":"                studentToUpdate.getCourse(), studentToUpdate.getEmail());"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        responsesFromGiver \u003d frLogic.getFeedbackResponsesFromGiverForCourse("},{"lineNumber":465,"author":{"gitId":"-"},"content":"                studentToUpdate.getCourse(), studentToUpdate.getEmail());"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        responseIdsToAndFromStudent \u003d new HashSet\u003c\u003e();"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        responseIdsToAndFromStudent.addAll("},{"lineNumber":468,"author":{"gitId":"-"},"content":"                responsesForReceiver.stream().map(FeedbackResponseAttributes::getId).collect(Collectors.toList()));"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        responseIdsToAndFromStudent.addAll("},{"lineNumber":470,"author":{"gitId":"-"},"content":"                responsesFromGiver.stream().map(FeedbackResponseAttributes::getId).collect(Collectors.toList()));"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        responseCommentsForStudent \u003d"},{"lineNumber":472,"author":{"gitId":"-"},"content":"                getFeedbackResponseCommentsForResponsesFromDatabase(responseIdsToAndFromStudent);"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"        assertEquals(0, responsesForReceiver.size());"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        assertEquals(0, responsesFromGiver.size());"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        assertEquals(0, responseCommentsForStudent.size());"},{"lineNumber":477,"author":{"gitId":"-"},"content":""},{"lineNumber":478,"author":{"gitId":"-"},"content":"        responsesForReceiver \u003d frLogic.getFeedbackResponsesForReceiverForCourse("},{"lineNumber":479,"author":{"gitId":"-"},"content":"                studentToUpdate.getCourse(), \"new@email.tmt\");"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        responsesFromGiver \u003d frLogic.getFeedbackResponsesFromGiverForCourse("},{"lineNumber":481,"author":{"gitId":"-"},"content":"                studentToUpdate.getCourse(), \"new@email.tmt\");"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        responseIdsToAndFromStudent \u003d new HashSet\u003c\u003e();"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        responseIdsToAndFromStudent.addAll("},{"lineNumber":484,"author":{"gitId":"-"},"content":"                responsesForReceiver.stream().map(FeedbackResponseAttributes::getId).collect(Collectors.toList()));"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        responseIdsToAndFromStudent.addAll("},{"lineNumber":486,"author":{"gitId":"-"},"content":"                responsesFromGiver.stream().map(FeedbackResponseAttributes::getId).collect(Collectors.toList()));"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        responseCommentsForStudent \u003d"},{"lineNumber":488,"author":{"gitId":"-"},"content":"                getFeedbackResponseCommentsForResponsesFromDatabase(responseIdsToAndFromStudent);"},{"lineNumber":489,"author":{"gitId":"-"},"content":""},{"lineNumber":490,"author":{"gitId":"-"},"content":"        assertEquals(11, responsesForReceiver.size());"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        assertEquals(8, responsesFromGiver.size());"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        assertEquals(2, responseCommentsForStudent.size());"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":494,"author":{"gitId":"-"},"content":""},{"lineNumber":495,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    public void testIsNameVisibleTo() {"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"        ______TS(\"testIsNameVisibleTo\");"},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d dataBundle.students.get(\"student1InCourse1\");"},{"lineNumber":502,"author":{"gitId":"-"},"content":"        StudentAttributes student2 \u003d dataBundle.students.get(\"student2InCourse1\");"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        StudentAttributes student3 \u003d dataBundle.students.get(\"student3InCourse1\");"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        StudentAttributes student5 \u003d dataBundle.students.get(\"student5InCourse1\");"},{"lineNumber":505,"author":{"gitId":"-"},"content":""},{"lineNumber":506,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq \u003d getQuestionFromDatabase(\"qn3InSession1InCourse1\");"},{"lineNumber":507,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr \u003d getResponseFromDatabase(\"response1ForQ3S1C1\");"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"        CourseRoster roster \u003d new CourseRoster("},{"lineNumber":510,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(fq.getCourseId()),"},{"lineNumber":511,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(fq.getCourseId()));"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, instructor.getEmail(), true, true, roster));"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, instructor.getEmail(), true, false, roster));"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, student.getEmail(), false, false, roster));"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"        ______TS(\"test if visible to own team members\");"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"        fr.setGiver(student.getEmail());"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, student.getEmail(), false, false, roster));"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"        ______TS(\"test if visible to receiver/reciever team members\");"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"        fq.setRecipientType(FeedbackParticipantType.TEAMS);"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        fq.getShowRecipientNameTo().clear();"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        fq.getShowRecipientNameTo().add(FeedbackParticipantType.RECEIVER);"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        fr.setRecipient(student.getTeam());"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, student.getEmail(), false, false, roster));"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, student3.getEmail(), false, false, roster));"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"        fq.setRecipientType(FeedbackParticipantType.STUDENTS);"},{"lineNumber":532,"author":{"gitId":"-"},"content":"        fr.setRecipient(student.getEmail());"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, student.getEmail(), false, false, roster));"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isNameVisibleToUser(fq, fr, student2.getEmail(), false, false, roster));"},{"lineNumber":535,"author":{"gitId":"-"},"content":""},{"lineNumber":536,"author":{"gitId":"-"},"content":"        fq.setRecipientType(FeedbackParticipantType.TEAMS);"},{"lineNumber":537,"author":{"gitId":"-"},"content":"        fq.getShowRecipientNameTo().clear();"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        fq.getShowRecipientNameTo().add(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        fr.setRecipient(student.getTeam());"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, student.getEmail(), false, false, roster));"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, student3.getEmail(), false, false, roster));"},{"lineNumber":542,"author":{"gitId":"-"},"content":""},{"lineNumber":543,"author":{"gitId":"-"},"content":"        fq.setRecipientType(FeedbackParticipantType.STUDENTS);"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        fr.setRecipient(student.getEmail());"},{"lineNumber":545,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, student.getEmail(), false, false, roster));"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, student3.getEmail(), false, false, roster));"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isNameVisibleToUser(fq, fr, student5.getEmail(), false, false, roster));"},{"lineNumber":548,"author":{"gitId":"-"},"content":""},{"lineNumber":549,"author":{"gitId":"-"},"content":"        ______TS(\"test if visible to receiver/giver team members for team questions\");"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"        fq.setRecipientType(FeedbackParticipantType.TEAMS);"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        fq.getShowRecipientNameTo().clear();"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        fq.getShowRecipientNameTo().add(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":554,"author":{"gitId":"-"},"content":"        fq.setGiverType(FeedbackParticipantType.TEAMS);"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        fq.getShowGiverNameTo().clear();"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        fq.getShowGiverNameTo().add(FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF);"},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":"        fr.setRecipient(student5.getTeam());"},{"lineNumber":559,"author":{"gitId":"-"},"content":"        fr.setGiver(student.getTeam());"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, student.getEmail(), false, false, roster));"},{"lineNumber":561,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, student3.getEmail(), false, false, roster));"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isNameVisibleToUser(fq, fr, student5.getEmail(), false, false, roster));"},{"lineNumber":563,"author":{"gitId":"-"},"content":""},{"lineNumber":564,"author":{"gitId":"-"},"content":"        ______TS(\"test anonymous team recipients\");"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        // Only members of the recipient team should be able to see the recipient name"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        fq.setRecipientType(FeedbackParticipantType.TEAMS);"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        fq.getShowRecipientNameTo().clear();"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        fq.getShowRecipientNameTo().add(FeedbackParticipantType.RECEIVER);"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        fq.getShowResponsesTo().add(FeedbackParticipantType.STUDENTS);"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        fr.setRecipient(\"Team 1.1\");"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isNameVisibleToUser(fq, fr, student5.getEmail(), false, false, roster));"},{"lineNumber":572,"author":{"gitId":"-"},"content":""},{"lineNumber":573,"author":{"gitId":"-"},"content":"        ______TS(\"null question\");"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isNameVisibleToUser(null, fr, student.getEmail(), false, false, roster));"},{"lineNumber":576,"author":{"gitId":"-"},"content":""},{"lineNumber":577,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":578,"author":{"gitId":"-"},"content":""},{"lineNumber":579,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    public void testIsResponseVisibleForUser() {"},{"lineNumber":581,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1 \u003d responseVisibilityBundle.instructors.get(\"FRV.instructor1OfCourse1\");"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor2 \u003d responseVisibilityBundle.instructors.get(\"FRV.instructor2OfCourse1\");"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor3 \u003d responseVisibilityBundle.instructors.get(\"FRV.instructor3OfCourse1\");"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor4 \u003d responseVisibilityBundle.instructors.get(\"FRV.instructor4OfCourse1\");"},{"lineNumber":585,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor5 \u003d responseVisibilityBundle.instructors.get(\"FRV.instructor5OfCourse1\");"},{"lineNumber":586,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor6 \u003d responseVisibilityBundle.instructors.get(\"FRV.instructor6OfCourse1\");"},{"lineNumber":587,"author":{"gitId":"-"},"content":""},{"lineNumber":588,"author":{"gitId":"-"},"content":"        StudentAttributes student1 \u003d responseVisibilityBundle.students.get(\"FRV.student1InCourse1\");"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        StudentAttributes student2 \u003d responseVisibilityBundle.students.get(\"FRV.student2InCourse1\");"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        StudentAttributes student3 \u003d responseVisibilityBundle.students.get(\"FRV.student3InCourse1\");"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        StudentAttributes student4 \u003d responseVisibilityBundle.students.get(\"FRV.student4InCourse1\");"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        StudentAttributes student5 \u003d responseVisibilityBundle.students.get(\"FRV.student5InCourse1\");"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        StudentAttributes student6 \u003d responseVisibilityBundle.students.get(\"FRV.student6InCourse1\");"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        StudentAttributes student7 \u003d responseVisibilityBundle.students.get(\"FRV.student7InCourse1\");"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        StudentAttributes student8 \u003d responseVisibilityBundle.students.get(\"FRV.student8InCourse1\");"},{"lineNumber":596,"author":{"gitId":"-"},"content":""},{"lineNumber":597,"author":{"gitId":"-"},"content":"        // stu -\u003e self : instructors"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq11 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn1InSession1InCourse1\");"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        // stu -\u003e stu : instructors, receiver"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq12 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn2InSession1InCourse1\");"},{"lineNumber":601,"author":{"gitId":"-"},"content":"        // self -\u003e none : other students, instructors"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq13 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn3InSession1InCourse1\");"},{"lineNumber":603,"author":{"gitId":"-"},"content":"        // team -\u003e ins : instructors, other students"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq16 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn6InSession1InCourse1\");"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        // stu -\u003e stu in same section : own team members, receiver team members"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq17 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn7InSession1InCourse1\");"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        // ins -\u003e ins : -"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq18 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn8InSession1InCourse1\");"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        // ins -\u003e ins team : instructors"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq19 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn9InSession1InCourse1\");"},{"lineNumber":611,"author":{"gitId":"-"},"content":"        // team -\u003e team : receiver"},{"lineNumber":612,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq21 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn1InSession2InCourse1\");"},{"lineNumber":613,"author":{"gitId":"-"},"content":"        // stu -\u003e own team mem : receiver, own team members"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq22 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn2InSession2InCourse1\");"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        // ins -\u003e stu : receiver, instructors, other students, receiver\u0027s team members"},{"lineNumber":616,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq23 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn3InSession2InCourse1\");"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        // stu -\u003e ins : receiver"},{"lineNumber":618,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq24 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn4InSession2InCourse1\");"},{"lineNumber":619,"author":{"gitId":"-"},"content":"        // stu -\u003e own team : own team members, instructors"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq25 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn5InSession2InCourse1\");"},{"lineNumber":621,"author":{"gitId":"-"},"content":"        // stu -\u003e team : other students"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq26 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn6InSession2InCourse1\");"},{"lineNumber":623,"author":{"gitId":"-"},"content":"        // team -\u003e stu in same section : instructors"},{"lineNumber":624,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq27 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn7InSession2InCourse1\");"},{"lineNumber":625,"author":{"gitId":"-"},"content":"        // team -\u003e team in same section : receiver"},{"lineNumber":626,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq28 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn8InSession2InCourse1\");"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        // stu -\u003e team in same section : instructors"},{"lineNumber":628,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq29 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn9InSession2InCourse1\");"},{"lineNumber":629,"author":{"gitId":"hhdqirui"},"content":"        // stu -\u003e team excluding self : instructors, receiver"},{"lineNumber":630,"author":{"gitId":"hhdqirui"},"content":"        FeedbackQuestionAttributes fq30 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn11InSession2InCourse1\");"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        // ins -\u003e team : instructors"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq20 \u003d responseVisibilityBundle.feedbackQuestions.get(\"FRV.qn10InSession2InCourse1\");"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"        // stu1 -\u003e stu1 (self feedback)"},{"lineNumber":635,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr111 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ1S1C1\");"},{"lineNumber":636,"author":{"gitId":"-"},"content":"        // stu5 -\u003e stu5 (self feedback)"},{"lineNumber":637,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr112 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response2ForQ1S1C1\");"},{"lineNumber":638,"author":{"gitId":"-"},"content":"        // stu2 -\u003e stu5"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr121 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ2S1C1\");"},{"lineNumber":640,"author":{"gitId":"-"},"content":"        // stu5 -\u003e stu2"},{"lineNumber":641,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr122 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response2ForQ2S1C1\");"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        // stu3 -\u003e stu2"},{"lineNumber":643,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr123 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response3ForQ2S1C1\");"},{"lineNumber":644,"author":{"gitId":"-"},"content":"        // ins1 -\u003e General"},{"lineNumber":645,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr131 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ3S1C1\");"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        // team2 -\u003e ins2"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr161 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ6S1C1\");"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        // team3 -\u003e ins2"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr162 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response2ForQ6S1C1\");"},{"lineNumber":650,"author":{"gitId":"-"},"content":"        // stu1 -\u003e stu6"},{"lineNumber":651,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr171 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ7S1C1\");"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        // ins1 -\u003e ins2"},{"lineNumber":653,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr181 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ8S1C1\");"},{"lineNumber":654,"author":{"gitId":"-"},"content":"        // ins2 -\u003e ins team"},{"lineNumber":655,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr191 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ9S1C1\");"},{"lineNumber":656,"author":{"gitId":"-"},"content":"        // team1 -\u003e team2"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr211 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ1S2C1\");"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        // stu4 -\u003e stu3"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr221 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ2S2C1\");"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        // ins1 -\u003e stu3"},{"lineNumber":661,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr231 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ3S2C1\");"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        // ins6 -\u003e stu5"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr232 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response2ForQ3S2C1\");"},{"lineNumber":664,"author":{"gitId":"-"},"content":"        // stu1 -\u003e ins1"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr241 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ4S2C1\");"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        // stu1 -\u003e ins4"},{"lineNumber":667,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr242 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response2ForQ4S2C1\");"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        // stu6 -\u003e team3 (own team)"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr251 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ5S2C1\");"},{"lineNumber":670,"author":{"gitId":"-"},"content":"        // stu5 -\u003e team2 (own team)"},{"lineNumber":671,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr252 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response2ForQ5S2C1\");"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        // stu1 -\u003e team3"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr261 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ6S2C1\");"},{"lineNumber":674,"author":{"gitId":"-"},"content":"        // team1 -\u003e stu7"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr271 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ7S2C1\");"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        // team3 -\u003e team1"},{"lineNumber":677,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr281 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ8S2C1\");"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        // stu8 -\u003e team1"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr291 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ9S2C1\");"},{"lineNumber":680,"author":{"gitId":"hhdqirui"},"content":"        // stu1 -\u003e team2"},{"lineNumber":681,"author":{"gitId":"hhdqirui"},"content":"        FeedbackResponseAttributes fr2111 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ11S2C1\");"},{"lineNumber":682,"author":{"gitId":"hhdqirui"},"content":"        // stu6 -\u003e team1"},{"lineNumber":683,"author":{"gitId":"hhdqirui"},"content":"        FeedbackResponseAttributes fr2112 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response2ForQ11S2C1\");"},{"lineNumber":684,"author":{"gitId":"hhdqirui"},"content":"        // stu7 -\u003e team2"},{"lineNumber":685,"author":{"gitId":"hhdqirui"},"content":"        FeedbackResponseAttributes fr2113 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response3ForQ11S2C1\");"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        // ins2 -\u003e team2"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fr201 \u003d responseVisibilityBundle.feedbackResponses.get(\"FRV.response1ForQ10S2C1\");"},{"lineNumber":688,"author":{"gitId":"-"},"content":""},{"lineNumber":689,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e studentsEmailInTeam1 \u003d new HashSet\u003c\u003e("},{"lineNumber":690,"author":{"gitId":"-"},"content":"                Arrays.asList(student1.getEmail(), student2.getEmail(), student3.getEmail(), student4.getEmail()));"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e studentsEmailInTeam2 \u003d new HashSet\u003c\u003e(Arrays.asList(student5.getEmail()));"},{"lineNumber":692,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e studentsEmailInTeam3 \u003d new HashSet\u003c\u003e(Arrays.asList(student6.getEmail(), student7.getEmail()));"},{"lineNumber":693,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e studentsEmailInTeam4 \u003d new HashSet\u003c\u003e(Arrays.asList(student8.getEmail()));"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e studentsEmailEmpty \u003d Collections.emptySet();"},{"lineNumber":695,"author":{"gitId":"-"},"content":""},{"lineNumber":696,"author":{"gitId":"-"},"content":"        ______TS(\"test if visible to giver\");"},{"lineNumber":697,"author":{"gitId":"-"},"content":""},{"lineNumber":698,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student1.getEmail(), false, student1, studentsEmailInTeam1,"},{"lineNumber":699,"author":{"gitId":"-"},"content":"                fr111, fq11, null));"},{"lineNumber":700,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, null,"},{"lineNumber":701,"author":{"gitId":"-"},"content":"                fr131, fq13, instructor1));"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":703,"author":{"gitId":"-"},"content":"                fr181, fq18, instructor1));"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor2.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":705,"author":{"gitId":"-"},"content":"                fr191, fq19, instructor2));"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student2.getEmail(), false, student2, studentsEmailInTeam1,"},{"lineNumber":707,"author":{"gitId":"-"},"content":"                fr211, fq21, null));"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student4.getEmail(), false, student4, studentsEmailInTeam1,"},{"lineNumber":709,"author":{"gitId":"-"},"content":"                fr221, fq22, null));"},{"lineNumber":710,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":711,"author":{"gitId":"-"},"content":"                fr231, fq23, instructor1));"},{"lineNumber":712,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student1.getEmail(), false, student1, studentsEmailInTeam1,"},{"lineNumber":713,"author":{"gitId":"hhdqirui"},"content":"                fr2111, fq30, null));"},{"lineNumber":714,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student6.getEmail(), false, student6, studentsEmailInTeam3,"},{"lineNumber":715,"author":{"gitId":"hhdqirui"},"content":"                fr2112, fq30, null));"},{"lineNumber":716,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student7.getEmail(), false, student7, studentsEmailInTeam3,"},{"lineNumber":717,"author":{"gitId":"hhdqirui"},"content":"                fr2113, fq30, null));"},{"lineNumber":718,"author":{"gitId":"-"},"content":""},{"lineNumber":719,"author":{"gitId":"-"},"content":"        ______TS(\"test if visible to other students\");"},{"lineNumber":720,"author":{"gitId":"-"},"content":""},{"lineNumber":721,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student3.getEmail(), false, student3, studentsEmailInTeam1,"},{"lineNumber":722,"author":{"gitId":"-"},"content":"                fr131, fq13, null));"},{"lineNumber":723,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student5.getEmail(), false, student5, studentsEmailInTeam2,"},{"lineNumber":724,"author":{"gitId":"-"},"content":"                fr161, fq16, null));"},{"lineNumber":725,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student5.getEmail(), false, student5, studentsEmailInTeam2,"},{"lineNumber":726,"author":{"gitId":"-"},"content":"                fr211, fq21, null));"},{"lineNumber":727,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student7.getEmail(), false, student7, studentsEmailInTeam3,"},{"lineNumber":728,"author":{"gitId":"-"},"content":"                fr231, fq23, null));"},{"lineNumber":729,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student5.getEmail(), false, student5, studentsEmailInTeam2,"},{"lineNumber":730,"author":{"gitId":"-"},"content":"                fr261, fq26, null));"},{"lineNumber":731,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student1.getEmail(), false, student1, studentsEmailInTeam1,"},{"lineNumber":732,"author":{"gitId":"-"},"content":"                fr112, fq11, null));"},{"lineNumber":733,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student1.getEmail(), false, student1, studentsEmailInTeam1,"},{"lineNumber":734,"author":{"gitId":"-"},"content":"                fr121, fq12, null));"},{"lineNumber":735,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student5.getEmail(), false, student5, studentsEmailInTeam2,"},{"lineNumber":736,"author":{"gitId":"-"},"content":"                fr171, fq17, null));"},{"lineNumber":737,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student7.getEmail(), false, student7, studentsEmailInTeam3,"},{"lineNumber":738,"author":{"gitId":"-"},"content":"                fr291, fq29, null));"},{"lineNumber":739,"author":{"gitId":"-"},"content":""},{"lineNumber":740,"author":{"gitId":"-"},"content":"        ______TS(\"test if visible to receiver\");"},{"lineNumber":741,"author":{"gitId":"-"},"content":""},{"lineNumber":742,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student2.getEmail(), false, student2, studentsEmailInTeam1,"},{"lineNumber":743,"author":{"gitId":"-"},"content":"                fr122, fq12, null));"},{"lineNumber":744,"author":{"gitId":"-"},"content":"        // receiver\u0027s team members include receiver"},{"lineNumber":745,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student6.getEmail(), false, student6, studentsEmailInTeam3,"},{"lineNumber":746,"author":{"gitId":"-"},"content":"                fr171, fq17, null));"},{"lineNumber":747,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student5.getEmail(), false, student5, studentsEmailInTeam2,"},{"lineNumber":748,"author":{"gitId":"-"},"content":"                fr211, fq21, null));"},{"lineNumber":749,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student3.getEmail(), false, student3, studentsEmailInTeam1,"},{"lineNumber":750,"author":{"gitId":"-"},"content":"                fr221, fq22, null));"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":752,"author":{"gitId":"-"},"content":"                fr241, fq24, instructor1));"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        // other students include receiver"},{"lineNumber":754,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student6.getEmail(), false, student6, studentsEmailInTeam3,"},{"lineNumber":755,"author":{"gitId":"-"},"content":"                fr261, fq26, null));"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student1.getEmail(), false, student1, studentsEmailInTeam1,"},{"lineNumber":757,"author":{"gitId":"-"},"content":"                fr281, fq28, null));"},{"lineNumber":758,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor2.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":759,"author":{"gitId":"-"},"content":"                fr181, fq18, instructor2));"},{"lineNumber":760,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student7.getEmail(), false, student7, studentsEmailInTeam3,"},{"lineNumber":761,"author":{"gitId":"-"},"content":"                fr271, fq27, null));"},{"lineNumber":762,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student8.getEmail(), false, student8, studentsEmailInTeam4,"},{"lineNumber":763,"author":{"gitId":"-"},"content":"                fr281, fq28, null));"},{"lineNumber":764,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student5.getEmail(), false, student5, studentsEmailInTeam2,"},{"lineNumber":765,"author":{"gitId":"-"},"content":"                fr201, fq20, null));"},{"lineNumber":766,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student6.getEmail(), false, student6, studentsEmailInTeam3,"},{"lineNumber":767,"author":{"gitId":"hhdqirui"},"content":"                fr2111, fq30, null));"},{"lineNumber":768,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student7.getEmail(), false, student7, studentsEmailInTeam3,"},{"lineNumber":769,"author":{"gitId":"hhdqirui"},"content":"                fr2111, fq30, null));"},{"lineNumber":770,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student1.getEmail(), false, student1, studentsEmailInTeam1,"},{"lineNumber":771,"author":{"gitId":"hhdqirui"},"content":"                fr2112, fq30, null));"},{"lineNumber":772,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student2.getEmail(), false, student2, studentsEmailInTeam1,"},{"lineNumber":773,"author":{"gitId":"hhdqirui"},"content":"                fr2112, fq30, null));"},{"lineNumber":774,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student3.getEmail(), false, student3, studentsEmailInTeam1,"},{"lineNumber":775,"author":{"gitId":"hhdqirui"},"content":"                fr2112, fq30, null));"},{"lineNumber":776,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student4.getEmail(), false, student4, studentsEmailInTeam1,"},{"lineNumber":777,"author":{"gitId":"hhdqirui"},"content":"                fr2112, fq30, null));"},{"lineNumber":778,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student4.getEmail(), false, student5, studentsEmailInTeam2,"},{"lineNumber":779,"author":{"gitId":"hhdqirui"},"content":"                fr2113, fq30, null));"},{"lineNumber":780,"author":{"gitId":"-"},"content":""},{"lineNumber":781,"author":{"gitId":"-"},"content":"        ______TS(\"test if visible to giver\u0027s team members\");"},{"lineNumber":782,"author":{"gitId":"-"},"content":""},{"lineNumber":783,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student2.getEmail(), false, student2, studentsEmailInTeam1,"},{"lineNumber":784,"author":{"gitId":"-"},"content":"                fr171, fq17, null));"},{"lineNumber":785,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student1.getEmail(), false, student1, studentsEmailInTeam1,"},{"lineNumber":786,"author":{"gitId":"-"},"content":"                fr221, fq22, null));"},{"lineNumber":787,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student7.getEmail(), false, student7, studentsEmailInTeam3,"},{"lineNumber":788,"author":{"gitId":"-"},"content":"                fr251, fq25, null));"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        // other students include giver\u0027s team members"},{"lineNumber":790,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student3.getEmail(), false, student3, studentsEmailInTeam1,"},{"lineNumber":791,"author":{"gitId":"-"},"content":"                fr261, fq26, null));"},{"lineNumber":792,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student3.getEmail(), false, student3, studentsEmailInTeam1,"},{"lineNumber":793,"author":{"gitId":"-"},"content":"                fr111, fq11, null));"},{"lineNumber":794,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student4.getEmail(), false, student4, studentsEmailInTeam1,"},{"lineNumber":795,"author":{"gitId":"-"},"content":"                fr123, fq12, null));"},{"lineNumber":796,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student2.getEmail(), false, student2, studentsEmailInTeam1,"},{"lineNumber":797,"author":{"gitId":"-"},"content":"                fr241, fq24, null));"},{"lineNumber":798,"author":{"gitId":"-"},"content":"        // invalid usage"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student8.getEmail(), false, student8, null,"},{"lineNumber":800,"author":{"gitId":"-"},"content":"                fr281, fq28, null));"},{"lineNumber":801,"author":{"gitId":"-"},"content":""},{"lineNumber":802,"author":{"gitId":"-"},"content":"        ______TS(\"test if visible to receiver\u0027s team members\");"},{"lineNumber":803,"author":{"gitId":"-"},"content":""},{"lineNumber":804,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student7.getEmail(), false, student7, studentsEmailInTeam3,"},{"lineNumber":805,"author":{"gitId":"-"},"content":"                fr171, fq17, null));"},{"lineNumber":806,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(student1.getEmail(), false, student1, studentsEmailInTeam1,"},{"lineNumber":807,"author":{"gitId":"-"},"content":"                fr231, fq23, null));"},{"lineNumber":808,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student2.getEmail(), false, student2, studentsEmailInTeam1,"},{"lineNumber":809,"author":{"gitId":"-"},"content":"                fr111, fq11, null));"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student4.getEmail(), false, student4, studentsEmailInTeam1,"},{"lineNumber":811,"author":{"gitId":"-"},"content":"                fr122, fq12, null));"},{"lineNumber":812,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(student6.getEmail(), false, student6, studentsEmailInTeam3,"},{"lineNumber":813,"author":{"gitId":"-"},"content":"                fr271, fq27, null));"},{"lineNumber":814,"author":{"gitId":"-"},"content":""},{"lineNumber":815,"author":{"gitId":"-"},"content":"        ______TS(\"test if visible to instructors\");"},{"lineNumber":816,"author":{"gitId":"-"},"content":""},{"lineNumber":817,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":818,"author":{"gitId":"-"},"content":"                fr111, fq11, instructor1));"},{"lineNumber":819,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor2.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":820,"author":{"gitId":"-"},"content":"                fr123, fq12, instructor2));"},{"lineNumber":821,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":822,"author":{"gitId":"-"},"content":"                fr131, fq13, instructor1));"},{"lineNumber":823,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor2.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":824,"author":{"gitId":"-"},"content":"                fr161, fq16, instructor2));"},{"lineNumber":825,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":826,"author":{"gitId":"-"},"content":"                fr191, fq19, instructor1));"},{"lineNumber":827,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor2.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":828,"author":{"gitId":"-"},"content":"                fr231, fq23, instructor2));"},{"lineNumber":829,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":830,"author":{"gitId":"-"},"content":"                fr271, fq27, instructor1));"},{"lineNumber":831,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":832,"author":{"gitId":"-"},"content":"                fr171, fq17, instructor1));"},{"lineNumber":833,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor2.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":834,"author":{"gitId":"-"},"content":"                fr181, fq18, instructor2));"},{"lineNumber":835,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor2.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":836,"author":{"gitId":"-"},"content":"                fr211, fq21, instructor2));"},{"lineNumber":837,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":838,"author":{"gitId":"-"},"content":"                fr221, fq22, instructor1));"},{"lineNumber":839,"author":{"gitId":"-"},"content":""},{"lineNumber":840,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor3.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":841,"author":{"gitId":"-"},"content":"                fr123, fq12, instructor3));"},{"lineNumber":842,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor3.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":843,"author":{"gitId":"-"},"content":"                fr161, fq16, instructor3));"},{"lineNumber":844,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor3.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":845,"author":{"gitId":"-"},"content":"                fr191, fq19, instructor3));"},{"lineNumber":846,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor3.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":847,"author":{"gitId":"-"},"content":"                fr251, fq25, instructor3));"},{"lineNumber":848,"author":{"gitId":"-"},"content":""},{"lineNumber":849,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor4.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":850,"author":{"gitId":"-"},"content":"                fr112, fq11, instructor4));"},{"lineNumber":851,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor4.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":852,"author":{"gitId":"-"},"content":"                fr252, fq25, instructor4));"},{"lineNumber":853,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor4.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":854,"author":{"gitId":"-"},"content":"                fr121, fq12, instructor4));"},{"lineNumber":855,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor4.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":856,"author":{"gitId":"-"},"content":"                fr122, fq12, instructor4));"},{"lineNumber":857,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor4.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":858,"author":{"gitId":"-"},"content":"                fr211, fq21, instructor4));"},{"lineNumber":859,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor4.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":860,"author":{"gitId":"-"},"content":"                fr242, fq24, instructor4));"},{"lineNumber":861,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor4.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":862,"author":{"gitId":"-"},"content":"                fr271, fq27, instructor4));"},{"lineNumber":863,"author":{"gitId":"-"},"content":""},{"lineNumber":864,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor5.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":865,"author":{"gitId":"-"},"content":"                fr162, fq16, instructor5));"},{"lineNumber":866,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor5.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":867,"author":{"gitId":"-"},"content":"                fr191, fq19, instructor5));"},{"lineNumber":868,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor5.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":869,"author":{"gitId":"-"},"content":"                fr271, fq27, instructor5));"},{"lineNumber":870,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor5.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":871,"author":{"gitId":"-"},"content":"                fr121, fq12, instructor5));"},{"lineNumber":872,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor5.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":873,"author":{"gitId":"-"},"content":"                fr122, fq12, instructor5));"},{"lineNumber":874,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor5.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":875,"author":{"gitId":"-"},"content":"                fr161, fq16, instructor5));"},{"lineNumber":876,"author":{"gitId":"-"},"content":""},{"lineNumber":877,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":878,"author":{"gitId":"-"},"content":"                fr111, fq11, instructor6));"},{"lineNumber":879,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":880,"author":{"gitId":"-"},"content":"                fr123, fq12, instructor6));"},{"lineNumber":881,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":882,"author":{"gitId":"-"},"content":"                fr252, fq25, instructor6));"},{"lineNumber":883,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":884,"author":{"gitId":"-"},"content":"                fr112, fq11, instructor6));"},{"lineNumber":885,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":886,"author":{"gitId":"-"},"content":"                fr121, fq12, instructor6));"},{"lineNumber":887,"author":{"gitId":"-"},"content":"        // \"general\" involved is checked as a section"},{"lineNumber":888,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":889,"author":{"gitId":"-"},"content":"                fr131, fq13, instructor6));"},{"lineNumber":890,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":891,"author":{"gitId":"-"},"content":"                fr161, fq16, instructor6));"},{"lineNumber":892,"author":{"gitId":"-"},"content":"        // \"instructors\" involved is checked as a section"},{"lineNumber":893,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":894,"author":{"gitId":"-"},"content":"                fr162, fq16, instructor6));"},{"lineNumber":895,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":896,"author":{"gitId":"-"},"content":"                fr191, fq19, instructor6));"},{"lineNumber":897,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":898,"author":{"gitId":"-"},"content":"                fr232, fq23, instructor6));"},{"lineNumber":899,"author":{"gitId":"hhdqirui"},"content":""},{"lineNumber":900,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":901,"author":{"gitId":"hhdqirui"},"content":"                fr2111, fq30, instructor1));"},{"lineNumber":902,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor2.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":903,"author":{"gitId":"hhdqirui"},"content":"                fr2111, fq30, instructor2));"},{"lineNumber":904,"author":{"gitId":"hhdqirui"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor3.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":905,"author":{"gitId":"hhdqirui"},"content":"                fr2111, fq30, instructor3));"},{"lineNumber":906,"author":{"gitId":"hhdqirui"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor4.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":907,"author":{"gitId":"hhdqirui"},"content":"                fr2111, fq30, instructor4));"},{"lineNumber":908,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor5.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":909,"author":{"gitId":"hhdqirui"},"content":"                fr2111, fq30, instructor5));"},{"lineNumber":910,"author":{"gitId":"hhdqirui"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":911,"author":{"gitId":"hhdqirui"},"content":"                fr2111, fq30, instructor6));"},{"lineNumber":912,"author":{"gitId":"hhdqirui"},"content":""},{"lineNumber":913,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":914,"author":{"gitId":"hhdqirui"},"content":"                fr2112, fq30, instructor1));"},{"lineNumber":915,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor2.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":916,"author":{"gitId":"hhdqirui"},"content":"                fr2112, fq30, instructor2));"},{"lineNumber":917,"author":{"gitId":"hhdqirui"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor3.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":918,"author":{"gitId":"hhdqirui"},"content":"                fr2112, fq30, instructor3));"},{"lineNumber":919,"author":{"gitId":"hhdqirui"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor4.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":920,"author":{"gitId":"hhdqirui"},"content":"                fr2112, fq30, instructor4));"},{"lineNumber":921,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor5.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":922,"author":{"gitId":"hhdqirui"},"content":"                fr2112, fq30, instructor5));"},{"lineNumber":923,"author":{"gitId":"hhdqirui"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":924,"author":{"gitId":"hhdqirui"},"content":"                fr2112, fq30, instructor6));"},{"lineNumber":925,"author":{"gitId":"hhdqirui"},"content":""},{"lineNumber":926,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor1.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":927,"author":{"gitId":"hhdqirui"},"content":"                fr2113, fq30, instructor1));"},{"lineNumber":928,"author":{"gitId":"hhdqirui"},"content":"        assertTrue(frLogic.isResponseVisibleForUser(instructor2.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":929,"author":{"gitId":"hhdqirui"},"content":"                fr2113, fq30, instructor2));"},{"lineNumber":930,"author":{"gitId":"hhdqirui"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor3.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":931,"author":{"gitId":"hhdqirui"},"content":"                fr2113, fq30, instructor3));"},{"lineNumber":932,"author":{"gitId":"hhdqirui"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor4.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":933,"author":{"gitId":"hhdqirui"},"content":"                fr2113, fq30, instructor4));"},{"lineNumber":934,"author":{"gitId":"hhdqirui"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor5.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":935,"author":{"gitId":"hhdqirui"},"content":"                fr2113, fq30, instructor5));"},{"lineNumber":936,"author":{"gitId":"hhdqirui"},"content":"        assertFalse(frLogic.isResponseVisibleForUser(instructor6.getEmail(), true, null, studentsEmailEmpty,"},{"lineNumber":937,"author":{"gitId":"hhdqirui"},"content":"                fr2113, fq30, instructor6));"},{"lineNumber":938,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":939,"author":{"gitId":"-"},"content":""},{"lineNumber":940,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":941,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackResponsesInvolvedEntityOfCourseCascade_shouldDeleteRelatedResponses() {"},{"lineNumber":942,"author":{"gitId":"-"},"content":"        StudentAttributes studentToDelete \u003d dataBundle.students.get(\"student1InCourse1\");"},{"lineNumber":943,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session1InCourse1 \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"},{"lineNumber":944,"author":{"gitId":"-"},"content":""},{"lineNumber":945,"author":{"gitId":"-"},"content":"        // the responses also have some associated comments"},{"lineNumber":946,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e remainingResponses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":947,"author":{"gitId":"-"},"content":"        remainingResponses.addAll("},{"lineNumber":948,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesFromGiverForCourse(studentToDelete.getCourse(), studentToDelete.getEmail()));"},{"lineNumber":949,"author":{"gitId":"-"},"content":"        remainingResponses.addAll("},{"lineNumber":950,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesForReceiverForCourse(studentToDelete.getCourse(), studentToDelete.getEmail()));"},{"lineNumber":951,"author":{"gitId":"-"},"content":"        assertFalse(remainingResponses.isEmpty());"},{"lineNumber":952,"author":{"gitId":"-"},"content":""},{"lineNumber":953,"author":{"gitId":"-"},"content":"        // the student has some responses"},{"lineNumber":954,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responsesForStudent1 \u003d"},{"lineNumber":955,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesFromGiverForCourse(studentToDelete.getCourse(), studentToDelete.getEmail());"},{"lineNumber":956,"author":{"gitId":"-"},"content":"        responsesForStudent1.addAll("},{"lineNumber":957,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesForReceiverForCourse(studentToDelete.getCourse(), studentToDelete.getEmail()));"},{"lineNumber":958,"author":{"gitId":"-"},"content":"        assertFalse(responsesForStudent1.isEmpty());"},{"lineNumber":959,"author":{"gitId":"-"},"content":"        assertTrue("},{"lineNumber":960,"author":{"gitId":"-"},"content":"                frLogic.getGiverSetThatAnswerFeedbackSession(session1InCourse1.getCourseId(),"},{"lineNumber":961,"author":{"gitId":"-"},"content":"                        session1InCourse1.getFeedbackSessionName()).contains(studentToDelete.getEmail()));"},{"lineNumber":962,"author":{"gitId":"-"},"content":""},{"lineNumber":963,"author":{"gitId":"-"},"content":"        frLogic.deleteFeedbackResponsesInvolvedEntityOfCourseCascade("},{"lineNumber":964,"author":{"gitId":"-"},"content":"                studentToDelete.getCourse(), studentToDelete.getEmail());"},{"lineNumber":965,"author":{"gitId":"-"},"content":""},{"lineNumber":966,"author":{"gitId":"-"},"content":"        // responses should be deleted"},{"lineNumber":967,"author":{"gitId":"-"},"content":"        remainingResponses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":968,"author":{"gitId":"-"},"content":"        remainingResponses.addAll("},{"lineNumber":969,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesFromGiverForCourse(studentToDelete.getCourse(), studentToDelete.getEmail()));"},{"lineNumber":970,"author":{"gitId":"-"},"content":"        remainingResponses.addAll("},{"lineNumber":971,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesForReceiverForCourse(studentToDelete.getCourse(), studentToDelete.getEmail()));"},{"lineNumber":972,"author":{"gitId":"-"},"content":"        assertEquals(0, remainingResponses.size());"},{"lineNumber":973,"author":{"gitId":"-"},"content":""},{"lineNumber":974,"author":{"gitId":"-"},"content":"        // comments should also be deleted"},{"lineNumber":975,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseCommentAttributes\u003e remainingComments \u003d new ArrayList\u003c\u003e();"},{"lineNumber":976,"author":{"gitId":"-"},"content":"        for (FeedbackResponseAttributes response : responsesForStudent1) {"},{"lineNumber":977,"author":{"gitId":"-"},"content":"            remainingComments.addAll(frcLogic.getFeedbackResponseCommentForResponse(response.getId()));"},{"lineNumber":978,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":979,"author":{"gitId":"-"},"content":"        assertEquals(0, remainingComments.size());"},{"lineNumber":980,"author":{"gitId":"-"},"content":""},{"lineNumber":981,"author":{"gitId":"-"},"content":"        // the student no longer has responses for the session"},{"lineNumber":982,"author":{"gitId":"-"},"content":"        assertFalse("},{"lineNumber":983,"author":{"gitId":"-"},"content":"                frLogic.getGiverSetThatAnswerFeedbackSession(session1InCourse1.getCourseId(),"},{"lineNumber":984,"author":{"gitId":"-"},"content":"                        session1InCourse1.getFeedbackSessionName()).contains(studentToDelete.getEmail()));"},{"lineNumber":985,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":986,"author":{"gitId":"-"},"content":""},{"lineNumber":987,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":988,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackResponseCascade() {"},{"lineNumber":989,"author":{"gitId":"-"},"content":"        ______TS(\"non-existent response\");"},{"lineNumber":990,"author":{"gitId":"-"},"content":""},{"lineNumber":991,"author":{"gitId":"-"},"content":"        // should pass silently"},{"lineNumber":992,"author":{"gitId":"-"},"content":"        frLogic.deleteFeedbackResponseCascade(\"not-exist\");"},{"lineNumber":993,"author":{"gitId":"-"},"content":""},{"lineNumber":994,"author":{"gitId":"-"},"content":"        ______TS(\"standard delete\");"},{"lineNumber":995,"author":{"gitId":"-"},"content":""},{"lineNumber":996,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fra \u003d getResponseFromDatabase(\"response1ForQ1S1C1\");"},{"lineNumber":997,"author":{"gitId":"-"},"content":"        assertNotNull(fra);"},{"lineNumber":998,"author":{"gitId":"-"},"content":"        // the response has comments"},{"lineNumber":999,"author":{"gitId":"-"},"content":"        assertFalse(frcLogic.getFeedbackResponseCommentForResponse(fra.getId()).isEmpty());"},{"lineNumber":1000,"author":{"gitId":"-"},"content":""},{"lineNumber":1001,"author":{"gitId":"-"},"content":"        frLogic.deleteFeedbackResponseCascade(fra.getId());"},{"lineNumber":1002,"author":{"gitId":"-"},"content":""},{"lineNumber":1003,"author":{"gitId":"-"},"content":"        assertNull(frLogic.getFeedbackResponse(fra.getId()));"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"        // associated comments are deleted"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"        assertTrue(frcLogic.getFeedbackResponseCommentForResponse(fra.getId()).isEmpty());"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1007,"author":{"gitId":"-"},"content":""},{"lineNumber":1008,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackResponses_byCourseId() {"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"        ______TS(\"standard delete\");"},{"lineNumber":1011,"author":{"gitId":"-"},"content":""},{"lineNumber":1012,"author":{"gitId":"-"},"content":"        // test that responses are deleted"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"        String courseId \u003d \"idOfTypicalCourse1\";"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.getFeedbackResponsesForSession(\"First feedback session\", courseId).isEmpty());"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.getFeedbackResponsesForSession(\"Grace Period Session\", courseId).isEmpty());"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.getFeedbackResponsesForSession(\"Closed Session\", courseId).isEmpty());"},{"lineNumber":1017,"author":{"gitId":"-"},"content":""},{"lineNumber":1018,"author":{"gitId":"-"},"content":"        frLogic.deleteFeedbackResponses("},{"lineNumber":1019,"author":{"gitId":"-"},"content":"                AttributesDeletionQuery.builder()"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"                        .withCourseId(courseId)"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":1022,"author":{"gitId":"-"},"content":""},{"lineNumber":1023,"author":{"gitId":"-"},"content":"        assertEquals(0, frLogic.getFeedbackResponsesForSession(\"First feedback session\", courseId).size());"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"        assertEquals(0, frLogic.getFeedbackResponsesForSession(\"Grace Period Session\", courseId).size());"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"        assertEquals(0, frLogic.getFeedbackResponsesForSession(\"Closed Session\", courseId).size());"},{"lineNumber":1026,"author":{"gitId":"-"},"content":""},{"lineNumber":1027,"author":{"gitId":"-"},"content":"        // test that responses from other courses are unaffected"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"        String otherCourse \u003d \"idOfTypicalCourse2\";"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.getFeedbackResponsesForSession(\"Instructor feedback session\", otherCourse).isEmpty());"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1031,"author":{"gitId":"-"},"content":""},{"lineNumber":1032,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackResponsesForQuestionCascade_studentsQuestion_shouldUpdateRespondents() {"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fra \u003d getResponseFromDatabase(\"response1ForQ1S1C1\");"},{"lineNumber":1035,"author":{"gitId":"-"},"content":""},{"lineNumber":1036,"author":{"gitId":"-"},"content":"        // this is the only response the student has given for the session"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"        assertEquals(1, frLogic.getFeedbackResponsesFromGiverForCourse(fra.getCourseId(), fra.getGiver()).stream()"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"                .filter(response -\u003e response.getFeedbackSessionName().equals(fra.getFeedbackSessionName()))"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"                .count());"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"        // the student has answers for the session"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"        assertTrue("},{"lineNumber":1042,"author":{"gitId":"-"},"content":"                frLogic.getGiverSetThatAnswerFeedbackSession(fra.getCourseId(),"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"                        fra.getFeedbackSessionName()).contains(fra.getGiver()));"},{"lineNumber":1044,"author":{"gitId":"-"},"content":""},{"lineNumber":1045,"author":{"gitId":"-"},"content":"        frLogic.deleteFeedbackResponsesForQuestionCascade(fra.getFeedbackQuestionId());"},{"lineNumber":1046,"author":{"gitId":"-"},"content":""},{"lineNumber":1047,"author":{"gitId":"-"},"content":"        // there is no student X as respondents"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"        assertFalse("},{"lineNumber":1049,"author":{"gitId":"-"},"content":"                frLogic.getGiverSetThatAnswerFeedbackSession(fra.getCourseId(),"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"                        fra.getFeedbackSessionName()).contains(fra.getGiver()));"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1052,"author":{"gitId":"-"},"content":""},{"lineNumber":1053,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackResponsesForQuestionCascade_instructorsQuestion_shouldUpdateRespondents() {"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fra \u003d getResponseFromDatabase(\"response1ForQ3S1C1\");"},{"lineNumber":1056,"author":{"gitId":"-"},"content":""},{"lineNumber":1057,"author":{"gitId":"-"},"content":"        // this is the only response the instructor has given for the session"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"        assertEquals(1, frLogic.getFeedbackResponsesFromGiverForCourse(fra.getCourseId(), fra.getGiver()).stream()"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"                .filter(response -\u003e response.getFeedbackSessionName().equals(fra.getFeedbackSessionName()))"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"                .count());"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"        // the instructor has answers for the session"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"        assertTrue("},{"lineNumber":1063,"author":{"gitId":"-"},"content":"                frLogic.getGiverSetThatAnswerFeedbackSession(fra.getCourseId(),"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"                        fra.getFeedbackSessionName()).contains(fra.getGiver()));"},{"lineNumber":1065,"author":{"gitId":"-"},"content":""},{"lineNumber":1066,"author":{"gitId":"-"},"content":"        frLogic.deleteFeedbackResponsesForQuestionCascade(fra.getFeedbackQuestionId());"},{"lineNumber":1067,"author":{"gitId":"-"},"content":""},{"lineNumber":1068,"author":{"gitId":"-"},"content":"        // there is not instructor X in instructor respondents"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"        assertFalse("},{"lineNumber":1070,"author":{"gitId":"-"},"content":"                frLogic.getGiverSetThatAnswerFeedbackSession(fra.getCourseId(),"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"                        fra.getFeedbackSessionName()).contains(fra.getGiver()));"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1073,"author":{"gitId":"-"},"content":""},{"lineNumber":1074,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackResponsesInvolvedEntityOfCourseCascade_giverIsStudent_shouldUpdateRespondents() {"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fra \u003d getResponseFromDatabase(\"response3ForQ2S1C1\");"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"        StudentAttributes student2InCourse1 \u003d dataBundle.students.get(\"student2InCourse1\");"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"        // giver is student"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"        assertEquals(FeedbackParticipantType.STUDENTS,"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestion(fra.getFeedbackQuestionId()).getGiverType());"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"        // student is the recipient"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"        assertEquals(fra.getRecipient(), student2InCourse1.getEmail());"},{"lineNumber":1083,"author":{"gitId":"-"},"content":""},{"lineNumber":1084,"author":{"gitId":"-"},"content":"        // this is the only response the giver has given for the session"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"        assertEquals(1, frLogic.getFeedbackResponsesFromGiverForCourse(fra.getCourseId(), fra.getGiver()).stream()"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"                .filter(response -\u003e response.getFeedbackSessionName().equals(fra.getFeedbackSessionName()))"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"                .count());"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"        // the student has answers for the session"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"        assertTrue("},{"lineNumber":1090,"author":{"gitId":"-"},"content":"                frLogic.getGiverSetThatAnswerFeedbackSession(fra.getCourseId(),"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"                        fra.getFeedbackSessionName()).contains(fra.getGiver()));"},{"lineNumber":1092,"author":{"gitId":"-"},"content":""},{"lineNumber":1093,"author":{"gitId":"-"},"content":"        // after the giver is removed from the course"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"        frLogic.deleteFeedbackResponsesInvolvedEntityOfCourseCascade("},{"lineNumber":1095,"author":{"gitId":"-"},"content":"                student2InCourse1.getCourse(), student2InCourse1.getEmail());"},{"lineNumber":1096,"author":{"gitId":"-"},"content":""},{"lineNumber":1097,"author":{"gitId":"-"},"content":"        // there is no student X as respondents"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"        assertFalse("},{"lineNumber":1099,"author":{"gitId":"-"},"content":"                frLogic.getGiverSetThatAnswerFeedbackSession(fra.getCourseId(),"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"                        fra.getFeedbackSessionName()).contains(fra.getGiver()));"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1102,"author":{"gitId":"-"},"content":""},{"lineNumber":1103,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackResponsesInvolvedEntityOfCourseCascade_giverIsInstructor_shouldUpdateRespondents() {"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fra \u003d getResponseFromDatabase(\"response1ForQ1S2C2\");"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"        StudentAttributes student1InCourse2 \u003d dataBundle.students.get(\"student1InCourse2\");"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"        // giver is instructor"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"        assertEquals(FeedbackParticipantType.SELF,"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestion(fra.getFeedbackQuestionId()).getGiverType());"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"        // student is the recipient"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"        assertEquals(fra.getRecipient(), student1InCourse2.getEmail());"},{"lineNumber":1112,"author":{"gitId":"-"},"content":""},{"lineNumber":1113,"author":{"gitId":"-"},"content":"        // this is the only response the instructor has given for the session"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"        assertEquals(1, frLogic.getFeedbackResponsesFromGiverForCourse(fra.getCourseId(), fra.getGiver()).stream()"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"                .filter(response -\u003e response.getFeedbackSessionName().equals(fra.getFeedbackSessionName()))"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"                .count());"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"        // the instructor has answers for the session"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"        assertTrue("},{"lineNumber":1119,"author":{"gitId":"-"},"content":"                frLogic.getGiverSetThatAnswerFeedbackSession(fra.getCourseId(),"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"                        fra.getFeedbackSessionName()).contains(fra.getGiver()));"},{"lineNumber":1121,"author":{"gitId":"-"},"content":""},{"lineNumber":1122,"author":{"gitId":"-"},"content":"        // after the giver is removed from the course"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"        frLogic.deleteFeedbackResponsesInvolvedEntityOfCourseCascade("},{"lineNumber":1124,"author":{"gitId":"-"},"content":"                student1InCourse2.getCourse(), student1InCourse2.getEmail());"},{"lineNumber":1125,"author":{"gitId":"-"},"content":""},{"lineNumber":1126,"author":{"gitId":"-"},"content":"        // there is no instructor X as respondents"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"        assertFalse("},{"lineNumber":1128,"author":{"gitId":"-"},"content":"                frLogic.getGiverSetThatAnswerFeedbackSession(fra.getCourseId(),"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"                        fra.getFeedbackSessionName()).contains(fra.getGiver()));"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1131,"author":{"gitId":"-"},"content":""},{"lineNumber":1132,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackResponsesInvolvedEntityOfCourseCascade_shouldDeleteRelevantResponsesAsRecipient()"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"            throws Exception {"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1OfCourse1 \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":1136,"author":{"gitId":"-"},"content":""},{"lineNumber":1137,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fra1ReceivedByTeam \u003d getResponseFromDatabase(\"response1ForQ1S2C1\");"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"        frcLogic.createFeedbackResponseComment("},{"lineNumber":1139,"author":{"gitId":"-"},"content":"                FeedbackResponseCommentAttributes"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"                        .builder()"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"                        .withCourseId(fra1ReceivedByTeam.getCourseId())"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"                        .withFeedbackSessionName(fra1ReceivedByTeam.getFeedbackSessionName())"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"                        .withCommentGiver(instructor1OfCourse1.getEmail())"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"                        .withCommentText(\"Comment 1\")"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"                        .withFeedbackQuestionId(fra1ReceivedByTeam.getFeedbackQuestionId())"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"                        .withFeedbackResponseId(fra1ReceivedByTeam.getId())"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"                        .withGiverSection(fra1ReceivedByTeam.getGiverSection())"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"                        .withReceiverSection(fra1ReceivedByTeam.getRecipientSection())"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"                        .withCommentFromFeedbackParticipant(false)"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"                        .withCommentGiverType(FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"                        .withVisibilityFollowingFeedbackQuestion(false)"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fra2ReceivedByTeam \u003d getResponseFromDatabase(\"response1GracePeriodFeedback\");"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"        frcLogic.createFeedbackResponseComment("},{"lineNumber":1155,"author":{"gitId":"-"},"content":"                FeedbackResponseCommentAttributes"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"                        .builder()"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"                        .withCourseId(fra2ReceivedByTeam.getCourseId())"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"                        .withFeedbackSessionName(fra2ReceivedByTeam.getFeedbackSessionName())"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"                        .withCommentGiver(instructor1OfCourse1.getEmail())"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"                        .withCommentText(\"Comment 2\")"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"                        .withFeedbackQuestionId(fra2ReceivedByTeam.getFeedbackQuestionId())"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"                        .withFeedbackResponseId(fra2ReceivedByTeam.getId())"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"                        .withGiverSection(fra2ReceivedByTeam.getGiverSection())"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"                        .withReceiverSection(fra2ReceivedByTeam.getRecipientSection())"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"                        .withCommentFromFeedbackParticipant(false)"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"                        .withCommentGiverType(FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"                        .withVisibilityFollowingFeedbackQuestion(false)"},{"lineNumber":1168,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":1169,"author":{"gitId":"-"},"content":""},{"lineNumber":1170,"author":{"gitId":"-"},"content":"        String teamName \u003d \"Team 1.2\";"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"        assertEquals(teamName, fra1ReceivedByTeam.getRecipient());"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"        assertEquals(teamName, fra2ReceivedByTeam.getRecipient());"},{"lineNumber":1173,"author":{"gitId":"-"},"content":""},{"lineNumber":1174,"author":{"gitId":"-"},"content":"        // both responses got some comments"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"        assertFalse(frcLogic.getFeedbackResponseCommentForResponse(fra1ReceivedByTeam.getId()).isEmpty());"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"        assertFalse(frcLogic.getFeedbackResponseCommentForResponse(fra2ReceivedByTeam.getId()).isEmpty());"},{"lineNumber":1177,"author":{"gitId":"-"},"content":""},{"lineNumber":1178,"author":{"gitId":"-"},"content":"        frLogic.deleteFeedbackResponsesInvolvedEntityOfCourseCascade(fra1ReceivedByTeam.getCourseId(), teamName);"},{"lineNumber":1179,"author":{"gitId":"-"},"content":""},{"lineNumber":1180,"author":{"gitId":"-"},"content":"        // responses received by the team should be deleted"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"        assertNull(frLogic.getFeedbackResponse(fra1ReceivedByTeam.getId()));"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"        assertNull(frLogic.getFeedbackResponse(fra2ReceivedByTeam.getId()));"},{"lineNumber":1183,"author":{"gitId":"-"},"content":""},{"lineNumber":1184,"author":{"gitId":"-"},"content":"        // their associated comments should be deleted"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"        assertTrue(frcLogic.getFeedbackResponseCommentForResponse(fra1ReceivedByTeam.getId()).isEmpty());"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"        assertTrue(frcLogic.getFeedbackResponseCommentForResponse(fra2ReceivedByTeam.getId()).isEmpty());"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1188,"author":{"gitId":"-"},"content":""},{"lineNumber":1189,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackResponsesInvolvedEntityOfCourseCascade_shouldDeleteRelevantResponsesAsGiver()"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"            throws Exception {"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1OfCourse1 \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"        StudentAttributes student4InCourse1 \u003d dataBundle.students.get(\"student4InCourse1\");"},{"lineNumber":1194,"author":{"gitId":"-"},"content":""},{"lineNumber":1195,"author":{"gitId":"-"},"content":"        // the following two responses are given by student4InCourse1 as a representative of his team"},{"lineNumber":1196,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fra1GivenByTeam \u003d getResponseFromDatabase(\"response1ForQ1S2C1\");"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"        // update the response\u0027s giver to the team name"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"        fra1GivenByTeam \u003d frLogic.updateFeedbackResponseCascade("},{"lineNumber":1199,"author":{"gitId":"-"},"content":"                FeedbackResponseAttributes.updateOptionsBuilder(fra1GivenByTeam.getId())"},{"lineNumber":1200,"author":{"gitId":"-"},"content":"                        .withGiver(student4InCourse1.getTeam())"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"        frcLogic.createFeedbackResponseComment("},{"lineNumber":1203,"author":{"gitId":"-"},"content":"                FeedbackResponseCommentAttributes"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"                        .builder()"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"                        .withCourseId(fra1GivenByTeam.getCourseId())"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"                        .withFeedbackSessionName(fra1GivenByTeam.getFeedbackSessionName())"},{"lineNumber":1207,"author":{"gitId":"-"},"content":"                        .withCommentGiver(instructor1OfCourse1.getEmail())"},{"lineNumber":1208,"author":{"gitId":"-"},"content":"                        .withCommentText(\"Comment 1\")"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"                        .withFeedbackQuestionId(fra1GivenByTeam.getFeedbackQuestionId())"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"                        .withFeedbackResponseId(fra1GivenByTeam.getId())"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"                        .withGiverSection(fra1GivenByTeam.getGiverSection())"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"                        .withReceiverSection(fra1GivenByTeam.getRecipientSection())"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"                        .withCommentFromFeedbackParticipant(false)"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"                        .withCommentGiverType(FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"                        .withVisibilityFollowingFeedbackQuestion(false)"},{"lineNumber":1216,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fra2GivenByTeam \u003d getResponseFromDatabase(\"response1GracePeriodFeedback\");"},{"lineNumber":1218,"author":{"gitId":"-"},"content":"        // update the response\u0027s giver to the team name"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"        fra2GivenByTeam \u003d frLogic.updateFeedbackResponseCascade("},{"lineNumber":1220,"author":{"gitId":"-"},"content":"                FeedbackResponseAttributes.updateOptionsBuilder(fra2GivenByTeam.getId())"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"                        .withGiver(student4InCourse1.getTeam())"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"        frcLogic.createFeedbackResponseComment("},{"lineNumber":1224,"author":{"gitId":"-"},"content":"                FeedbackResponseCommentAttributes"},{"lineNumber":1225,"author":{"gitId":"-"},"content":"                        .builder()"},{"lineNumber":1226,"author":{"gitId":"-"},"content":"                        .withCourseId(fra2GivenByTeam.getCourseId())"},{"lineNumber":1227,"author":{"gitId":"-"},"content":"                        .withFeedbackSessionName(fra2GivenByTeam.getFeedbackSessionName())"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"                        .withCommentGiver(instructor1OfCourse1.getEmail())"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"                        .withCommentText(\"Comment 2\")"},{"lineNumber":1230,"author":{"gitId":"-"},"content":"                        .withFeedbackQuestionId(fra2GivenByTeam.getFeedbackQuestionId())"},{"lineNumber":1231,"author":{"gitId":"-"},"content":"                        .withFeedbackResponseId(fra2GivenByTeam.getId())"},{"lineNumber":1232,"author":{"gitId":"-"},"content":"                        .withGiverSection(fra2GivenByTeam.getGiverSection())"},{"lineNumber":1233,"author":{"gitId":"-"},"content":"                        .withReceiverSection(fra2GivenByTeam.getRecipientSection())"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"                        .withCommentFromFeedbackParticipant(false)"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"                        .withCommentGiverType(FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":1236,"author":{"gitId":"-"},"content":"                        .withVisibilityFollowingFeedbackQuestion(false)"},{"lineNumber":1237,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":1238,"author":{"gitId":"-"},"content":""},{"lineNumber":1239,"author":{"gitId":"-"},"content":"        String teamName \u003d student4InCourse1.getTeam();"},{"lineNumber":1240,"author":{"gitId":"-"},"content":"        assertEquals(teamName, fra1GivenByTeam.getGiver());"},{"lineNumber":1241,"author":{"gitId":"-"},"content":"        assertEquals(teamName, fra2GivenByTeam.getGiver());"},{"lineNumber":1242,"author":{"gitId":"-"},"content":""},{"lineNumber":1243,"author":{"gitId":"-"},"content":"        // both responses got some comments"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"        assertFalse(frcLogic.getFeedbackResponseCommentForResponse(fra1GivenByTeam.getId()).isEmpty());"},{"lineNumber":1245,"author":{"gitId":"-"},"content":"        assertFalse(frcLogic.getFeedbackResponseCommentForResponse(fra2GivenByTeam.getId()).isEmpty());"},{"lineNumber":1246,"author":{"gitId":"-"},"content":""},{"lineNumber":1247,"author":{"gitId":"-"},"content":"        frLogic.deleteFeedbackResponsesInvolvedEntityOfCourseCascade(fra1GivenByTeam.getCourseId(), teamName);"},{"lineNumber":1248,"author":{"gitId":"-"},"content":""},{"lineNumber":1249,"author":{"gitId":"-"},"content":"        // responses received by the team should be deleted"},{"lineNumber":1250,"author":{"gitId":"-"},"content":"        assertNull(frLogic.getFeedbackResponse(fra1GivenByTeam.getId()));"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"        assertNull(frLogic.getFeedbackResponse(fra2GivenByTeam.getId()));"},{"lineNumber":1252,"author":{"gitId":"-"},"content":""},{"lineNumber":1253,"author":{"gitId":"-"},"content":"        // their associated comments should be deleted"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"        assertTrue(frcLogic.getFeedbackResponseCommentForResponse(fra1GivenByTeam.getId()).isEmpty());"},{"lineNumber":1255,"author":{"gitId":"-"},"content":"        assertTrue(frcLogic.getFeedbackResponseCommentForResponse(fra2GivenByTeam.getId()).isEmpty());"},{"lineNumber":1256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1257,"author":{"gitId":"-"},"content":""},{"lineNumber":1258,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1259,"author":{"gitId":"-"},"content":"    public void testGetSessionResultsForUser_studentSpecificQuestion_shouldHaveCorrectResponsesFiltered() {"},{"lineNumber":1260,"author":{"gitId":"-"},"content":"        // extra test data used on top of typical data bundle"},{"lineNumber":1261,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(loadDataBundle(\"/SpecialCharacterTest.json\"));"},{"lineNumber":1262,"author":{"gitId":"-"},"content":""},{"lineNumber":1263,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes question \u003d fqLogic.getFeedbackQuestion("},{"lineNumber":1264,"author":{"gitId":"-"},"content":"                \"First Session\", \"FQLogicPCT.CS2104\", 1);"},{"lineNumber":1265,"author":{"gitId":"-"},"content":""},{"lineNumber":1266,"author":{"gitId":"-"},"content":"        // Alice will see 3 responses"},{"lineNumber":1267,"author":{"gitId":"-"},"content":"        SessionResultsBundle bundle \u003d frLogic.getSessionResultsForUser("},{"lineNumber":1268,"author":{"gitId":"-"},"content":"                \"First Session\", \"FQLogicPCT.CS2104\", \"FQLogicPCT.alice.b@gmail.tmt\","},{"lineNumber":1269,"author":{"gitId":"-"},"content":"                false, question.getId());"},{"lineNumber":1270,"author":{"gitId":"-"},"content":"        assertEquals(1, bundle.getQuestionResponseMap().size());"},{"lineNumber":1271,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responseForQuestion \u003d"},{"lineNumber":1272,"author":{"gitId":"-"},"content":"                bundle.getQuestionResponseMap().entrySet().iterator().next().getValue();"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"        assertEquals(3, responseForQuestion.size());"},{"lineNumber":1274,"author":{"gitId":"-"},"content":""},{"lineNumber":1275,"author":{"gitId":"-"},"content":"        // Benny will see 3 responses"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"        bundle \u003d frLogic.getSessionResultsForUser("},{"lineNumber":1277,"author":{"gitId":"-"},"content":"                \"First Session\", \"FQLogicPCT.CS2104\", \"FQLogicPCT.benny.c@gmail.tmt\","},{"lineNumber":1278,"author":{"gitId":"-"},"content":"                false, question.getId());"},{"lineNumber":1279,"author":{"gitId":"-"},"content":"        assertEquals(1, bundle.getQuestionResponseMap().size());"},{"lineNumber":1280,"author":{"gitId":"-"},"content":"        responseForQuestion \u003d bundle.getQuestionResponseMap().entrySet().iterator().next().getValue();"},{"lineNumber":1281,"author":{"gitId":"-"},"content":"        assertEquals(3, responseForQuestion.size());"},{"lineNumber":1282,"author":{"gitId":"-"},"content":""},{"lineNumber":1283,"author":{"gitId":"-"},"content":"        // Charlie will see 2 responses"},{"lineNumber":1284,"author":{"gitId":"-"},"content":"        bundle \u003d frLogic.getSessionResultsForUser("},{"lineNumber":1285,"author":{"gitId":"-"},"content":"                \"First Session\", \"FQLogicPCT.CS2104\", \"FQLogicPCT.charlie.d@gmail.tmt\","},{"lineNumber":1286,"author":{"gitId":"-"},"content":"                false, question.getId());"},{"lineNumber":1287,"author":{"gitId":"-"},"content":"        assertEquals(1, bundle.getQuestionResponseMap().size());"},{"lineNumber":1288,"author":{"gitId":"-"},"content":"        responseForQuestion \u003d bundle.getQuestionResponseMap().entrySet().iterator().next().getValue();"},{"lineNumber":1289,"author":{"gitId":"-"},"content":"        assertEquals(2, responseForQuestion.size());"},{"lineNumber":1290,"author":{"gitId":"-"},"content":""},{"lineNumber":1291,"author":{"gitId":"-"},"content":"        // Danny will see 2 responses"},{"lineNumber":1292,"author":{"gitId":"-"},"content":"        bundle \u003d frLogic.getSessionResultsForUser("},{"lineNumber":1293,"author":{"gitId":"-"},"content":"                \"First Session\", \"FQLogicPCT.CS2104\", \"FQLogicPCT.danny.e@gmail.tmt\","},{"lineNumber":1294,"author":{"gitId":"-"},"content":"                false, question.getId());"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"        assertEquals(1, bundle.getQuestionResponseMap().size());"},{"lineNumber":1296,"author":{"gitId":"-"},"content":"        responseForQuestion \u003d bundle.getQuestionResponseMap().entrySet().iterator().next().getValue();"},{"lineNumber":1297,"author":{"gitId":"-"},"content":"        assertEquals(2, responseForQuestion.size());"},{"lineNumber":1298,"author":{"gitId":"-"},"content":""},{"lineNumber":1299,"author":{"gitId":"-"},"content":"        // Emily will see 1 response"},{"lineNumber":1300,"author":{"gitId":"-"},"content":"        bundle \u003d frLogic.getSessionResultsForUser("},{"lineNumber":1301,"author":{"gitId":"-"},"content":"                \"First Session\", \"FQLogicPCT.CS2104\", \"FQLogicPCT.emily.f@gmail.tmt\","},{"lineNumber":1302,"author":{"gitId":"-"},"content":"                false, question.getId());"},{"lineNumber":1303,"author":{"gitId":"-"},"content":"        assertEquals(1, bundle.getQuestionResponseMap().size());"},{"lineNumber":1304,"author":{"gitId":"-"},"content":"        responseForQuestion \u003d bundle.getQuestionResponseMap().entrySet().iterator().next().getValue();"},{"lineNumber":1305,"author":{"gitId":"-"},"content":"        assertEquals(1, responseForQuestion.size());"},{"lineNumber":1306,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1307,"author":{"gitId":"-"},"content":""},{"lineNumber":1308,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"    public void testGetSessionResultsForUser_studentAllQuestions_shouldGenerateCorrectBundle() {"},{"lineNumber":1310,"author":{"gitId":"-"},"content":"        DataBundle responseBundle \u003d loadDataBundle(\"/FeedbackSessionResultsTest.json\");"},{"lineNumber":1311,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(responseBundle);"},{"lineNumber":1312,"author":{"gitId":"-"},"content":""},{"lineNumber":1313,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session \u003d responseBundle.feedbackSessions.get(\"standard.session\");"},{"lineNumber":1314,"author":{"gitId":"-"},"content":""},{"lineNumber":1315,"author":{"gitId":"-"},"content":"        // Test result bundle for student1"},{"lineNumber":1316,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d responseBundle.students.get(\"student1InCourse1\");"},{"lineNumber":1317,"author":{"gitId":"-"},"content":"        SessionResultsBundle bundle \u003d frLogic.getSessionResultsForUser("},{"lineNumber":1318,"author":{"gitId":"-"},"content":"                session.getFeedbackSessionName(), session.getCourseId(), student.getEmail(),"},{"lineNumber":1319,"author":{"gitId":"-"},"content":"                false, null);"},{"lineNumber":1320,"author":{"gitId":"-"},"content":""},{"lineNumber":1321,"author":{"gitId":"-"},"content":"        // Student can see responses: q1r1, q2r1,3, q3r1, qr4r2-3, q5r1, q7r1-2, q8r1-2"},{"lineNumber":1322,"author":{"gitId":"-"},"content":"        // We don\u0027t check the actual IDs as this is also implicitly tested"},{"lineNumber":1323,"author":{"gitId":"-"},"content":"        // later when checking the visibility table."},{"lineNumber":1324,"author":{"gitId":"-"},"content":"        int totalResponse \u003d 0;"},{"lineNumber":1325,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e entry"},{"lineNumber":1326,"author":{"gitId":"-"},"content":"                : bundle.getQuestionResponseMap().entrySet()) {"},{"lineNumber":1327,"author":{"gitId":"-"},"content":"            totalResponse +\u003d entry.getValue().size();"},{"lineNumber":1328,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1329,"author":{"gitId":"-"},"content":"        int totalMissingResponse \u003d 0;"},{"lineNumber":1330,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e entry"},{"lineNumber":1331,"author":{"gitId":"-"},"content":"                : bundle.getQuestionMissingResponseMap().entrySet()) {"},{"lineNumber":1332,"author":{"gitId":"-"},"content":"            totalMissingResponse +\u003d entry.getValue().size();"},{"lineNumber":1333,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1334,"author":{"gitId":"-"},"content":"        assertEquals(11, totalResponse);"},{"lineNumber":1335,"author":{"gitId":"-"},"content":"        // student should not see missing responses"},{"lineNumber":1336,"author":{"gitId":"-"},"content":"        assertEquals(0, totalMissingResponse);"},{"lineNumber":1337,"author":{"gitId":"-"},"content":"        // student cannot see q6 because there is no viewable response"},{"lineNumber":1338,"author":{"gitId":"-"},"content":"        assertEquals(7, bundle.getQuestionsMap().size());"},{"lineNumber":1339,"author":{"gitId":"-"},"content":"        assertEquals(7, bundle.getQuestionResponseMap().size());"},{"lineNumber":1340,"author":{"gitId":"-"},"content":"        assertEquals(7, bundle.getQuestionMissingResponseMap().size());"},{"lineNumber":1341,"author":{"gitId":"-"},"content":""},{"lineNumber":1342,"author":{"gitId":"-"},"content":"        // Test the generated response visibilityTable for userNames."},{"lineNumber":1343,"author":{"gitId":"-"},"content":"        Map\u003cString, Boolean\u003e responseGiverVisibilityTable \u003d bundle.getResponseGiverVisibilityTable();"},{"lineNumber":1344,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn1.resp1\", responseBundle)));"},{"lineNumber":1345,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn2.resp1\", responseBundle)));"},{"lineNumber":1346,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn2.resp3\", responseBundle)));"},{"lineNumber":1347,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn3.resp1\", responseBundle)));"},{"lineNumber":1348,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn4.resp2\", responseBundle)));"},{"lineNumber":1349,"author":{"gitId":"-"},"content":"        assertFalse(responseGiverVisibilityTable.get(getResponseId(\"qn4.resp3\", responseBundle)));"},{"lineNumber":1350,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn5.resp1\", responseBundle)));"},{"lineNumber":1351,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn7.resp1\", responseBundle)));"},{"lineNumber":1352,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn7.resp2\", responseBundle)));"},{"lineNumber":1353,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn8.resp1\", responseBundle)));"},{"lineNumber":1354,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn8.resp2\", responseBundle)));"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"        assertEquals(totalResponse, responseGiverVisibilityTable.size());"},{"lineNumber":1356,"author":{"gitId":"-"},"content":""},{"lineNumber":1357,"author":{"gitId":"-"},"content":"        Map\u003cString, Boolean\u003e responseRecipientVisibilityTable \u003d bundle.getResponseRecipientVisibilityTable();"},{"lineNumber":1358,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn1.resp1\", responseBundle)));"},{"lineNumber":1359,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn2.resp1\", responseBundle)));"},{"lineNumber":1360,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn2.resp3\", responseBundle)));"},{"lineNumber":1361,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn3.resp1\", responseBundle)));"},{"lineNumber":1362,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn4.resp2\", responseBundle)));"},{"lineNumber":1363,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn4.resp3\", responseBundle)));"},{"lineNumber":1364,"author":{"gitId":"-"},"content":"        assertFalse(responseRecipientVisibilityTable.get(getResponseId(\"qn5.resp1\", responseBundle)));"},{"lineNumber":1365,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn7.resp1\", responseBundle)));"},{"lineNumber":1366,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn7.resp2\", responseBundle)));"},{"lineNumber":1367,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn8.resp1\", responseBundle)));"},{"lineNumber":1368,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn8.resp2\", responseBundle)));"},{"lineNumber":1369,"author":{"gitId":"-"},"content":"        assertEquals(totalResponse, responseRecipientVisibilityTable.size());"},{"lineNumber":1370,"author":{"gitId":"-"},"content":""},{"lineNumber":1371,"author":{"gitId":"-"},"content":"        // no entry in comment visibility table"},{"lineNumber":1372,"author":{"gitId":"-"},"content":"        Map\u003cLong, Boolean\u003e commentGiverVisibilityTable \u003d bundle.getCommentGiverVisibilityTable();"},{"lineNumber":1373,"author":{"gitId":"-"},"content":"        assertEquals(0, commentGiverVisibilityTable.size());"},{"lineNumber":1374,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1375,"author":{"gitId":"-"},"content":""},{"lineNumber":1376,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1377,"author":{"gitId":"-"},"content":"    public void testGetSessionResultsForUser_instructor_shouldGenerateCorrectBundle() {"},{"lineNumber":1378,"author":{"gitId":"-"},"content":"        DataBundle responseBundle \u003d loadDataBundle(\"/FeedbackSessionResultsTest.json\");"},{"lineNumber":1379,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(responseBundle);"},{"lineNumber":1380,"author":{"gitId":"-"},"content":""},{"lineNumber":1381,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session \u003d responseBundle.feedbackSessions.get(\"standard.session\");"},{"lineNumber":1382,"author":{"gitId":"-"},"content":""},{"lineNumber":1383,"author":{"gitId":"-"},"content":"        // Test result bundle for instructor1"},{"lineNumber":1384,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d responseBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":1385,"author":{"gitId":"-"},"content":"        SessionResultsBundle bundle \u003d frLogic.getSessionResultsForUser("},{"lineNumber":1386,"author":{"gitId":"-"},"content":"                session.getFeedbackSessionName(), session.getCourseId(), instructor.getEmail(),"},{"lineNumber":1387,"author":{"gitId":"-"},"content":"                true, null);"},{"lineNumber":1388,"author":{"gitId":"-"},"content":""},{"lineNumber":1389,"author":{"gitId":"-"},"content":"        // Instructor can see responses: q3r1, q6r1"},{"lineNumber":1390,"author":{"gitId":"-"},"content":"        // We don\u0027t check the actual IDs as this is also implicitly tested"},{"lineNumber":1391,"author":{"gitId":"-"},"content":"        // later when checking the visibility table."},{"lineNumber":1392,"author":{"gitId":"-"},"content":"        int totalResponse \u003d 0;"},{"lineNumber":1393,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e entry"},{"lineNumber":1394,"author":{"gitId":"-"},"content":"                : bundle.getQuestionResponseMap().entrySet()) {"},{"lineNumber":1395,"author":{"gitId":"-"},"content":"            totalResponse +\u003d entry.getValue().size();"},{"lineNumber":1396,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1397,"author":{"gitId":"-"},"content":"        int totalMissingResponse \u003d 0;"},{"lineNumber":1398,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e entry"},{"lineNumber":1399,"author":{"gitId":"-"},"content":"                : bundle.getQuestionMissingResponseMap().entrySet()) {"},{"lineNumber":1400,"author":{"gitId":"-"},"content":"            totalMissingResponse +\u003d entry.getValue().size();"},{"lineNumber":1401,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1402,"author":{"gitId":"-"},"content":"        assertEquals(2, totalResponse);"},{"lineNumber":1403,"author":{"gitId":"-"},"content":"        // instructor should not see missing responses"},{"lineNumber":1404,"author":{"gitId":"-"},"content":"        assertEquals(0, totalMissingResponse);"},{"lineNumber":1405,"author":{"gitId":"-"},"content":""},{"lineNumber":1406,"author":{"gitId":"-"},"content":"        assertEquals(2, bundle.getQuestionsMap().size());"},{"lineNumber":1407,"author":{"gitId":"-"},"content":"        assertEquals(2, bundle.getQuestionResponseMap().size());"},{"lineNumber":1408,"author":{"gitId":"-"},"content":"        assertEquals(2, bundle.getQuestionMissingResponseMap().size());"},{"lineNumber":1409,"author":{"gitId":"-"},"content":""},{"lineNumber":1410,"author":{"gitId":"-"},"content":"        // Test the generated response visibilityTable for userNames."},{"lineNumber":1411,"author":{"gitId":"-"},"content":"        Map\u003cString, Boolean\u003e responseGiverVisibilityTable \u003d bundle.getResponseGiverVisibilityTable();"},{"lineNumber":1412,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn3.resp1\", responseBundle)));"},{"lineNumber":1413,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn6.resp1\", responseBundle)));"},{"lineNumber":1414,"author":{"gitId":"-"},"content":"        assertEquals(totalResponse, responseGiverVisibilityTable.size());"},{"lineNumber":1415,"author":{"gitId":"-"},"content":""},{"lineNumber":1416,"author":{"gitId":"-"},"content":"        Map\u003cString, Boolean\u003e responseRecipientVisibilityTable \u003d bundle.getResponseRecipientVisibilityTable();"},{"lineNumber":1417,"author":{"gitId":"-"},"content":"        assertFalse(responseRecipientVisibilityTable.get(getResponseId(\"qn3.resp1\", responseBundle)));"},{"lineNumber":1418,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn6.resp1\", responseBundle)));"},{"lineNumber":1419,"author":{"gitId":"-"},"content":"        assertEquals(totalResponse, responseRecipientVisibilityTable.size());"},{"lineNumber":1420,"author":{"gitId":"-"},"content":""},{"lineNumber":1421,"author":{"gitId":"-"},"content":"        // no entry in comment visibility table"},{"lineNumber":1422,"author":{"gitId":"-"},"content":"        Map\u003cLong, Boolean\u003e commentGiverVisibilityTable \u003d bundle.getCommentGiverVisibilityTable();"},{"lineNumber":1423,"author":{"gitId":"-"},"content":"        assertEquals(0, commentGiverVisibilityTable.size());"},{"lineNumber":1424,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1425,"author":{"gitId":"-"},"content":""},{"lineNumber":1426,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1427,"author":{"gitId":"-"},"content":"    public void testGetSessionResultsForCourse_specificQuestion_shouldHaveCorrectResponsesFiltered() {"},{"lineNumber":1428,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq \u003d getQuestionFromDatabase(\"qn3InSession1InCourse1\");"},{"lineNumber":1429,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":1430,"author":{"gitId":"-"},"content":""},{"lineNumber":1431,"author":{"gitId":"-"},"content":"        // no section specified"},{"lineNumber":1432,"author":{"gitId":"-"},"content":"        SessionResultsBundle bundle \u003d frLogic.getSessionResultsForCourse("},{"lineNumber":1433,"author":{"gitId":"-"},"content":"                fq.getFeedbackSessionName(), fq.getCourseId(), instructor.getEmail(),"},{"lineNumber":1434,"author":{"gitId":"-"},"content":"                fq.getId(), null, FeedbackResultFetchType.BOTH);"},{"lineNumber":1435,"author":{"gitId":"-"},"content":"        assertEquals(1, bundle.getQuestionResponseMap().size());"},{"lineNumber":1436,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responseForQuestion \u003d"},{"lineNumber":1437,"author":{"gitId":"-"},"content":"                bundle.getQuestionResponseMap().entrySet().iterator().next().getValue();"},{"lineNumber":1438,"author":{"gitId":"-"},"content":"        assertEquals(1, responseForQuestion.size());"},{"lineNumber":1439,"author":{"gitId":"-"},"content":""},{"lineNumber":1440,"author":{"gitId":"-"},"content":"        // section specified"},{"lineNumber":1441,"author":{"gitId":"-"},"content":"        fq \u003d getQuestionFromDatabase(\"qn2InSession1InCourse1\");"},{"lineNumber":1442,"author":{"gitId":"-"},"content":"        bundle \u003d frLogic.getSessionResultsForCourse("},{"lineNumber":1443,"author":{"gitId":"-"},"content":"                fq.getFeedbackSessionName(), fq.getCourseId(), instructor.getEmail(),"},{"lineNumber":1444,"author":{"gitId":"-"},"content":"                fq.getId(), \"Section 1\", FeedbackResultFetchType.BOTH);"},{"lineNumber":1445,"author":{"gitId":"-"},"content":"        assertEquals(1, bundle.getQuestionResponseMap().size());"},{"lineNumber":1446,"author":{"gitId":"-"},"content":"        responseForQuestion \u003d bundle.getQuestionResponseMap().entrySet().iterator().next().getValue();"},{"lineNumber":1447,"author":{"gitId":"-"},"content":"        assertEquals(3, responseForQuestion.size());"},{"lineNumber":1448,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1449,"author":{"gitId":"-"},"content":""},{"lineNumber":1450,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1451,"author":{"gitId":"-"},"content":"    public void testGetSessionResultsForCourse_allQuestions_shouldGenerateCorrectBundle() {"},{"lineNumber":1452,"author":{"gitId":"-"},"content":"        DataBundle responseBundle \u003d loadDataBundle(\"/FeedbackSessionResultsTest.json\");"},{"lineNumber":1453,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(responseBundle);"},{"lineNumber":1454,"author":{"gitId":"-"},"content":""},{"lineNumber":1455,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session \u003d responseBundle.feedbackSessions.get(\"standard.session\");"},{"lineNumber":1456,"author":{"gitId":"-"},"content":""},{"lineNumber":1457,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d responseBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":1458,"author":{"gitId":"-"},"content":"        SessionResultsBundle bundle \u003d frLogic.getSessionResultsForCourse("},{"lineNumber":1459,"author":{"gitId":"-"},"content":"                session.getFeedbackSessionName(), session.getCourseId(), instructor.getEmail(),"},{"lineNumber":1460,"author":{"gitId":"-"},"content":"                null, null, FeedbackResultFetchType.BOTH);"},{"lineNumber":1461,"author":{"gitId":"-"},"content":""},{"lineNumber":1462,"author":{"gitId":"-"},"content":"        // Instructor can see responses: q2r1-3, q3r1-2, q4r1-3, q5r1, q6r1"},{"lineNumber":1463,"author":{"gitId":"-"},"content":"        int totalResponse \u003d 0;"},{"lineNumber":1464,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e entry"},{"lineNumber":1465,"author":{"gitId":"-"},"content":"                : bundle.getQuestionResponseMap().entrySet()) {"},{"lineNumber":1466,"author":{"gitId":"-"},"content":"            totalResponse +\u003d entry.getValue().size();"},{"lineNumber":1467,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1468,"author":{"gitId":"-"},"content":"        int totalMissingResponse \u003d 0;"},{"lineNumber":1469,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e entry"},{"lineNumber":1470,"author":{"gitId":"-"},"content":"                : bundle.getQuestionMissingResponseMap().entrySet()) {"},{"lineNumber":1471,"author":{"gitId":"-"},"content":"            totalMissingResponse +\u003d entry.getValue().size();"},{"lineNumber":1472,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1473,"author":{"gitId":"-"},"content":"        assertEquals(10, totalResponse);"},{"lineNumber":1474,"author":{"gitId":"-"},"content":"        assertEquals(4, totalMissingResponse);"},{"lineNumber":1475,"author":{"gitId":"-"},"content":"        // Instructor should still see all questions"},{"lineNumber":1476,"author":{"gitId":"-"},"content":"        assertEquals(8, bundle.getQuestionsMap().size());"},{"lineNumber":1477,"author":{"gitId":"-"},"content":"        assertEquals(8, bundle.getQuestionResponseMap().size());"},{"lineNumber":1478,"author":{"gitId":"-"},"content":"        assertEquals(8, bundle.getQuestionMissingResponseMap().size());"},{"lineNumber":1479,"author":{"gitId":"-"},"content":""},{"lineNumber":1480,"author":{"gitId":"-"},"content":"        // Test the generated response visibilityTable for userNames."},{"lineNumber":1481,"author":{"gitId":"-"},"content":"        Map\u003cString, Boolean\u003e responseGiverVisibilityTable \u003d bundle.getResponseGiverVisibilityTable();"},{"lineNumber":1482,"author":{"gitId":"-"},"content":"        assertFalse(responseGiverVisibilityTable.get(getResponseId(\"qn2.resp1\", responseBundle)));"},{"lineNumber":1483,"author":{"gitId":"-"},"content":"        assertFalse(responseGiverVisibilityTable.get(getResponseId(\"qn2.resp2\", responseBundle)));"},{"lineNumber":1484,"author":{"gitId":"-"},"content":"        assertFalse(responseGiverVisibilityTable.get(getResponseId(\"qn2.resp3\", responseBundle)));"},{"lineNumber":1485,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn3.resp1\", responseBundle)));"},{"lineNumber":1486,"author":{"gitId":"-"},"content":"        assertFalse(responseGiverVisibilityTable.get(getResponseId(\"qn3.resp2\", responseBundle)));"},{"lineNumber":1487,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn4.resp1\", responseBundle)));"},{"lineNumber":1488,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn4.resp2\", responseBundle)));"},{"lineNumber":1489,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn4.resp3\", responseBundle)));"},{"lineNumber":1490,"author":{"gitId":"-"},"content":"        assertFalse(responseGiverVisibilityTable.get(getResponseId(\"qn5.resp1\", responseBundle)));"},{"lineNumber":1491,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn6.resp1\", responseBundle)));"},{"lineNumber":1492,"author":{"gitId":"-"},"content":"        assertEquals(totalResponse + totalMissingResponse, responseGiverVisibilityTable.size());"},{"lineNumber":1493,"author":{"gitId":"-"},"content":""},{"lineNumber":1494,"author":{"gitId":"-"},"content":"        Map\u003cString, Boolean\u003e responseRecipientVisibilityTable \u003d bundle.getResponseRecipientVisibilityTable();"},{"lineNumber":1495,"author":{"gitId":"-"},"content":"        assertFalse(responseRecipientVisibilityTable.get(getResponseId(\"qn2.resp1\", responseBundle)));"},{"lineNumber":1496,"author":{"gitId":"-"},"content":"        assertFalse(responseRecipientVisibilityTable.get(getResponseId(\"qn2.resp2\", responseBundle)));"},{"lineNumber":1497,"author":{"gitId":"-"},"content":"        assertFalse(responseRecipientVisibilityTable.get(getResponseId(\"qn2.resp3\", responseBundle)));"},{"lineNumber":1498,"author":{"gitId":"-"},"content":"        assertFalse(responseRecipientVisibilityTable.get(getResponseId(\"qn3.resp1\", responseBundle)));"},{"lineNumber":1499,"author":{"gitId":"-"},"content":"        assertFalse(responseRecipientVisibilityTable.get(getResponseId(\"qn3.resp2\", responseBundle)));"},{"lineNumber":1500,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn4.resp1\", responseBundle)));"},{"lineNumber":1501,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn4.resp2\", responseBundle)));"},{"lineNumber":1502,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn4.resp3\", responseBundle)));"},{"lineNumber":1503,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn5.resp1\", responseBundle)));"},{"lineNumber":1504,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn6.resp1\", responseBundle)));"},{"lineNumber":1505,"author":{"gitId":"-"},"content":"        assertEquals(totalResponse + totalMissingResponse, responseRecipientVisibilityTable.size());"},{"lineNumber":1506,"author":{"gitId":"-"},"content":""},{"lineNumber":1507,"author":{"gitId":"-"},"content":"        // no entry in comment visibility table"},{"lineNumber":1508,"author":{"gitId":"-"},"content":"        Map\u003cLong, Boolean\u003e commentGiverVisibilityTable \u003d bundle.getCommentGiverVisibilityTable();"},{"lineNumber":1509,"author":{"gitId":"-"},"content":"        assertEquals(0, commentGiverVisibilityTable.size());"},{"lineNumber":1510,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1511,"author":{"gitId":"-"},"content":""},{"lineNumber":1512,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1513,"author":{"gitId":"-"},"content":"    public void testGetSessionResultsForCourse_allQuestionsSpecificSection_shouldGenerateCorrectBundle() {"},{"lineNumber":1514,"author":{"gitId":"-"},"content":"        DataBundle responseBundle \u003d loadDataBundle(\"/FeedbackSessionResultsTest.json\");"},{"lineNumber":1515,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(responseBundle);"},{"lineNumber":1516,"author":{"gitId":"-"},"content":""},{"lineNumber":1517,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session \u003d responseBundle.feedbackSessions.get(\"standard.session\");"},{"lineNumber":1518,"author":{"gitId":"-"},"content":""},{"lineNumber":1519,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d responseBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":1520,"author":{"gitId":"-"},"content":"        SessionResultsBundle bundle \u003d frLogic.getSessionResultsForCourse("},{"lineNumber":1521,"author":{"gitId":"-"},"content":"                session.getFeedbackSessionName(), session.getCourseId(), instructor.getEmail(),"},{"lineNumber":1522,"author":{"gitId":"-"},"content":"                null, \"Section A\", FeedbackResultFetchType.BOTH);"},{"lineNumber":1523,"author":{"gitId":"-"},"content":""},{"lineNumber":1524,"author":{"gitId":"-"},"content":"        // Instructor can see responses: q2r1-3, q3r1-2, q4r1-3, q5r1, q6r1"},{"lineNumber":1525,"author":{"gitId":"-"},"content":"        // after filtering by section, the number of responses seen by instructor will differ."},{"lineNumber":1526,"author":{"gitId":"-"},"content":"        // Responses viewed by instructor after filtering: q2r1-3, q3r1, q4r2-3, q5r1"},{"lineNumber":1527,"author":{"gitId":"-"},"content":"        int totalResponse \u003d 0;"},{"lineNumber":1528,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e entry"},{"lineNumber":1529,"author":{"gitId":"-"},"content":"                : bundle.getQuestionResponseMap().entrySet()) {"},{"lineNumber":1530,"author":{"gitId":"-"},"content":"            totalResponse +\u003d entry.getValue().size();"},{"lineNumber":1531,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1532,"author":{"gitId":"-"},"content":"        int totalMissingResponse \u003d 0;"},{"lineNumber":1533,"author":{"gitId":"-"},"content":"        for (Map.Entry\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e entry"},{"lineNumber":1534,"author":{"gitId":"-"},"content":"                : bundle.getQuestionMissingResponseMap().entrySet()) {"},{"lineNumber":1535,"author":{"gitId":"-"},"content":"            totalMissingResponse +\u003d entry.getValue().size();"},{"lineNumber":1536,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1537,"author":{"gitId":"-"},"content":"        assertEquals(7, totalResponse);"},{"lineNumber":1538,"author":{"gitId":"-"},"content":"        assertEquals(0, totalMissingResponse);"},{"lineNumber":1539,"author":{"gitId":"-"},"content":"        // Instructor should still see all questions"},{"lineNumber":1540,"author":{"gitId":"-"},"content":"        assertEquals(8, bundle.getQuestionsMap().size());"},{"lineNumber":1541,"author":{"gitId":"-"},"content":"        assertEquals(8, bundle.getQuestionResponseMap().size());"},{"lineNumber":1542,"author":{"gitId":"-"},"content":"        assertEquals(8, bundle.getQuestionMissingResponseMap().size());"},{"lineNumber":1543,"author":{"gitId":"-"},"content":""},{"lineNumber":1544,"author":{"gitId":"-"},"content":"        // Test the generated response visibilityTable for userNames."},{"lineNumber":1545,"author":{"gitId":"-"},"content":"        Map\u003cString, Boolean\u003e responseGiverVisibilityTable \u003d bundle.getResponseGiverVisibilityTable();"},{"lineNumber":1546,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn3.resp1\", responseBundle)));"},{"lineNumber":1547,"author":{"gitId":"-"},"content":"        assertTrue(responseGiverVisibilityTable.get(getResponseId(\"qn4.resp3\", responseBundle)));"},{"lineNumber":1548,"author":{"gitId":"-"},"content":"        assertFalse(responseGiverVisibilityTable.get(getResponseId(\"qn2.resp3\", responseBundle)));"},{"lineNumber":1549,"author":{"gitId":"-"},"content":"        assertFalse(responseGiverVisibilityTable.get(getResponseId(\"qn2.resp1\", responseBundle)));"},{"lineNumber":1550,"author":{"gitId":"-"},"content":"        assertEquals(totalResponse + totalMissingResponse, responseGiverVisibilityTable.size());"},{"lineNumber":1551,"author":{"gitId":"-"},"content":""},{"lineNumber":1552,"author":{"gitId":"-"},"content":"        Map\u003cString, Boolean\u003e responseRecipientVisibilityTable \u003d bundle.getResponseRecipientVisibilityTable();"},{"lineNumber":1553,"author":{"gitId":"-"},"content":"        assertFalse(responseRecipientVisibilityTable.get(getResponseId(\"qn3.resp1\", responseBundle)));"},{"lineNumber":1554,"author":{"gitId":"-"},"content":"        assertTrue(responseRecipientVisibilityTable.get(getResponseId(\"qn4.resp3\", responseBundle)));"},{"lineNumber":1555,"author":{"gitId":"-"},"content":"        assertFalse(responseRecipientVisibilityTable.get(getResponseId(\"qn2.resp3\", responseBundle)));"},{"lineNumber":1556,"author":{"gitId":"-"},"content":"        assertFalse(responseRecipientVisibilityTable.get(getResponseId(\"qn2.resp1\", responseBundle)));"},{"lineNumber":1557,"author":{"gitId":"-"},"content":"        assertEquals(totalResponse + totalMissingResponse, responseGiverVisibilityTable.size());"},{"lineNumber":1558,"author":{"gitId":"-"},"content":"        assertEquals(totalResponse + totalMissingResponse, responseRecipientVisibilityTable.size());"},{"lineNumber":1559,"author":{"gitId":"-"},"content":""},{"lineNumber":1560,"author":{"gitId":"-"},"content":"        // no entry in comment visibility table"},{"lineNumber":1561,"author":{"gitId":"-"},"content":"        Map\u003cLong, Boolean\u003e commentGiverVisibilityTable \u003d bundle.getCommentGiverVisibilityTable();"},{"lineNumber":1562,"author":{"gitId":"-"},"content":"        assertEquals(0, commentGiverVisibilityTable.size());"},{"lineNumber":1563,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1564,"author":{"gitId":"-"},"content":""},{"lineNumber":1565,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1566,"author":{"gitId":"-"},"content":"    public void testGetSessionResultsForCourse_responseFetchByGiverOrReceiverOnly_shouldGenerateCorrectBundle() {"},{"lineNumber":1567,"author":{"gitId":"-"},"content":"        var responseBundle \u003d loadDataBundle(\"/FeedbackSessionResultsTest.json\");"},{"lineNumber":1568,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(responseBundle);"},{"lineNumber":1569,"author":{"gitId":"-"},"content":""},{"lineNumber":1570,"author":{"gitId":"-"},"content":"        var session \u003d responseBundle.feedbackSessions.get(\"standard.session\");"},{"lineNumber":1571,"author":{"gitId":"-"},"content":""},{"lineNumber":1572,"author":{"gitId":"-"},"content":"        var instructor \u003d responseBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":1573,"author":{"gitId":"-"},"content":"        var sectionToTest \u003d \"Section A\";"},{"lineNumber":1574,"author":{"gitId":"-"},"content":"        Map\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e questionResponseMapByGiver \u003d frLogic.getSessionResultsForCourse("},{"lineNumber":1575,"author":{"gitId":"-"},"content":"                session.getFeedbackSessionName(), session.getCourseId(), instructor.getEmail(),"},{"lineNumber":1576,"author":{"gitId":"-"},"content":"                null, sectionToTest, FeedbackResultFetchType.GIVER)"},{"lineNumber":1577,"author":{"gitId":"-"},"content":"                .getQuestionResponseMap();"},{"lineNumber":1578,"author":{"gitId":"-"},"content":"        questionResponseMapByGiver.forEach((key, responses) -\u003e {"},{"lineNumber":1579,"author":{"gitId":"-"},"content":"            responses.forEach(resp -\u003e {"},{"lineNumber":1580,"author":{"gitId":"-"},"content":"                assertEquals(sectionToTest, resp.getGiverSection());"},{"lineNumber":1581,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":1582,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":1583,"author":{"gitId":"-"},"content":""},{"lineNumber":1584,"author":{"gitId":"-"},"content":"        Map\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e questionResponseMapByReceiver \u003d"},{"lineNumber":1585,"author":{"gitId":"-"},"content":"                frLogic.getSessionResultsForCourse("},{"lineNumber":1586,"author":{"gitId":"-"},"content":"                session.getFeedbackSessionName(), session.getCourseId(), instructor.getEmail(),"},{"lineNumber":1587,"author":{"gitId":"-"},"content":"                null, sectionToTest, FeedbackResultFetchType.RECEIVER)"},{"lineNumber":1588,"author":{"gitId":"-"},"content":"                .getQuestionResponseMap();"},{"lineNumber":1589,"author":{"gitId":"-"},"content":"        questionResponseMapByReceiver.forEach((key, responses) -\u003e {"},{"lineNumber":1590,"author":{"gitId":"-"},"content":"            responses.forEach(resp -\u003e {"},{"lineNumber":1591,"author":{"gitId":"-"},"content":"                assertEquals(sectionToTest, resp.getRecipientSection());"},{"lineNumber":1592,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":1593,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":1594,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1595,"author":{"gitId":"-"},"content":""},{"lineNumber":1596,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1597,"author":{"gitId":"-"},"content":"    public void testGetSessionResultsForCourse_splitResponseFetchByGiverAndReceiver_shouldGenerateCorrectBundle() {"},{"lineNumber":1598,"author":{"gitId":"-"},"content":"        var responseBundle \u003d loadDataBundle(\"/FeedbackSessionResultsTest.json\");"},{"lineNumber":1599,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(responseBundle);"},{"lineNumber":1600,"author":{"gitId":"-"},"content":""},{"lineNumber":1601,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session \u003d responseBundle.feedbackSessions.get(\"standard.session\");"},{"lineNumber":1602,"author":{"gitId":"-"},"content":""},{"lineNumber":1603,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d responseBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":1604,"author":{"gitId":"-"},"content":"        Map\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e questionResponseMapFromMultiFetch \u003d"},{"lineNumber":1605,"author":{"gitId":"-"},"content":"                frLogic.getSessionResultsForCourse("},{"lineNumber":1606,"author":{"gitId":"-"},"content":"                        session.getFeedbackSessionName(), session.getCourseId(), instructor.getEmail(),"},{"lineNumber":1607,"author":{"gitId":"-"},"content":"                        null, \"Section A\", FeedbackResultFetchType.GIVER).getQuestionResponseMap();"},{"lineNumber":1608,"author":{"gitId":"-"},"content":"        frLogic.getSessionResultsForCourse("},{"lineNumber":1609,"author":{"gitId":"-"},"content":"                session.getFeedbackSessionName(), session.getCourseId(), instructor.getEmail(),"},{"lineNumber":1610,"author":{"gitId":"-"},"content":"                null, \"Section A\", FeedbackResultFetchType.RECEIVER)"},{"lineNumber":1611,"author":{"gitId":"-"},"content":"                .getQuestionResponseMap()"},{"lineNumber":1612,"author":{"gitId":"-"},"content":"                .forEach(questionResponseMapFromMultiFetch::putIfAbsent);"},{"lineNumber":1613,"author":{"gitId":"-"},"content":""},{"lineNumber":1614,"author":{"gitId":"-"},"content":"        // Equal to session result fetch by both type"},{"lineNumber":1615,"author":{"gitId":"-"},"content":"        Map\u003cString, List\u003cFeedbackResponseAttributes\u003e\u003e questionResponseMapFromFetchBoth \u003d"},{"lineNumber":1616,"author":{"gitId":"-"},"content":"                frLogic.getSessionResultsForCourse("},{"lineNumber":1617,"author":{"gitId":"-"},"content":"                        session.getFeedbackSessionName(), session.getCourseId(), instructor.getEmail(),"},{"lineNumber":1618,"author":{"gitId":"-"},"content":"                        null, \"Section A\", FeedbackResultFetchType.BOTH).getQuestionResponseMap();"},{"lineNumber":1619,"author":{"gitId":"-"},"content":""},{"lineNumber":1620,"author":{"gitId":"-"},"content":"        for (var entry : questionResponseMapFromFetchBoth.entrySet()) {"},{"lineNumber":1621,"author":{"gitId":"-"},"content":"            List\u003cFeedbackResponseAttributes\u003e respFromFetchBoth \u003d entry.getValue();"},{"lineNumber":1622,"author":{"gitId":"-"},"content":"            List\u003cFeedbackResponseAttributes\u003e respFromMultiFetch \u003d questionResponseMapFromMultiFetch.get(entry.getKey());"},{"lineNumber":1623,"author":{"gitId":"-"},"content":"            assertEquals(respFromFetchBoth.size(), respFromMultiFetch.size());"},{"lineNumber":1624,"author":{"gitId":"-"},"content":"            assertTrue(new HashSet\u003c\u003e(respFromMultiFetch).equals(new HashSet\u003c\u003e(respFromFetchBoth)));"},{"lineNumber":1625,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1626,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1627,"author":{"gitId":"-"},"content":""},{"lineNumber":1628,"author":{"gitId":"-"},"content":""},{"lineNumber":1629,"author":{"gitId":"-"},"content":"    // TODO: check for cases where a person is both a student and an instructor"},{"lineNumber":1630,"author":{"gitId":"-"},"content":""},{"lineNumber":1631,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":1632,"author":{"gitId":"-"},"content":"    public void testGetSessionResultsForUser_orphanResponseInDB_shouldStillHandleCorrectly() throws Exception {"},{"lineNumber":1633,"author":{"gitId":"-"},"content":"        dataBundle \u003d getTypicalDataBundle();"},{"lineNumber":1634,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(dataBundle);"},{"lineNumber":1635,"author":{"gitId":"-"},"content":""},{"lineNumber":1636,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fq \u003d getQuestionFromDatabase(\"qn2InSession1InCourse1\");"},{"lineNumber":1637,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes existingResponse \u003d getResponseFromDatabase(dataBundle, \"response1ForQ2S1C1\");"},{"lineNumber":1638,"author":{"gitId":"-"},"content":"        // create a \"null\" response to simulate trying to get a null student\u0027s response"},{"lineNumber":1639,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes newResponse \u003d"},{"lineNumber":1640,"author":{"gitId":"-"},"content":"                FeedbackResponseAttributes.builder("},{"lineNumber":1641,"author":{"gitId":"-"},"content":"                        existingResponse.getFeedbackQuestionId(), existingResponse.getGiver(), \"nullRecipient@gmail.tmt\")"},{"lineNumber":1642,"author":{"gitId":"-"},"content":"                        .withFeedbackSessionName(existingResponse.getFeedbackSessionName())"},{"lineNumber":1643,"author":{"gitId":"-"},"content":"                        .withCourseId(\"nullCourse\")"},{"lineNumber":1644,"author":{"gitId":"-"},"content":"                        .withGiverSection(\"Section 1\")"},{"lineNumber":1645,"author":{"gitId":"-"},"content":"                        .withRecipientSection(\"Section 1\")"},{"lineNumber":1646,"author":{"gitId":"-"},"content":"                        .withResponseDetails(existingResponse.getResponseDetailsCopy())"},{"lineNumber":1647,"author":{"gitId":"-"},"content":"                        .build();"},{"lineNumber":1648,"author":{"gitId":"-"},"content":"        frLogic.createFeedbackResponse(newResponse);"},{"lineNumber":1649,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d dataBundle.students.get(\"student2InCourse1\");"},{"lineNumber":1650,"author":{"gitId":"-"},"content":""},{"lineNumber":1651,"author":{"gitId":"-"},"content":"        SessionResultsBundle bundle \u003d frLogic.getSessionResultsForUser("},{"lineNumber":1652,"author":{"gitId":"-"},"content":"                fq.getFeedbackSessionName(), fq.getCourseId(), student.getEmail(),"},{"lineNumber":1653,"author":{"gitId":"-"},"content":"                false, fq.getId());"},{"lineNumber":1654,"author":{"gitId":"-"},"content":"        assertEquals(1, bundle.getQuestionResponseMap().size());"},{"lineNumber":1655,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseAttributes\u003e responseForQuestion \u003d"},{"lineNumber":1656,"author":{"gitId":"-"},"content":"                bundle.getQuestionResponseMap().entrySet().iterator().next().getValue();"},{"lineNumber":1657,"author":{"gitId":"-"},"content":"        assertEquals(4, responseForQuestion.size());"},{"lineNumber":1658,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1659,"author":{"gitId":"-"},"content":""},{"lineNumber":1660,"author":{"gitId":"-"},"content":"    private FeedbackQuestionAttributes getQuestionFromDatabase(DataBundle dataBundle, String jsonId) {"},{"lineNumber":1661,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes questionToGet \u003d dataBundle.feedbackQuestions.get(jsonId);"},{"lineNumber":1662,"author":{"gitId":"-"},"content":"        questionToGet \u003d fqLogic.getFeedbackQuestion(questionToGet.getFeedbackSessionName(),"},{"lineNumber":1663,"author":{"gitId":"-"},"content":"                questionToGet.getCourseId(),"},{"lineNumber":1664,"author":{"gitId":"-"},"content":"                questionToGet.getQuestionNumber());"},{"lineNumber":1665,"author":{"gitId":"-"},"content":""},{"lineNumber":1666,"author":{"gitId":"-"},"content":"        return questionToGet;"},{"lineNumber":1667,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1668,"author":{"gitId":"-"},"content":""},{"lineNumber":1669,"author":{"gitId":"-"},"content":"    private FeedbackQuestionAttributes getQuestionFromDatabase(String jsonId) {"},{"lineNumber":1670,"author":{"gitId":"-"},"content":"        return getQuestionFromDatabase(dataBundle, jsonId);"},{"lineNumber":1671,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1672,"author":{"gitId":"-"},"content":""},{"lineNumber":1673,"author":{"gitId":"-"},"content":"    private FeedbackResponseAttributes getResponseFromDatabase(DataBundle dataBundle, String jsonId) {"},{"lineNumber":1674,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes response \u003d dataBundle.feedbackResponses.get(jsonId);"},{"lineNumber":1675,"author":{"gitId":"-"},"content":""},{"lineNumber":1676,"author":{"gitId":"-"},"content":"        String qnId;"},{"lineNumber":1677,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":1678,"author":{"gitId":"-"},"content":"            int qnNumber \u003d Integer.parseInt(response.getFeedbackQuestionId());"},{"lineNumber":1679,"author":{"gitId":"-"},"content":"            qnId \u003d fqLogic.getFeedbackQuestion(response.getFeedbackSessionName(), response.getCourseId(), qnNumber).getId();"},{"lineNumber":1680,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":1681,"author":{"gitId":"-"},"content":"            qnId \u003d response.getFeedbackQuestionId();"},{"lineNumber":1682,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1683,"author":{"gitId":"-"},"content":""},{"lineNumber":1684,"author":{"gitId":"-"},"content":"        return frLogic.getFeedbackResponse("},{"lineNumber":1685,"author":{"gitId":"-"},"content":"                qnId, response.getGiver(), response.getRecipient());"},{"lineNumber":1686,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1687,"author":{"gitId":"-"},"content":""},{"lineNumber":1688,"author":{"gitId":"-"},"content":"    private FeedbackResponseAttributes getResponseFromDatabase(String jsonId) {"},{"lineNumber":1689,"author":{"gitId":"-"},"content":"        return getResponseFromDatabase(dataBundle, jsonId);"},{"lineNumber":1690,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1691,"author":{"gitId":"-"},"content":""},{"lineNumber":1692,"author":{"gitId":"-"},"content":"    private String getResponseId(String jsonId, DataBundle bundle) {"},{"lineNumber":1693,"author":{"gitId":"-"},"content":"        return getResponseFromDatabase(bundle, jsonId).getId();"},{"lineNumber":1694,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1695,"author":{"gitId":"-"},"content":""},{"lineNumber":1696,"author":{"gitId":"-"},"content":"    private List\u003cFeedbackResponseCommentAttributes\u003e getFeedbackResponseCommentsForResponsesFromDatabase("},{"lineNumber":1697,"author":{"gitId":"-"},"content":"            Set\u003cString\u003e responseIds) {"},{"lineNumber":1698,"author":{"gitId":"-"},"content":"        List\u003cFeedbackResponseCommentAttributes\u003e responseComments \u003d new ArrayList\u003c\u003e();"},{"lineNumber":1699,"author":{"gitId":"-"},"content":"        for (String id : responseIds) {"},{"lineNumber":1700,"author":{"gitId":"-"},"content":"            List\u003cFeedbackResponseCommentAttributes\u003e responseCommentsForResponse \u003d"},{"lineNumber":1701,"author":{"gitId":"-"},"content":"                    frcLogic.getFeedbackResponseCommentForResponse(id);"},{"lineNumber":1702,"author":{"gitId":"-"},"content":"            responseComments.addAll(responseCommentsForResponse);"},{"lineNumber":1703,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1704,"author":{"gitId":"-"},"content":"        return responseComments;"},{"lineNumber":1705,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1706,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"hhdqirui":67,"-":1639}},{"path":"src/web/app/components/progress-bar/progress-bar.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ProgressBarService } from \u0027../../../services/progress-bar.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Progress bar used to show download progress."},{"lineNumber":6,"author":{"gitId":"-"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  selector: \u0027tm-progress-bar\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./progress-bar.component.html\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"})"},{"lineNumber":11,"author":{"gitId":"-"},"content":"export class ProgressBarComponent implements OnInit {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"domlimm"},"content":"  progressPercentage: number \u003d 10;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"  constructor(private progressBarService: ProgressBarService) { }"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    this.getProgress();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  getProgress(): void {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    this.progressBarService.progressPercentage.subscribe((progressPercentage: number) \u003d\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      this.progressPercentage \u003d progressPercentage;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"domlimm":1,"-":25}},{"path":"src/web/app/components/question-edit-form/question-edit-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CommonVisibilitySetting, FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../simple-modal/simple-modal-type\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../teammates-common/collapse-anim\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { QuestionEditFormMode, QuestionEditFormModel } from \u0027./question-edit-form-model\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"const FEEDBACK_PATH_PROPERTIES: Set\u003cstring\u003e \u003d new Set\u003cstring\u003e(["},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u0027giverType\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u0027recipientType\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u0027isUsingOtherFeedbackPath\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u0027numberOfEntitiesToGiveFeedbackToSetting\u0027,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u0027customNumberOfEntitiesToGiveFeedbackTo\u0027,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"]);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"const VISIBILITY_PROPERTIES: Set\u003cstring\u003e \u003d new Set\u003cstring\u003e(["},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u0027isUsingOtherVisibilitySetting\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  \u0027showResponsesTo\u0027,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u0027showGiverNameTo\u0027,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u0027showRecipientNameTo\u0027,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u0027commonVisibilitySettingName\u0027,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"]);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"const QUESTION_DETAIL_PROPERTIES: Set\u003cstring\u003e \u003d new Set\u003cstring\u003e(["},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u0027questionBrief\u0027,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u0027questionDescription\u0027,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u0027questionDetails\u0027,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u0027questionNumber\u0027,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"]);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * The question edit form component."},{"lineNumber":41,"author":{"gitId":"-"},"content":" */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  selector: \u0027tm-question-edit-form\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./question-edit-form.component.html\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./question-edit-form.component.scss\u0027],"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":47,"author":{"gitId":"-"},"content":"})"},{"lineNumber":48,"author":{"gitId":"-"},"content":"export class QuestionEditFormComponent {"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  QuestionEditFormMode: typeof QuestionEditFormMode \u003d QuestionEditFormMode;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  FeedbackParticipantType: typeof FeedbackParticipantType \u003d FeedbackParticipantType;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting: typeof NumberOfEntitiesToGiveFeedbackToSetting \u003d"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      NumberOfEntitiesToGiveFeedbackToSetting;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  VisibilityControl: typeof VisibilityControl \u003d VisibilityControl;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType: typeof FeedbackVisibilityType \u003d FeedbackVisibilityType;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  set formModel(model: QuestionEditFormModel) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    this.model \u003d model;"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    this.commonFeedbackPaths \u003d this.feedbackQuestionsService.getCommonFeedbackPaths(model.questionType);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    this.allowedFeedbackPaths \u003d this.feedbackQuestionsService.getAllowedFeedbackPaths(model.questionType);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine(model.giverType, model.recipientType);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.commonFeedbackVisibilitySettings \u003d"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getCommonFeedbackVisibilitySettings("},{"lineNumber":69,"author":{"gitId":"-"},"content":"            this.visibilityStateMachine, model.questionType);"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    const visibilitySetting: { [TKey in VisibilityControl]: FeedbackVisibilityType[] } \u003d {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      SHOW_RESPONSE: model.showResponsesTo,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      SHOW_GIVER_NAME: model.showGiverNameTo,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      SHOW_RECIPIENT_NAME: model.showRecipientNameTo,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine.applyVisibilitySettings(visibilitySetting);"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    if (!model.isUsingOtherFeedbackPath) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      // find if the feedback path is in the common feedback paths"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      this.model.isUsingOtherFeedbackPath \u003d true;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      if (this.commonFeedbackPaths.has(model.giverType)"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          \u0026\u0026 this.commonFeedbackPaths.get(model.giverType)!.includes(model.recipientType)) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.model.isUsingOtherFeedbackPath \u003d false;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    if (!model.commonVisibilitySettingName \u0026\u0026 !model.isUsingOtherVisibilitySetting) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      // find if the visibility settings is in the common visibility settings"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      this.model.isUsingOtherVisibilitySetting \u003d true;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      for (const commonVisibilityOption of this.commonFeedbackVisibilitySettings) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (this.isSameSet(visibilitySetting.SHOW_RESPONSE, commonVisibilityOption.visibilitySettings.SHOW_RESPONSE)"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \u0026\u0026 this.isSameSet(visibilitySetting.SHOW_GIVER_NAME,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                commonVisibilityOption.visibilitySettings.SHOW_GIVER_NAME)"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \u0026\u0026 this.isSameSet(visibilitySetting.SHOW_RECIPIENT_NAME,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                commonVisibilityOption.visibilitySettings.SHOW_RECIPIENT_NAME)) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"          this.model.commonVisibilitySettingName \u003d commonVisibilityOption.name;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"          this.model.isUsingOtherVisibilitySetting \u003d false;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":105,"author":{"gitId":"-"},"content":"   * Returns whether setting the custom feedback visibility is allowed."},{"lineNumber":106,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  get isCustomFeedbackVisibilitySettingAllowed(): boolean {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    return this.feedbackQuestionsService.isCustomFeedbackVisibilitySettingAllowed(this.model.questionType);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  numOfQuestions: number \u003d 0;"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  formMode: QuestionEditFormMode \u003d QuestionEditFormMode.EDIT;"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"  // if true, the question edit form is used for displaying of the question edit form only"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  // no editing function will be available; the edit button will be hidden"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  isDisplayOnly: boolean \u003d false;"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"cedricongjh"},"content":"  @Input()"},{"lineNumber":123,"author":{"gitId":"cedricongjh"},"content":"  isQuestionPublished: boolean \u003d false;"},{"lineNumber":124,"author":{"gitId":"cedricongjh"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"  model: QuestionEditFormModel \u003d {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027\u0027,"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    questionNumber: 0,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    questionBrief: \u0027\u0027,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    isQuestionHasResponses: false,"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      questionText: \u0027\u0027,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS_EXCLUDING_SELF,"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 1,"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    commonVisibilitySettingName: \u0027\u0027,"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"    isUsingOtherFeedbackPath: false,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    isUsingOtherVisibilitySetting: false,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    isDeleting: false,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    isDuplicating: false,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    isEditable: false,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    isCollapsed: false,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    isVisibilityChanged: false,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    isFeedbackPathChanged: false,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    isQuestionDetailsChanged: false,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  formModelChange: EventEmitter\u003cQuestionEditFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  saveExistingQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  deleteCurrentQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  duplicateCurrentQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  discardExistingQuestionChangesEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  discardNewQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  createNewQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"  commonFeedbackPaths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d new Map();"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"  allowedFeedbackPaths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d new Map();"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"  commonFeedbackVisibilitySettings: CommonVisibilitySetting[] \u003d [];"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"  visibilityStateMachine: VisibilityStateMachine;"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"  constructor(private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine("},{"lineNumber":197,"author":{"gitId":"-"},"content":"            this.model.giverType, this.model.recipientType);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"  private isSameSet(setA: FeedbackVisibilityType[], setB: FeedbackVisibilityType[]): boolean {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    return setA.length \u003d\u003d\u003d setB.length \u0026\u0026 setA.every((ele: FeedbackVisibilityType) \u003d\u003e setB.includes(ele));"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * Triggers the change of the model for the form."},{"lineNumber":206,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  triggerModelChange(field: keyof QuestionEditFormModel,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                     data: QuestionEditFormModel[keyof QuestionEditFormModel]): void {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      [field]: data,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      ...(!this.model.isVisibilityChanged \u0026\u0026 VISIBILITY_PROPERTIES.has(field)"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        \u0026\u0026 { isVisibilityChanged: true }),"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      ...(!this.model.isFeedbackPathChanged \u0026\u0026 FEEDBACK_PATH_PROPERTIES.has(field)"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        \u0026\u0026 { isFeedbackPathChanged: true }),"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      ...(!this.model.isQuestionDetailsChanged \u0026\u0026 QUESTION_DETAIL_PROPERTIES.has(field)"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        \u0026\u0026 { isQuestionDetailsChanged: true }),"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":222,"author":{"gitId":"-"},"content":"   * Triggers the change of the model for the form."},{"lineNumber":223,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  triggerModelChangeBatch(obj: Partial\u003cQuestionEditFormModel\u003e): void {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      ...obj,"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      ...(!this.model.isVisibilityChanged"},{"lineNumber":229,"author":{"gitId":"-"},"content":"          \u0026\u0026 Object.keys(obj).some((key: string) \u003d\u003e VISIBILITY_PROPERTIES.has(key))"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          \u0026\u0026 { isVisibilityChanged: true }),"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      ...(!this.model.isFeedbackPathChanged"},{"lineNumber":232,"author":{"gitId":"-"},"content":"          \u0026\u0026 Object.keys(obj).some((key: string) \u003d\u003e FEEDBACK_PATH_PROPERTIES.has(key))"},{"lineNumber":233,"author":{"gitId":"-"},"content":"          \u0026\u0026 { isFeedbackPathChanged: true }),"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      ...(!this.model.isQuestionDetailsChanged"},{"lineNumber":235,"author":{"gitId":"-"},"content":"          \u0026\u0026 Object.keys(obj).some((key: string) \u003d\u003e QUESTION_DETAIL_PROPERTIES.has(key))"},{"lineNumber":236,"author":{"gitId":"-"},"content":"          \u0026\u0026 { isQuestionDetailsChanged: true }),"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":241,"author":{"gitId":"-"},"content":"   * Helper methods to create a range."},{"lineNumber":242,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  range(num: number): number[] {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    const ranges: number[] \u003d [];"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    for (let i: number \u003d 0; i \u003c num; i +\u003d 1) {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      ranges.push(i);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    return ranges;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   * Handle event to discard changes users made."},{"lineNumber":253,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  discardChangesHandler(isNewQuestion: boolean): void {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    if (!this.model.isVisibilityChanged"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      \u0026\u0026 !this.model.isFeedbackPathChanged"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      \u0026\u0026 !this.model.isQuestionDetailsChanged) {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      this.discardChanges();"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":262,"author":{"gitId":"-"},"content":"        `Discard unsaved ${isNewQuestion ? \u0027question\u0027 : \u0027edits\u0027}?`, SimpleModalType.WARNING,"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        \u0027Warning: Any unsaved changes will be lost\u0027,"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        { cancelMessage: \u0027No, go back to editing\u0027 });"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      this.discardChanges();"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"  private discardChanges(): void {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d QuestionEditFormMode.EDIT) {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      this.discardExistingQuestionChangesEvent.emit();"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d QuestionEditFormMode.ADD) {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      this.discardNewQuestionEvent.emit();"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":280,"author":{"gitId":"-"},"content":"   * Saves the question."},{"lineNumber":281,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  saveQuestionHandler(): void {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d QuestionEditFormMode.EDIT) {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      const doChangesNeedWarning: boolean \u003d this.model.isQuestionDetailsChanged"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        || this.model.isVisibilityChanged"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        || this.model.isFeedbackPathChanged;"},{"lineNumber":287,"author":{"gitId":"cedricongjh"},"content":"      if (!this.isQuestionPublished \u0026\u0026 (!this.model.isQuestionHasResponses || !doChangesNeedWarning)) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        this.saveExistingQuestionEvent.emit();"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      } else if (this.model.isFeedbackPathChanged) {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        // warn user that editing feedback path will delete all messages"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        const modalContent: string \u003d `"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            \u003cp\u003eYou seem to have changed the feedback path settings of this question. Please note that changing the"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            feedback path will cause \u003cb\u003eall existing responses to be deleted.\u003c/b\u003e Proceed?\u003c/p\u003e"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        `;"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":296,"author":{"gitId":"-"},"content":"            \u0027Save the question?\u0027, SimpleModalType.DANGER, modalContent);"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        modalRef.result.then(() \u003d\u003e {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"          this.saveExistingQuestionEvent.emit();"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      } else if (this.model.isQuestionDetailsChanged) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        // alert user that editing question may result in deletion of responses"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        const modalContent: string \u003d `"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            \u003cp\u003eEditing question settings in a way that potentially affects the validity of existing responses \u003cb\u003e may"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            cause all the existing responses for this question to be deleted.\u003c/b\u003e Proceed?\u003c/p\u003e"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        `;"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":307,"author":{"gitId":"-"},"content":"            \u0027Save the question?\u0027, SimpleModalType.DANGER, modalContent);"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        modalRef.result.then(() \u003d\u003e {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"          this.saveExistingQuestionEvent.emit();"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      } else if (this.model.isVisibilityChanged) {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        // alert user that editing visibility options will not delete responses"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        const modalContent: string \u003d `"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            \u003cp\u003eYou seem to have changed the visibility settings of this question. Please note that \u003cb\u003ethe existing"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            responses will remain but their visibility will be changed as per the new visibility settings.\u003c/b\u003e"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            Proceed?\u003c/p\u003e"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        `;"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":319,"author":{"gitId":"-"},"content":"            \u0027Save the question?\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        modalRef.result.then(() \u003d\u003e {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"          this.saveExistingQuestionEvent.emit();"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d QuestionEditFormMode.ADD) {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"      this.createNewQuestionEvent.emit();"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":328,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":331,"author":{"gitId":"-"},"content":"   * Handles event for duplicating the current question."},{"lineNumber":332,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":333,"author":{"gitId":"-"},"content":"  duplicateCurrentQuestionHandler(): void {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    this.duplicateCurrentQuestionEvent.emit();"},{"lineNumber":335,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":338,"author":{"gitId":"-"},"content":"   * Handles event for deleting the current question."},{"lineNumber":339,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":340,"author":{"gitId":"-"},"content":"  deleteCurrentQuestionHandler(): void {"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    this.deleteCurrentQuestionEvent.emit();"},{"lineNumber":342,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"cedricongjh":4,"-":339}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"question-submission-form\" class\u003d\"card\"\u003e"},{"lineNumber":2,"author":{"gitId":"domlimm"},"content":"  \u003cdiv class\u003d\"card-header bg-primary text-white question-header\""},{"lineNumber":3,"author":{"gitId":"domlimm"},"content":"    [ngClass]\u003d\"isSaved ? \u0027bg-success\u0027 : \u0027bg-primary\u0027\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003ci class\u003d\"fas fa-check me-2\" *ngIf\u003d\"isSaved\"\u003e\u003c/i\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003cspan id\u003d\"question-details\"\u003e\u003cb\u003eQuestion {{ model.questionNumber }}: \u003c/b\u003e{{ model.questionBrief }}\u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\" *tmIsLoading\u003d\"model.isLoading\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card mb-3\" *ngIf\u003d\"model.questionDescription\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-header\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003cb\u003eMore details\u003c/b\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"question-description\" class\u003d\"card-body\" [innerHTML]\u003d\"model.questionDescription | safeHtml\"\u003e\u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body visibility-card\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cp class\u003d\"text-secondary\"\u003eOnly the following persons can see your responses: \u003c/p\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cul id\u003d\"visibility-list\" class\u003d\"text-secondary\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cli *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.SELF\"\u003eYou can see your own feedback in the results page later on.\u003c/li\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cng-container *ngFor\u003d\"let visibilityType of FeedbackVisibilityType | enumToArray\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003cli *ngIf\u003d\"visibilityStateMachine.isVisibilityTypeApplicable(visibilityType) \u0026\u0026 visibilityStateMachine.hasAnyVisibilityControl(visibilityType)\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            {{ visibilityType | visibilityEntityName:model.recipientType:model.numberOfEntitiesToGiveFeedbackToSetting:model.customNumberOfEntitiesToGiveFeedbackTo }} {{ visibilityStateMachine.getVisibilityControlUnderVisibilityType(visibilityType) | visibilityCapability }}"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003c/li\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003c/ng-container\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cli *ngIf\u003d\"!visibilityStateMachine.hasAnyVisibilityControlForAll()\"\u003eNo-one can see your responses\u003c/li\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/ul\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003ctm-contribution-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"                                          [questionDetails]\u003d\"model.questionDetails\" [numOfRecipients]\u003d\"model.recipientSubmissionForms.length\"\u003e\u003c/tm-contribution-question-instruction\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003ctm-text-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\"\u003e\u003c/tm-text-question-instruction\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003ctm-num-scale-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\"\u003e\u003c/tm-num-scale-question-instruction\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003ctm-text-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\"\u003e\u003c/tm-text-question-constraint\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003ctm-num-scale-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\"\u003e\u003c/tm-num-scale-question-constraint\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003ctm-rank-options-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-rank-options-question-instruction\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003ctm-msq-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-msq-question-constraint\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003ctm-rank-recipients-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-rank-recipients-question-instruction\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003ctm-constsum-options-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\"\u003e\u003c/tm-constsum-options-question-instruction\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003ctm-constsum-recipients-question-instruction *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                                                 [questionDetails]\u003d\"model.questionDetails\" [numOfRecipients]\u003d\"model.recipientSubmissionForms.length\"\u003e\u003c/tm-constsum-recipients-question-instruction\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"form-row margin-top-30px margin-bottom-0px\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-2\"\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cp *ngIf\u003d\"model.recipientType !\u003d\u003d FeedbackParticipantType.NONE \u0026\u0026 model.recipientType !\u003d\u003d FeedbackParticipantType.SELF\" \u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"ngb-tooltip-class font-bold\" ngbTooltip\u003d\"The party being evaluated or given feedback to\"\u003eEvaluee/Recipient\u003c/span\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/p\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"form-check\" *ngIf\u003d\"hasSectionTeam\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cinput type\u003d\"checkbox\" id\u003d\"showSectionTeam\" name\u003d\"showSectionTeam\" value\u003d\"sectionTeam\" (change)\u003d\"toggleSectionTeam($event)\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003clabel class\u003d\"form-check-label ms-1\" for\u003d\"showSectionTeam\"\u003eShow Section/Team\u003c/label\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\" *ngIf\u003d\"model.giverType \u003d\u003d\u003d FeedbackParticipantType.TEAMS\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      Please note that you are submitting this response on behalf of your team."},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"evaluee-col col-12\"\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row\" *ngFor\u003d\"let recipientSubmissionFormModel of model.recipientSubmissionForms; let i \u003d index; trackBy: trackRecipientSubmissionFormByFn\"\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-5 col-xs-12 margin-top-20px\" *ngIf\u003d\"model.recipientType !\u003d\u003d FeedbackParticipantType.SELF \u0026\u0026 model.recipientType !\u003d\u003d FeedbackParticipantType.NONE\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"recipient-name-{{ i }}\" *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT\"\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              \u003cb\u003e{{ getRecipientName(recipientSubmissionFormModel.recipientIdentifier) }} \u003c/b\u003e \u003cspan\u003e({{ model.recipientType | recipientTypeName:model.giverType }})\u003c/span\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row evaluee-select align-items-center\" *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003cselect id\u003d\"recipient-dropdown\" class\u003d\"form-control form-select fw-bold col\" [ngModel]\u003d\"recipientSubmissionFormModel.recipientIdentifier\""},{"lineNumber":67,"author":{"gitId":"-"},"content":"                      (ngModelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027recipientIdentifier\u0027, $event)\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"                      [disabled]\u003d\"isFormsDisabled\"\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u003coption value\u003d\"\"\u003e\u003c/option\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u003cng-container *ngFor\u003d\"let recipient of model.recipientList\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                  \u003coption *ngIf\u003d\"!isRecipientSelected(recipient) || recipientSubmissionFormModel.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier\" [ngValue]\u003d\"recipient.recipientIdentifier\"\u003e{{ getSelectionOptionLabel(recipient) }}\u003c/option\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-auto text-start\"\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                ({{ model.recipientType | recipientTypeName: model.giverType }})"},{"lineNumber":76,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"margin-top-20px\" [ngClass]\u003d\"isMCQDropDownEnabled ? \u0027col-12\u0027 : \u0027col\u0027\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u003ctm-contribution-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":81,"author":{"gitId":"-"},"content":"                                                      [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                                      [shouldShowHelpLink]\u003d\"i \u003d\u003d\u003d 0\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                                                      (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                                      [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-contribution-question-edit-answer-form\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003ctm-text-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                                              [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"                                              (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":89,"author":{"gitId":"-"},"content":"                                              [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-text-question-edit-answer-form\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            \u003ctm-rank-options-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                                                       [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"                                                       (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                                                       [isDisabled]\u003d\"isFormsDisabled\"\u003e\u003c/tm-rank-options-question-edit-answer-form\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003ctm-rank-recipients-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                                                          [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                                                          (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                                                          [isDisabled]\u003d\"isFormsDisabled\" [numOfRecipients]\u003d\"model.recipientSubmissionForms.length\"\u003e\u003c/tm-rank-recipients-question-edit-answer-form\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            \u003ctm-num-scale-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":100,"author":{"gitId":"-"},"content":"                                                    [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                                                    (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                                    [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-num-scale-question-edit-answer-form\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            \u003ctm-mcq-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MCQ\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":105,"author":{"gitId":"-"},"content":"                                                    [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                                    (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                                    [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                                    [id]\u003d\"model.feedbackQuestionId + recipientSubmissionFormModel.recipientIdentifier\""},{"lineNumber":109,"author":{"gitId":"-"},"content":"                                                    (cssRefresh)\u003drefreshCssForDropdownMCQ($event)"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-mcq-question-edit-answer-form\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            \u003ctm-msq-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                              [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                              (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":114,"author":{"gitId":"-"},"content":"                                              [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":115,"author":{"gitId":"-"},"content":"            \u003e\u003c/tm-msq-question-edit-answer-form\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            \u003ctm-rubric-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RUBRIC\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                                 [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                                 (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                                 [isDisabled]\u003d\"isFormsDisabled\""},{"lineNumber":120,"author":{"gitId":"-"},"content":"                                                 [id]\u003d\"model.feedbackQuestionId + recipientSubmissionFormModel.recipientIdentifier\"\u003e\u003c/tm-rubric-question-edit-answer-form\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            \u003ctm-constsum-options-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_OPTIONS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":122,"author":{"gitId":"-"},"content":"                                                           [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":123,"author":{"gitId":"-"},"content":"                                                           (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":124,"author":{"gitId":"-"},"content":"                                                           [isDisabled]\u003d\"isFormsDisabled\"\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            \u003c/tm-constsum-options-question-edit-answer-form\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            \u003ctm-constsum-recipients-question-edit-answer-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                                                           [responseDetails]\u003d\"recipientSubmissionFormModel.responseDetails\""},{"lineNumber":128,"author":{"gitId":"-"},"content":"                                                           (responseDetailsChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027responseDetails\u0027, $event)\""},{"lineNumber":129,"author":{"gitId":"-"},"content":"                                                           [isDisabled]\u003d\"isFormsDisabled\"\u003e\u003c/tm-constsum-recipients-question-edit-answer-form\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"comment-section\" *ngIf\u003d\"allowedToHaveParticipantComment\" class\u003d\"col-12 margin-bottom-20px margin-top-10px indent\"\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"recipientSubmissionFormModel.commentByGiver \u0026\u0026 recipientSubmissionFormModel.commentByGiver.originalComment else newComment\"\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              \u003ctm-comment-row [mode]\u003d\"CommentRowMode.EDIT\" [isVisibilityOptionEnabled]\u003d\"false\""},{"lineNumber":135,"author":{"gitId":"-"},"content":"                              [model]\u003d\"recipientSubmissionFormModel.commentByGiver\""},{"lineNumber":136,"author":{"gitId":"-"},"content":"                              (modelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027commentByGiver\u0027, $event)\""},{"lineNumber":137,"author":{"gitId":"-"},"content":"                              [isFeedbackParticipantComment]\u003d\"true\""},{"lineNumber":138,"author":{"gitId":"-"},"content":"                              [questionShowResponsesTo]\u003d\"model.showResponsesTo\""},{"lineNumber":139,"author":{"gitId":"-"},"content":"                              [shouldHideSavingButton]\u003d\"true\""},{"lineNumber":140,"author":{"gitId":"-"},"content":"                              (deleteCommentEvent)\u003d\"triggerDeleteCommentEvent(i)\""},{"lineNumber":141,"author":{"gitId":"-"},"content":"                              (closeEditingEvent)\u003d\"discardEditedParticipantComment(i)\""},{"lineNumber":142,"author":{"gitId":"-"},"content":"                              [isDisabled]\u003d\"isFormsDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e\u003c/tm-comment-row\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"alert alert-warning margin-top-10px\" role\u003d\"alert\" *ngIf\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                You must provide a valid response in order to give a comment or your comment will not be saved!"},{"lineNumber":145,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            \u003cng-template #newComment\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"              \u003cdiv style\u003d\"display: inline-block;\" [ngbTooltip]\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails) ? \u0027Give a valid response in order to comment\u0027 : \u0027\u0027\"\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-add-comment\" *ngIf\u003d\"!recipientSubmissionFormModel.commentByGiver\" class\u003d\"btn btn-light btn-sm\""},{"lineNumber":150,"author":{"gitId":"-"},"content":"                        (click)\u003d\"addNewParticipantCommentToResponse(i)\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"                        [disabled]\u003d\"isFormsDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-comment\"\u003e\u003c/i\u003e [Optional] Comment on your response"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"              \u003cdiv *ngIf\u003d\"recipientSubmissionFormModel.commentByGiver\"\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u003ctm-comment-row [mode]\u003d\"CommentRowMode.ADD\" [isVisibilityOptionEnabled]\u003d\"false\""},{"lineNumber":157,"author":{"gitId":"-"},"content":"                                [isFeedbackParticipantComment]\u003d\"true\""},{"lineNumber":158,"author":{"gitId":"-"},"content":"                                [questionShowResponsesTo]\u003d\"model.showResponsesTo\""},{"lineNumber":159,"author":{"gitId":"-"},"content":"                                [shouldHideSavingButton]\u003d\"true\""},{"lineNumber":160,"author":{"gitId":"-"},"content":"                                [model]\u003d\"recipientSubmissionFormModel.commentByGiver\""},{"lineNumber":161,"author":{"gitId":"-"},"content":"                                (modelChange)\u003d\"triggerRecipientSubmissionFormChange(i, \u0027commentByGiver\u0027, $event)\""},{"lineNumber":162,"author":{"gitId":"-"},"content":"                                (closeEditingEvent)\u003d\"cancelAddingNewParticipantComment(i)\""},{"lineNumber":163,"author":{"gitId":"-"},"content":"                                [isDisabled]\u003d\"isFormsDisabled || isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e\u003c/tm-comment-row\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"alert alert-warning margin-top-10px\" role\u003d\"alert\" *ngIf\u003d\"isFeedbackResponseDetailsEmpty(recipientSubmissionFormModel.responseDetails)\"\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                  You must provide a valid response in order to give a comment or your comment will not be saved!"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            \u003c/ng-template\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-12 constraint-margins\"\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      \u003ctm-contribution-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\""},{"lineNumber":176,"author":{"gitId":"-"},"content":"                                           [recipientSubmissionForms]\u003d\"model.recipientSubmissionForms\""},{"lineNumber":177,"author":{"gitId":"-"},"content":"                                           [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":178,"author":{"gitId":"-"},"content":"                                           (isValidEvent)\u003d\"updateValidity($event)\""},{"lineNumber":179,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-contribution-question-constraint\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      \u003ctm-rank-recipients-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\""},{"lineNumber":181,"author":{"gitId":"-"},"content":"                                              [recipientSubmissionForms]\u003d\"model.recipientSubmissionForms\""},{"lineNumber":182,"author":{"gitId":"-"},"content":"                                              [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":183,"author":{"gitId":"-"},"content":"                                              (isValidEvent)\u003d\"updateValidity($event)\""},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-rank-recipients-question-constraint\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      \u003ctm-constsum-recipients-question-constraint *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\""},{"lineNumber":186,"author":{"gitId":"-"},"content":"                                                  [recipientSubmissionForms]\u003d\"model.recipientSubmissionForms\""},{"lineNumber":187,"author":{"gitId":"-"},"content":"                                                  [questionDetails]\u003d\"model.questionDetails\""},{"lineNumber":188,"author":{"gitId":"-"},"content":"                                                  (isValidEvent)\u003d\"updateValidity($event)\""},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-constsum-recipients-question-constraint\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-warning\" role\u003d\"alert\" *ngIf\u003d\"!model.recipientList.length \u0026\u0026 model.isLoaded\"\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS\"\u003eThis question is for team members and you don\u0027t have any team members. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS_EXCLUDING_SELF\"\u003eThis question is for other teams in this course and this course doesn\u0027t have any other team. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS_EXCLUDING_SELF\"\u003eThis question is for other students in this course and this course doesn\u0027t have any other student. Therefore, you will not be able to answer this question.\u003c/span\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\" *ngIf\u003d\"model.recipientList.length \u003e 0\"\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 text-center\"\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-submit-qn-{{ model.questionNumber }}\" type\u003d\"submit\" class\u003d\"btn btn-success\""},{"lineNumber":201,"author":{"gitId":"-"},"content":"                ngbTooltip\u003d\"You can save your responses for this question at any time and come back later to continue.\""},{"lineNumber":202,"author":{"gitId":"-"},"content":"                (click)\u003d\"saveFeedbackResponses()\" [disabled]\u003d\"isSavingResponses || isSubmissionDisabled\"\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"          \u003ctm-ajax-loading *ngIf\u003d\"isSavingResponses\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"          \u003cspan\u003e{{ isQuestionCountOne ? \"Submit Response\" : \"Submit Response for Question \" + model.questionNumber }}\u003c/span\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"domlimm":2,"-":207}},{"path":"src/web/app/components/question-submission-form/question-submission-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, DoCheck, EventEmitter, Input, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackQuestionType, FeedbackResponseDetails, FeedbackTextQuestionDetails,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { CommentRowModel } from \u0027../comment-box/comment-row/comment-row.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { CommentRowMode } from \u0027../comment-box/comment-row/comment-row.mode\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FeedbackRecipientLabelType,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipient,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"} from \u0027./question-submission-form-model\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The question submission form for a question."},{"lineNumber":24,"author":{"gitId":"-"},"content":" */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  selector: \u0027tm-question-submission-form\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./question-submission-form.component.html\u0027,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./question-submission-form.component.scss\u0027],"},{"lineNumber":29,"author":{"gitId":"-"},"content":"})"},{"lineNumber":30,"author":{"gitId":"-"},"content":"export class QuestionSubmissionFormComponent implements DoCheck {"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode: typeof QuestionSubmissionFormMode \u003d QuestionSubmissionFormMode;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  FeedbackParticipantType: typeof FeedbackParticipantType \u003d FeedbackParticipantType;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType: typeof FeedbackVisibilityType \u003d FeedbackVisibilityType;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  CommentRowMode: typeof CommentRowMode \u003d CommentRowMode;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  isMCQDropDownEnabled: boolean \u003d false;"},{"lineNumber":40,"author":{"gitId":"domlimm"},"content":"  isSaved: boolean \u003d false;"},{"lineNumber":41,"author":{"gitId":"domlimm"},"content":"  hasResponseChanged: boolean \u003d false;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  formMode: QuestionSubmissionFormMode \u003d QuestionSubmissionFormMode.FIXED_RECIPIENT;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  isFormsDisabled: boolean \u003d false;"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  isSubmissionDisabled: boolean \u003d false;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  isSavingResponses: boolean \u003d false;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  set formModel(model: QuestionSubmissionFormModel) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    this.model \u003d model;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine(model.giverType, model.recipientType);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    const visibilitySetting: { [TKey in VisibilityControl]: FeedbackVisibilityType[] } \u003d {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      SHOW_RESPONSE: model.showResponsesTo,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      SHOW_GIVER_NAME: model.showGiverNameTo,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      SHOW_RECIPIENT_NAME: model.showRecipientNameTo,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine.applyVisibilitySettings(visibilitySetting);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    this.allowedToHaveParticipantComment \u003d"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.isAllowedToHaveParticipantComment(this.model.questionType);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    this.recipientLabelType \u003d this.getSelectionLabelType(model.recipientType);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  isQuestionCountOne: boolean \u003d false;"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"domlimm"},"content":"  @Input()"},{"lineNumber":75,"author":{"gitId":"domlimm"},"content":"  isSubmitAllClicked: boolean \u003d false;"},{"lineNumber":76,"author":{"gitId":"domlimm"},"content":""},{"lineNumber":77,"author":{"gitId":"domlimm"},"content":"  @Output()"},{"lineNumber":78,"author":{"gitId":"domlimm"},"content":"  isSubmitAllClickedChange: EventEmitter\u003cboolean\u003e \u003d new EventEmitter\u003cboolean\u003e();"},{"lineNumber":79,"author":{"gitId":"domlimm"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  formModelChange: EventEmitter\u003cQuestionSubmissionFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  responsesSave: EventEmitter\u003cQuestionSubmissionFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  model: QuestionSubmissionFormModel \u003d {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    isLoading: false,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    isLoaded: false,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027\u0027,"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    questionNumber: 0,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    questionBrief: \u0027\u0027,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    recipientList: [],"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    recipientSubmissionForms: [],"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      questionText: \u0027\u0027,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  recipientLabelType: FeedbackRecipientLabelType \u003d FeedbackRecipientLabelType.INCLUDE_NAME;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  isSectionTeamShown: boolean \u003d false;"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  deleteCommentEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  visibilityStateMachine: VisibilityStateMachine;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  allowedToHaveParticipantComment: boolean \u003d false;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  isEveryRecipientSorted: boolean \u003d false;"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"  constructor(private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"              private feedbackResponseService: FeedbackResponsesService) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewVisibilityStateMachine("},{"lineNumber":128,"author":{"gitId":"-"},"content":"            this.model.giverType, this.model.recipientType);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  get hasSectionTeam(): boolean {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      switch (this.recipientLabelType) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        case FeedbackRecipientLabelType.INCLUDE_SECTION:"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        case FeedbackRecipientLabelType.INCLUDE_TEAM:"},{"lineNumber":136,"author":{"gitId":"-"},"content":"          return true;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":138,"author":{"gitId":"-"},"content":"          return false;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    return false;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  ngDoCheck(): void {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    if (this.model.isLoaded \u0026\u0026 !this.isEveryRecipientSorted) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      this.sortRecipientsByName();"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"domlimm"},"content":""},{"lineNumber":149,"author":{"gitId":"domlimm"},"content":"    if (this.model.recipientSubmissionForms.some("},{"lineNumber":150,"author":{"gitId":"domlimm"},"content":"      (response) \u003d\u003e response.responseId.length \u003e 0) \u0026\u0026 !this.isSaved) {"},{"lineNumber":151,"author":{"gitId":"domlimm"},"content":"      this.isSaved \u003d true;"},{"lineNumber":152,"author":{"gitId":"domlimm"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"domlimm"},"content":""},{"lineNumber":154,"author":{"gitId":"domlimm"},"content":"    if (this.hasResponseChanged) {"},{"lineNumber":155,"author":{"gitId":"domlimm"},"content":"      this.isSaved \u003d false;"},{"lineNumber":156,"author":{"gitId":"domlimm"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"domlimm"},"content":""},{"lineNumber":158,"author":{"gitId":"domlimm"},"content":"    if (this.isSubmitAllClicked) {"},{"lineNumber":159,"author":{"gitId":"domlimm"},"content":"      if (this.model.recipientSubmissionForms.some((response) \u003d\u003e response.responseId.length \u003e 0)) {"},{"lineNumber":160,"author":{"gitId":"domlimm"},"content":"        this.isSaved \u003d true;"},{"lineNumber":161,"author":{"gitId":"domlimm"},"content":"      } else if (this.model.recipientSubmissionForms.every((form) \u003d\u003e form.responseId.length \u003d\u003d\u003d 0)) {"},{"lineNumber":162,"author":{"gitId":"domlimm"},"content":"        this.isSaved \u003d false;"},{"lineNumber":163,"author":{"gitId":"domlimm"},"content":"      }"},{"lineNumber":164,"author":{"gitId":"domlimm"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"  private compareByName(firstRecipient: FeedbackResponseRecipient,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     secondRecipient: FeedbackResponseRecipient): number {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    return firstRecipient.recipientName.localeCompare(secondRecipient.recipientName);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  private compareBySection(firstRecipient: FeedbackResponseRecipient,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     secondRecipient: FeedbackResponseRecipient): number {"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    if (firstRecipient.recipientSection \u0026\u0026 secondRecipient.recipientSection) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      return firstRecipient.recipientSection.localeCompare(secondRecipient.recipientSection);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    if (firstRecipient.recipientSection) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      return -1;"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"    if (secondRecipient.recipientSection) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      return 1;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"    return 0;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"  private compareByTeam(firstRecipient: FeedbackResponseRecipient,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     secondRecipient: FeedbackResponseRecipient): number {"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"    if (firstRecipient.recipientTeam \u0026\u0026 secondRecipient.recipientTeam) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      return firstRecipient.recipientTeam.localeCompare(secondRecipient.recipientTeam);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"    if (firstRecipient.recipientTeam) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      return -1;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"    if (secondRecipient.recipientTeam) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      return 1;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"    return 0;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"  private updateSubmissionFormIndexes(): void {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    const indexes: Map\u003cString, number\u003e \u003d new Map();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    this.model.recipientList.forEach((recipient: FeedbackResponseRecipient, index: number) \u003d\u003e {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      indexes.set(recipient.recipientIdentifier, index + 1);"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"    this.model.recipientSubmissionForms.sort((firstRecipient: FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      secondRecipient: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      const firstRecipientIndex: number \u003d indexes.get(firstRecipient.recipientIdentifier) || Number.MAX_SAFE_INTEGER;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      const secondRecipientIndex: number \u003d indexes.get(secondRecipient.recipientIdentifier) || Number.MAX_SAFE_INTEGER;"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"      return firstRecipientIndex - secondRecipientIndex;"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    this.isEveryRecipientSorted \u003d true;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"  sortRecipientsByName(): void {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    this.model.recipientList.sort(this.compareByName);"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    this.updateSubmissionFormIndexes();"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"  private sortRecipientsBySectionTeam(): void {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    if (this.recipientLabelType \u003d\u003d\u003d FeedbackRecipientLabelType.INCLUDE_SECTION) {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      this.model.recipientList.sort((firstRecipient, secondRecipient) \u003d\u003e {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        return this.compareBySection(firstRecipient, secondRecipient)"},{"lineNumber":233,"author":{"gitId":"-"},"content":"          || this.compareByTeam(firstRecipient, secondRecipient);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"    } else if (this.recipientLabelType \u003d\u003d\u003d FeedbackRecipientLabelType.INCLUDE_TEAM) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      this.model.recipientList.sort(this.compareByTeam);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    this.updateSubmissionFormIndexes();"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   * Tracks submission form for each recipient by the index in the array."},{"lineNumber":244,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":245,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  trackRecipientSubmissionFormByFn(index: number): any {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    return index;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   * Gets recipient name in {@code FIXED_RECIPIENT} mode."},{"lineNumber":253,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  getRecipientName(recipientIdentifier: string): string {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    const recipient: FeedbackResponseRecipient | undefined \u003d"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        this.model.recipientList.find("},{"lineNumber":257,"author":{"gitId":"-"},"content":"            (r: FeedbackResponseRecipient) \u003d\u003e r.recipientIdentifier \u003d\u003d\u003d recipientIdentifier);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    return recipient ? recipient.recipientName : \u0027Unknown\u0027;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   * Checks whether the recipient is already selected in {@code FLEXIBLE_RECIPIENT} mode."},{"lineNumber":263,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  isRecipientSelected(recipient: FeedbackResponseRecipient): boolean {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    return this.model.recipientSubmissionForms.some("},{"lineNumber":266,"author":{"gitId":"-"},"content":"        (recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            recipientSubmissionFormModel.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":271,"author":{"gitId":"-"},"content":"   * Triggers the change of the recipient submission form."},{"lineNumber":272,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  triggerRecipientSubmissionFormChange(index: number, field: string, data: any): void {"},{"lineNumber":274,"author":{"gitId":"domlimm"},"content":"    this.hasResponseChanged \u003d true;"},{"lineNumber":275,"author":{"gitId":"domlimm"},"content":"    this.isSubmitAllClickedChange.emit(false);"},{"lineNumber":276,"author":{"gitId":"domlimm"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] \u003d"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        this.model.recipientSubmissionForms.slice();"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    recipientSubmissionForms[index] \u003d {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      ...recipientSubmissionForms[index],"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      [field]: data,"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      recipientSubmissionForms,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":291,"author":{"gitId":"-"},"content":"   * Triggers deletion of a participant comment associated with the response."},{"lineNumber":292,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  triggerDeleteCommentEvent(index: number): void {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    this.deleteCommentEvent.emit(index);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":298,"author":{"gitId":"-"},"content":"   * Add new participant comment to response with index."},{"lineNumber":299,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  addNewParticipantCommentToResponse(index: number): void {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027, {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"      isEditing: true,"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":311,"author":{"gitId":"-"},"content":"   * Cancel adding new participant comment."},{"lineNumber":312,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":313,"author":{"gitId":"-"},"content":"  cancelAddingNewParticipantComment(index: number): void {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027, null);"},{"lineNumber":315,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":318,"author":{"gitId":"-"},"content":"   * Discards the current editing and restore the original comment."},{"lineNumber":319,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":320,"author":{"gitId":"-"},"content":"  discardEditedParticipantComment(index: number): void {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    const commentModel: CommentRowModel | undefined \u003d this.model.recipientSubmissionForms[index].commentByGiver;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    if (!commentModel || !commentModel.originalComment) {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    this.triggerRecipientSubmissionFormChange(index, \u0027commentByGiver\u0027,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":327,"author":{"gitId":"-"},"content":"          ...commentModel,"},{"lineNumber":328,"author":{"gitId":"-"},"content":"          commentEditFormModel: {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            commentText: commentModel.originalComment.commentText,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":331,"author":{"gitId":"-"},"content":"          isEditing: false,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":333,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":336,"author":{"gitId":"-"},"content":"   * Checks whether the response is empty or not."},{"lineNumber":337,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":338,"author":{"gitId":"-"},"content":"  isFeedbackResponseDetailsEmpty(responseDetails: FeedbackResponseDetails): boolean {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    return this.feedbackResponseService.isFeedbackResponseDetailsEmpty("},{"lineNumber":340,"author":{"gitId":"-"},"content":"        this.model.questionType, responseDetails);"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":344,"author":{"gitId":"-"},"content":"   * Updates validity of all responses in a question."},{"lineNumber":345,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":346,"author":{"gitId":"-"},"content":"  updateValidity(isValid: boolean): void {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    if (this.model.recipientSubmissionForms.length \u003d\u003d\u003d 0) { return; }"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    const recipientSubmissionForms: FeedbackResponseRecipientSubmissionFormModel[] \u003d"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        this.model.recipientSubmissionForms.slice().map("},{"lineNumber":350,"author":{"gitId":"-"},"content":"            (model: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e ({ ...model, isValid }));"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    this.formModelChange.emit({"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      recipientSubmissionForms,"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":355,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":356,"author":{"gitId":"-"},"content":""},{"lineNumber":357,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":358,"author":{"gitId":"-"},"content":"   * Triggers saving of responses for the specific question."},{"lineNumber":359,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":360,"author":{"gitId":"-"},"content":"  saveFeedbackResponses(): void {"},{"lineNumber":361,"author":{"gitId":"domlimm"},"content":"    this.isSaved \u003d true;"},{"lineNumber":362,"author":{"gitId":"domlimm"},"content":"    this.hasResponseChanged \u003d false;"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    this.responsesSave.emit(this.model);"},{"lineNumber":364,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"  getSelectionLabelType(recipientType: FeedbackParticipantType): FeedbackRecipientLabelType {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    switch (recipientType) {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      case FeedbackParticipantType.STUDENTS:"},{"lineNumber":369,"author":{"gitId":"-"},"content":"      case FeedbackParticipantType.STUDENTS_EXCLUDING_SELF:"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        return FeedbackRecipientLabelType.INCLUDE_SECTION;"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      case FeedbackParticipantType.STUDENTS_IN_SAME_SECTION:"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        return FeedbackRecipientLabelType.INCLUDE_TEAM;"},{"lineNumber":373,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        return FeedbackRecipientLabelType.INCLUDE_NAME;"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":376,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"  getSelectionOptionLabel(recipient: FeedbackResponseRecipient): string {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    if (!this.isSectionTeamShown) {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      return recipient.recipientName;"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":382,"author":{"gitId":"-"},"content":""},{"lineNumber":383,"author":{"gitId":"-"},"content":"    if (recipient.recipientSection \u0026\u0026 recipient.recipientTeam) {"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      return `${recipient.recipientSection} / ${recipient.recipientTeam} | ${recipient.recipientName}`;"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"    if (recipient.recipientSection) {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      return `${recipient.recipientSection} | ${recipient.recipientName}`;"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"    if (recipient.recipientTeam) {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      return `${recipient.recipientTeam} | ${recipient.recipientName}`;"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"    return recipient.recipientName;"},{"lineNumber":396,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"  toggleSectionTeam(event: Event): void {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    const checkbox : HTMLInputElement \u003d event.target as HTMLInputElement;"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    if (checkbox.checked) {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"      this.isSectionTeamShown \u003d true;"},{"lineNumber":402,"author":{"gitId":"-"},"content":"      this.sortRecipientsBySectionTeam();"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"      this.isSectionTeamShown \u003d false;"},{"lineNumber":405,"author":{"gitId":"-"},"content":"      this.sortRecipientsByName();"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":407,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":410,"author":{"gitId":"-"},"content":"   * Triggers adding a col-12 if MCQ Dropdown is enabled."},{"lineNumber":411,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":412,"author":{"gitId":"-"},"content":"  refreshCssForDropdownMCQ(add: boolean): void {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    this.isMCQDropDownEnabled \u003d add;"},{"lineNumber":414,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":415,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"domlimm":30,"-":385}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasLoadingFeedbackSessionFailed\" [message]\u003d\"\u0027Failed to load feedback session\u0027\" (retryEvent)\u003d\"loadFeedbackSession()\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ctm-session-edit-form *tmIsLoading\u003d\"isLoadingFeedbackSession\" [formMode]\u003d\"SessionEditFormMode.EDIT\" [(model)]\u003d\"sessionEditFormModel\" (editExistingSessionEvent)\u003d\"editExistingSessionHandler()\" (cancelEditingSessionEvent)\u003d\"cancelEditingSessionHandler()\""},{"lineNumber":3,"author":{"gitId":"-"},"content":"                      (deleteExistingSessionEvent)\u003d\"deleteExistingSessionHandler()\" (copyCurrentSessionEvent)\u003d\"copyCurrentSession()\"\u003e\u003c/tm-session-edit-form\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasLoadingFeedbackQuestionsFailed\" [message]\u003d\"\u0027Failed to load feedback questions\u0027\" (retryEvent)\u003d\"loadFeedbackQuestions()\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cdiv *ngIf\u003d\"!isLoadingFeedbackQuestions \u0026\u0026 questionEditFormModels.length\" class\u003d\"offset-md-10 margin-vertical-20px\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cbutton id\u003d\"btn-collapse-expand\" class\u003d\"btn expand-btn btn-light margin-top-30px\" (click)\u003d\"isAllCollapsed ? expandAll() : collapseAll()\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      {{isAllCollapsed ? \"Expand\" : \"Collapse\" }} All"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003c/button\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isLoadingFeedbackQuestions\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cdiv *ngFor\u003d\"let questionEditFormModel of questionEditFormModels; let i \u003d index; trackBy: trackQuestionEditFormByFn\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003ctm-question-edit-form [formMode]\u003d\"QuestionEditFormMode.EDIT\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                             [numOfQuestions]\u003d\"questionEditFormModels.length\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"                             (saveExistingQuestionEvent)\u003d\"saveExistingQuestionHandler(i)\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"                             (discardExistingQuestionChangesEvent)\u003d\"discardExistingQuestionHandler(i)\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"                             (duplicateCurrentQuestionEvent)\u003d\"duplicateCurrentQuestionHandler(i)\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"                             (deleteCurrentQuestionEvent)\u003d\"deleteExistingQuestionHandler(i)\""},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"                             [(formModel)]\u003d\"questionEditFormModels[i]\""},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"                             [isQuestionPublished]\u003d\"sessionEditFormModel.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED\"\u003e\u003c/tm-question-edit-form\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003ca class\u003d\"d-block text-end cursor-pointer\" (click)\u003d\"scrollToTopOfPage()\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      Back to Top \u003ci class\u003d\"fas fa-arrow-up\"\u003e\u003c/i\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/a\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isAddingFromTemplate\"\u003e\u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u003cbr/\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card\" *ngIf\u003d\"!isLoadingFeedbackQuestions \u0026\u0026 !isAddingQuestionPanelExpanded\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003ctm-adding-question-panel (templateQuestionModalEvent)\u003d\"templateQuestionModalHandler()\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"                              (populateAndShowNewQuestionFormEvent)\u003d\"populateAndShowNewQuestionForm($event)\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"                              (copyQuestionsFromOtherSessionsEvent)\u003d\"copyQuestionsFromOtherSessionsHandler()\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"                              [isCopyingQuestion]\u003d\"isCopyingQuestion\"\u003e\u003c/tm-adding-question-panel\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003ctm-question-edit-form *ngIf\u003d\"isAddingQuestionPanelExpanded\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"                         [formMode]\u003d\"QuestionEditFormMode.ADD\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                         [numOfQuestions]\u003d\"questionEditFormModels.length + 1\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"                         (discardNewQuestionEvent)\u003d\"isAddingQuestionPanelExpanded \u003d false\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                         (createNewQuestionEvent)\u003d\"createNewQuestionHandler()\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"                         [(formModel)]\u003d\"newQuestionEditFormModel\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003e\u003c/tm-question-edit-form\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003cbr/\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003cdiv *ngIf\u003d\"!isLoadingFeedbackQuestions\" class\u003d\"card\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003ctm-preview-session-panel [courseId]\u003d\"courseId\" [feedbackSessionName]\u003d\"feedbackSessionName\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"                              [emailOfStudentToPreview]\u003d\"emailOfStudentToPreview\" [studentsOfCourse]\u003d\"studentsOfCourse\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"                              [instructorsCanBePreviewedAs]\u003d\"instructorsOfCourse\" [emailOfInstructorToPreview]\u003d\"emailOfInstructorToPreview\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003e\u003c/tm-preview-session-panel\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cng-template #modifiedTimestampsModal\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cp\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    The feedback session has been copied to all courses. However, changes are made to some session timings as the"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    existing timings are no longer valid in these courses: {{ this.coursesOfModifiedSession.join(\u0027, \u0027) }}."},{"lineNumber":56,"author":{"gitId":"-"},"content":"    The changes are as follows:"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/p\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003ctable class\u003d\"table table-bordered\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003cthead\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003ctr\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003cth\u003eSession Name\u003c/th\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003cth\u003eTimings\u003c/th\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003cth\u003eExisting\u003c/th\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003cth\u003eModified\u003c/th\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/tr\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c/thead\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003ctbody\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003cng-container *ngFor\u003d\"let session of this.modifiedSession | keyvalue\"\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003ctr [ngClass]\u003d\"{\u0027text-color-lightgray\u0027 : session.value.oldTimestamp.submissionStartTimestamp \u003d\u003d\u003d session.value.newTimestamp.submissionStartTimestamp}\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003ctd rowspan\u003d\"4\"\u003e{{ session.key }}\u003c/td\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003ctd\u003eSubmission opening time\u003c/td\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003ctd\u003e{{ session.value.oldTimestamp.submissionStartTimestamp }}\u003c/td\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003ctd\u003e{{ session.value.newTimestamp.submissionStartTimestamp }}\u003c/td\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      \u003c/tr\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      \u003ctr [ngClass]\u003d\"{\u0027text-color-lightgray\u0027 : session.value.oldTimestamp.submissionEndTimestamp \u003d\u003d\u003d session.value.newTimestamp.submissionEndTimestamp}\"\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        \u003ctd\u003eSubmission closing time\u003c/td\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003ctd\u003e{{ session.value.oldTimestamp.submissionEndTimestamp }}\u003c/td\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        \u003ctd\u003e{{ session.value.newTimestamp.submissionEndTimestamp }}\u003c/td\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      \u003c/tr\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      \u003ctr [ngClass]\u003d\"{\u0027text-color-lightgray\u0027 : session.value.oldTimestamp.sessionVisibleTimestamp \u003d\u003d\u003d session.value.newTimestamp.sessionVisibleTimestamp}\"\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003ctd\u003eSession visible time\u003c/td\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        \u003ctd\u003e{{ session.value.oldTimestamp.sessionVisibleTimestamp }}\u003c/td\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003ctd\u003e{{ session.value.newTimestamp.sessionVisibleTimestamp }}\u003c/td\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      \u003c/tr\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      \u003ctr [ngClass]\u003d\"{\u0027text-color-lightgray\u0027 : session.value.oldTimestamp.responseVisibleTimestamp \u003d\u003d\u003d session.value.newTimestamp.responseVisibleTimestamp}\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003ctd\u003eResponse visible time\u003c/td\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003ctd\u003e{{ session.value.oldTimestamp.responseVisibleTimestamp }}\u003c/td\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003ctd\u003e{{ session.value.newTimestamp.responseVisibleTimestamp }}\u003c/td\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003c/tr\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/ng-container\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    \u003c/tbody\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  \u003c/table\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  \u003cbr\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003cp\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    Please modify the timings as necessary."},{"lineNumber":96,"author":{"gitId":"-"},"content":"  \u003c/p\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/ng-template\u003e"}],"authorContributionMap":{"cedricongjh":2,"-":95}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { ChangeDetectorRef, Component, OnInit, TemplateRef, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { concatMap, finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { DateTimeService } from \u0027../../../services/datetime.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { DeadlineExtensionHelper } from \u0027../../../services/deadline-extension-helper\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  CommonVisibilitySetting,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FeedbackQuestionsService,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  NewQuestionModel,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"} from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { FeedbackSessionActionsService } from \u0027../../../services/feedback-session-actions.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { ProgressBarService } from \u0027../../../services/progress-bar.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  Courses,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackQuestions,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackSessions,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails, FeedbackVisibilityType,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  HasResponses,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  Instructors,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import { DateFormat, TimeFormat, getDefaultDateFormat, getLatestTimeFormat } from \u0027../../../types/datetime-const\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import { CopySessionModalResult } from \u0027../../components/copy-session-modal/copy-session-modal-model\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import { CopySessionModalComponent } from \u0027../../components/copy-session-modal/copy-session-modal.component\u0027;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  ExtensionConfirmModalComponent,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  ExtensionModalType,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"} from \u0027../../components/extension-confirm-modal/extension-confirm-modal.component\u0027;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  QuestionEditFormMode,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  QuestionEditFormModel,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-edit-form/question-edit-form-model\u0027;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  SessionEditFormMode,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  SessionEditFormModel,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"} from \u0027../../components/session-edit-form/session-edit-form-model\u0027;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"import { InstructorSessionBasePageComponent } from \u0027../instructor-session-base-page.component\u0027;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  InstructorExtensionTableColumnModel,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  StudentExtensionTableColumnModel,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"} from \u0027../instructor-session-individual-extension-page/extension-table-column-model\u0027;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  FeedbackSessionTabModel,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"} from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal-model\u0027;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  CopyQuestionsFromOtherSessionsModalComponent,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"} from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component\u0027;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"import { TemplateQuestionModalComponent } from \u0027./template-question-modal/template-question-modal.component\u0027;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":80,"author":{"gitId":"-"},"content":" * Instructor feedback session edit page."},{"lineNumber":81,"author":{"gitId":"-"},"content":" */"},{"lineNumber":82,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-session-edit-page\u0027,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-session-edit-page.component.html\u0027,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-session-edit-page.component.scss\u0027],"},{"lineNumber":86,"author":{"gitId":"-"},"content":"})"},{"lineNumber":87,"author":{"gitId":"-"},"content":"export class InstructorSessionEditPageComponent extends InstructorSessionBasePageComponent implements OnInit {"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  QuestionEditFormMode: typeof QuestionEditFormMode \u003d QuestionEditFormMode;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"},{"lineNumber":93,"author":{"gitId":"cedricongjh"},"content":"  FeedbackSessionPublishStatus: typeof FeedbackSessionPublishStatus \u003d FeedbackSessionPublishStatus;"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  // url param"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  isEditingMode: boolean \u003d false;"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  courseName: string \u003d \u0027\u0027;"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  // models"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  sessionEditFormModel: SessionEditFormModel \u003d {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    courseName: \u0027\u0027,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    submissionStartTime: getLatestTimeFormat(),"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    submissionStartDate: getDefaultDateFormat(),"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    submissionEndTime: getLatestTimeFormat(),"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    submissionEndDate: getDefaultDateFormat(),"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    customSessionVisibleTime: getLatestTimeFormat(),"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    customSessionVisibleDate: getDefaultDateFormat(),"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    customResponseVisibleTime: getLatestTimeFormat(),"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    customResponseVisibleDate: getDefaultDateFormat(),"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    templateSessionName: \u0027\u0027,"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    isEditable: false,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    isDeleting: false,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    isCopying: false,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    hasVisibleSettingsPanelExpanded: false,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    hasEmailSettingsPanelExpanded: false,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  studentDeadlines: Record\u003cstring, number\u003e \u003d {};"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  instructorDeadlines: Record\u003cstring, number\u003e \u003d {};"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  // to get the original session model on discard changes"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  feedbackSessionModelBeforeEditing: SessionEditFormModel \u003d JSON.parse(JSON.stringify(this.sessionEditFormModel));"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"  // to get the original question model"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  feedbackQuestionModels: Map\u003cstring, FeedbackQuestion\u003e \u003d new Map();"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"  questionEditFormModels: QuestionEditFormModel[] \u003d [];"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"  newQuestionEditFormModel: QuestionEditFormModel \u003d {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027\u0027,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    questionNumber: 0,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    questionBrief: \u0027\u0027,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    isQuestionHasResponses: false,"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      questionText: \u0027\u0027,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS_EXCLUDING_SELF,"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 1,"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    isDeleting: false,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    isDuplicating: false,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    isEditable: true,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    isCollapsed: false,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    isVisibilityChanged: false,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    isFeedbackPathChanged: false,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    isQuestionDetailsChanged: false,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"  isAddingFromTemplate: boolean \u003d false;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  isAddingQuestionPanelExpanded: boolean \u003d false;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  isLoadingFeedbackSession: boolean \u003d false;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  hasLoadingFeedbackSessionFailed: boolean \u003d false;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  isLoadingFeedbackQuestions: boolean \u003d false;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  hasLoadingFeedbackQuestionsFailed: boolean \u003d false;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  isCopyingQuestion: boolean \u003d false;"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"  // all students of the course"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  studentsOfCourse: Student[] \u003d [];"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  emailOfStudentToPreview: string \u003d \u0027\u0027;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  // all instructors of the course"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  instructorsOfCourse: Instructor[] \u003d [];"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  emailOfInstructorToPreview: string \u003d \u0027\u0027;"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"  get isAllCollapsed(): boolean {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    return this.questionEditFormModels.some((model: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      return model.isCollapsed;"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"  @ViewChild(\u0027modifiedTimestampsModal\u0027) modifiedTimestampsModal!: TemplateRef\u003cany\u003e;"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"  constructor(instructorService: InstructorService,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"              statusMessageService: StatusMessageService,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"              navigationService: NavigationService,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"              feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"              feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"              tableComparatorService: TableComparatorService,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"              ngbModal: NgbModal,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"              simpleModalService: SimpleModalService,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"              progressBarService: ProgressBarService,"},{"lineNumber":216,"author":{"gitId":"-"},"content":"              feedbackSessionActionsService: FeedbackSessionActionsService,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"              timezoneService: TimezoneService,"},{"lineNumber":218,"author":{"gitId":"-"},"content":"              private datetimeService: DateTimeService,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":221,"author":{"gitId":"-"},"content":"              private route: ActivatedRoute,"},{"lineNumber":222,"author":{"gitId":"-"},"content":"              private changeDetectorRef: ChangeDetectorRef) {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    super(instructorService, statusMessageService, navigationService,"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        feedbackSessionsService, feedbackQuestionsService, tableComparatorService,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        ngbModal, simpleModalService, progressBarService, feedbackSessionActionsService, timezoneService);"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      this.isEditingMode \u003d queryParams.editingMode \u003d\u003d\u003d \u0027true\u0027;"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"      this.loadFeedbackSession();"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      this.loadFeedbackQuestions();"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      this.getAllStudentsOfCourse();"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      this.getAllInstructors();"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":242,"author":{"gitId":"-"},"content":"   * Loads a feedback session."},{"lineNumber":243,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  loadFeedbackSession(): void {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    this.hasLoadingFeedbackSessionFailed \u003d false;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    this.isLoadingFeedbackSession \u003d true;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    // load the course of the feedback session first"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    this.courseService.getCourseAsInstructor(this.courseId).subscribe({"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      next: (course: Course) \u003d\u003e {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        this.courseName \u003d course.courseName;"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"        this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":253,"author":{"gitId":"-"},"content":"          courseId: this.courseId,"},{"lineNumber":254,"author":{"gitId":"-"},"content":"          feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"          intent: Intent.FULL_DETAIL,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"          this.isLoadingFeedbackSession \u003d false;"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }))"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            .subscribe({"},{"lineNumber":260,"author":{"gitId":"-"},"content":"              next: (feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession, this.isEditingMode);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                this.feedbackSessionModelBeforeEditing \u003d this.getSessionEditFormModel(feedbackSession);"},{"lineNumber":263,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":264,"author":{"gitId":"-"},"content":"              error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                this.hasLoadingFeedbackSessionFailed \u003d true;"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":267,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        this.isLoadingFeedbackSession \u003d false;"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        this.hasLoadingFeedbackSessionFailed \u003d true;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":279,"author":{"gitId":"-"},"content":"   * Copies the feedback session."},{"lineNumber":280,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  copyCurrentSession(): Promise\u003cvoid\u003e {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    // load course candidates first"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    return new Promise\u003cvoid\u003e((_resolve: any, reject: any) \u003d\u003e {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      this.courseService.getInstructorCoursesThatAreActive()"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      .pipe(finalize(() \u003d\u003e {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.isCopying \u003d false;"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      }))"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      .subscribe((courses: Courses) \u003d\u003e {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        this.failedToCopySessions \u003d {};"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        this.coursesOfModifiedSession \u003d [];"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        this.modifiedSession \u003d {};"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.ngbModal.open(CopySessionModalComponent);"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.newFeedbackSessionName \u003d this.feedbackSessionName;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.courseCandidates \u003d courses.courses;"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.sessionToCopyCourseId \u003d this.courseId;"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"        modalRef.result.then((result: CopySessionModalResult) \u003d\u003e {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"          const requestList: Observable\u003cFeedbackSession\u003e[] \u003d this.createSessionCopyRequestsFromModal("},{"lineNumber":299,"author":{"gitId":"-"},"content":"              result, this.courseId, this.feedbackSessionName);"},{"lineNumber":300,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.isCopying \u003d true;"},{"lineNumber":301,"author":{"gitId":"-"},"content":"          if (requestList.length \u003d\u003d\u003d 1) {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            this.copySingleSession(requestList[0].pipe(finalize(() \u003d\u003e {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"              this.sessionEditFormModel.isCopying \u003d false;"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            })), this.modifiedTimestampsModal);"},{"lineNumber":305,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":306,"author":{"gitId":"-"},"content":"          if (requestList.length \u003e 1) {"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            forkJoin(requestList)"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            .pipe(finalize(() \u003d\u003e {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"              this.sessionEditFormModel.isCopying \u003d false;"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            }))"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            .subscribe(() \u003d\u003e {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"              this.showCopyStatusMessage(this.modifiedTimestampsModal);"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":314,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"          reject(resp);"},{"lineNumber":317,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        .catch(() \u003d\u003e {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.isCopying \u003d false;"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":327,"author":{"gitId":"-"},"content":"   * Gets the {@code sessionEditFormModel} with {@link FeedbackSession} entity."},{"lineNumber":328,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":329,"author":{"gitId":"-"},"content":"  getSessionEditFormModel(feedbackSession: FeedbackSession, isEditable: boolean \u003d false): SessionEditFormModel {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    const submissionStart: { date: DateFormat, time: TimeFormat } \u003d"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        this.datetimeService.getDateTimeAtTimezone(feedbackSession.submissionStartTimestamp,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"          feedbackSession.timeZone, true);"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    const submissionEnd: { date: DateFormat, time: TimeFormat } \u003d"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        this.datetimeService.getDateTimeAtTimezone(feedbackSession.submissionEndTimestamp,"},{"lineNumber":336,"author":{"gitId":"-"},"content":"          feedbackSession.timeZone, true);"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"    const model: SessionEditFormModel \u003d {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      isEditable,"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      courseId: feedbackSession.courseId,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      timeZone: feedbackSession.timeZone,"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      courseName: this.courseName,"},{"lineNumber":343,"author":{"gitId":"-"},"content":"      feedbackSessionName: feedbackSession.feedbackSessionName,"},{"lineNumber":344,"author":{"gitId":"-"},"content":"      instructions: feedbackSession.instructions,"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"      submissionStartTime: submissionStart.time,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      submissionStartDate: submissionStart.date,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      submissionEndTime: submissionEnd.time,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      submissionEndDate: submissionEnd.date,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      gracePeriod: feedbackSession.gracePeriod,"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: feedbackSession.sessionVisibleSetting,"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      customSessionVisibleTime: getLatestTimeFormat(),"},{"lineNumber":354,"author":{"gitId":"-"},"content":"      customSessionVisibleDate: getDefaultDateFormat(),"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"      responseVisibleSetting: feedbackSession.responseVisibleSetting,"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      customResponseVisibleTime: getLatestTimeFormat(),"},{"lineNumber":358,"author":{"gitId":"-"},"content":"      customResponseVisibleDate: getDefaultDateFormat(),"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"      submissionStatus: feedbackSession.submissionStatus,"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      publishStatus: feedbackSession.publishStatus,"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"      templateSessionName: \u0027\u0027,"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: feedbackSession.isClosingEmailEnabled,"},{"lineNumber":366,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: feedbackSession.isPublishedEmailEnabled,"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":369,"author":{"gitId":"-"},"content":"      isDeleting: false,"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      isCopying: false,"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      hasVisibleSettingsPanelExpanded: feedbackSession.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.AT_OPEN"},{"lineNumber":372,"author":{"gitId":"-"},"content":"          || feedbackSession.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.LATER,"},{"lineNumber":373,"author":{"gitId":"-"},"content":"      hasEmailSettingsPanelExpanded: !feedbackSession.isClosingEmailEnabled || !feedbackSession.isPublishedEmailEnabled,"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"    this.studentDeadlines \u003d feedbackSession.studentDeadlines;"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    this.instructorDeadlines \u003d feedbackSession.instructorDeadlines;"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"    if (feedbackSession.customSessionVisibleTimestamp) {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      const customSessionVisible: { date: DateFormat, time: TimeFormat } \u003d"},{"lineNumber":381,"author":{"gitId":"-"},"content":"          this.datetimeService.getDateTimeAtTimezone(feedbackSession.customSessionVisibleTimestamp,"},{"lineNumber":382,"author":{"gitId":"-"},"content":"              feedbackSession.timeZone, true);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"      model.customSessionVisibleTime \u003d customSessionVisible.time;"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      model.customSessionVisibleDate \u003d customSessionVisible.date;"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"    if (feedbackSession.customResponseVisibleTimestamp) {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      const customResponseVisible: { date: DateFormat, time: TimeFormat } \u003d"},{"lineNumber":389,"author":{"gitId":"-"},"content":"          this.datetimeService.getDateTimeAtTimezone(feedbackSession.customResponseVisibleTimestamp,"},{"lineNumber":390,"author":{"gitId":"-"},"content":"              feedbackSession.timeZone, true);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      model.customResponseVisibleTime \u003d customResponseVisible.time;"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      model.customResponseVisibleDate \u003d customResponseVisible.date;"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"    return model;"},{"lineNumber":396,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":399,"author":{"gitId":"-"},"content":"   * Handles editing existing session event."},{"lineNumber":400,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":401,"author":{"gitId":"-"},"content":"  editExistingSessionHandler(): void {"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    this.feedbackSessionModelBeforeEditing \u003d JSON.parse(JSON.stringify(this.sessionEditFormModel));"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"    const submissionStartTime: number \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":405,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.submissionStartDate, this.sessionEditFormModel.submissionStartTime,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.timeZone, true);"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    const submissionEndTime: number \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":408,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.submissionEndDate, this.sessionEditFormModel.submissionEndTime,"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.timeZone, true);"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    let sessionVisibleTime: number \u003d 0;"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    if (this.sessionEditFormModel.sessionVisibleSetting \u003d\u003d\u003d SessionVisibleSetting.CUSTOM) {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      sessionVisibleTime \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":413,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.customSessionVisibleDate, this.sessionEditFormModel.customSessionVisibleTime,"},{"lineNumber":414,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.timeZone, true);"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    let responseVisibleTime: number \u003d 0;"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    if (this.sessionEditFormModel.responseVisibleSetting \u003d\u003d\u003d ResponseVisibleSetting.CUSTOM) {"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      responseVisibleTime \u003d this.timezoneService.resolveLocalDateTime("},{"lineNumber":419,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.customResponseVisibleDate, this.sessionEditFormModel.customResponseVisibleTime,"},{"lineNumber":420,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.timeZone, true);"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"    this.deleteDeadlineExtensionsHandler(submissionEndTime).subscribe((isUpdateSession) \u003d\u003e {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      if (isUpdateSession) {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        this.updateFeedbackSession(submissionStartTime, submissionEndTime, sessionVisibleTime, responseVisibleTime);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":428,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"-"},"content":"  updateFeedbackSession(submissionStartTime: number, submissionEndTime: number, sessionVisibleTime: number,"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    responseVisibleTime: number): void {"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isSaving \u003d true;"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isEditable \u003d false;"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.updateFeedbackSession(this.courseId, this.feedbackSessionName, {"},{"lineNumber":435,"author":{"gitId":"-"},"content":"      instructions: this.sessionEditFormModel.instructions,"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"      submissionStartTimestamp: submissionStartTime,"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      submissionEndTimestamp: submissionEndTime,"},{"lineNumber":439,"author":{"gitId":"-"},"content":"      gracePeriod: this.sessionEditFormModel.gracePeriod,"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: this.sessionEditFormModel.sessionVisibleSetting,"},{"lineNumber":442,"author":{"gitId":"-"},"content":"      customSessionVisibleTimestamp: sessionVisibleTime,"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"      responseVisibleSetting: this.sessionEditFormModel.responseVisibleSetting,"},{"lineNumber":445,"author":{"gitId":"-"},"content":"      customResponseVisibleTimestamp: responseVisibleTime,"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: this.sessionEditFormModel.isClosingEmailEnabled,"},{"lineNumber":448,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: this.sessionEditFormModel.isPublishedEmailEnabled,"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"      studentDeadlines: this.studentDeadlines,"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      instructorDeadlines: this.instructorDeadlines,"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":453,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.isSaving \u003d false;"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    })).subscribe({"},{"lineNumber":455,"author":{"gitId":"-"},"content":"      next: (feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession);"},{"lineNumber":457,"author":{"gitId":"-"},"content":""},{"lineNumber":458,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast(\u0027The feedback session has been updated.\u0027);"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":464,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":465,"author":{"gitId":"-"},"content":""},{"lineNumber":466,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":467,"author":{"gitId":"-"},"content":"   * Prompts the user to delete individual extensions that are before or equal to the new session end time."},{"lineNumber":468,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":469,"author":{"gitId":"-"},"content":"  deleteDeadlineExtensionsHandler(submissionEndTimestamp: number): Observable\u003cboolean\u003e {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    const [studentDeadlinesToDelete, instructorDeadlinesToDelete] \u003d this"},{"lineNumber":471,"author":{"gitId":"-"},"content":"      .getIndividualDeadlinesToDelete(submissionEndTimestamp);"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"    const isAllDeadlinesAfterUpdatedEndTime \u003d Object.values(studentDeadlinesToDelete).length \u003d\u003d\u003d 0"},{"lineNumber":474,"author":{"gitId":"-"},"content":"      \u0026\u0026 Object.values(instructorDeadlinesToDelete).length \u003d\u003d\u003d 0;"},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"    if (isAllDeadlinesAfterUpdatedEndTime) {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"      return of(true); // no need to prompt for deletion"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"-"},"content":"    const [affectedStudentModels, affectedInstructorModels] \u003d this"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      .getAffectedIndividualModels(submissionEndTimestamp, studentDeadlinesToDelete, instructorDeadlinesToDelete);"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.ngbModal.open(ExtensionConfirmModalComponent);"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.modalType \u003d ExtensionModalType.SESSION_DELETE;"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.selectedStudents \u003d affectedStudentModels;"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.selectedInstructors \u003d affectedInstructorModels;"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.extensionTimestamp \u003d submissionEndTimestamp;"},{"lineNumber":488,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.feedbackSessionTimeZone \u003d this.sessionEditFormModel.timeZone;"},{"lineNumber":489,"author":{"gitId":"-"},"content":""},{"lineNumber":490,"author":{"gitId":"-"},"content":"    return new Observable((subscribeIsUserAccept) \u003d\u003e {"},{"lineNumber":491,"author":{"gitId":"-"},"content":"      modalRef.componentInstance.confirmExtensionCallbackEvent.subscribe(() \u003d\u003e {"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        this.removeDeadlines(affectedStudentModels, affectedInstructorModels);"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.isSubmitting \u003d false;"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        modalRef.close();"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        subscribeIsUserAccept.next(true);"},{"lineNumber":496,"author":{"gitId":"-"},"content":"      }, () \u003d\u003e {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        subscribeIsUserAccept.next(false);"},{"lineNumber":498,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":500,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"  private getIndividualDeadlinesToDelete(submissionEndTimestamp: number): ["},{"lineNumber":503,"author":{"gitId":"-"},"content":"    Record\u003cstring, number\u003e, Record\u003cstring, number\u003e,"},{"lineNumber":504,"author":{"gitId":"-"},"content":"  ] {"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    const studentDeadlinesToDelete \u003d DeadlineExtensionHelper.getDeadlinesBeforeOrEqualToEndTime("},{"lineNumber":506,"author":{"gitId":"-"},"content":"      this.studentDeadlines, submissionEndTimestamp);"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    const instructorDeadlinesToDelete \u003d DeadlineExtensionHelper.getDeadlinesBeforeOrEqualToEndTime("},{"lineNumber":508,"author":{"gitId":"-"},"content":"      this.instructorDeadlines, submissionEndTimestamp);"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    return [studentDeadlinesToDelete, instructorDeadlinesToDelete];"},{"lineNumber":510,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":513,"author":{"gitId":"-"},"content":"   * Get models for individuals whose deadline extensions are before or equal to the new session end time."},{"lineNumber":514,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":515,"author":{"gitId":"-"},"content":"  private getAffectedIndividualModels("},{"lineNumber":516,"author":{"gitId":"-"},"content":"    submissionEndTimestamp: number,"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    affectedStudentDeadlines: Record\u003cstring, number\u003e,"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    affectedInstructorDeadlines: Record\u003cstring, number\u003e,"},{"lineNumber":519,"author":{"gitId":"-"},"content":"  ): [StudentExtensionTableColumnModel[], InstructorExtensionTableColumnModel[]] {"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    const affectedStudents \u003d this.studentsOfCourse.filter((student) \u003d\u003e affectedStudentDeadlines[student.email]);"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    const affectedInstructors \u003d this.instructorsOfCourse"},{"lineNumber":522,"author":{"gitId":"-"},"content":"      .filter((instructor) \u003d\u003e affectedInstructorDeadlines[instructor.email]);"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"    const affectedStudentModels \u003d DeadlineExtensionHelper.mapStudentsToStudentModels("},{"lineNumber":525,"author":{"gitId":"-"},"content":"      affectedStudents, affectedStudentDeadlines, submissionEndTimestamp,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    const affectedInstructorModels \u003d DeadlineExtensionHelper.mapInstructorsToInstructorModels("},{"lineNumber":528,"author":{"gitId":"-"},"content":"      affectedInstructors, affectedInstructorDeadlines, submissionEndTimestamp,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":530,"author":{"gitId":"-"},"content":"    return [affectedStudentModels, affectedInstructorModels];"},{"lineNumber":531,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"  private removeDeadlines(students: StudentExtensionTableColumnModel[],"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    instructors: InstructorExtensionTableColumnModel[],"},{"lineNumber":535,"author":{"gitId":"-"},"content":"  ): void {"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    this.studentDeadlines \u003d DeadlineExtensionHelper"},{"lineNumber":537,"author":{"gitId":"-"},"content":"      .getUpdatedDeadlinesForDeletion(students, this.studentDeadlines);"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    this.instructorDeadlines \u003d DeadlineExtensionHelper"},{"lineNumber":539,"author":{"gitId":"-"},"content":"      .getUpdatedDeadlinesForDeletion(instructors, this.instructorDeadlines);"},{"lineNumber":540,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":541,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":542,"author":{"gitId":"-"},"content":"   * Handles canceling existing session event without saving changes."},{"lineNumber":543,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":544,"author":{"gitId":"-"},"content":"  cancelEditingSessionHandler(): void {"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel \u003d JSON.parse(JSON.stringify(this.feedbackSessionModelBeforeEditing));"},{"lineNumber":546,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":549,"author":{"gitId":"-"},"content":"   * Handles deleting current feedback session."},{"lineNumber":550,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":551,"author":{"gitId":"-"},"content":"  deleteExistingSessionHandler(): void {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isDeleting \u003d true;"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.moveSessionToRecycleBin(this.courseId, this.feedbackSessionName)"},{"lineNumber":554,"author":{"gitId":"-"},"content":"      .pipe(finalize(() \u003d\u003e {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.isDeleting \u003d false;"},{"lineNumber":556,"author":{"gitId":"-"},"content":"      }))"},{"lineNumber":557,"author":{"gitId":"-"},"content":"      .subscribe({"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        next: () \u003d\u003e {"},{"lineNumber":559,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithSuccessMessage(\u0027/web/instructor/sessions\u0027,"},{"lineNumber":560,"author":{"gitId":"-"},"content":"              \u0027The feedback session has been deleted. You can restore it from the deleted sessions table below.\u0027);"},{"lineNumber":561,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":563,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":565,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":566,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":567,"author":{"gitId":"-"},"content":""},{"lineNumber":568,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":569,"author":{"gitId":"-"},"content":"   * Loads feedback questions."},{"lineNumber":570,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":571,"author":{"gitId":"-"},"content":"  loadFeedbackQuestions(): void {"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    this.questionEditFormModels \u003d [];"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    this.hasLoadingFeedbackQuestionsFailed \u003d false;"},{"lineNumber":574,"author":{"gitId":"-"},"content":"    this.isLoadingFeedbackQuestions \u003d true;"},{"lineNumber":575,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":576,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":577,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":580,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e {"},{"lineNumber":581,"author":{"gitId":"-"},"content":"          this.isLoadingFeedbackQuestions \u003d false;"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        }))"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":584,"author":{"gitId":"-"},"content":"          next: (response: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":585,"author":{"gitId":"-"},"content":"            response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"              const addedQuestionEditFormModel: QuestionEditFormModel \u003d this.getQuestionEditFormModel(feedbackQuestion);"},{"lineNumber":587,"author":{"gitId":"-"},"content":"              this.questionEditFormModels.push(addedQuestionEditFormModel);"},{"lineNumber":588,"author":{"gitId":"-"},"content":"              this.loadResponseStatusForQuestion(addedQuestionEditFormModel);"},{"lineNumber":589,"author":{"gitId":"-"},"content":"              this.feedbackQuestionModels.set(feedbackQuestion.feedbackQuestionId, feedbackQuestion);"},{"lineNumber":590,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":591,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":592,"author":{"gitId":"-"},"content":"          error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":593,"author":{"gitId":"-"},"content":"            this.hasLoadingFeedbackQuestionsFailed \u003d true;"},{"lineNumber":594,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":595,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":597,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":598,"author":{"gitId":"-"},"content":""},{"lineNumber":599,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":600,"author":{"gitId":"-"},"content":"   * Tracks the question edit form by feedback question id."},{"lineNumber":601,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":602,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":603,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":604,"author":{"gitId":"-"},"content":"  trackQuestionEditFormByFn(_: any, item: QuestionEditFormModel): any {"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    return item.feedbackQuestionId;"},{"lineNumber":606,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":607,"author":{"gitId":"-"},"content":""},{"lineNumber":608,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":609,"author":{"gitId":"-"},"content":"   * Converts feedback question to the question edit form model."},{"lineNumber":610,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":611,"author":{"gitId":"-"},"content":"  private getQuestionEditFormModel(feedbackQuestion: FeedbackQuestion): QuestionEditFormModel {"},{"lineNumber":612,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":613,"author":{"gitId":"-"},"content":"      feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"},{"lineNumber":614,"author":{"gitId":"-"},"content":""},{"lineNumber":615,"author":{"gitId":"-"},"content":"      questionNumber: feedbackQuestion.questionNumber,"},{"lineNumber":616,"author":{"gitId":"-"},"content":"      questionBrief: feedbackQuestion.questionBrief,"},{"lineNumber":617,"author":{"gitId":"-"},"content":"      questionDescription: feedbackQuestion.questionDescription,"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":"      isQuestionHasResponses: false,"},{"lineNumber":620,"author":{"gitId":"-"},"content":""},{"lineNumber":621,"author":{"gitId":"-"},"content":"      questionType: feedbackQuestion.questionType,"},{"lineNumber":622,"author":{"gitId":"-"},"content":"      questionDetails: this.deepCopy(feedbackQuestion.questionDetails),"},{"lineNumber":623,"author":{"gitId":"-"},"content":""},{"lineNumber":624,"author":{"gitId":"-"},"content":"      giverType: feedbackQuestion.giverType,"},{"lineNumber":625,"author":{"gitId":"-"},"content":"      recipientType: feedbackQuestion.recipientType,"},{"lineNumber":626,"author":{"gitId":"-"},"content":""},{"lineNumber":627,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":629,"author":{"gitId":"-"},"content":"          ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 1,"},{"lineNumber":630,"author":{"gitId":"-"},"content":""},{"lineNumber":631,"author":{"gitId":"-"},"content":"      showResponsesTo: feedbackQuestion.showResponsesTo,"},{"lineNumber":632,"author":{"gitId":"-"},"content":"      showGiverNameTo: feedbackQuestion.showGiverNameTo,"},{"lineNumber":633,"author":{"gitId":"-"},"content":"      showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"},{"lineNumber":634,"author":{"gitId":"-"},"content":""},{"lineNumber":635,"author":{"gitId":"-"},"content":"      isDeleting: false,"},{"lineNumber":636,"author":{"gitId":"-"},"content":"      isDuplicating: false,"},{"lineNumber":637,"author":{"gitId":"-"},"content":"      isEditable: false,"},{"lineNumber":638,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":639,"author":{"gitId":"-"},"content":"      isCollapsed: false,"},{"lineNumber":640,"author":{"gitId":"-"},"content":""},{"lineNumber":641,"author":{"gitId":"-"},"content":"      isVisibilityChanged: false,"},{"lineNumber":642,"author":{"gitId":"-"},"content":"      isFeedbackPathChanged: false,"},{"lineNumber":643,"author":{"gitId":"-"},"content":"      isQuestionDetailsChanged: false,"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":645,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":646,"author":{"gitId":"-"},"content":""},{"lineNumber":647,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":648,"author":{"gitId":"-"},"content":"   * Loads the isQuestionHasResponses value for a question edit for model."},{"lineNumber":649,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":650,"author":{"gitId":"-"},"content":"  private loadResponseStatusForQuestion(model: QuestionEditFormModel): void {"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.hasResponsesForQuestion(model.feedbackQuestionId)"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":653,"author":{"gitId":"-"},"content":"          next: (resp: HasResponses) \u003d\u003e {"},{"lineNumber":654,"author":{"gitId":"-"},"content":"            model.isQuestionHasResponses \u003d resp.hasResponses;"},{"lineNumber":655,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":656,"author":{"gitId":"-"},"content":"          error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":658,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":660,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":661,"author":{"gitId":"-"},"content":""},{"lineNumber":662,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":663,"author":{"gitId":"-"},"content":"   * Saves the existing question."},{"lineNumber":664,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":665,"author":{"gitId":"-"},"content":"  saveExistingQuestionHandler(index: number): void {"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":667,"author":{"gitId":"-"},"content":"    const originalQuestionNumber: number \u003d"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber;"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"    questionEditFormModel.isSaving \u003d true;"},{"lineNumber":672,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.saveFeedbackQuestion(questionEditFormModel.feedbackQuestionId, {"},{"lineNumber":673,"author":{"gitId":"-"},"content":"      questionNumber: questionEditFormModel.questionNumber,"},{"lineNumber":674,"author":{"gitId":"-"},"content":"      questionBrief: questionEditFormModel.questionBrief,"},{"lineNumber":675,"author":{"gitId":"-"},"content":"      questionDescription: questionEditFormModel.questionDescription,"},{"lineNumber":676,"author":{"gitId":"-"},"content":""},{"lineNumber":677,"author":{"gitId":"-"},"content":"      questionDetails: questionEditFormModel.questionDetails,"},{"lineNumber":678,"author":{"gitId":"-"},"content":"      questionType: questionEditFormModel.questionType,"},{"lineNumber":679,"author":{"gitId":"-"},"content":""},{"lineNumber":680,"author":{"gitId":"-"},"content":"      giverType: questionEditFormModel.giverType,"},{"lineNumber":681,"author":{"gitId":"-"},"content":"      recipientType: questionEditFormModel.recipientType,"},{"lineNumber":682,"author":{"gitId":"-"},"content":""},{"lineNumber":683,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":684,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":685,"author":{"gitId":"-"},"content":""},{"lineNumber":686,"author":{"gitId":"-"},"content":"      showResponsesTo: questionEditFormModel.showResponsesTo,"},{"lineNumber":687,"author":{"gitId":"-"},"content":"      showGiverNameTo: questionEditFormModel.showGiverNameTo,"},{"lineNumber":688,"author":{"gitId":"-"},"content":"      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"},{"lineNumber":689,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":690,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":691,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":692,"author":{"gitId":"-"},"content":"              questionEditFormModel.isSaving \u003d false;"},{"lineNumber":693,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":695,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":696,"author":{"gitId":"-"},"content":"          next: (updatedQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":697,"author":{"gitId":"-"},"content":"            this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(updatedQuestion);"},{"lineNumber":698,"author":{"gitId":"-"},"content":"            this.feedbackQuestionModels.set(updatedQuestion.feedbackQuestionId, updatedQuestion);"},{"lineNumber":699,"author":{"gitId":"-"},"content":"            this.loadResponseStatusForQuestion(this.questionEditFormModels[index]);"},{"lineNumber":700,"author":{"gitId":"-"},"content":""},{"lineNumber":701,"author":{"gitId":"-"},"content":"            // shift question if needed"},{"lineNumber":702,"author":{"gitId":"-"},"content":"            if (originalQuestionNumber !\u003d\u003d updatedQuestion.questionNumber) {"},{"lineNumber":703,"author":{"gitId":"-"},"content":"              // move question form"},{"lineNumber":704,"author":{"gitId":"-"},"content":"              this.moveQuestionForm("},{"lineNumber":705,"author":{"gitId":"-"},"content":"                  originalQuestionNumber - 1, updatedQuestion.questionNumber - 1);"},{"lineNumber":706,"author":{"gitId":"-"},"content":"              this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":707,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":708,"author":{"gitId":"-"},"content":""},{"lineNumber":709,"author":{"gitId":"-"},"content":"            this.statusMessageService.showSuccessToast(\u0027The changes to the question have been updated.\u0027);"},{"lineNumber":710,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":711,"author":{"gitId":"-"},"content":"          error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":712,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":713,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":714,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":715,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":716,"author":{"gitId":"-"},"content":""},{"lineNumber":717,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":718,"author":{"gitId":"-"},"content":"   * Moves question edit form from the original position to the new position."},{"lineNumber":719,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":720,"author":{"gitId":"-"},"content":"  private moveQuestionForm(originalPosition: number, newPosition: number): void {"},{"lineNumber":721,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.splice(newPosition, 0,"},{"lineNumber":722,"author":{"gitId":"-"},"content":"        this.questionEditFormModels.splice(originalPosition, 1)[0]);"},{"lineNumber":723,"author":{"gitId":"-"},"content":""},{"lineNumber":724,"author":{"gitId":"-"},"content":"    // all expanded questions that were moved upwards must be re-expanded to reload rich text editor"},{"lineNumber":725,"author":{"gitId":"-"},"content":"    const start: number \u003d Math.min(originalPosition, newPosition);"},{"lineNumber":726,"author":{"gitId":"-"},"content":"    const movedExpandedQuestions: QuestionEditFormModel[] \u003d this.questionEditFormModels"},{"lineNumber":727,"author":{"gitId":"-"},"content":"      .slice(start, newPosition + 1)"},{"lineNumber":728,"author":{"gitId":"-"},"content":"      .filter((model: QuestionEditFormModel) \u003d\u003e !model.isCollapsed);"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    movedExpandedQuestions.forEach((model: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":730,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d true;"},{"lineNumber":731,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":732,"author":{"gitId":"-"},"content":"    this.changeDetectorRef.detectChanges();"},{"lineNumber":733,"author":{"gitId":"-"},"content":"    movedExpandedQuestions.forEach((model: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":734,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d false;"},{"lineNumber":735,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":736,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":737,"author":{"gitId":"-"},"content":""},{"lineNumber":738,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":739,"author":{"gitId":"-"},"content":"   * Normalizes question number in question forms by setting question number in sequence (i.e. 1, 2, 3, 4 ...)."},{"lineNumber":740,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":741,"author":{"gitId":"-"},"content":"  private normalizeQuestionNumberInQuestionForms(): void {"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    for (let i: number \u003d 1; i \u003c\u003d this.questionEditFormModels.length; i +\u003d 1) {"},{"lineNumber":743,"author":{"gitId":"-"},"content":"      const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[i - 1];"},{"lineNumber":744,"author":{"gitId":"-"},"content":"      questionEditFormModel.questionNumber \u003d i;"},{"lineNumber":745,"author":{"gitId":"-"},"content":"      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":746,"author":{"gitId":"-"},"content":"      this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber \u003d i;"},{"lineNumber":747,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":748,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":749,"author":{"gitId":"-"},"content":""},{"lineNumber":750,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":751,"author":{"gitId":"-"},"content":"   * Discards the changes made to the existing question."},{"lineNumber":752,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":753,"author":{"gitId":"-"},"content":"  discardExistingQuestionHandler(index: number): void {"},{"lineNumber":754,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":755,"author":{"gitId":"-"},"content":"    const feedbackQuestion: FeedbackQuestion \u003d"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":757,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!;"},{"lineNumber":758,"author":{"gitId":"-"},"content":"    this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(feedbackQuestion);"},{"lineNumber":759,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":760,"author":{"gitId":"-"},"content":""},{"lineNumber":761,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":762,"author":{"gitId":"-"},"content":"   * Duplicates the question."},{"lineNumber":763,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":764,"author":{"gitId":"-"},"content":"  duplicateCurrentQuestionHandler(index: number): void {"},{"lineNumber":765,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":766,"author":{"gitId":"-"},"content":""},{"lineNumber":767,"author":{"gitId":"-"},"content":"    questionEditFormModel.isDuplicating \u003d true;"},{"lineNumber":768,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":769,"author":{"gitId":"-"},"content":"      questionNumber: this.questionEditFormModels.length + 1, // add the duplicated question at the end"},{"lineNumber":770,"author":{"gitId":"-"},"content":"      questionBrief: questionEditFormModel.questionBrief,"},{"lineNumber":771,"author":{"gitId":"-"},"content":"      questionDescription: questionEditFormModel.questionDescription,"},{"lineNumber":772,"author":{"gitId":"-"},"content":""},{"lineNumber":773,"author":{"gitId":"-"},"content":"      questionDetails: questionEditFormModel.questionDetails,"},{"lineNumber":774,"author":{"gitId":"-"},"content":"      questionType: questionEditFormModel.questionType,"},{"lineNumber":775,"author":{"gitId":"-"},"content":""},{"lineNumber":776,"author":{"gitId":"-"},"content":"      giverType: questionEditFormModel.giverType,"},{"lineNumber":777,"author":{"gitId":"-"},"content":"      recipientType: questionEditFormModel.recipientType,"},{"lineNumber":778,"author":{"gitId":"-"},"content":""},{"lineNumber":779,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":780,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":781,"author":{"gitId":"-"},"content":""},{"lineNumber":782,"author":{"gitId":"-"},"content":"      showResponsesTo: questionEditFormModel.showResponsesTo,"},{"lineNumber":783,"author":{"gitId":"-"},"content":"      showGiverNameTo: questionEditFormModel.showGiverNameTo,"},{"lineNumber":784,"author":{"gitId":"-"},"content":"      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"},{"lineNumber":785,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":786,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":787,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":788,"author":{"gitId":"-"},"content":"              questionEditFormModel.isDuplicating \u003d false;"},{"lineNumber":789,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":790,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":792,"author":{"gitId":"-"},"content":"          next: (newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":793,"author":{"gitId":"-"},"content":"            this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":794,"author":{"gitId":"-"},"content":"            this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":795,"author":{"gitId":"-"},"content":"            this.statusMessageService.showSuccessToast(\u0027The question has been duplicated below.\u0027);"},{"lineNumber":796,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":797,"author":{"gitId":"-"},"content":"          error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":798,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":799,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":800,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":801,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":802,"author":{"gitId":"-"},"content":""},{"lineNumber":803,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":804,"author":{"gitId":"-"},"content":"   * Deletes the existing question."},{"lineNumber":805,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":806,"author":{"gitId":"-"},"content":"  deleteExistingQuestionHandler(index: number): void {"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":808,"author":{"gitId":"-"},"content":"        \u0027Delete the question?\u0027, SimpleModalType.DANGER,"},{"lineNumber":809,"author":{"gitId":"-"},"content":"        \u0027Warning: Deleted question cannot be recovered. \u0027"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        + \u0027\u003cb\u003eAll existing responses for this question to be deleted.\u003c/b\u003e\u0027);"},{"lineNumber":811,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":812,"author":{"gitId":"-"},"content":"      const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":813,"author":{"gitId":"-"},"content":"      questionEditFormModel.isDeleting \u003d true;"},{"lineNumber":814,"author":{"gitId":"-"},"content":"      this.feedbackQuestionsService.deleteFeedbackQuestion(questionEditFormModel.feedbackQuestionId)"},{"lineNumber":815,"author":{"gitId":"-"},"content":"          .pipe(finalize(() \u003d\u003e {"},{"lineNumber":816,"author":{"gitId":"-"},"content":"            questionEditFormModel.isDeleting \u003d false;"},{"lineNumber":817,"author":{"gitId":"-"},"content":"          }))"},{"lineNumber":818,"author":{"gitId":"-"},"content":"          .subscribe({"},{"lineNumber":819,"author":{"gitId":"-"},"content":"            next: () \u003d\u003e {"},{"lineNumber":820,"author":{"gitId":"-"},"content":"              // remove form model"},{"lineNumber":821,"author":{"gitId":"-"},"content":"              this.feedbackQuestionModels.delete(questionEditFormModel.feedbackQuestionId);"},{"lineNumber":822,"author":{"gitId":"-"},"content":"              this.questionEditFormModels.splice(index, 1);"},{"lineNumber":823,"author":{"gitId":"-"},"content":"              this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":824,"author":{"gitId":"-"},"content":""},{"lineNumber":825,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast(\u0027The question has been deleted.\u0027);"},{"lineNumber":826,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":827,"author":{"gitId":"-"},"content":"            error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":828,"author":{"gitId":"-"},"content":"              this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":829,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":830,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":831,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":832,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":833,"author":{"gitId":"-"},"content":""},{"lineNumber":834,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":835,"author":{"gitId":"-"},"content":"   * Handles display of template question modal."},{"lineNumber":836,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":837,"author":{"gitId":"-"},"content":"  templateQuestionModalHandler(): void {"},{"lineNumber":838,"author":{"gitId":"-"},"content":"    const windowClass: string \u003d \u0027modal-large\u0027;"},{"lineNumber":839,"author":{"gitId":"-"},"content":"    this.ngbModal.open(TemplateQuestionModalComponent, { windowClass }).result.then((questions: FeedbackQuestion[]) \u003d\u003e {"},{"lineNumber":840,"author":{"gitId":"-"},"content":"      let questionNumber: number \u003d this.questionEditFormModels.length; // append the questions at the end"},{"lineNumber":841,"author":{"gitId":"-"},"content":"      this.isAddingFromTemplate \u003d true;"},{"lineNumber":842,"author":{"gitId":"-"},"content":"      of(...questions).pipe("},{"lineNumber":843,"author":{"gitId":"-"},"content":"          concatMap((question: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":844,"author":{"gitId":"-"},"content":"            questionNumber +\u003d 1;"},{"lineNumber":845,"author":{"gitId":"-"},"content":"            return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":846,"author":{"gitId":"-"},"content":"              questionNumber,"},{"lineNumber":847,"author":{"gitId":"-"},"content":"              questionBrief: question.questionBrief,"},{"lineNumber":848,"author":{"gitId":"-"},"content":"              questionDescription: question.questionDescription,"},{"lineNumber":849,"author":{"gitId":"-"},"content":""},{"lineNumber":850,"author":{"gitId":"-"},"content":"              questionDetails: question.questionDetails,"},{"lineNumber":851,"author":{"gitId":"-"},"content":"              questionType: question.questionType,"},{"lineNumber":852,"author":{"gitId":"-"},"content":""},{"lineNumber":853,"author":{"gitId":"-"},"content":"              giverType: question.giverType,"},{"lineNumber":854,"author":{"gitId":"-"},"content":"              recipientType: question.recipientType,"},{"lineNumber":855,"author":{"gitId":"-"},"content":""},{"lineNumber":856,"author":{"gitId":"-"},"content":"              numberOfEntitiesToGiveFeedbackToSetting: question.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":857,"author":{"gitId":"-"},"content":"              customNumberOfEntitiesToGiveFeedbackTo: question.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":858,"author":{"gitId":"-"},"content":""},{"lineNumber":859,"author":{"gitId":"-"},"content":"              showResponsesTo: question.showResponsesTo,"},{"lineNumber":860,"author":{"gitId":"-"},"content":"              showGiverNameTo: question.showGiverNameTo,"},{"lineNumber":861,"author":{"gitId":"-"},"content":"              showRecipientNameTo: question.showRecipientNameTo,"},{"lineNumber":862,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":863,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":864,"author":{"gitId":"-"},"content":"      ).pipe("},{"lineNumber":865,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":866,"author":{"gitId":"-"},"content":"          this.isAddingFromTemplate \u003d false;"},{"lineNumber":867,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":868,"author":{"gitId":"-"},"content":"      ).subscribe({"},{"lineNumber":869,"author":{"gitId":"-"},"content":"        next: (newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":870,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":871,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":872,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":873,"author":{"gitId":"-"},"content":"        error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":874,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":875,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":876,"author":{"gitId":"-"},"content":"        complete: () \u003d\u003e {"},{"lineNumber":877,"author":{"gitId":"-"},"content":"          if (questions.length \u003d\u003d\u003d 1) {"},{"lineNumber":878,"author":{"gitId":"-"},"content":"            this.statusMessageService.showSuccessToast(\u0027The question has been added to this feedback session.\u0027);"},{"lineNumber":879,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":880,"author":{"gitId":"-"},"content":"            this.statusMessageService.showSuccessToast(\u0027The questions have been added to this feedback session.\u0027);"},{"lineNumber":881,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":882,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":883,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":884,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":885,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":886,"author":{"gitId":"-"},"content":""},{"lineNumber":887,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":888,"author":{"gitId":"-"},"content":"   * Populates and shows new question edit form."},{"lineNumber":889,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":890,"author":{"gitId":"-"},"content":"  populateAndShowNewQuestionForm(type: FeedbackQuestionType): void {"},{"lineNumber":891,"author":{"gitId":"-"},"content":"    this.isAddingQuestionPanelExpanded \u003d true;"},{"lineNumber":892,"author":{"gitId":"-"},"content":""},{"lineNumber":893,"author":{"gitId":"-"},"content":"    const newQuestionModel: NewQuestionModel \u003d"},{"lineNumber":894,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewQuestionModel(type);"},{"lineNumber":895,"author":{"gitId":"-"},"content":""},{"lineNumber":896,"author":{"gitId":"-"},"content":"    this.newQuestionEditFormModel \u003d {"},{"lineNumber":897,"author":{"gitId":"-"},"content":"      feedbackQuestionId: \u0027\u0027,"},{"lineNumber":898,"author":{"gitId":"-"},"content":"      questionNumber: this.questionEditFormModels.length + 1,"},{"lineNumber":899,"author":{"gitId":"-"},"content":"      questionBrief: newQuestionModel.questionBrief,"},{"lineNumber":900,"author":{"gitId":"-"},"content":"      questionDescription: newQuestionModel.questionDescription,"},{"lineNumber":901,"author":{"gitId":"-"},"content":""},{"lineNumber":902,"author":{"gitId":"-"},"content":"      isQuestionHasResponses: false,"},{"lineNumber":903,"author":{"gitId":"-"},"content":""},{"lineNumber":904,"author":{"gitId":"-"},"content":"      questionType: newQuestionModel.questionType,"},{"lineNumber":905,"author":{"gitId":"-"},"content":"      questionDetails: newQuestionModel.questionDetails,"},{"lineNumber":906,"author":{"gitId":"-"},"content":""},{"lineNumber":907,"author":{"gitId":"-"},"content":"      giverType: newQuestionModel.giverType,"},{"lineNumber":908,"author":{"gitId":"-"},"content":"      recipientType: newQuestionModel.recipientType,"},{"lineNumber":909,"author":{"gitId":"-"},"content":""},{"lineNumber":910,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: newQuestionModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":911,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":912,"author":{"gitId":"-"},"content":"          ? newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo : 1,"},{"lineNumber":913,"author":{"gitId":"-"},"content":""},{"lineNumber":914,"author":{"gitId":"-"},"content":"      showResponsesTo: newQuestionModel.showResponsesTo,"},{"lineNumber":915,"author":{"gitId":"-"},"content":"      showGiverNameTo: newQuestionModel.showGiverNameTo,"},{"lineNumber":916,"author":{"gitId":"-"},"content":"      showRecipientNameTo: newQuestionModel.showRecipientNameTo,"},{"lineNumber":917,"author":{"gitId":"-"},"content":""},{"lineNumber":918,"author":{"gitId":"-"},"content":"      isDeleting: false,"},{"lineNumber":919,"author":{"gitId":"-"},"content":"      isDuplicating: false,"},{"lineNumber":920,"author":{"gitId":"-"},"content":"      isEditable: true,"},{"lineNumber":921,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":922,"author":{"gitId":"-"},"content":"      isCollapsed: false,"},{"lineNumber":923,"author":{"gitId":"-"},"content":""},{"lineNumber":924,"author":{"gitId":"-"},"content":"      isVisibilityChanged: false,"},{"lineNumber":925,"author":{"gitId":"-"},"content":"      isFeedbackPathChanged: false,"},{"lineNumber":926,"author":{"gitId":"-"},"content":"      isQuestionDetailsChanged: false,"},{"lineNumber":927,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":928,"author":{"gitId":"-"},"content":""},{"lineNumber":929,"author":{"gitId":"-"},"content":"    // inherit some settings from the last question"},{"lineNumber":930,"author":{"gitId":"-"},"content":"    if (this.questionEditFormModels.length \u003e 0) {"},{"lineNumber":931,"author":{"gitId":"-"},"content":"      const lastQuestionEditFormModel: QuestionEditFormModel \u003d"},{"lineNumber":932,"author":{"gitId":"-"},"content":"          this.questionEditFormModels[this.questionEditFormModels.length - 1];"},{"lineNumber":933,"author":{"gitId":"-"},"content":""},{"lineNumber":934,"author":{"gitId":"-"},"content":"      const newQuestionAllowedFeedbackPaths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d"},{"lineNumber":935,"author":{"gitId":"-"},"content":"          this.feedbackQuestionsService.getAllowedFeedbackPaths(type);"},{"lineNumber":936,"author":{"gitId":"-"},"content":"      // inherit feedback path if applicable"},{"lineNumber":937,"author":{"gitId":"-"},"content":"      if (newQuestionAllowedFeedbackPaths.has(lastQuestionEditFormModel.giverType)"},{"lineNumber":938,"author":{"gitId":"-"},"content":"          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion"},{"lineNumber":939,"author":{"gitId":"-"},"content":"          \u0026\u0026 newQuestionAllowedFeedbackPaths.get(lastQuestionEditFormModel.giverType)!"},{"lineNumber":940,"author":{"gitId":"-"},"content":"              .indexOf(lastQuestionEditFormModel.recipientType) !\u003d\u003d -1) {"},{"lineNumber":941,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.giverType \u003d lastQuestionEditFormModel.giverType;"},{"lineNumber":942,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.recipientType \u003d lastQuestionEditFormModel.recipientType;"},{"lineNumber":943,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting \u003d"},{"lineNumber":944,"author":{"gitId":"-"},"content":"          lastQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting;"},{"lineNumber":945,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo \u003d"},{"lineNumber":946,"author":{"gitId":"-"},"content":"          lastQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo;"},{"lineNumber":947,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":948,"author":{"gitId":"-"},"content":""},{"lineNumber":949,"author":{"gitId":"-"},"content":"      const newQuestionVisibilityStateMachine: VisibilityStateMachine \u003d"},{"lineNumber":950,"author":{"gitId":"-"},"content":"          this.feedbackQuestionsService.getNewVisibilityStateMachine("},{"lineNumber":951,"author":{"gitId":"-"},"content":"              this.newQuestionEditFormModel.giverType, this.newQuestionEditFormModel.recipientType);"},{"lineNumber":952,"author":{"gitId":"-"},"content":"      // inherit visibility settings if applicable, the state machine will automatically filter out invalid choices"},{"lineNumber":953,"author":{"gitId":"-"},"content":"      newQuestionVisibilityStateMachine.applyVisibilitySettings({"},{"lineNumber":954,"author":{"gitId":"-"},"content":"        SHOW_RESPONSE: lastQuestionEditFormModel.showResponsesTo,"},{"lineNumber":955,"author":{"gitId":"-"},"content":"        SHOW_GIVER_NAME: lastQuestionEditFormModel.showGiverNameTo,"},{"lineNumber":956,"author":{"gitId":"-"},"content":"        SHOW_RECIPIENT_NAME: lastQuestionEditFormModel.showRecipientNameTo,"},{"lineNumber":957,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":958,"author":{"gitId":"-"},"content":"      const newQuestionShowResponsesTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":959,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_RESPONSE);"},{"lineNumber":960,"author":{"gitId":"-"},"content":"      const newQuestionShowGiverNameTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":961,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_GIVER_NAME);"},{"lineNumber":962,"author":{"gitId":"-"},"content":"      const newQuestionShowRecipientNameTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":963,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine"},{"lineNumber":964,"author":{"gitId":"-"},"content":"              .getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_RECIPIENT_NAME);"},{"lineNumber":965,"author":{"gitId":"-"},"content":""},{"lineNumber":966,"author":{"gitId":"-"},"content":"      let isAllowedToUseInheritedVisibility: boolean \u003d false;"},{"lineNumber":967,"author":{"gitId":"-"},"content":"      if (this.feedbackQuestionsService"},{"lineNumber":968,"author":{"gitId":"-"},"content":"          .isCustomFeedbackVisibilitySettingAllowed(this.newQuestionEditFormModel.questionType)) {"},{"lineNumber":969,"author":{"gitId":"-"},"content":"        isAllowedToUseInheritedVisibility \u003d true;"},{"lineNumber":970,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":971,"author":{"gitId":"-"},"content":"        const commonFeedbackVisibilitySettings: CommonVisibilitySetting[] \u003d"},{"lineNumber":972,"author":{"gitId":"-"},"content":"            this.feedbackQuestionsService.getCommonFeedbackVisibilitySettings("},{"lineNumber":973,"author":{"gitId":"-"},"content":"                newQuestionVisibilityStateMachine, this.newQuestionEditFormModel.questionType);"},{"lineNumber":974,"author":{"gitId":"-"},"content":"        // new question is only allowed to have common visibility settings"},{"lineNumber":975,"author":{"gitId":"-"},"content":"        // check whether the inherited settings fall into that or not"},{"lineNumber":976,"author":{"gitId":"-"},"content":"        for (const commonVisibilityOption of commonFeedbackVisibilitySettings) {"},{"lineNumber":977,"author":{"gitId":"-"},"content":"          if (this.isSameSet(newQuestionShowResponsesTo, commonVisibilityOption.visibilitySettings.SHOW_RESPONSE)"},{"lineNumber":978,"author":{"gitId":"-"},"content":"              \u0026\u0026 this.isSameSet(newQuestionShowGiverNameTo,"},{"lineNumber":979,"author":{"gitId":"-"},"content":"                  commonVisibilityOption.visibilitySettings.SHOW_GIVER_NAME)"},{"lineNumber":980,"author":{"gitId":"-"},"content":"              \u0026\u0026 this.isSameSet(newQuestionShowRecipientNameTo,"},{"lineNumber":981,"author":{"gitId":"-"},"content":"                  commonVisibilityOption.visibilitySettings.SHOW_RECIPIENT_NAME)) {"},{"lineNumber":982,"author":{"gitId":"-"},"content":"            isAllowedToUseInheritedVisibility \u003d true;"},{"lineNumber":983,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":984,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":985,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":986,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":987,"author":{"gitId":"-"},"content":""},{"lineNumber":988,"author":{"gitId":"-"},"content":"      if (isAllowedToUseInheritedVisibility) {"},{"lineNumber":989,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showResponsesTo \u003d newQuestionShowResponsesTo;"},{"lineNumber":990,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showGiverNameTo \u003d newQuestionShowGiverNameTo;"},{"lineNumber":991,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showRecipientNameTo \u003d newQuestionShowRecipientNameTo;"},{"lineNumber":992,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":993,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":994,"author":{"gitId":"-"},"content":""},{"lineNumber":995,"author":{"gitId":"-"},"content":"    this.scrollToNewEditForm();"},{"lineNumber":996,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":997,"author":{"gitId":"-"},"content":""},{"lineNumber":998,"author":{"gitId":"-"},"content":"  private isSameSet(setA: FeedbackVisibilityType[], setB: FeedbackVisibilityType[]): boolean {"},{"lineNumber":999,"author":{"gitId":"-"},"content":"    return setA.length \u003d\u003d\u003d setB.length \u0026\u0026 setA.every((ele: FeedbackVisibilityType) \u003d\u003e setB.includes(ele));"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1001,"author":{"gitId":"-"},"content":""},{"lineNumber":1002,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"   * Creates a new question."},{"lineNumber":1004,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"  createNewQuestionHandler(): void {"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"    this.newQuestionEditFormModel.isSaving \u003d true;"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"      questionNumber: this.newQuestionEditFormModel.questionNumber,"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"      questionBrief: this.newQuestionEditFormModel.questionBrief,"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"      questionDescription: this.newQuestionEditFormModel.questionDescription,"},{"lineNumber":1011,"author":{"gitId":"-"},"content":""},{"lineNumber":1012,"author":{"gitId":"-"},"content":"      questionDetails: this.newQuestionEditFormModel.questionDetails,"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"      questionType: this.newQuestionEditFormModel.questionType,"},{"lineNumber":1014,"author":{"gitId":"-"},"content":""},{"lineNumber":1015,"author":{"gitId":"-"},"content":"      giverType: this.newQuestionEditFormModel.giverType,"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"      recipientType: this.newQuestionEditFormModel.recipientType,"},{"lineNumber":1017,"author":{"gitId":"-"},"content":""},{"lineNumber":1018,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: this.newQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: this.newQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":1020,"author":{"gitId":"-"},"content":""},{"lineNumber":1021,"author":{"gitId":"-"},"content":"      showResponsesTo: this.newQuestionEditFormModel.showResponsesTo,"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"      showGiverNameTo: this.newQuestionEditFormModel.showGiverNameTo,"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"      showRecipientNameTo: this.newQuestionEditFormModel.showRecipientNameTo,"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":1026,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"              this.newQuestionEditFormModel.isSaving \u003d false;"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"          next: (newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"            this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"            this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":1034,"author":{"gitId":"-"},"content":""},{"lineNumber":1035,"author":{"gitId":"-"},"content":"            this.moveQuestionForm("},{"lineNumber":1036,"author":{"gitId":"-"},"content":"                this.questionEditFormModels.length - 1, newQuestion.questionNumber - 1);"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"            this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"            this.isAddingQuestionPanelExpanded \u003d false;"},{"lineNumber":1039,"author":{"gitId":"-"},"content":""},{"lineNumber":1040,"author":{"gitId":"-"},"content":"            this.statusMessageService.showSuccessToast(\u0027The question has been added to this feedback session.\u0027);"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"          error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1047,"author":{"gitId":"-"},"content":""},{"lineNumber":1048,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"   * Handles \u0027Copy Question\u0027 click event."},{"lineNumber":1050,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"  copyQuestionsFromOtherSessionsHandler(): void {"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"    this.isCopyingQuestion \u003d true;"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"    const feedbackSessionTabModels: FeedbackSessionTabModel[] \u003d [];"},{"lineNumber":1054,"author":{"gitId":"-"},"content":""},{"lineNumber":1055,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionsForInstructor().pipe("},{"lineNumber":1056,"author":{"gitId":"-"},"content":"      finalize(() \u003d\u003e {"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"        this.isCopyingQuestion \u003d false;"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"    ).subscribe({"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"      next: (response: FeedbackSessions) \u003d\u003e {"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"        response.feedbackSessions.forEach((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"          const model: FeedbackSessionTabModel \u003d {"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"            courseId: feedbackSession.courseId,"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"            feedbackSessionName: feedbackSession.feedbackSessionName,"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"            createdAtTimestamp: feedbackSession.createdAtTimestamp,"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"            questionsTableRowModels: [],"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"            isTabExpanded: false,"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"            hasQuestionsLoaded: false,"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"            hasLoadingFailed: false,"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"            questionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"            questionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"          feedbackSessionTabModels.push(model);"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"      error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"      complete: () \u003d\u003e {"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"        const ref: NgbModalRef \u003d this.ngbModal.open(CopyQuestionsFromOtherSessionsModalComponent);"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"        ref.componentInstance.feedbackSessionTabModels \u003d feedbackSessionTabModels;"},{"lineNumber":1082,"author":{"gitId":"-"},"content":""},{"lineNumber":1083,"author":{"gitId":"-"},"content":"        ref.result.then((questionsToCopy: FeedbackQuestion[]) \u003d\u003e {"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"          this.isCopyingQuestion \u003d true;"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"          of(...questionsToCopy).pipe("},{"lineNumber":1086,"author":{"gitId":"-"},"content":"              concatMap((questionToCopy: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"                return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"                  questionNumber: this.questionEditFormModels.length + 1, // add the copied question at the end"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"                  questionBrief: questionToCopy.questionBrief,"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"                  questionDescription: questionToCopy.questionDescription,"},{"lineNumber":1091,"author":{"gitId":"-"},"content":""},{"lineNumber":1092,"author":{"gitId":"-"},"content":"                  questionDetails: questionToCopy.questionDetails,"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"                  questionType: questionToCopy.questionType,"},{"lineNumber":1094,"author":{"gitId":"-"},"content":""},{"lineNumber":1095,"author":{"gitId":"-"},"content":"                  giverType: questionToCopy.giverType,"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"                  recipientType: questionToCopy.recipientType,"},{"lineNumber":1097,"author":{"gitId":"-"},"content":""},{"lineNumber":1098,"author":{"gitId":"-"},"content":"                  numberOfEntitiesToGiveFeedbackToSetting: questionToCopy.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"                  customNumberOfEntitiesToGiveFeedbackTo: questionToCopy.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":1100,"author":{"gitId":"-"},"content":""},{"lineNumber":1101,"author":{"gitId":"-"},"content":"                  showResponsesTo: questionToCopy.showResponsesTo,"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"                  showGiverNameTo: questionToCopy.showGiverNameTo,"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"                  showRecipientNameTo: questionToCopy.showRecipientNameTo,"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"              }),"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"              finalize(() \u003d\u003e {"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"                this.isCopyingQuestion \u003d false;"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"              }),"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"          ).subscribe({"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"            next: (newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"              this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"              this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast("},{"lineNumber":1114,"author":{"gitId":"-"},"content":"                  \u0027The selected question(s) have been added to this feedback session.\u0027,"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"              );"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"            error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"              this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1125,"author":{"gitId":"-"},"content":""},{"lineNumber":1126,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"   * Gets all students of a course."},{"lineNumber":1128,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"  getAllStudentsOfCourse(): void {"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: this.courseId })"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"          next: (students: Students) \u003d\u003e {"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"            this.studentsOfCourse \u003d students.students;"},{"lineNumber":1134,"author":{"gitId":"-"},"content":""},{"lineNumber":1135,"author":{"gitId":"-"},"content":"            // sort the student list based on team name and student name"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"            this.studentsOfCourse.sort((a: Student, b: Student): number \u003d\u003e {"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"              const teamNameCompare: number \u003d a.teamName.localeCompare(b.teamName);"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"              if (teamNameCompare \u003d\u003d\u003d 0) {"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"                return a.name.localeCompare(b.name);"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"              return teamNameCompare;"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":1143,"author":{"gitId":"-"},"content":""},{"lineNumber":1144,"author":{"gitId":"-"},"content":"            // select the first student"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"            if (this.studentsOfCourse.length \u003e\u003d 1) {"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"              this.emailOfStudentToPreview \u003d this.studentsOfCourse[0].email;"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"          error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1154,"author":{"gitId":"-"},"content":""},{"lineNumber":1155,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"   * Gets all instructors of a course."},{"lineNumber":1157,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"  getAllInstructors(): void {"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"    this.instructorService.loadInstructors({"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"          next: (instructors: Instructors) \u003d\u003e {"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"            this.instructorsOfCourse \u003d instructors.instructors;"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"            // TODO use privilege API to filter instructors who has INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"            // in the feedback session"},{"lineNumber":1168,"author":{"gitId":"-"},"content":""},{"lineNumber":1169,"author":{"gitId":"-"},"content":"            // sort the instructor list based on name"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"            this.instructorsOfCourse.sort((a: Instructor, b: Instructor): number \u003d\u003e {"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"              return a.name.localeCompare(b.name);"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":1173,"author":{"gitId":"-"},"content":""},{"lineNumber":1174,"author":{"gitId":"-"},"content":"            // select the first instructor"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"            if (this.instructorsOfCourse.length \u003e\u003d 1) {"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"              this.emailOfInstructorToPreview \u003d this.instructorsOfCourse[0].email;"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"          error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":1180,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":1183,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1184,"author":{"gitId":"-"},"content":""},{"lineNumber":1185,"author":{"gitId":"-"},"content":"  expandAll(): void {"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.forEach(((model: QuestionEditFormModel): void \u003d\u003e {"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d false;"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1190,"author":{"gitId":"-"},"content":""},{"lineNumber":1191,"author":{"gitId":"-"},"content":"  collapseAll(): void {"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.forEach(((model: QuestionEditFormModel): void \u003d\u003e {"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d true;"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":1195,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1196,"author":{"gitId":"-"},"content":""},{"lineNumber":1197,"author":{"gitId":"-"},"content":"  private deepCopy\u003cT\u003e(obj: T): T {"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"    return JSON.parse(JSON.stringify(obj));"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1200,"author":{"gitId":"-"},"content":""},{"lineNumber":1201,"author":{"gitId":"-"},"content":"  private scrollToNewEditForm(): void {"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"      const allEditForms: NodeListOf\u003cElement\u003e \u003d document.querySelectorAll(\u0027tm-question-edit-form\u0027);"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"      const newEditForm: Element \u003d allEditForms[allEditForms.length - 1];"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"      const yOffset: number \u003d -70; // Need offset because of the navBar"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"      const y: number \u003d newEditForm.getBoundingClientRect().top + window.scrollY + yOffset;"},{"lineNumber":1207,"author":{"gitId":"-"},"content":"      window.scrollTo({ top: y, behavior: \u0027smooth\u0027 });"},{"lineNumber":1208,"author":{"gitId":"-"},"content":"    }, 0);"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1210,"author":{"gitId":"-"},"content":""},{"lineNumber":1211,"author":{"gitId":"-"},"content":"  scrollToTopOfPage(): void {"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"    window.scrollTo({ top: 0, behavior: \u0027smooth\u0027 });"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"cedricongjh":1,"-":1213}},{"path":"src/web/app/pages-session/session-submission-page/session-submission-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"bg-light\" *ngIf\u003d\"moderatedPerson\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12 text-center text-break\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003ch5\u003eYou are moderating responses for"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"intent \u003d\u003d\u003d Intent.STUDENT_SUBMISSION\"\u003estudent\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"intent \u003d\u003d\u003d Intent.INSTRUCTOR_SUBMISSION\"\u003einstructor\u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      {{ personName }} ({{ moderatedPerson }})"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \u003cbutton type\u003d\"button\" class\u003d\"btn btn-link\" *ngIf\u003d\"!isModerationHintExpanded\" (click)\u003d\"isModerationHintExpanded \u003d true\"\u003e[More]\u003c/button\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cbutton type\u003d\"button\" class\u003d\"btn btn-link\" *ngIf\u003d\"isModerationHintExpanded\" (click)\u003d\"isModerationHintExpanded \u003d false\"\u003e[Less]\u003c/button\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003c/h5\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"isModerationHintExpanded\" class\u003d\"text-start\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cp\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        The page below resembles the submission page as seen by the respondent {{ personName }} ({{ moderatedPerson }})."},{"lineNumber":13,"author":{"gitId":"-"},"content":"        You can use it to moderate responses submitted by the respondent or submit responses on behalf of the respondent."},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cp\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        Note that due to visibility settings, questions that are not supposed to show responses to instructors (i.e you) are not shown in the page below."},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"bg-light\" *ngIf\u003d\"previewAsPerson\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12 text-center text-break\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003ch4\u003ePreviewing Session as"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"intent \u003d\u003d\u003d Intent.STUDENT_SUBMISSION\"\u003estudent\u003c/span\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"intent \u003d\u003d\u003d Intent.INSTRUCTOR_SUBMISSION\"\u003einstructor\u003c/span\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      {{ personName }} ({{ previewAsPerson }})"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c/h4\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"regKey\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"loggedInUser\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        You are submitting feedback as \u003cmark\u003e\u003cb\u003e{{ personName }}\u003c/b\u003e\u003c/mark\u003e. If you wish to link your Google account ({{ loggedInUser }}) with this user,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003ca href\u003d\"#\" (click)\u003d\"joinCourseForUnregisteredEntity(); $event.preventDefault()\"\u003eclick here\u003c/a\u003e."},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"!loggedInUser\"\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        You are submitting feedback as \u003cmark\u003e\u003cb\u003e{{ personName }}\u003c/b\u003e\u003c/mark\u003e. You may submit feedback for sessions that are currently open and view results without logging in."},{"lineNumber":39,"author":{"gitId":"-"},"content":"        To access other features you need to \u003ca href\u003d\"#\" (click)\u003d\"joinCourseForUnregisteredEntity(); $event.preventDefault()\"\u003elogin using a Google account\u003c/a\u003e (optional)."},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row mobile-invisible\" *ngIf\u003d\"feedbackSessionSubmissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Notes:"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003cul\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          You can use the \u003cb\u003eSubmit Response for Question _\u003c/b\u003e buttons to submit one-response-at-a-time."},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cbr\u003eAlternatively, you can submit all responses in one go using the \u003cb\u003eSubmit Responses for All Questions\u003c/b\u003e button at the bottom of this page."},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003cli\u003eYou may edit your submission any number of times before the closing time of this session.\u003c/li\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      \u003c/ul\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card card-plain\" *tmIsLoading\u003d\"isCourseLoading || isFeedbackSessionLoading\"\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003clabel class\u003d\"col-md-2 text-md-end\"\u003eCourse ID:\u003c/label\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"course-id\" class\u003d\"col-md-10 text-md-start\"\u003e{{ courseId }}\u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\" *ngIf\u003d\"courseName\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      \u003clabel class\u003d\"col-md-2 text-md-end\"\u003eCourse name:\u003c/label\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"course-name\" class\u003d\"col-md-10 text-md-start\"\u003e{{ courseName }}\u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\" *ngIf\u003d\"courseInstitute\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      \u003clabel class\u003d\"col-md-2 text-md-end\"\u003eCourse institute:\u003c/label\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"course-institute\" class\u003d\"col-md-10 text-md-start\"\u003e{{ courseInstitute }}\u003c/div\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      \u003clabel class\u003d\"col-md-2 text-md-end\"\u003eSession:\u003c/label\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"fs-name\" class\u003d\"col-md-10 text-md-start\"\u003e{{ feedbackSessionName }}\u003c/div\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003clabel class\u003d\"col-md-2 text-md-end\"\u003eOpening time:\u003c/label\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"opening-time\" class\u003d\"col-md-10 text-md-start\"\u003e{{ formattedSessionOpeningTime }}\u003c/div\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      \u003clabel class\u003d\"col-md-2 text-md-end\"\u003eClosing time:\u003c/label\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"closing-time\" class\u003d\"col-md-10 text-md-start\"\u003e{{ formattedSessionClosingTime }}\u003c/div\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      \u003clabel class\u003d\"col-md-2 text-md-end\"\u003eInstructions:\u003c/label\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"instructions\" class\u003d\"col-md-10 text-md-start\" [innerHTML]\u003d\"feedbackSessionInstructions | safeHtml\"\u003e\u003c/div\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasFeedbackSessionQuestionsLoadingFailed\" [message]\u003d\"\u0027Failed to load questions\u0027\" (retryEvent)\u003d\"retryLoadingFeedbackSessionQuestions()\"\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isFeedbackSessionQuestionsLoading\"\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    \u003ctm-question-submission-form *ngFor\u003d\"let questionSubmissionForm of questionSubmissionForms; let i \u003d index; trackBy: trackQuestionSubmissionFormByFn\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                                 [attr.id]\u003d\"questionSubmissionForm.feedbackQuestionId\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                                 inViewport (inViewportAction)\u003d\"loadRecipientsAndResponses($event, questionSubmissionForm)\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                                 [(formModel)]\u003d\"questionSubmissionForms[i]\" [formMode]\u003d\"getQuestionSubmissionFormMode(questionSubmissionForm)\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                                 [isSubmissionDisabled]\u003d\"isSubmissionFormsDisabled\" [isFormsDisabled]\u003d\"isSubmissionFormsDisabled \u0026\u0026 !this.previewAsPerson\""},{"lineNumber":99,"author":{"gitId":"-"},"content":"                                 [isSavingResponses]\u003d\"isSavingResponses\" (responsesSave)\u003d\"saveFeedbackResponses([$event])\""},{"lineNumber":100,"author":{"gitId":"-"},"content":"                                 (deleteCommentEvent)\u003d\"deleteParticipantComment(i, $event)\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                                 [isQuestionCountOne]\u003d\"isQuestionCountOne\""},{"lineNumber":102,"author":{"gitId":"domlimm"},"content":"                                 [(isSubmitAllClicked)]\u003d\"isSubmitAllClicked\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    \u003e\u003c/tm-question-submission-form\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\" *ngIf\u003d\"questionsNeedingSubmission.length \u003d\u003d\u003d 0\"\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 text-center\"\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"          There are no questions for you to answer here!"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    \u003c!-- Do not display if only one question can be answered, as a button to submit individual response exists --\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\" *ngIf\u003d\"questionsNeedingSubmission.length \u003e 1\"\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 text-center\"\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-submit\" type\u003d\"submit\" class\u003d\"btn btn-success\""},{"lineNumber":116,"author":{"gitId":"-"},"content":"                ngbTooltip\u003d\"You can save your responses at any time and come back later to continue.\""},{"lineNumber":117,"author":{"gitId":"-"},"content":"                (click)\u003d\"saveFeedbackResponses(questionSubmissionForms)\" [disabled]\u003d\"isSavingResponses || isSubmissionFormsDisabled\""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        \u003e\u003ctm-ajax-loading *ngIf\u003d\"isSavingResponses\"\u003e\u003c/tm-ajax-loading\u003eSubmit Responses for All Questions\u003c/button\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"domlimm":1,"-":121}},{"path":"src/web/app/pages-session/session-submission-page/session-submission-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DOCUMENT } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Inject, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PageScrollService } from \u0027ngx-page-scroll-core\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { catchError, finalize, switchMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { DeadlineExtensionHelper } from \u0027../../../services/deadline-extension-helper\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { FeedbackResponsesResponse, FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipient,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipients,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackResponse,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackResponseComment,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackResponses,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackSessionLogType,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  RegkeyValidity,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import { FeedbackResponseRequest, Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import { Milliseconds } from \u0027../../../types/datetime-const\u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import { DEFAULT_NUMBER_OF_RETRY_ATTEMPTS } from \u0027../../../types/default-retry-attempts\u0027;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import { CommentRowModel } from \u0027../../components/comment-box/comment-row/comment-row.component\u0027;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import { ErrorReportComponent } from \u0027../../components/error-report/error-report.component\u0027;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipient,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import { SavingCompleteModalComponent } from \u0027./saving-complete-modal/saving-complete-modal.component\u0027;"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"interface FeedbackQuestionsResponse {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  questions: FeedbackQuestion[];"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":61,"author":{"gitId":"-"},"content":" * Feedback session submission page."},{"lineNumber":62,"author":{"gitId":"-"},"content":" */"},{"lineNumber":63,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  selector: \u0027tm-session-submission-page\u0027,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-submission-page.component.html\u0027,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-submission-page.component.scss\u0027],"},{"lineNumber":67,"author":{"gitId":"-"},"content":"})"},{"lineNumber":68,"author":{"gitId":"-"},"content":"export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  Intent: typeof Intent \u003d Intent;"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  regKey: string \u003d \u0027\u0027;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  entityType: string \u003d \u0027student\u0027;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  loggedInUser: string \u003d \u0027\u0027;"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  moderatedPerson: string \u003d \u0027\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  previewAsPerson: string \u003d \u0027\u0027;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  // the name of the person involved"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  // (e.g. the student name for unregistered student, the name of instructor being moderated)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  personName: string \u003d \u0027\u0027;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  personEmail: string \u003d \u0027\u0027;"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  courseName: string \u003d \u0027\u0027;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  courseInstitute: string \u003d \u0027\u0027;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  formattedSessionOpeningTime: string \u003d \u0027\u0027;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  formattedSessionClosingTime: string \u003d \u0027\u0027;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  feedbackSessionInstructions: string \u003d \u0027\u0027;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  feedbackSessionTimezone: string \u003d \u0027\u0027;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  feedbackSessionSubmissionStatus: FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus.OPEN;"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  intent: Intent \u003d Intent.STUDENT_SUBMISSION;"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  questionSubmissionForms: QuestionSubmissionFormModel[] \u003d [];"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  isSavingResponses: boolean \u003d false;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  isSubmissionFormsDisabled: boolean \u003d false;"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  isModerationHintExpanded: boolean \u003d false;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  moderatedQuestionId: string \u003d \u0027\u0027;"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  isCourseLoading: boolean \u003d true;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  isFeedbackSessionLoading: boolean \u003d true;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  isFeedbackSessionQuestionsLoading: boolean \u003d true;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  hasFeedbackSessionQuestionsLoadingFailed: boolean \u003d false;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  retryAttempts: number \u003d DEFAULT_NUMBER_OF_RETRY_ATTEMPTS;"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"  isQuestionCountOne: boolean \u003d false;"},{"lineNumber":112,"author":{"gitId":"domlimm"},"content":"  isSubmitAllClicked: boolean \u003d false;"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  private backendUrl: string \u003d environment.backendUrl;"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"              private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"              private feedbackResponsesService: FeedbackResponsesService,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"              private feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"              private instructorService: InstructorService,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"              private ngbModal: NgbModal,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"              private pageScrollService: PageScrollService,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"              private authService: AuthService,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"              private navigationService: NavigationService,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"              private commentService: FeedbackResponseCommentService,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"              private logService: LogService,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"              @Inject(DOCUMENT) private document: any) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    this.route.data.pipe("},{"lineNumber":138,"author":{"gitId":"-"},"content":"        tap((data: any) \u003d\u003e {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"          this.intent \u003d data.intent;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"          this.entityType \u003d data.intent \u003d\u003d\u003d Intent.INSTRUCTOR_SUBMISSION ? \u0027instructor\u0027 : this.entityType;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        switchMap(() \u003d\u003e this.route.queryParams),"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    ).subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      this.regKey \u003d queryParams.key ? queryParams.key : \u0027\u0027;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      this.moderatedPerson \u003d queryParams.moderatedperson ? queryParams.moderatedperson : \u0027\u0027;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      this.previewAsPerson \u003d queryParams.previewas ? queryParams.previewas : \u0027\u0027;"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      if (queryParams.entitytype \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        this.entityType \u003d \u0027instructor\u0027;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        this.intent \u003d Intent.INSTRUCTOR_SUBMISSION;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":153,"author":{"gitId":"-"},"content":"      this.moderatedQuestionId \u003d queryParams.moderatedquestionId ? queryParams.moderatedquestionId : \u0027\u0027;"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"      if (this.previewAsPerson) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // disable submission in the preview mode"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"      const nextUrl: string \u003d `${window.location.pathname}${window.location.search.replace(/\u0026/g, \u0027%26\u0027)}`;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      this.authService.getAuthUser(undefined, nextUrl).subscribe({"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        next: (auth: AuthInfo) \u003d\u003e {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"          const isPreviewOrModeration: boolean \u003d !!(auth.user \u0026\u0026 (this.moderatedPerson || this.previewAsPerson));"},{"lineNumber":164,"author":{"gitId":"-"},"content":"          if (auth.user) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.loggedInUser \u003d auth.user.id;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":167,"author":{"gitId":"-"},"content":"          if (this.regKey \u0026\u0026 !isPreviewOrModeration) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.authService.getAuthRegkeyValidity(this.regKey, this.intent).subscribe({"},{"lineNumber":169,"author":{"gitId":"-"},"content":"              next: (resp: RegkeyValidity) \u003d\u003e {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                if (resp.isAllowedAccess) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                  if (resp.isUsed) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    // The logged in user matches the registration key; redirect to the logged in URL"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    this.navigationService.navigateByURLWithParamEncoding("},{"lineNumber":174,"author":{"gitId":"-"},"content":"                        `/web/${this.entityType}/sessions/submission`,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                        { courseid: this.courseId, fsname: this.feedbackSessionName });"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                  } else {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    // Valid, unused registration key; load information based on the key"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                    this.loadCourseInfo();"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                    this.loadPersonName();"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                    this.loadFeedbackSession(false, auth);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                  }"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                } else if (resp.isValid) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                  // At this point, registration key must already be used, otherwise access would be granted"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                  if (this.loggedInUser) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    // Registration key belongs to another user who is not the logged in user"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                    this.navigationService.navigateWithErrorMessage(\u0027/web/front\u0027,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                        `You are trying to access TEAMMATES using the Google account ${this.loggedInUser}, which"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                        is not linked to this TEAMMATES account. If you used a different Google account to"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                        join/access TEAMMATES before, please use that Google account to access TEAMMATES. If you"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                        cannot remember which Google account you used before, please email us at"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                        ${environment.supportEmail} for help.`);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                  } else {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                    this.loadFeedbackSession(true, auth);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                  }"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                } else {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                  // The registration key is invalid"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                  this.navigationService.navigateWithErrorMessage(\u0027/web/front\u0027,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                      \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":201,"author":{"gitId":"-"},"content":"              error: () \u003d\u003e {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                this.navigationService.navigateWithErrorMessage(\u0027/web/front\u0027,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                    \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"              },"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":206,"author":{"gitId":"-"},"content":"          } else if (this.loggedInUser) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            // Load information based on logged in user"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // This will also cover moderation/preview cases"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.loadCourseInfo();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.loadPersonName();"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.loadFeedbackSession(false, auth);"},{"lineNumber":212,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            this.navigationService.navigateWithErrorMessage(\u0027/web/front\u0027,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        error: () \u003d\u003e {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage(\u0027/web/front\u0027,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"              \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"  // Solution for checking partial element visibility adapted from"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  // https://stackoverflow.com/questions/30943662/check-if-element-is-partially-in-viewport"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":228,"author":{"gitId":"-"},"content":"   * Checks if a given element is in view."},{"lineNumber":229,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   * @param e element to perform check for"},{"lineNumber":231,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  isInViewport(e: HTMLElement): boolean {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    const rect \u003d e.getBoundingClientRect();"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    const windowHeight: number \u003d (window.innerHeight || document.documentElement.clientHeight);"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"    return !("},{"lineNumber":237,"author":{"gitId":"-"},"content":"      Math.floor(100 - (((rect.top \u003e\u003d 0 ? 0 : rect.top) / +-rect.height) * 100)) \u003c 1"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      || Math.floor(100 - ((rect.bottom - windowHeight) / rect.height) * 100) \u003c 1"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   * Scrolls to the question based on its given question id."},{"lineNumber":244,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  scrollToQuestion(): void {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    const div: HTMLElement | null \u003d document.getElementById(this.moderatedQuestionId);"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"    // continue scrolling as long as the element to scroll to is yet to be found or not in view"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    if (div \u003d\u003d null || !(this.isInViewport(div))) {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      setTimeout(() \u003d\u003e {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        this.pageScrollService.scroll({"},{"lineNumber":252,"author":{"gitId":"-"},"content":"          document: this.document,"},{"lineNumber":253,"author":{"gitId":"-"},"content":"          scrollTarget: `#${this.moderatedQuestionId}`,"},{"lineNumber":254,"author":{"gitId":"-"},"content":"          scrollOffset: 70,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        this.scrollToQuestion();"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      }, 500);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    if (!this.moderatedQuestionId) {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    this.scrollToQuestion();"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"  private loadCourseInfo(): void {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    this.isCourseLoading \u003d true;"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    let request: Observable\u003cCourse\u003e;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    switch (this.intent) {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      case Intent.STUDENT_SUBMISSION:"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        if (this.moderatedPerson || this.previewAsPerson) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"          request \u003d this.courseService.getCourseAsInstructor(this.courseId);"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"          request \u003d this.courseService.getCourseAsStudent(this.courseId, this.regKey);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      case Intent.INSTRUCTOR_SUBMISSION:"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        request \u003d this.courseService.getCourseAsInstructor(this.courseId, this.regKey);"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        this.isCourseLoading \u003d false;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    request.subscribe({"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      next: (resp: Course) \u003d\u003e {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        this.courseName \u003d resp.courseName;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        this.courseInstitute \u003d resp.institute;"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        this.isCourseLoading \u003d false;"},{"lineNumber":291,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":292,"author":{"gitId":"-"},"content":"      error: () \u003d\u003e {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        this.isCourseLoading \u003d false;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":299,"author":{"gitId":"-"},"content":"   * Loads the name of the person involved in the submission."},{"lineNumber":300,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  loadPersonName(): void {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    switch (this.intent) {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      case Intent.STUDENT_SUBMISSION:"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        this.studentService.getStudent("},{"lineNumber":305,"author":{"gitId":"-"},"content":"            this.courseId,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            this.moderatedPerson || this.previewAsPerson,"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            this.regKey,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        ).subscribe((student: Student) \u003d\u003e {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"          this.personName \u003d student.name;"},{"lineNumber":310,"author":{"gitId":"-"},"content":"          this.personEmail \u003d student.email;"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"          this.logService.createFeedbackSessionLog({"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            courseId: this.courseId,"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            studentEmail: this.personEmail,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            logType: FeedbackSessionLogType.ACCESS,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"          }).subscribe({"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            next: () \u003d\u003e {},"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            error: () \u003d\u003e {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"              this.statusMessageService.showWarningToast(\u0027Failed to log feedback session access\u0027);"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":322,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":326,"author":{"gitId":"-"},"content":"      case Intent.INSTRUCTOR_SUBMISSION:"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        this.instructorService.getInstructor({"},{"lineNumber":328,"author":{"gitId":"-"},"content":"          courseId: this.courseId,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"          feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"          intent: this.intent,"},{"lineNumber":331,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"          moderatedPerson: this.moderatedPerson,"},{"lineNumber":333,"author":{"gitId":"-"},"content":"          previewAs: this.previewAsPerson,"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        }).subscribe((instructor: Instructor) \u003d\u003e {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"          this.personName \u003d instructor.name;"},{"lineNumber":336,"author":{"gitId":"-"},"content":"          this.personEmail \u003d instructor.email;"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":344,"author":{"gitId":"-"},"content":"   * Redirects to join course link for unregistered student/instructor."},{"lineNumber":345,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":346,"author":{"gitId":"-"},"content":"  joinCourseForUnregisteredEntity(): void {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURL(\u0027/web/join\u0027, { entitytype: this.entityType, key: this.regKey });"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":351,"author":{"gitId":"-"},"content":"   * Loads the feedback session information."},{"lineNumber":352,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":353,"author":{"gitId":"-"},"content":"  loadFeedbackSession(loginRequired: boolean, auth: AuthInfo): void {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionLoading \u003d true;"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":358,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":360,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionLoading \u003d false;"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":366,"author":{"gitId":"-"},"content":"      .subscribe({"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        next: (feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"          this.feedbackSessionInstructions \u003d feedbackSession.instructions;"},{"lineNumber":369,"author":{"gitId":"-"},"content":"          this.formattedSessionOpeningTime \u003d this.timezoneService"},{"lineNumber":370,"author":{"gitId":"-"},"content":"              .formatToString(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone, TIME_FORMAT);"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"          this.formattedSessionClosingTime \u003d this.getformattedSessionClosingTime(feedbackSession, TIME_FORMAT);"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"          this.feedbackSessionSubmissionStatus \u003d feedbackSession.submissionStatus;"},{"lineNumber":375,"author":{"gitId":"-"},"content":"          this.feedbackSessionTimezone \u003d feedbackSession.timeZone;"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"          // don\u0027t show alert modal in moderation"},{"lineNumber":378,"author":{"gitId":"-"},"content":"          if (!this.moderatedPerson) {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"            let modalContent: string;"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            switch (feedbackSession.submissionStatus) {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"              case FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN:"},{"lineNumber":382,"author":{"gitId":"-"},"content":"                this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                modalContent \u003d `\u003cp\u003e\u003cstrong\u003eThe feedback session is currently not open for submissions.\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                \u003cp\u003eYou can view the questions and any submitted responses"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                for this feedback session but cannot submit new responses.\u003c/p\u003e`;"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                this.simpleModalService.openInformationModal("},{"lineNumber":387,"author":{"gitId":"-"},"content":"                    \u0027Feedback Session Not Open\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":389,"author":{"gitId":"-"},"content":"              case FeedbackSessionSubmissionStatus.OPEN:"},{"lineNumber":390,"author":{"gitId":"-"},"content":"                if (this.isFeedbackEndingLessThanFifteenMinutes(feedbackSession)) {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                  modalContent \u003d \u0027Warning: you have less than 15 minutes before the submission deadline expires!\u0027;"},{"lineNumber":392,"author":{"gitId":"-"},"content":"                  this.simpleModalService.openInformationModal("},{"lineNumber":393,"author":{"gitId":"-"},"content":"                      \u0027Feedback Session Will Be Closing Soon!\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":394,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":395,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":396,"author":{"gitId":"-"},"content":"              case FeedbackSessionSubmissionStatus.CLOSED:"},{"lineNumber":397,"author":{"gitId":"-"},"content":"                this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":398,"author":{"gitId":"-"},"content":"                modalContent \u003d `\u003cp\u003e\u003cstrong\u003eFeedback Session is Closed\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":399,"author":{"gitId":"-"},"content":"                \u003cp\u003eYou can view the questions and any submitted responses"},{"lineNumber":400,"author":{"gitId":"-"},"content":"                for this feedback session but cannot submit new responses.\u003c/p\u003e`;"},{"lineNumber":401,"author":{"gitId":"-"},"content":"                this.simpleModalService.openInformationModal("},{"lineNumber":402,"author":{"gitId":"-"},"content":"                    \u0027Feedback Session Closed\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":403,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":404,"author":{"gitId":"-"},"content":"              case FeedbackSessionSubmissionStatus.GRACE_PERIOD:"},{"lineNumber":405,"author":{"gitId":"-"},"content":"              default:"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":407,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"          this.loadFeedbackQuestions();"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"          // Display note on submission on mobile device"},{"lineNumber":412,"author":{"gitId":"-"},"content":"          const mobileDeviceWidth: number \u003d 768;"},{"lineNumber":413,"author":{"gitId":"-"},"content":"          if (this.feedbackSessionSubmissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN"},{"lineNumber":414,"author":{"gitId":"-"},"content":"              \u0026\u0026 window.innerWidth \u003c mobileDeviceWidth) {"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            const modalContent: string \u003d `Note that you can use the Submit button to save responses already entered,"},{"lineNumber":416,"author":{"gitId":"-"},"content":"              and continue to answer remaining questions after that."},{"lineNumber":417,"author":{"gitId":"-"},"content":"              You may also edit your submission any number of times before the closing time of this session.`;"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            this.simpleModalService.openInformationModal("},{"lineNumber":419,"author":{"gitId":"-"},"content":"                \u0027Note On Submission\u0027, SimpleModalType.INFO, modalContent);"},{"lineNumber":420,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":423,"author":{"gitId":"-"},"content":"          if (resp.status \u003d\u003d\u003d 404) {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"            const message \u003d \u0027The session does not exist \u0027"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                + \u0027(most likely deleted by an instructor after the submission link was sent).\u0027;"},{"lineNumber":426,"author":{"gitId":"-"},"content":"            this.simpleModalService.openInformationModal(\u0027Feedback Session Does Not Exist!\u0027, SimpleModalType.DANGER,"},{"lineNumber":427,"author":{"gitId":"-"},"content":"                message,"},{"lineNumber":428,"author":{"gitId":"-"},"content":"                {"},{"lineNumber":429,"author":{"gitId":"-"},"content":"                  onClosed: () \u003d\u003e this.navigationService.navigateByURL("},{"lineNumber":430,"author":{"gitId":"-"},"content":"                      this.loggedInUser ? `/web/${this.entityType}/home` : \u0027/web/front/home\u0027),"},{"lineNumber":431,"author":{"gitId":"-"},"content":"                },"},{"lineNumber":432,"author":{"gitId":"-"},"content":"                { backdrop: \u0027static\u0027 });"},{"lineNumber":433,"author":{"gitId":"-"},"content":"          } else if (resp.status \u003d\u003d\u003d 403) {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"            if (loginRequired \u0026\u0026 !auth.user) {"},{"lineNumber":435,"author":{"gitId":"-"},"content":"              // There is no logged in user for a valid, used registration key, redirect to login page"},{"lineNumber":436,"author":{"gitId":"-"},"content":"              if (this.entityType \u003d\u003d\u003d \u0027student\u0027) {"},{"lineNumber":437,"author":{"gitId":"-"},"content":"                window.location.href \u003d `${this.backendUrl}${auth.studentLoginUrl}`;"},{"lineNumber":438,"author":{"gitId":"-"},"content":"              } else if (this.entityType \u003d\u003d\u003d \u0027instructor\u0027) {"},{"lineNumber":439,"author":{"gitId":"-"},"content":"                window.location.href \u003d `${this.backendUrl}${auth.instructorLoginUrl}`;"},{"lineNumber":440,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":442,"author":{"gitId":"-"},"content":"              this.simpleModalService.openInformationModal(\u0027Not Authorised To Access!\u0027, SimpleModalType.DANGER,"},{"lineNumber":443,"author":{"gitId":"-"},"content":"                  resp.error.message,"},{"lineNumber":444,"author":{"gitId":"-"},"content":"                  {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"                    onClosed: () \u003d\u003e this.navigationService.navigateByURL("},{"lineNumber":446,"author":{"gitId":"-"},"content":"                        this.loggedInUser ? `/web/${this.entityType}/home` : \u0027/web/front/home\u0027),"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                  },"},{"lineNumber":448,"author":{"gitId":"-"},"content":"                  { backdrop: \u0027static\u0027 });"},{"lineNumber":449,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":450,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"            this.navigationService.navigateWithErrorMessage("},{"lineNumber":452,"author":{"gitId":"-"},"content":"                `/web/${this.entityType}/home`, resp.error.message);"},{"lineNumber":453,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":455,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":456,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":457,"author":{"gitId":"-"},"content":""},{"lineNumber":458,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   * Loads feedback questions to submit."},{"lineNumber":460,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":461,"author":{"gitId":"-"},"content":"  loadFeedbackQuestions(): void {"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionQuestionsLoading \u003d true;"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    this.questionSubmissionForms \u003d [];"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":470,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionQuestionsLoading \u003d false;"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":475,"author":{"gitId":"-"},"content":"          next: (response: FeedbackQuestionsResponse) \u003d\u003e {"},{"lineNumber":476,"author":{"gitId":"-"},"content":"            response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"              const model: QuestionSubmissionFormModel \u003d {"},{"lineNumber":478,"author":{"gitId":"-"},"content":"                isLoading: false,"},{"lineNumber":479,"author":{"gitId":"-"},"content":"                isLoaded: false,"},{"lineNumber":480,"author":{"gitId":"-"},"content":"                feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"},{"lineNumber":481,"author":{"gitId":"-"},"content":""},{"lineNumber":482,"author":{"gitId":"-"},"content":"                questionNumber: feedbackQuestion.questionNumber,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"                questionBrief: feedbackQuestion.questionBrief,"},{"lineNumber":484,"author":{"gitId":"-"},"content":"                questionDescription: feedbackQuestion.questionDescription,"},{"lineNumber":485,"author":{"gitId":"-"},"content":""},{"lineNumber":486,"author":{"gitId":"-"},"content":"                giverType: feedbackQuestion.giverType,"},{"lineNumber":487,"author":{"gitId":"-"},"content":"                recipientType: feedbackQuestion.recipientType,"},{"lineNumber":488,"author":{"gitId":"-"},"content":"                recipientList: [],"},{"lineNumber":489,"author":{"gitId":"-"},"content":"                recipientSubmissionForms: [],"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"                questionType: feedbackQuestion.questionType,"},{"lineNumber":492,"author":{"gitId":"-"},"content":"                questionDetails: feedbackQuestion.questionDetails,"},{"lineNumber":493,"author":{"gitId":"-"},"content":""},{"lineNumber":494,"author":{"gitId":"-"},"content":"                numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":495,"author":{"gitId":"-"},"content":"                customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":496,"author":{"gitId":"-"},"content":"                    ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 0,"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"                showGiverNameTo: feedbackQuestion.showGiverNameTo,"},{"lineNumber":499,"author":{"gitId":"-"},"content":"                showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"},{"lineNumber":500,"author":{"gitId":"-"},"content":"                showResponsesTo: feedbackQuestion.showResponsesTo,"},{"lineNumber":501,"author":{"gitId":"-"},"content":"              };"},{"lineNumber":502,"author":{"gitId":"-"},"content":"              this.questionSubmissionForms.push(model);"},{"lineNumber":503,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"            this.isQuestionCountOne \u003d this.questionSubmissionForms.length \u003d\u003d\u003d 1;"},{"lineNumber":506,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":507,"author":{"gitId":"-"},"content":"          error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"            this.handleError(resp);"},{"lineNumber":509,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":511,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":514,"author":{"gitId":"-"},"content":"   * Tracks the question submission form by feedback question id."},{"lineNumber":515,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":516,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":517,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":518,"author":{"gitId":"-"},"content":"  trackQuestionSubmissionFormByFn(_: any, item: QuestionSubmissionFormModel): any {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    return item.feedbackQuestionId;"},{"lineNumber":520,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":523,"author":{"gitId":"-"},"content":"   * Loads the feedback question recipients for the question."},{"lineNumber":524,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":525,"author":{"gitId":"-"},"content":"  loadFeedbackQuestionRecipientsForQuestion(model: QuestionSubmissionFormModel): void {"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.loadFeedbackQuestionRecipients({"},{"lineNumber":527,"author":{"gitId":"-"},"content":"      questionId: model.feedbackQuestionId,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":531,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    }).subscribe({"},{"lineNumber":533,"author":{"gitId":"-"},"content":"      next: (response: FeedbackQuestionRecipients) \u003d\u003e {"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        response.recipients.forEach((recipient: FeedbackQuestionRecipient) \u003d\u003e {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"          model.recipientList.push({"},{"lineNumber":536,"author":{"gitId":"-"},"content":"            recipientIdentifier: recipient.identifier,"},{"lineNumber":537,"author":{"gitId":"-"},"content":"            recipientName: recipient.name,"},{"lineNumber":538,"author":{"gitId":"-"},"content":"            recipientSection: recipient.section,"},{"lineNumber":539,"author":{"gitId":"-"},"content":"            recipientTeam: recipient.team,"},{"lineNumber":540,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":542,"author":{"gitId":"-"},"content":""},{"lineNumber":543,"author":{"gitId":"-"},"content":"        if (this.previewAsPerson) {"},{"lineNumber":544,"author":{"gitId":"-"},"content":"          // don\u0027t load responses in preview mode"},{"lineNumber":545,"author":{"gitId":"-"},"content":"          // generate a list of empty response box"},{"lineNumber":546,"author":{"gitId":"-"},"content":"          const formMode: QuestionSubmissionFormMode \u003d this.getQuestionSubmissionFormMode(model);"},{"lineNumber":547,"author":{"gitId":"-"},"content":"          model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"            if (formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT"},{"lineNumber":549,"author":{"gitId":"-"},"content":"                \u0026\u0026 model.recipientSubmissionForms.length \u003e\u003d model.customNumberOfEntitiesToGiveFeedbackTo) {"},{"lineNumber":550,"author":{"gitId":"-"},"content":"              return;"},{"lineNumber":551,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":552,"author":{"gitId":"-"},"content":""},{"lineNumber":553,"author":{"gitId":"-"},"content":"            let recipientIdentifier: string \u003d \u0027\u0027;"},{"lineNumber":554,"author":{"gitId":"-"},"content":"            if (formMode !\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"              recipientIdentifier \u003d recipient.recipientIdentifier;"},{"lineNumber":556,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push({"},{"lineNumber":559,"author":{"gitId":"-"},"content":"              recipientIdentifier,"},{"lineNumber":560,"author":{"gitId":"-"},"content":"              responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":561,"author":{"gitId":"-"},"content":"              responseId: \u0027\u0027,"},{"lineNumber":562,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":563,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":564,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":565,"author":{"gitId":"-"},"content":"          model.isLoading \u003d false;"},{"lineNumber":566,"author":{"gitId":"-"},"content":"          model.isLoaded \u003d true;"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":568,"author":{"gitId":"-"},"content":"          this.loadFeedbackResponses(model);"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":570,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":571,"author":{"gitId":"-"},"content":"      error: (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(resp.error.message),"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":573,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":576,"author":{"gitId":"-"},"content":"   * Gets the form mode of the question submission form."},{"lineNumber":577,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":578,"author":{"gitId":"-"},"content":"  getQuestionSubmissionFormMode(model: QuestionSubmissionFormModel): QuestionSubmissionFormMode {"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    const isNumberOfEntitiesToGiveFeedbackToSettingLimited: boolean \u003d"},{"lineNumber":580,"author":{"gitId":"-"},"content":"        (model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS"},{"lineNumber":581,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS_EXCLUDING_SELF"},{"lineNumber":582,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS_IN_SAME_SECTION"},{"lineNumber":583,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":584,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS_EXCLUDING_SELF"},{"lineNumber":585,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS_IN_SAME_SECTION"},{"lineNumber":586,"author":{"gitId":"-"},"content":"            || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        \u0026\u0026 model.numberOfEntitiesToGiveFeedbackToSetting \u003d\u003d\u003d NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        \u0026\u0026 model.recipientList.length \u003e model.customNumberOfEntitiesToGiveFeedbackTo;"},{"lineNumber":589,"author":{"gitId":"-"},"content":""},{"lineNumber":590,"author":{"gitId":"-"},"content":"    return isNumberOfEntitiesToGiveFeedbackToSettingLimited"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        ? QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT : QuestionSubmissionFormMode.FIXED_RECIPIENT;"},{"lineNumber":592,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":593,"author":{"gitId":"-"},"content":""},{"lineNumber":594,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":595,"author":{"gitId":"-"},"content":"   * Loads the responses of the feedback question to {@recipientSubmissionForms} in the model."},{"lineNumber":596,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":597,"author":{"gitId":"-"},"content":"  loadFeedbackResponses(model: QuestionSubmissionFormModel): void {"},{"lineNumber":598,"author":{"gitId":"-"},"content":"    this.feedbackResponsesService.getFeedbackResponse({"},{"lineNumber":599,"author":{"gitId":"-"},"content":"      questionId: model.feedbackQuestionId,"},{"lineNumber":600,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":601,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":602,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":603,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"      model.isLoading \u003d false;"},{"lineNumber":605,"author":{"gitId":"-"},"content":"      model.isLoaded \u003d true;"},{"lineNumber":606,"author":{"gitId":"-"},"content":"    }))"},{"lineNumber":607,"author":{"gitId":"-"},"content":"      .subscribe({"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        next: (existingResponses: FeedbackResponsesResponse) \u003d\u003e {"},{"lineNumber":609,"author":{"gitId":"-"},"content":"          if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT) {"},{"lineNumber":610,"author":{"gitId":"-"},"content":"            // need to generate a full list of submission forms"},{"lineNumber":611,"author":{"gitId":"-"},"content":"            model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"},{"lineNumber":612,"author":{"gitId":"-"},"content":"              const matchedExistingResponse: FeedbackResponse | undefined \u003d"},{"lineNumber":613,"author":{"gitId":"-"},"content":"                  existingResponses.responses.find("},{"lineNumber":614,"author":{"gitId":"-"},"content":"                      (response: FeedbackResponse) \u003d\u003e response.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"},{"lineNumber":615,"author":{"gitId":"-"},"content":"              const submissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":616,"author":{"gitId":"-"},"content":"                recipientIdentifier: recipient.recipientIdentifier,"},{"lineNumber":617,"author":{"gitId":"-"},"content":"                responseDetails: matchedExistingResponse"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                    ? matchedExistingResponse.responseDetails"},{"lineNumber":619,"author":{"gitId":"-"},"content":"                    : this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":620,"author":{"gitId":"-"},"content":"                responseId: matchedExistingResponse ? matchedExistingResponse.feedbackResponseId : \u0027\u0027,"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                isValid: true,"},{"lineNumber":622,"author":{"gitId":"-"},"content":"              };"},{"lineNumber":623,"author":{"gitId":"-"},"content":"              if (matchedExistingResponse \u0026\u0026 matchedExistingResponse.giverComment) {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"                submissionForm.commentByGiver \u003d this.getCommentModel("},{"lineNumber":625,"author":{"gitId":"-"},"content":"                    matchedExistingResponse.giverComment, recipient.recipientIdentifier);"},{"lineNumber":626,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":627,"author":{"gitId":"-"},"content":"              model.recipientSubmissionForms.push(submissionForm);"},{"lineNumber":628,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":629,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":630,"author":{"gitId":"-"},"content":""},{"lineNumber":631,"author":{"gitId":"-"},"content":"          if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":632,"author":{"gitId":"-"},"content":"            // need to generate limited number of submission forms"},{"lineNumber":633,"author":{"gitId":"-"},"content":"            let numberOfRecipientSubmissionFormsNeeded: number \u003d"},{"lineNumber":634,"author":{"gitId":"-"},"content":"                model.customNumberOfEntitiesToGiveFeedbackTo - existingResponses.responses.length;"},{"lineNumber":635,"author":{"gitId":"-"},"content":""},{"lineNumber":636,"author":{"gitId":"-"},"content":"            existingResponses.responses.forEach((response: FeedbackResponse) \u003d\u003e {"},{"lineNumber":637,"author":{"gitId":"-"},"content":"              const submissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":638,"author":{"gitId":"-"},"content":"                recipientIdentifier: response.recipientIdentifier,"},{"lineNumber":639,"author":{"gitId":"-"},"content":"                responseDetails: response.responseDetails,"},{"lineNumber":640,"author":{"gitId":"-"},"content":"                responseId: response.feedbackResponseId,"},{"lineNumber":641,"author":{"gitId":"-"},"content":"                isValid: true,"},{"lineNumber":642,"author":{"gitId":"-"},"content":"              };"},{"lineNumber":643,"author":{"gitId":"-"},"content":"              if (response.giverComment) {"},{"lineNumber":644,"author":{"gitId":"-"},"content":"                submissionForm.commentByGiver \u003d this.getCommentModel("},{"lineNumber":645,"author":{"gitId":"-"},"content":"                    response.giverComment, response.recipientIdentifier);"},{"lineNumber":646,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":647,"author":{"gitId":"-"},"content":"              model.recipientSubmissionForms.push(submissionForm);"},{"lineNumber":648,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":649,"author":{"gitId":"-"},"content":""},{"lineNumber":650,"author":{"gitId":"-"},"content":"            // generate empty submission forms"},{"lineNumber":651,"author":{"gitId":"-"},"content":"            while (numberOfRecipientSubmissionFormsNeeded \u003e 0) {"},{"lineNumber":652,"author":{"gitId":"-"},"content":"              model.recipientSubmissionForms.push({"},{"lineNumber":653,"author":{"gitId":"-"},"content":"                recipientIdentifier: \u0027\u0027,"},{"lineNumber":654,"author":{"gitId":"-"},"content":"                responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":655,"author":{"gitId":"-"},"content":"                responseId: \u0027\u0027,"},{"lineNumber":656,"author":{"gitId":"-"},"content":"                isValid: true,"},{"lineNumber":657,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":658,"author":{"gitId":"-"},"content":"              numberOfRecipientSubmissionFormsNeeded -\u003d 1;"},{"lineNumber":659,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":660,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":661,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        error: (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(resp.error.message),"},{"lineNumber":663,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":664,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":665,"author":{"gitId":"-"},"content":""},{"lineNumber":666,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":667,"author":{"gitId":"-"},"content":"   * Gets the comment model for a given comment."},{"lineNumber":668,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":669,"author":{"gitId":"-"},"content":"  getCommentModel(comment: FeedbackResponseComment, recipientIdentifier: string): CommentRowModel {"},{"lineNumber":670,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":671,"author":{"gitId":"-"},"content":"      originalComment: comment,"},{"lineNumber":672,"author":{"gitId":"-"},"content":"      originalRecipientIdentifier: recipientIdentifier,"},{"lineNumber":673,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":674,"author":{"gitId":"-"},"content":"        commentText: comment.commentText,"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        // the participant comment shall not use custom visibilities"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":677,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":679,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":680,"author":{"gitId":"-"},"content":"      timezone: this.feedbackSessionTimezone,"},{"lineNumber":681,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":682,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":683,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":684,"author":{"gitId":"-"},"content":""},{"lineNumber":685,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":686,"author":{"gitId":"-"},"content":"   * Checks whether there is any submission forms in the current page."},{"lineNumber":687,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":688,"author":{"gitId":"-"},"content":"  get questionsNeedingSubmission(): QuestionSubmissionFormModel[] {"},{"lineNumber":689,"author":{"gitId":"-"},"content":"    return this.questionSubmissionForms"},{"lineNumber":690,"author":{"gitId":"-"},"content":"        .filter((model: QuestionSubmissionFormModel) \u003d\u003e model.recipientSubmissionForms.length !\u003d\u003d 0);"},{"lineNumber":691,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":692,"author":{"gitId":"-"},"content":""},{"lineNumber":693,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":694,"author":{"gitId":"-"},"content":"   * Saves the feedback responses for the specific questions."},{"lineNumber":695,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":696,"author":{"gitId":"-"},"content":"   * \u003cp\u003eAll empty feedback response will be deleted; For non-empty responses, update/create them if necessary."},{"lineNumber":697,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":698,"author":{"gitId":"-"},"content":"  saveFeedbackResponses(questionSubmissionForms: QuestionSubmissionFormModel[]): void {"},{"lineNumber":699,"author":{"gitId":"domlimm"},"content":"    this.isSubmitAllClicked \u003d true;"},{"lineNumber":700,"author":{"gitId":"domlimm"},"content":""},{"lineNumber":701,"author":{"gitId":"-"},"content":"    const notYetAnsweredQuestions: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":702,"author":{"gitId":"-"},"content":"    const requestIds: Record\u003cstring, string\u003e \u003d {};"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    const answers: Record\u003cstring, FeedbackResponse[]\u003e \u003d {};"},{"lineNumber":704,"author":{"gitId":"-"},"content":"    const failToSaveQuestions: Record\u003cnumber, string\u003e \u003d {}; // Map of question number to error message"},{"lineNumber":705,"author":{"gitId":"-"},"content":"    const savingRequests: Observable\u003cany\u003e[] \u003d [];"},{"lineNumber":706,"author":{"gitId":"-"},"content":""},{"lineNumber":707,"author":{"gitId":"-"},"content":"    this.logService.createFeedbackSessionLog({"},{"lineNumber":708,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":709,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":710,"author":{"gitId":"-"},"content":"      studentEmail: this.personEmail,"},{"lineNumber":711,"author":{"gitId":"-"},"content":"      logType: FeedbackSessionLogType.SUBMISSION,"},{"lineNumber":712,"author":{"gitId":"-"},"content":"    }).subscribe({"},{"lineNumber":713,"author":{"gitId":"-"},"content":"      next: () \u003d\u003e {},"},{"lineNumber":714,"author":{"gitId":"-"},"content":"      error: () \u003d\u003e {"},{"lineNumber":715,"author":{"gitId":"-"},"content":"        this.statusMessageService.showWarningToast(\u0027Failed to log feedback session submission\u0027);"},{"lineNumber":716,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":717,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":718,"author":{"gitId":"-"},"content":""},{"lineNumber":719,"author":{"gitId":"-"},"content":"    questionSubmissionForms.forEach((questionSubmissionFormModel: QuestionSubmissionFormModel) \u003d\u003e {"},{"lineNumber":720,"author":{"gitId":"-"},"content":"      let isQuestionFullyAnswered: boolean \u003d true;"},{"lineNumber":721,"author":{"gitId":"-"},"content":""},{"lineNumber":722,"author":{"gitId":"-"},"content":"      const responses: FeedbackResponseRequest[] \u003d [];"},{"lineNumber":723,"author":{"gitId":"-"},"content":""},{"lineNumber":724,"author":{"gitId":"-"},"content":"      questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":725,"author":{"gitId":"-"},"content":"          .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":726,"author":{"gitId":"-"},"content":"            if (!recipientSubmissionFormModel.isValid) {"},{"lineNumber":727,"author":{"gitId":"-"},"content":"              failToSaveQuestions[questionSubmissionFormModel.questionNumber] \u003d"},{"lineNumber":728,"author":{"gitId":"-"},"content":"                  \u0027Invalid responses provided. Please check question constraints.\u0027;"},{"lineNumber":729,"author":{"gitId":"-"},"content":"              return;"},{"lineNumber":730,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":731,"author":{"gitId":"-"},"content":"            const isFeedbackResponseDetailsEmpty: boolean \u003d"},{"lineNumber":732,"author":{"gitId":"-"},"content":"                this.feedbackResponsesService.isFeedbackResponseDetailsEmpty("},{"lineNumber":733,"author":{"gitId":"-"},"content":"                    questionSubmissionFormModel.questionType, recipientSubmissionFormModel.responseDetails);"},{"lineNumber":734,"author":{"gitId":"-"},"content":"            isQuestionFullyAnswered \u003d isQuestionFullyAnswered \u0026\u0026 !isFeedbackResponseDetailsEmpty;"},{"lineNumber":735,"author":{"gitId":"-"},"content":""},{"lineNumber":736,"author":{"gitId":"-"},"content":"            if (!isFeedbackResponseDetailsEmpty) {"},{"lineNumber":737,"author":{"gitId":"-"},"content":"              responses.push({"},{"lineNumber":738,"author":{"gitId":"-"},"content":"                recipient: recipientSubmissionFormModel.recipientIdentifier,"},{"lineNumber":739,"author":{"gitId":"-"},"content":"                responseDetails: recipientSubmissionFormModel.responseDetails,"},{"lineNumber":740,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":741,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":742,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":743,"author":{"gitId":"-"},"content":""},{"lineNumber":744,"author":{"gitId":"-"},"content":"      if (!failToSaveQuestions[questionSubmissionFormModel.questionNumber]) {"},{"lineNumber":745,"author":{"gitId":"-"},"content":"        savingRequests.push("},{"lineNumber":746,"author":{"gitId":"-"},"content":"            this.feedbackResponsesService.submitFeedbackResponses(questionSubmissionFormModel.feedbackQuestionId, {"},{"lineNumber":747,"author":{"gitId":"-"},"content":"              responses,"},{"lineNumber":748,"author":{"gitId":"-"},"content":"            }, {"},{"lineNumber":749,"author":{"gitId":"-"},"content":"              intent: this.intent,"},{"lineNumber":750,"author":{"gitId":"-"},"content":"              key: this.regKey,"},{"lineNumber":751,"author":{"gitId":"-"},"content":"              moderatedperson: this.moderatedPerson,"},{"lineNumber":752,"author":{"gitId":"-"},"content":"            }).pipe("},{"lineNumber":753,"author":{"gitId":"-"},"content":"                tap((resp: FeedbackResponses) \u003d\u003e {"},{"lineNumber":754,"author":{"gitId":"-"},"content":"                  const responsesMap: Record\u003cstring, FeedbackResponse\u003e \u003d {};"},{"lineNumber":755,"author":{"gitId":"-"},"content":"                  resp.responses.forEach((response: FeedbackResponse) \u003d\u003e {"},{"lineNumber":756,"author":{"gitId":"-"},"content":"                    responsesMap[response.recipientIdentifier] \u003d response;"},{"lineNumber":757,"author":{"gitId":"-"},"content":"                    answers[questionSubmissionFormModel.feedbackQuestionId] \u003d"},{"lineNumber":758,"author":{"gitId":"-"},"content":"                        answers[questionSubmissionFormModel.feedbackQuestionId] || [];"},{"lineNumber":759,"author":{"gitId":"-"},"content":"                    answers[questionSubmissionFormModel.feedbackQuestionId].push(response);"},{"lineNumber":760,"author":{"gitId":"-"},"content":"                  });"},{"lineNumber":761,"author":{"gitId":"-"},"content":"                  requestIds[questionSubmissionFormModel.feedbackQuestionId] \u003d resp.requestId || \u0027\u0027;"},{"lineNumber":762,"author":{"gitId":"-"},"content":""},{"lineNumber":763,"author":{"gitId":"-"},"content":"                  questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":764,"author":{"gitId":"-"},"content":"                      .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":765,"author":{"gitId":"-"},"content":"                        if (responsesMap[recipientSubmissionFormModel.recipientIdentifier]) {"},{"lineNumber":766,"author":{"gitId":"-"},"content":"                          const correspondingResp: FeedbackResponse \u003d"},{"lineNumber":767,"author":{"gitId":"-"},"content":"                              responsesMap[recipientSubmissionFormModel.recipientIdentifier];"},{"lineNumber":768,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseId \u003d correspondingResp.feedbackResponseId;"},{"lineNumber":769,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseDetails \u003d correspondingResp.responseDetails;"},{"lineNumber":770,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.recipientIdentifier \u003d correspondingResp.recipientIdentifier;"},{"lineNumber":771,"author":{"gitId":"-"},"content":"                        } else {"},{"lineNumber":772,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.responseId \u003d \u0027\u0027;"},{"lineNumber":773,"author":{"gitId":"-"},"content":"                          recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":774,"author":{"gitId":"-"},"content":"                        }"},{"lineNumber":775,"author":{"gitId":"-"},"content":"                      });"},{"lineNumber":776,"author":{"gitId":"-"},"content":"                }),"},{"lineNumber":777,"author":{"gitId":"-"},"content":"                switchMap(() \u003d\u003e"},{"lineNumber":778,"author":{"gitId":"-"},"content":"                    forkJoin(questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":779,"author":{"gitId":"-"},"content":"                        .map((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e"},{"lineNumber":780,"author":{"gitId":"-"},"content":"                            this.createCommentRequest(recipientSubmissionFormModel))),"},{"lineNumber":781,"author":{"gitId":"-"},"content":"                ),"},{"lineNumber":782,"author":{"gitId":"-"},"content":"                catchError((error: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":783,"author":{"gitId":"-"},"content":"                  failToSaveQuestions[questionSubmissionFormModel.questionNumber] \u003d error.error.message;"},{"lineNumber":784,"author":{"gitId":"-"},"content":"                  return of(error);"},{"lineNumber":785,"author":{"gitId":"-"},"content":"                }),"},{"lineNumber":786,"author":{"gitId":"-"},"content":"            ),"},{"lineNumber":787,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":788,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":789,"author":{"gitId":"-"},"content":""},{"lineNumber":790,"author":{"gitId":"-"},"content":"      if (!isQuestionFullyAnswered) {"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        notYetAnsweredQuestions.add(questionSubmissionFormModel.questionNumber);"},{"lineNumber":792,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":793,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":794,"author":{"gitId":"-"},"content":""},{"lineNumber":795,"author":{"gitId":"-"},"content":"    this.isSavingResponses \u003d true;"},{"lineNumber":796,"author":{"gitId":"-"},"content":"    forkJoin(savingRequests).pipe("},{"lineNumber":797,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":798,"author":{"gitId":"-"},"content":"          this.isSavingResponses \u003d false;"},{"lineNumber":799,"author":{"gitId":"-"},"content":""},{"lineNumber":800,"author":{"gitId":"-"},"content":"          const modalRef: NgbModalRef \u003d this.ngbModal.open(SavingCompleteModalComponent);"},{"lineNumber":801,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.requestIds \u003d requestIds;"},{"lineNumber":802,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.courseId \u003d this.courseId;"},{"lineNumber":803,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.feedbackSessionName \u003d this.feedbackSessionName;"},{"lineNumber":804,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.feedbackSessionTimezone \u003d this.feedbackSessionTimezone;"},{"lineNumber":805,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.personEmail \u003d this.personEmail;"},{"lineNumber":806,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.personName \u003d this.personName;"},{"lineNumber":807,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.questions \u003d questionSubmissionForms;"},{"lineNumber":808,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.answers \u003d answers;"},{"lineNumber":809,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.notYetAnsweredQuestions \u003d Array.from(notYetAnsweredQuestions.values());"},{"lineNumber":810,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.failToSaveQuestions \u003d failToSaveQuestions;"},{"lineNumber":811,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":812,"author":{"gitId":"-"},"content":"    ).subscribe();"},{"lineNumber":813,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":814,"author":{"gitId":"-"},"content":""},{"lineNumber":815,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":816,"author":{"gitId":"-"},"content":"   * Creates comment request."},{"lineNumber":817,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":818,"author":{"gitId":"-"},"content":"  createCommentRequest(recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel): Observable\u003cany\u003e {"},{"lineNumber":819,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.responseId) {"},{"lineNumber":820,"author":{"gitId":"-"},"content":"      // responseId not set, cannot set comment"},{"lineNumber":821,"author":{"gitId":"-"},"content":"      return of({});"},{"lineNumber":822,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver) {"},{"lineNumber":824,"author":{"gitId":"-"},"content":"      // comment not given, do nothing"},{"lineNumber":825,"author":{"gitId":"-"},"content":"      return of({});"},{"lineNumber":826,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":827,"author":{"gitId":"-"},"content":""},{"lineNumber":828,"author":{"gitId":"-"},"content":"    const isSameRecipient \u003d recipientSubmissionFormModel.recipientIdentifier"},{"lineNumber":829,"author":{"gitId":"-"},"content":"        \u003d\u003d\u003d recipientSubmissionFormModel.commentByGiver.originalRecipientIdentifier;"},{"lineNumber":830,"author":{"gitId":"-"},"content":""},{"lineNumber":831,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver.originalComment || !isSameRecipient) {"},{"lineNumber":832,"author":{"gitId":"-"},"content":"      // comment is new or original comment deleted because recipient has changed"},{"lineNumber":833,"author":{"gitId":"-"},"content":""},{"lineNumber":834,"author":{"gitId":"-"},"content":"      if (recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":835,"author":{"gitId":"-"},"content":"        // new comment is empty"},{"lineNumber":836,"author":{"gitId":"-"},"content":"        recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":837,"author":{"gitId":"-"},"content":"        return of({});"},{"lineNumber":838,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":839,"author":{"gitId":"-"},"content":""},{"lineNumber":840,"author":{"gitId":"-"},"content":"      // create new comment"},{"lineNumber":841,"author":{"gitId":"-"},"content":"      return this.commentService.createComment({"},{"lineNumber":842,"author":{"gitId":"-"},"content":"        commentText: recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText,"},{"lineNumber":843,"author":{"gitId":"-"},"content":"        // we ignore the fields in comment edit model as participant comment"},{"lineNumber":844,"author":{"gitId":"-"},"content":"        // will follow visibilities from question by design"},{"lineNumber":845,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":846,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":847,"author":{"gitId":"-"},"content":"      }, recipientSubmissionFormModel.responseId, this.intent, {"},{"lineNumber":848,"author":{"gitId":"-"},"content":"        key: this.regKey,"},{"lineNumber":849,"author":{"gitId":"-"},"content":"        moderatedperson: this.moderatedPerson,"},{"lineNumber":850,"author":{"gitId":"-"},"content":"      }).pipe("},{"lineNumber":851,"author":{"gitId":"-"},"content":"          tap((comment: FeedbackResponseComment) \u003d\u003e {"},{"lineNumber":852,"author":{"gitId":"-"},"content":"            recipientSubmissionFormModel.commentByGiver \u003d this.getCommentModel("},{"lineNumber":853,"author":{"gitId":"-"},"content":"                comment, recipientSubmissionFormModel.recipientIdentifier);"},{"lineNumber":854,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":855,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":856,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":857,"author":{"gitId":"-"},"content":""},{"lineNumber":858,"author":{"gitId":"-"},"content":"    // existing comment"},{"lineNumber":859,"author":{"gitId":"-"},"content":""},{"lineNumber":860,"author":{"gitId":"-"},"content":"    if (recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":861,"author":{"gitId":"-"},"content":"      // comment is empty, create delete request"},{"lineNumber":862,"author":{"gitId":"-"},"content":"      return this.commentService.deleteComment("},{"lineNumber":863,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":864,"author":{"gitId":"-"},"content":"            key: this.regKey,"},{"lineNumber":865,"author":{"gitId":"-"},"content":"            moderatedperson: this.moderatedPerson,"},{"lineNumber":866,"author":{"gitId":"-"},"content":"          })"},{"lineNumber":867,"author":{"gitId":"-"},"content":"          .pipe("},{"lineNumber":868,"author":{"gitId":"-"},"content":"              tap(() \u003d\u003e {"},{"lineNumber":869,"author":{"gitId":"-"},"content":"                recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":870,"author":{"gitId":"-"},"content":"              }));"},{"lineNumber":871,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":872,"author":{"gitId":"-"},"content":""},{"lineNumber":873,"author":{"gitId":"-"},"content":"    // update comment"},{"lineNumber":874,"author":{"gitId":"-"},"content":"    return this.commentService.updateComment({"},{"lineNumber":875,"author":{"gitId":"-"},"content":"      commentText: recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText,"},{"lineNumber":876,"author":{"gitId":"-"},"content":"      // we ignore the fields in comment edit model as participant comment"},{"lineNumber":877,"author":{"gitId":"-"},"content":"      // will follow visibilities from question by design"},{"lineNumber":878,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":879,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":880,"author":{"gitId":"-"},"content":"    }, recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":881,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":882,"author":{"gitId":"-"},"content":"      moderatedperson: this.moderatedPerson,"},{"lineNumber":883,"author":{"gitId":"-"},"content":"    }).pipe("},{"lineNumber":884,"author":{"gitId":"-"},"content":"        tap((comment: FeedbackResponseComment) \u003d\u003e {"},{"lineNumber":885,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver \u003d this.getCommentModel("},{"lineNumber":886,"author":{"gitId":"-"},"content":"              comment, recipientSubmissionFormModel.recipientIdentifier);"},{"lineNumber":887,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":888,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":889,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":890,"author":{"gitId":"-"},"content":""},{"lineNumber":891,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":892,"author":{"gitId":"-"},"content":"   * Deletes a comment by participants."},{"lineNumber":893,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":894,"author":{"gitId":"-"},"content":"  deleteParticipantComment(questionIndex: number, responseIdx: number): void {"},{"lineNumber":895,"author":{"gitId":"-"},"content":"    const recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel \u003d"},{"lineNumber":896,"author":{"gitId":"-"},"content":"        this.questionSubmissionForms[questionIndex].recipientSubmissionForms[responseIdx];"},{"lineNumber":897,"author":{"gitId":"-"},"content":""},{"lineNumber":898,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver || !recipientSubmissionFormModel.commentByGiver.originalComment) {"},{"lineNumber":899,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":900,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":901,"author":{"gitId":"-"},"content":""},{"lineNumber":902,"author":{"gitId":"-"},"content":"    this.commentService.deleteComment("},{"lineNumber":903,"author":{"gitId":"-"},"content":"        recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":904,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":905,"author":{"gitId":"-"},"content":"          moderatedperson: this.moderatedPerson,"},{"lineNumber":906,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":907,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":908,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e {"},{"lineNumber":909,"author":{"gitId":"-"},"content":"            recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":910,"author":{"gitId":"-"},"content":"            this.statusMessageService.showSuccessToast(\u0027Your comment has been deleted!\u0027);"},{"lineNumber":911,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":912,"author":{"gitId":"-"},"content":"          error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":913,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":914,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":915,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":916,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":917,"author":{"gitId":"-"},"content":""},{"lineNumber":918,"author":{"gitId":"-"},"content":"  retryLoadingFeedbackSessionQuestions(): void {"},{"lineNumber":919,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionQuestionsLoadingFailed \u003d false;"},{"lineNumber":920,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003e\u003d 0) {"},{"lineNumber":921,"author":{"gitId":"-"},"content":"      this.retryAttempts -\u003d 1;"},{"lineNumber":922,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":923,"author":{"gitId":"-"},"content":"    this.loadFeedbackQuestions();"},{"lineNumber":924,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":925,"author":{"gitId":"-"},"content":""},{"lineNumber":926,"author":{"gitId":"-"},"content":"  handleError(resp: ErrorMessageOutput): void {"},{"lineNumber":927,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionQuestionsLoadingFailed \u003d true;"},{"lineNumber":928,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003c 0) {"},{"lineNumber":929,"author":{"gitId":"-"},"content":"      const report: NgbModalRef \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":930,"author":{"gitId":"-"},"content":"      report.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":931,"author":{"gitId":"-"},"content":"      report.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":932,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":933,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":934,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":935,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":936,"author":{"gitId":"-"},"content":""},{"lineNumber":937,"author":{"gitId":"-"},"content":"  loadRecipientsAndResponses(event: any, questionSubmissionForm: QuestionSubmissionFormModel): void {"},{"lineNumber":938,"author":{"gitId":"-"},"content":"    if (event \u0026\u0026 event.visible \u0026\u0026 !questionSubmissionForm.isLoaded \u0026\u0026 !questionSubmissionForm.isLoading) {"},{"lineNumber":939,"author":{"gitId":"-"},"content":"      questionSubmissionForm.isLoading \u003d true;"},{"lineNumber":940,"author":{"gitId":"-"},"content":"      this.loadFeedbackQuestionRecipientsForQuestion(questionSubmissionForm);"},{"lineNumber":941,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":942,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":943,"author":{"gitId":"-"},"content":""},{"lineNumber":944,"author":{"gitId":"-"},"content":"  private getformattedSessionClosingTime(feedbackSession: FeedbackSession, TIME_FORMAT: string): string {"},{"lineNumber":945,"author":{"gitId":"-"},"content":"    const userSessionEndingTime \u003d DeadlineExtensionHelper.getUserFeedbackSessionEndingTimestamp(feedbackSession);"},{"lineNumber":946,"author":{"gitId":"-"},"content":"    let formattedString \u003d this.timezoneService.formatToString("},{"lineNumber":947,"author":{"gitId":"-"},"content":"      userSessionEndingTime, feedbackSession.timeZone, TIME_FORMAT);"},{"lineNumber":948,"author":{"gitId":"-"},"content":"    if (DeadlineExtensionHelper.hasUserExtension(feedbackSession)) {"},{"lineNumber":949,"author":{"gitId":"-"},"content":"      formattedString +\u003d \u0027 (Extension given)\u0027;"},{"lineNumber":950,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":951,"author":{"gitId":"-"},"content":"    return formattedString;"},{"lineNumber":952,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":953,"author":{"gitId":"-"},"content":""},{"lineNumber":954,"author":{"gitId":"-"},"content":"  private isFeedbackEndingLessThanFifteenMinutes(feedbackSession: FeedbackSession): boolean {"},{"lineNumber":955,"author":{"gitId":"-"},"content":"    const userSessionEndingTime \u003d DeadlineExtensionHelper.getOngoingUserFeedbackSessionEndingTimestamp(feedbackSession);"},{"lineNumber":956,"author":{"gitId":"-"},"content":"    return (userSessionEndingTime - Date.now()) \u003c Milliseconds.IN_FIFTEEN_MINUTES;"},{"lineNumber":957,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":958,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"domlimm":3,"-":955}}]
