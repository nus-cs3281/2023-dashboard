{"authorDailyContributionsMap":{"Echomo-Xinyu":[],"cedricongjh":[],"vigneshsankariyer1234567890":[],"weiquu":[],"itsyme":[],"Eclipse-Dominator":[{"date":"2023-05-12","commitResults":[{"hash":"1e05fef55ce2682d7024311403dd9e4a1895495c","isMergeCommit":false,"messageTitle":"JsonAdaptedPerson: Change JSON property name tagged -\u003e tags","messageBody":"Similar to the previous commit, let\u0027s change the JSON property name\n\u0027tagged\u0027 in the JsonAdaptedPerson class to \u0027tags\u0027.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2023-05-18","commitResults":[{"hash":"a3f7c826243a9c5685a636918f4e54c20b4dff45","isMergeCommit":false,"messageTitle":"Make file-related log messages more informative","messageBody":"Let\u0027s make file-related log messages more informative, as follows:\n* include the file location when referring to a file\n* use a more informative term: prefs -\u003e preferences\n","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":11}}}]},{"date":"2023-05-20","commitResults":[{"hash":"481a3d92aee8089c7c4f3574183a3b337b89b97a","isMergeCommit":false,"messageTitle":"Add a null check to LogCenter.getLogger(Class\u003cT\u003e)","messageBody":"LogCenter.getLogger(Class\u003cT\u003e clazz) creates a Logger named\nafter the given class. If the clazz is null, it is supposed to\ncreate a Logger with an empty String as the name.\n\nThe current implementation calls Logger.getLogger(\"\")\ninstead of LogCenter.getLogger(\"\"), which results in the Logger\nobject not having the handlers that are added inside the\nLogCenter.getLogger(String) method. This means log messages\nwritten using such a logger will not appear in the log files.\n\nHowever, the current codebase has no use case for passing a\nnull object to this method. As per the YAGNI principle,\nwe should not implement that ability until we actually need it.\n\nHence, instead of correcting the said error, let\u0027s add an assertion\nto ensure null is never passed to this method, eliminating the need\nfor the buggy code path in the first place.\n","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2023-06-04","commitResults":[{"hash":"2215c938e4ba1d255dd92fe5bac244bdb9a09efb","isMergeCommit":false,"messageTitle":"Bump JavaFx to 11.0.2 to prevent crashing on Linux (#177)","messageBody":"Let\u0027s bump JavaFx to version 11 -\u003e 11.0.2 because version 11\r\ncrashes on Ubuntu 18.04 and above, which was fixed in 11.0.2.\r\n\r\nSee bugs.openjdk.org/browse/JDK-8210411 for details.\r\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}}]},{"date":"2023-06-26","commitResults":[{"hash":"0e18ef4147a22f9eb6fc50f6e838a1b3d7ba3cfa","isMergeCommit":false,"messageTitle":"Rename DataConversionException -\u003e DataLoadingException","messageBody":"DataConversionException is thrown to indicate any problem\nencountered while reading a JSON file, not just problems\nspecific to data conversion.\n\nLet\u0027s rename it as DataLoadingException to make the name\nmore representative of its purpose.\n","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":66}}},{"hash":"0a8d2fb93c54e1348f1f6d4fe6d2258b4ea73094","isMergeCommit":false,"messageTitle":"Refactor client code handling IOException","messageBody":"JsonUtil#readJsonFile() method throws a DataLoadingException when it\ndetects an IOException.  However, some client code of that method are\nwritten as if it throws an IOException.\n\nLet\u0027s,\n1. remove \u0027throws IOExceptions\u0027 clause from the relevant client methods\n   in Storage, AddressBookStorage, and UserPrefsStorage.\n2. remove corresponding catch blocks.\n3. tweak relevant javadocs and log message to match.\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":30}}}]},{"date":"2023-07-13","commitResults":[{"hash":"d98c36e13babf475ddd13000b3b31fecb212302f","isMergeCommit":false,"messageTitle":"Move Messages class into the logic package","messageBody":"The Messages class contains common user-facing messages used by\r\ncommands and parsers in the Logic component.\r\n\r\nHowever, Messages class is in the seedu.address.commons.core\r\npackage that contains classes used system-wide. Given that the\r\nMessages class is user-facing, it would only ever be used by the\r\nlogic and ui components, and thus would fit better inside the\r\nseedu.address.logic package.\r\n\r\nFurthermore, Messages class accesses classes in the Model component.\r\nThis is not right as the Model component is in a higher layer\r\ncompared to the commons package, as per how the layered\r\narchitecture should work.\r\n\r\nLet\u0027s move the Messages class to the seedu.address.logic package.","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":24}}},{"hash":"c07fb9e7d3b23aa8f56a724f1487df4bc22de6bd","isMergeCommit":false,"messageTitle":"Improve error message if no write permission","messageBody":"Insufficient permission to write to the data file will show up as\nAccessDeniedException in the error message.\nThe application should be able to describe the error to the user rather\nthan just showing the name of the Exception.\n\nLet\u0027s\n- make the error message more descriptive by informing\nthe user that there are insufficient permissions for the file for\nAccesssDeniedExceptions.\n\n- Also include a better general purpose description for other forms\nof IO related exceptions\n","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":28}}},{"hash":"bd48d597b72da7c0570699a0912f834f619f53a9","isMergeCommit":false,"messageTitle":"Improve logs msg for command related exception","messageBody":"Logger will log \"Invaid Command: \u003ccommand text\u003e\" when a CommandException\nor ParseException occur.\n\nHowever, the exceptions might be caused by other issuess like unable to\nwrite to save file etc.\nTherefore, the current log message is not suitable for CommandException.\n\nLet\u0027s improve the accuracy of the error message by changing it to\naccurately describe both CommandException and ParseException.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]}],"vvidday":[],"ckcherry23":[],"domlimm":[],"jasonqiu212":[],"MarcusTXK":[],"sikai00":[],"EuniceSim142":[],"yucheng11122017":[],"hhdqirui":[],"EltonGohJH":[],"lhw-1":[],"kevin9foong":[],"cheehongw":[]},"authorFileTypeContributionMap":{"Echomo-Xinyu":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"cedricongjh":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"vigneshsankariyer1234567890":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"weiquu":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"itsyme":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"Eclipse-Dominator":{"java":157,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":1},"vvidday":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"ckcherry23":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"domlimm":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"jasonqiu212":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"MarcusTXK":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"sikai00":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"EuniceSim142":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"yucheng11122017":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"hhdqirui":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"EltonGohJH":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"lhw-1":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"kevin9foong":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0},"cheehongw":{"java":0,"js":0,"css":0,"adoc":0,"fxml":0,"gradle":0}},"authorContributionVariance":{"Echomo-Xinyu":0.0,"cedricongjh":0.0,"vigneshsankariyer1234567890":0.0,"weiquu":0.0,"itsyme":0.0,"Eclipse-Dominator":223.49269,"vvidday":0.0,"ckcherry23":0.0,"domlimm":0.0,"jasonqiu212":0.0,"MarcusTXK":0.0,"sikai00":0.0,"EuniceSim142":0.0,"yucheng11122017":0.0,"hhdqirui":0.0,"EltonGohJH":0.0,"lhw-1":0.0,"kevin9foong":0.0,"cheehongw":0.0},"authorDisplayNameMap":{"Echomo-Xinyu":"SUN ..INYU","cedricongjh":"ONG ..DRIC","vigneshsankariyer1234567890":"VIGN..IYER","weiquu":"NEO ..QING","itsyme":"LEE ..AVID","Eclipse-Dominator":"LI Z..AOQI","vvidday":"DAVI.. ONG","ckcherry23":"CHAR..USAR","domlimm":"DOMI.. JUN","jasonqiu212":"QIU ..ASON","MarcusTXK":"MARC.. KYE","sikai00":"CHAN.. KAI","EuniceSim142":"SIM ..NICE","yucheng11122017":"CHAN..HENG","hhdqirui":"WU Q..IRUI","EltonGohJH":"ELTO.. HAO","lhw-1":"LEE ..WOON","kevin9foong":"KEVI..TONG","cheehongw":"WONG..HONG"}}
