[{"path":"src/app/activity-dashboard/event-tables/GithubEventDataTable.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DataSource } from \u0027@angular/cdk/table\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import * as moment from \u0027moment\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { BehaviorSubject, merge, Observable, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../../core/models/github-user.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubEvent } from \u0027../../core/models/github/github-event.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { EventWeek } from \u0027../event-week.model\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { paginateData } from \u0027./event-paginator\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Adapted from IssuesDataTable for Events."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class GithubEventDataTable extends DataSource\u003cEventWeek\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  private startDate \u003d new BehaviorSubject(\u0027\u0027);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  private endDate \u003d new BehaviorSubject(\u0027\u0027);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  private eventsSubject \u003d new BehaviorSubject\u003cEventWeek[]\u003e([]);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  private eventSubscription: Subscription;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  public isLoading$ \u003d this.githubEventService.isLoading.asObservable();"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private logger: LoggingService,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private sort: MatSort,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private paginator: MatPaginator,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private actor?: GithubUser,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private defaultFilter?: (event: GithubEvent) \u003d\u003e boolean"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    super();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  connect(): Observable\u003cEventWeek[]\u003e {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    return this.eventsSubject.asObservable();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  disconnect() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    this.startDate.complete();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    this.endDate.complete();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    this.eventsSubject.complete();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.eventSubscription.unsubscribe();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  /** Group GithubEvents[] week by week. Needs refactoring. */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  groupByWeeks(githubEvents: GithubEvent[]): EventWeek[] {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    const endDate \u003d this.startDate.getValue() \u003d\u003d\u003d \u0027\u0027 ? moment() : moment(this.endDate.getValue());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    const startDate \u003d"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      this.startDate.getValue() \u003d\u003d\u003d \u0027\u0027 ? endDate.clone().subtract(1, \u0027month\u0027).startOf(\u0027day\u0027) : moment(this.startDate.getValue());"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    const loopDate \u003d moment(startDate).day(\u0027Sunday\u0027);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    const eventWeeks \u003d [];"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    let eventsInAWeek \u003d [];"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    let weekNum \u003d 1;"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    githubEvents.forEach((githubEvent) \u003d\u003e {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      weekNum++;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      const eventDate \u003d moment(githubEvent.created_at);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      if (loopDate.isAfter(eventDate)) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // event in earlier week"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      } else if (loopDate.clone().add(7, \u0027days\u0027).isAfter(eventDate) \u0026\u0026 loopDate.isBefore(eventDate)) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // event in this week"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        eventsInAWeek.push(githubEvent);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // event in later week"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        eventWeeks.push(EventWeek.of(loopDate.format(\u0027ll\u0027), eventsInAWeek)); // push previous week"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        eventsInAWeek \u003d [];"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        loopDate.add(7, \u0027days\u0027);"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Empty weeks if any"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        while (loopDate.clone().add(7, \u0027days\u0027).isBefore(eventDate) \u0026\u0026 loopDate.clone().add(7, \u0027days\u0027).isBefore(endDate)) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          eventWeeks.push(EventWeek.of(loopDate.format(\u0027ll\u0027), []));"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          loopDate.add(7, \u0027days\u0027);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"        console.assert(loopDate.clone().add(7, \u0027days\u0027).isAfter(eventDate) \u0026\u0026 loopDate.isBefore(eventDate));"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (eventDate.isBefore(endDate)) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          eventsInAWeek.push(githubEvent);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    eventWeeks.push(EventWeek.of(loopDate.format(\u0027ll\u0027), eventsInAWeek)); // push final week"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    return eventWeeks;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  loadEvents() {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    // If no pagination and sorting"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    let sortChange;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    if (this.sort !\u003d\u003d undefined) {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      sortChange \u003d this.sort.sortChange;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    let page;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    if (this.paginator !\u003d\u003d undefined) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      page \u003d this.paginator.page;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    const displayDataChanges \u003d [page, sortChange, this.startDate, this.endDate].filter((x) \u003d\u003e x !\u003d\u003d undefined);"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    this.githubEventService.pollEvents();"},{"lineNumber":104,"author":{"gitId":"cheehongw"},"content":"    this.githubEventService.events$.subscribe((x) \u003d\u003e this.logger.debug(\u0027GithubEventDataTable: \u0027, x));"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    this.eventSubscription \u003d this.githubEventService.events$"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":107,"author":{"gitId":"-"},"content":"        flatMap(() \u003d\u003e {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"          // merge creates an observable from values that changes display"},{"lineNumber":109,"author":{"gitId":"-"},"content":"          return merge(...displayDataChanges).pipe("},{"lineNumber":110,"author":{"gitId":"-"},"content":"            // maps each change in display value to new event ordering or filtering"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            map(() \u003d\u003e {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"              let data \u003d \u003cGithubEvent[]\u003eObject.values(this.githubEventService.events$.getValue()).reverse();"},{"lineNumber":113,"author":{"gitId":"-"},"content":"              if (this.defaultFilter) {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                data \u003d data.filter(this.defaultFilter);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"              // Filter by actor of event"},{"lineNumber":117,"author":{"gitId":"-"},"content":"              if (this.actor) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                data \u003d data.filter((githubEvent) \u003d\u003e {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                  if (!githubEvent.actor) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                    return false;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                  } else {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                    return githubEvent.actor.login \u003d\u003d\u003d this.actor.login;"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                  }"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":125,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"              let weekData \u003d this.groupByWeeks(data);"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"              if (this.paginator !\u003d\u003d undefined) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                weekData \u003d paginateData(this.paginator, weekData);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":132,"author":{"gitId":"-"},"content":"              return weekData;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            })"},{"lineNumber":134,"author":{"gitId":"-"},"content":"          );"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      .subscribe((data) \u003d\u003e {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        this.eventsSubject.next(data);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  /*"},{"lineNumber":143,"author":{"gitId":"-"},"content":"   * Start and end date getters and setters."},{"lineNumber":144,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  get start(): string {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    return this.startDate.value;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"  set start(date: string) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    this.startDate.next(date);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"  get end(): string {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    return this.endDate.value;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"  set end(date: string) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    this.endDate.next(date);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":159,"cheehongw":1}},{"path":"src/app/activity-dashboard/event-tables/event-tables.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { animate, state, style, transition, trigger } from \u0027@angular/animations\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../../core/models/github-user.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { EventWeek } from \u0027../event-week.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { GithubEventDataTable } from \u0027./GithubEventDataTable\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"export enum ACTION_BUTTONS {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  VIEW_IN_WEB,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  COLLAPSE"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  selector: \u0027app-event-tables\u0027,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./event-tables.component.html\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./event-tables.component.css\u0027],"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  animations: ["},{"lineNumber":20,"author":{"gitId":"-"},"content":"    trigger(\u0027detailExpand\u0027, ["},{"lineNumber":21,"author":{"gitId":"-"},"content":"      state(\u0027collapsed\u0027, style({ height: \u00270px\u0027, minHeight: \u00270\u0027 })),"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      state(\u0027expanded\u0027, style({ height: \u0027*\u0027 })),"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      transition(\u0027expanded \u003c\u003d\u003e collapsed\u0027, animate(\u0027225ms cubic-bezier(0.4, 0.0, 0.2, 1)\u0027))"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ])"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":26,"author":{"gitId":"-"},"content":"})"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Angular Table Expandable Rows"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * ref: https://material.angular.io/components/table/examples#table-expandable-rows"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"export class EventTablesComponent implements OnInit, AfterViewInit {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  @Input() columnsToDisplay: string[];"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  @Input() expandedColumnsToDisplay: string[];"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  @Input() actions: ACTION_BUTTONS[];"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  @Input() actor?: GithubUser \u003d undefined;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  @Input() filters?: any \u003d undefined;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  @ViewChild(MatSort, { static: true }) sort: MatSort;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  githubEvents: GithubEventDataTable;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  public readonly action_buttons \u003d ACTION_BUTTONS;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  /** The expanded row */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  expandedElement: EventWeek | null;"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"  constructor(public githubEventService: GithubEventService, private logger: LoggingService) {}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":52,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.githubEvents \u003d new GithubEventDataTable(this.githubEventService, this.logger, this.sort, this.paginator, this.actor, this.filters);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      this.githubEvents.loadEvents();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  reload() {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    this.githubEvents.loadEvents();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   * Formats the title text to account for those that contain long words."},{"lineNumber":67,"author":{"gitId":"-"},"content":"   * @param title - Title of Event that is to be displayed in the Table Row."},{"lineNumber":68,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  fitTitleText(title: string): string {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    // Arbitrary Length of Characters beyond which an overflow occurs."},{"lineNumber":71,"author":{"gitId":"-"},"content":"    const MAX_WORD_LENGTH \u003d 43;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    const SPLITTER_TEXT \u003d \u0027 \u0027;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    const ELLIPSES \u003d \u0027...\u0027;"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    return title"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      .split(SPLITTER_TEXT)"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      .map((word) \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (word.length \u003e MAX_WORD_LENGTH) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          return word.substring(0, MAX_WORD_LENGTH - 5).concat(ELLIPSES);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return word;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      .join(SPLITTER_TEXT);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  /** Not implemented yet. */"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  viewEventInBrowser(id: number, event: Event) {"},{"lineNumber":88,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`EventTablesComponent: Opening Event ${id} on Github`);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    // window.open(\u0027https://github.com/\u0027, \u0027_blank\u0027);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"  /** Show individual GithubEvents of EventWeek. */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  showExpandedDetails(element: EventWeek) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    if (element.events.length \u003e 0) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      this.expandedElement \u003d this.expandedElement \u003d\u003d\u003d element ? null : element;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  /** Returns color string of cell. Shade darkens with magnitude of number. */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  colorCell(count: number) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    if (count \u003d\u003d\u003d 0) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      return \u0027white\u0027;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    } else if (count \u003e 0 \u0026\u0026 count \u003c\u003d 5) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      return \u0027pale-green\u0027;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    } else if (count \u003e 6) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      return \u0027green\u0027;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":1,"-":106,"cheehongw":2}},{"path":"src/app/app.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../environments/environment\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./core/services/electron.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027./core/services/error-handling.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./core/services/logging.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  selector: \u0027app-root\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./app.component.html\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./app.component.css\u0027]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"})"},{"lineNumber":12,"author":{"gitId":"-"},"content":"export class AppComponent implements AfterViewInit {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  NOT_CONNECTED_ERROR: Error \u003d new Error(\u0027You are not connected to the internet.\u0027);"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"  constructor(public electronService: ElectronService, logger: LoggingService, public errorHandlingService: ErrorHandlingService) {"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"    logger.info(\u0027AppComponent: AppConfig\u0027, AppConfig);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    if (electronService.isElectron()) {"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"      logger.info(\u0027AppComponent: Mode electron\u0027);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"      logger.info(\u0027AppComponent: Mode web\u0027);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  ngAfterViewInit() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    this.addListenerForHttpLinks();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    this.addListenerForNetworkOffline();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * This listener will prevent the default behaviour of electron to open http links on electron browser itself."},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * Will use the client\u0027s default OS browser to open the link."},{"lineNumber":33,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  addListenerForHttpLinks() {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    document.addEventListener("},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u0027click\u0027,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      (event) \u003d\u003e {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        const elem \u003d \u003cHTMLLinkElement\u003e(\u003cHTMLElement\u003eevent.target).closest(\u0027a[href^\u003d\"http\"]\u0027);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (elem) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          event.preventDefault();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          event.stopPropagation();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          this.electronService.openLink(elem.href);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      false"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   * This listener checks if WATcher has a connection to a network, and will show an error snackbar if it does not."},{"lineNumber":51,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  addListenerForNetworkOffline() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    window.addEventListener("},{"lineNumber":54,"author":{"gitId":"-"},"content":"      \u0027offline\u0027,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      (event) \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(this.NOT_CONNECTED_ERROR);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      false"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":58,"cheehongw":3}},{"path":"src/app/app.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientModule } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ErrorHandler, NgModule, NgZone } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { BrowserModule, Title } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { BrowserAnimationsModule } from \u0027@angular/platform-browser/animations\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Apollo, ApolloModule } from \u0027apollo-angular\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { HttpLink, HttpLinkModule } from \u0027apollo-angular-link-http\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { InMemoryCache, IntrospectionFragmentMatcher } from \u0027apollo-cache-inmemory\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ApolloLink } from \u0027apollo-link\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { setContext } from \u0027apollo-link-context\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { MarkdownModule, MarkedOptions } from \u0027ngx-markdown\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import \u0027reflect-metadata\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import graphqlTypes from \u0027../../graphql/graphql-types\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import \u0027../polyfills\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { ActivityDashboardModule } from \u0027./activity-dashboard/activity-dashboard.module\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { AppRoutingModule } from \u0027./app-routing.module\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { AppComponent } from \u0027./app.component\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { AuthModule } from \u0027./auth/auth.module\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { UserConfirmationComponent } from \u0027./core/guards/user-confirmation/user-confirmation.component\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027./core/services/auth.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./core/services/electron.service\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027./core/services/error-handling.service\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { AuthServiceFactory } from \u0027./core/services/factories/factory.auth.service\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { GithubServiceFactory } from \u0027./core/services/factories/factory.github.service\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { IssueServiceFactory } from \u0027./core/services/factories/factory.issue.service\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./core/services/github.service\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027./core/services/githubevent.service\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027./core/services/issue.service\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./core/services/logging.service\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027./core/services/phase.service\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { SessionFixConfirmationComponent } from \u0027./core/services/session-fix-confirmation/session-fix-confirmation.component\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./core/services/user.service\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { IssuesViewerModule } from \u0027./issues-viewer/issues-viewer.module\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import { LabelDefinitionPopupComponent } from \u0027./shared/label-definition-popup/label-definition-popup.component\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import { HeaderComponent } from \u0027./shared/layout\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import { markedOptionsFactory } from \u0027./shared/lib/marked\u0027;"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"import { RepoChangeFormComponent } from \u0027./shared/repo-change-form/repo-change-form.component\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027./shared/shared.module\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":41,"author":{"gitId":"Eclipse-Dominator"},"content":"  declarations: ["},{"lineNumber":42,"author":{"gitId":"Eclipse-Dominator"},"content":"    AppComponent,"},{"lineNumber":43,"author":{"gitId":"Eclipse-Dominator"},"content":"    HeaderComponent,"},{"lineNumber":44,"author":{"gitId":"Eclipse-Dominator"},"content":"    UserConfirmationComponent,"},{"lineNumber":45,"author":{"gitId":"Eclipse-Dominator"},"content":"    LabelDefinitionPopupComponent,"},{"lineNumber":46,"author":{"gitId":"Eclipse-Dominator"},"content":"    RepoChangeFormComponent,"},{"lineNumber":47,"author":{"gitId":"Eclipse-Dominator"},"content":"    SessionFixConfirmationComponent"},{"lineNumber":48,"author":{"gitId":"Eclipse-Dominator"},"content":"  ],"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":50,"author":{"gitId":"-"},"content":"    BrowserModule,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    BrowserAnimationsModule,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    AuthModule,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    IssuesViewerModule,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ActivityDashboardModule,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    SharedModule,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    HttpClientModule,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    MarkdownModule.forRoot({"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      markedOptions: {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        provide: MarkedOptions,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        useFactory: markedOptionsFactory"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }),"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    AppRoutingModule,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    ApolloModule,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    HttpLinkModule"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  providers: ["},{"lineNumber":68,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      provide: GithubService,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      useFactory: GithubServiceFactory,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      deps: [ErrorHandlingService, Apollo, ElectronService, LoggingService]"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      provide: AuthService,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      useFactory: AuthServiceFactory,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      deps: ["},{"lineNumber":77,"author":{"gitId":"-"},"content":"        ElectronService,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Router,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NgZone,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        GithubService,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserService,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        IssueService,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        PhaseService,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        GithubEventService,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Title,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        LoggingService"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      ]"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      provide: IssueService,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      useFactory: IssueServiceFactory,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      deps: [GithubService, UserService, PhaseService, ElectronService]"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      provide: ErrorHandler,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      useClass: ErrorHandlingService"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  bootstrap: [AppComponent],"},{"lineNumber":100,"author":{"gitId":"cheehongw"},"content":"  entryComponents: [UserConfirmationComponent, SessionFixConfirmationComponent, LabelDefinitionPopupComponent, RepoChangeFormComponent]"},{"lineNumber":101,"author":{"gitId":"-"},"content":"})"},{"lineNumber":102,"author":{"gitId":"-"},"content":"export class AppModule {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  constructor(private apollo: Apollo, private httpLink: HttpLink, private authService: AuthService, private logger: LoggingService) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    const URI \u003d \u0027https://api.github.com/graphql\u0027;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    const log \u003d new ApolloLink((operation, forward) \u003d\u003e {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      operation.setContext({ start: performance.now() });"},{"lineNumber":107,"author":{"gitId":"cheehongw"},"content":"      this.logger.info(\u0027AppModule: GraphQL request\u0027, operation.getContext());"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      return forward(operation).map((result) \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        const time \u003d performance.now() - operation.getContext().start;"},{"lineNumber":110,"author":{"gitId":"cheehongw"},"content":"        this.logger.info(\u0027AppModule: GraphQL response\u0027, operation.getContext(), `in ${Math.round(time)}ms`);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        const repo \u003d operation.getContext().response.body.data.repository;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        const item \u003d Object.keys(repo)[0];"},{"lineNumber":113,"author":{"gitId":"cheehongw"},"content":"        this.logger.debug(\u0027AppModule: GraphQL response body\u0027, item, repo[item].edges.length, repo[item].edges);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return result;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    const basic \u003d setContext(() \u003d\u003e {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      return { headers: { Accept: \u0027charset\u003dutf-8\u0027 } };"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    const auth \u003d setContext(() \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      return { headers: { Authorization: `Token ${this.authService.accessToken.getValue()}` } };"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    const link \u003d ApolloLink.from([log, basic, auth, this.httpLink.create({ uri: URI })]);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    const fragmentMatcher \u003d new IntrospectionFragmentMatcher({"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      introspectionQueryResultData: graphqlTypes"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    const cache \u003d new InMemoryCache({ fragmentMatcher });"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    this.apollo.create({"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      link: link,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      cache: cache"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":8,"-":120,"cheehongw":5}},{"path":"src/app/auth/auth.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, NgZone, OnDestroy, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Observable, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { filter, flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../environments/environment\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../core/models/github-user.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ApplicationService } from \u0027../core/services/application.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AuthService, AuthState } from \u0027../core/services/auth.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../core/services/electron.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../core/services/error-handling.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../core/services/logging.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../core/services/phase.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../core/services/user.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"const APPLICATION_VERSION_OUTDATED_ERROR \u003d \u0027Please update to the latest version of WATcher.\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  selector: \u0027app-auth\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./auth.component.html\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./auth.component.css\u0027]"},{"lineNumber":21,"author":{"gitId":"-"},"content":"})"},{"lineNumber":22,"author":{"gitId":"-"},"content":"export class AuthComponent implements OnInit, OnDestroy {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  authState: AuthState;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  accessTokenSubscription: Subscription;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  authStateSubscription: Subscription;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  currentUserName: string;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  urlEncodedSessionName: string;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  urlEncodedRepo: string;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  sessionInformation: string;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public appService: ApplicationService,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public electronService: ElectronService,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private authService: AuthService,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private router: Router,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ngZone: NgZone,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private activatedRoute: ActivatedRoute,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private logger: LoggingService"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.electronService.registerIpcListener(\u0027github-oauth-reply\u0027, (event, { token, error, isWindowClosed }) \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      this.ngZone.run(() \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (error) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          if (!isWindowClosed) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            this.errorHandlingService.handleError(error);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          this.goToSessionSelect();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          return;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.authService.storeOAuthAccessToken(token);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    this.logger.startSession();"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    const oauthCode \u003d this.activatedRoute.snapshot.queryParamMap.get(\u0027code\u0027);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    const state \u003d this.activatedRoute.snapshot.queryParamMap.get(\u0027state\u0027);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    if (this.authService.isAuthenticated()) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      this.router.navigate([this.phaseService.currentPhase]);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.initAccessTokenSubscription();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    this.initAuthStateSubscription();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.createProfileFromUrlQueryParams();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    this.getRepoFromUrlQueryParams();"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    if (oauthCode) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      // runs upon receiving oauthCode from the redirect"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      this.authService.changeAuthState(AuthState.AwaitingAuthentication);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      // this.restoreOrgDetailsFromLocalStorage();"},{"lineNumber":75,"author":{"gitId":"cheehongw"},"content":"      this.logger.info(\u0027AuthComponent: Obtained authorisation code from Github\u0027);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      this.fetchAccessToken(oauthCode, state);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * Will fetch the access token from GitHub."},{"lineNumber":82,"author":{"gitId":"-"},"content":"   * @param oauthCode - The authorisation code obtained from GitHub."},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * @param state - The state returned from GitHub."},{"lineNumber":84,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  fetchAccessToken(oauthCode: string, state: string) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    if (!this.authService.isReturnedStateSame(state)) {"},{"lineNumber":87,"author":{"gitId":"cheehongw"},"content":"      this.logger.info(`AuthComponent: Received incorrect state ${state}, continue waiting for correct state`);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`AuthComponent: Retrieving access token from Github`);"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    const accessTokenUrl \u003d `${AppConfig.accessTokenUrl}/${oauthCode}/client_id/${AppConfig.clientId}`;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    fetch(accessTokenUrl)"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      .then((res) \u003d\u003e res.json())"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      .then((data) \u003d\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (data.error) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          throw new Error(data.error);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.authService.storeOAuthAccessToken(data.token);"},{"lineNumber":101,"author":{"gitId":"cheehongw"},"content":"        this.logger.info(`AuthComponent: Sucessfully obtained access token`);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      .catch((err) \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"cheehongw"},"content":"        this.logger.info(`AuthComponent: Error in data fetched from access token URL: ${err}`);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(err);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  ngOnDestroy() {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    this.electronService.removeIpcListeners(\u0027github-oauth-reply\u0027);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    if (this.authStateSubscription) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      this.authStateSubscription.unsubscribe();"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    if (this.accessTokenSubscription) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      this.accessTokenSubscription.unsubscribe();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Checks whether the current version of WATcher is outdated."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  checkAppIsOutdated(): Observable\u003cany\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    return this.appService.isApplicationOutdated().pipe("},{"lineNumber":125,"author":{"gitId":"-"},"content":"      map((isOutdated: boolean) \u003d\u003e {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (isOutdated) {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"          throw new Error(APPLICATION_VERSION_OUTDATED_ERROR);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"  updateSession(sessionEvent: string) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    this.sessionInformation \u003d sessionEvent;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"  goToSessionSelect() {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"  isUserNotAuthenticated(): boolean {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.NotAuthenticated;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"  isUserAuthenticating(): boolean {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.AwaitingAuthentication;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"  isAwaitingOAuthUserConfirm(): boolean {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.ConfirmOAuthUser;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"  get currentSessionOrg(): string {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    if (!this.sessionInformation) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      // Retrieve org details of session information from local storage"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      return window.localStorage.getItem(\u0027org\u0027);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    return this.getOrgDetails(this.sessionInformation);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":162,"author":{"gitId":"-"},"content":"   * Extracts the Organization Details from the input sessionInformation."},{"lineNumber":163,"author":{"gitId":"-"},"content":"   * @param sessionInformation - string in the format of \u0027orgName/dataRepo\u0027"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  private getOrgDetails(sessionInformation: string) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    return sessionInformation.split(\u0027/\u0027)[0];"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"  private initAuthStateSubscription() {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    this.authStateSubscription \u003d this.authService.currentAuthState.subscribe((state) \u003d\u003e {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      this.ngZone.run(() \u003d\u003e {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        this.authState \u003d state;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"  private initAccessTokenSubscription() {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    this.accessTokenSubscription \u003d this.authService.accessToken"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":180,"author":{"gitId":"-"},"content":"        filter((token: string) \u003d\u003e !!token),"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        flatMap(() \u003d\u003e this.userService.getAuthenticatedUser())"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      .subscribe((user: GithubUser) \u003d\u003e {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        this.ngZone.run(() \u003d\u003e {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"          this.currentUserName \u003d user.login;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"          this.authService.changeAuthState(AuthState.ConfirmOAuthUser);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"  private createProfileFromUrlQueryParams() {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    const urlParams \u003d this.activatedRoute.snapshot.queryParamMap;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    if (urlParams.has(\u0027session\u0027)) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      this.urlEncodedSessionName \u003d urlParams.get(\u0027session\u0027);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"  private getRepoFromUrlQueryParams() {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    const urlParams \u003d this.activatedRoute.snapshot.queryParamMap;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    if (urlParams.has(\u0027repo\u0027)) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      this.urlEncodedRepo \u003d urlParams.get(\u0027repo\u0027);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":199,"cheehongw":5}},{"path":"src/app/auth/confirm-login/confirm-login.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { flatMap } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../core/models/phase.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AuthService, AuthState } from \u0027../../core/services/auth.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../../core/services/electron.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../core/services/phase.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  selector: \u0027app-auth-confirm-login\u0027,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./confirm-login.component.html\u0027,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./confirm-login.component.css\u0027]"},{"lineNumber":17,"author":{"gitId":"-"},"content":"})"},{"lineNumber":18,"author":{"gitId":"-"},"content":"export class ConfirmLoginComponent implements OnInit {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  @Input() username: string;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  @Input() currentSessionOrg: string;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public electronService: ElectronService,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private authService: AuthService,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private logger: LoggingService,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private router: Router"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  ngOnInit() {}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  onGithubWebsiteClicked() {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    window.open(\u0027https://github.com/\u0027, \u0027_blank\u0027);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    window.location.reload();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  logIntoAnotherAccount() {"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(\u0027ConfirmLoginComponent: Logging into another account\u0027);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    this.electronService.clearCookies();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.authService.startOAuthProcess();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   * Handles the clean up required after authentication and setting up of user data is completed."},{"lineNumber":48,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  handleAuthSuccess() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    this.authService.setTitleWithPhaseDetail();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    this.router.navigateByUrl(Phase.issuesViewer);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    this.authService.changeAuthState(AuthState.Authenticated);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * Will complete the process of logging in the given user."},{"lineNumber":57,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  completeLoginProcess(): void {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    this.authService.changeAuthState(AuthState.AwaitingAuthentication);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.phaseService.initializeCurrentRepository();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    this.userService"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      .createUserModel(this.username)"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      .pipe(flatMap(() \u003d\u003e this.githubEventService.setLatestChangeEvent()))"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      .subscribe("},{"lineNumber":65,"author":{"gitId":"-"},"content":"        () \u003d\u003e {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          this.handleAuthSuccess();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        (error) \u003d\u003e {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":71,"author":{"gitId":"cheehongw"},"content":"          this.logger.info(`ConfirmLoginComponent: Completion of login process failed with an error: ${error}`);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    this.handleAuthSuccess();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":74,"cheehongw":2}},{"path":"src/app/auth/session-selection/session-selection.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FormBuilder, FormGroup, Validators } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Profile } from \u0027../../core/models/profile.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AuthService, AuthState } from \u0027../../core/services/auth.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  selector: \u0027app-session-selection\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-selection.component.html\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-selection.component.css\u0027, \u0027../auth.component.css\u0027]"},{"lineNumber":12,"author":{"gitId":"-"},"content":"})"},{"lineNumber":13,"author":{"gitId":"-"},"content":"export class SessionSelectionComponent implements OnInit {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  // isSettingUpSession is used to indicate whether WATcher is in the midst of setting up the session."},{"lineNumber":15,"author":{"gitId":"-"},"content":"  isSettingUpSession: boolean;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  profileForm: FormGroup;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  repoForm: FormGroup;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  @Input() urlEncodedSessionName: string;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  @Input() urlEncodedRepo: string;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  @Output() sessionEmitter: EventEmitter\u003cstring\u003e \u003d new EventEmitter\u003cstring\u003e();"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private formBuilder: FormBuilder,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private logger: LoggingService,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private authService: AuthService,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    this.isSettingUpSession \u003d false;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.initProfileForm();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    this.initRepoForm();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    this.autofillRepo();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * Fills the login form with data from the given Profile."},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * @param profile - Profile selected by the user."},{"lineNumber":41,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  onProfileSelect(profile: Profile): void {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.profileForm.get(\u0027session\u0027).setValue(profile.repoName);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.sessionEmitter.emit(profile.repoName);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  setupSession() {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    if (this.repoForm.invalid) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    this.isSettingUpSession \u003d true;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    const repoInformation: string \u003d this.repoForm.get(\u0027repo\u0027).value;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    const repoOrg: string \u003d this.getOrgDetails(repoInformation);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    const repoName: string \u003d this.getDataRepoDetails(repoInformation);"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Persist repo information in local browser storage"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * To retrieve after authentication redirects back to WATcher"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    window.localStorage.setItem(\u0027org\u0027, repoOrg);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    window.localStorage.setItem(\u0027dataRepo\u0027, repoName);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`SessionSelectionComponent: Selected Repository: ${repoInformation}`);"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    try {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      this.authService.startOAuthProcess();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    } catch (error) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      this.errorHandlingService.handleError(error);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      this.isSettingUpSession \u003d false;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   * Extracts the Organization Details from the input sessionInformation."},{"lineNumber":76,"author":{"gitId":"-"},"content":"   * @param sessionInformation - string in the format of \u0027orgName/dataRepo\u0027"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  private getOrgDetails(sessionInformation: string) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    return sessionInformation.split(\u0027/\u0027)[0];"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * Extracts the Data Repository Details from the input sessionInformation."},{"lineNumber":84,"author":{"gitId":"-"},"content":"   * @param sessionInformation - string in the format of \u0027orgName/dataRepo\u0027"},{"lineNumber":85,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  private getDataRepoDetails(sessionInformation: string) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    return sessionInformation.split(\u0027/\u0027)[1];"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  private initProfileForm() {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    this.profileForm \u003d this.formBuilder.group({"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      session: [\u0027\u0027, Validators.required]"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  private initRepoForm() {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    this.repoForm \u003d this.formBuilder.group({"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      repo: [\u0027\u0027, Validators.required]"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  private autofillRepo() {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    this.repoForm.get(\u0027repo\u0027).setValue(this.urlEncodedRepo);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":104,"cheehongw":1}},{"path":"src/app/core/services/auth.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgZone } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Title } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { BehaviorSubject } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { generateSessionId } from \u0027../../shared/lib/session\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { uuid } from \u0027../../shared/lib/uuid\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./electron.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027./githubevent.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027./issue.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027./phase.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./user.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"export enum AuthState {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u0027NotAuthenticated\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u0027AwaitingAuthentication\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u0027ConfirmOAuthUser\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u0027Authenticated\u0027"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":26,"author":{"gitId":"-"},"content":"})"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Responsible for initiating the authentication process and querying or"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * updating the application state with regards to authentication."},{"lineNumber":31,"author":{"gitId":"-"},"content":" */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"export class AuthService {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  authStateSource \u003d new BehaviorSubject(AuthState.NotAuthenticated);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  currentAuthState \u003d this.authStateSource.asObservable();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  accessToken \u003d new BehaviorSubject(undefined);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  private state: string;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  ENABLE_POPUP_MESSAGE \u003d \u0027Please enable pop-ups in your browser\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private electronService: ElectronService,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private router: Router,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private ngZone: NgZone,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private titleService: Title,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private logger: LoggingService"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * Will store the OAuth token."},{"lineNumber":55,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  storeOAuthAccessToken(token: string) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    this.githubService.storeOAuthAccessToken(token);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    this.accessToken.next(token);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  reset(): void {"},{"lineNumber":62,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.logger.info(\u0027AuthService: Clearing access token and setting AuthState to NotAuthenticated.\u0027);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    this.accessToken.next(undefined);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    this.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    this.ngZone.run(() \u003d\u003e this.router.navigate([\u0027\u0027]));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  logOut(): void {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.githubService.reset();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    this.userService.reset();"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    this.issueService.reset(true);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    this.phaseService.reset();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    this.githubEventService.reset();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    this.logger.reset();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    this.setLandingPageTitle();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    this.issueService.setIssueTeamFilter(\u0027All Teams\u0027);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    this.reset();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  setTitleWithPhaseDetail(): void {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    const appSetting \u003d require(\u0027../../../../package.json\u0027);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    const title \u003d `${appSetting.name} ${appSetting.version} - ${this.phaseService.getCurrentRepositoryURL()}`;"},{"lineNumber":83,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`AuthService: Setting Title as ${title}`);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    this.titleService.setTitle(title);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  setLandingPageTitle(): void {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    const appSetting \u003d require(\u0027../../../../package.json\u0027);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    const title \u003d `${appSetting.name} ${appSetting.version}`;"},{"lineNumber":90,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`AuthService: Setting Title as ${title}`);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    this.titleService.setTitle(title);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  isAuthenticated(): boolean {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    return this.authStateSource.getValue() \u003d\u003d\u003d AuthState.Authenticated;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  changeAuthState(newAuthState: AuthState) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    if (newAuthState \u003d\u003d\u003d AuthState.Authenticated) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      const sessionId \u003d generateSessionId();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      this.issueService.setSessionId(sessionId);"},{"lineNumber":102,"author":{"gitId":"cheehongw"},"content":"      this.logger.info(`AuthService: Successfully authenticated with session: ${sessionId}`);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    this.authStateSource.next(newAuthState);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * Generates and assigns an unguessable random \u0027state\u0027 string to pass to Github for protection against cross-site request forgery attacks"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  generateStateString() {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    this.state \u003d uuid();"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    sessionStorage.setItem(\u0027state\u0027, this.state);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"  isReturnedStateSame(returnedState: string): boolean {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    const state \u003d sessionStorage.getItem(\u0027state\u0027);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    return returnedState \u003d\u003d\u003d state;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Will start the Github OAuth web flow process."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  startOAuthProcess() {"},{"lineNumber":124,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(\u0027AuthService: Starting authentication\u0027);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    // Available OAuth scopes https://docs.github.com/en/developers/apps/building-oauth-apps/scopes-for-oauth-apps#available-scopes"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    const githubRepoPermission \u003d \u0027public_repo\u0027;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    this.changeAuthState(AuthState.AwaitingAuthentication);"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    if (this.electronService.isElectron()) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      this.electronService.sendIpcMessage(\u0027github-oauth\u0027, githubRepoPermission);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      this.generateStateString();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      this.redirectToOAuthPage("},{"lineNumber":134,"author":{"gitId":"-"},"content":"        encodeURI("},{"lineNumber":135,"author":{"gitId":"-"},"content":"          `${AppConfig.githubUrl}/login/oauth/authorize?client_id\u003d${AppConfig.clientId}\u0026scope\u003d${githubRepoPermission},read:user\u0026state\u003d${this.state}`"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":138,"author":{"gitId":"cheehongw"},"content":"      this.logger.info(`AuthService: Redirecting for Github authentication`);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":143,"author":{"gitId":"-"},"content":"   * Will redirect to GitHub OAuth page"},{"lineNumber":144,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  private redirectToOAuthPage(url: string): void {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    if (url \u003d\u003d null) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    window.location.href \u003d url;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":1,"-":145,"cheehongw":5}},{"path":"src/app/core/services/dialog.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatDialog } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { LabelDefinitionPopupComponent } from \u0027../../shared/label-definition-popup/label-definition-popup.component\u0027;"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { RepoChangeFormComponent } from \u0027../../shared/repo-change-form/repo-change-form.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { UserConfirmationComponent } from \u0027../guards/user-confirmation/user-confirmation.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":9,"author":{"gitId":"-"},"content":"})"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class DialogService {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  constructor(private dialog: MatDialog) {}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  openUserConfirmationModal(messages: string[], yesButtonMessage: string, noButtonMessage: string) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    return this.dialog.open(UserConfirmationComponent, {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      data: {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        messages: messages,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        yesMessage: yesButtonMessage,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        noMessage: noButtonMessage"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  openLabelDefinitionDialog(labelName: String, labelDefinition: String) {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    return this.dialog.open(LabelDefinitionPopupComponent, {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      data: {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        header: labelName,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        body: labelDefinition"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"  openChangeRepoDialog(repoName: String) {"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"    return this.dialog.open(RepoChangeFormComponent, {"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"      data: {"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"        repoName: repoName"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"      },"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"      height: \u0027auto\u0027,"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"      width: \u002740%\u0027"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"    });"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vigneshsankariyer1234567890":1,"-":30,"cheehongw":10}},{"path":"src/app/core/services/error-handling.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ErrorHandler, Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MatSnackBar } from \u0027@angular/material\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RequestError } from \u0027@octokit/request-error\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { FormErrorComponent } from \u0027../../shared/error-toasters/form-error/form-error.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GeneralMessageErrorComponent } from \u0027../../shared/error-toasters/general-message-error/general-message-error.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"export const ERRORCODE_NOT_FOUND \u003d 404;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"const FILTERABLE \u003d [\u0027node_modules\u0027];"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class ErrorHandlingService implements ErrorHandler {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  constructor(private snackBar: MatSnackBar, private logger: LoggingService) {}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  handleError(error: HttpErrorResponse | Error | RequestError, actionCallback?: () \u003d\u003e void) {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    this.logger.error(error);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    if (error instanceof Error) {"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"      this.logger.debug(\u0027ErrorHandlingService: \u0027, this.cleanStack(error.stack));"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    if (error instanceof HttpErrorResponse) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      this.handleHttpError(error, actionCallback);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    } else if (error.constructor.name \u003d\u003d\u003d \u0027RequestError\u0027) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      this.handleHttpError(error as RequestError, actionCallback);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      this.handleGeneralError(error.message || JSON.stringify(error));"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  private cleanStack(stacktrace: string): string {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    return stacktrace"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      .split(\u0027\\n\u0027)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      .filter((line) \u003d\u003e !FILTERABLE.some((word) \u003d\u003e line.includes(word))) // exclude lines that contain words in FILTERABLE"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      .join(\u0027\\n\u0027);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  // Ref: https://developer.github.com/v3/#client-errors"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  private handleHttpError(error: HttpErrorResponse | RequestError, actionCallback?: () \u003d\u003e void): void {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Angular treats 304 Not Modified as an error, we will ignore it."},{"lineNumber":43,"author":{"gitId":"-"},"content":"    if (error.status \u003d\u003d\u003d 304) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    if (!navigator.onLine) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      this.handleGeneralError(\u0027No Internet Connection\u0027);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    switch (error.status) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      case 500: // Internal Server Error."},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.snackBar.openFromComponent(GeneralMessageErrorComponent, { data: error });"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      case 422: // Form errors"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.snackBar.openFromComponent(FormErrorComponent, { data: error });"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      case 400: // Bad request"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      case 401: // Unauthorized"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      case 404: // Not found"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.snackBar.openFromComponent(GeneralMessageErrorComponent, { data: error });"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.snackBar.openFromComponent(GeneralMessageErrorComponent, { data: error });"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  private handleGeneralError(error: string): void {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    this.snackBar.openFromComponent(GeneralMessageErrorComponent, { data: { message: error } });"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":72,"cheehongw":1}},{"path":"src/app/core/services/github.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Apollo, QueryRef } from \u0027apollo-angular\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ApolloQueryResult } from \u0027apollo-client\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { DocumentNode } from \u0027graphql\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { forkJoin, from, Observable, of, throwError, zip } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { catchError, filter, flatMap, map, throwIfEmpty } from \u0027rxjs/operators\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FetchIssue,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FetchIssueQuery,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FetchIssues,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  FetchIssuesByTeam,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  FetchIssuesByTeamQuery,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  FetchIssuesQuery,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FetchPullRequests,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FetchPullRequestsQuery"},{"lineNumber":17,"author":{"gitId":"-"},"content":"} from \u0027../../../../graphql/graphql-types\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { getNumberOfPages } from \u0027../../shared/lib/github-paginator-parser\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../models/comment.model\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../models/github-user.model\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { IssueLastModifiedManagerModel } from \u0027../models/github/cache-manager/issue-last-modified-manager.model\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { IssuesCacheManager } from \u0027../models/github/cache-manager/issues-cache-manager.model\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027../models/github/github-comment.model\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { GithubEvent } from \u0027../models/github/github-event.model\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { GithubGraphqlIssue } from \u0027../models/github/github-graphql.issue\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { GithubGraphqlIssueOrPr } from \u0027../models/github/github-graphql.issue-or-pr\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import RestGithubIssueFilter from \u0027../models/github/github-issue-filter.model\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../models/github/github-issue.model\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { GithubResponse } from \u0027../models/github/github-response.model\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { GithubRelease } from \u0027../models/github/github.release\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { SessionData } from \u0027../models/session.model\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./electron.service\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import { ERRORCODE_NOT_FOUND, ErrorHandlingService } from \u0027./error-handling.service\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"const { Octokit } \u003d require(\u0027@octokit/rest\u0027);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"const WATCHER_ORG \u003d \u0027WATcher-org\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"const WATCHER_REPO \u003d \u0027WATcher\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"const UNABLE_TO_OPEN_IN_BROWSER \u003d \u0027Unable to open this issue in Browser\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"/** Owner of Repository to watch */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"let ORG_NAME \u003d \u0027\u0027; // repoOrg"},{"lineNumber":45,"author":{"gitId":"-"},"content":"/** Name of Repository to watch */"},{"lineNumber":46,"author":{"gitId":"-"},"content":"let REPO \u003d \u0027\u0027; // repoName"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"/** Owner of Settings repository, currently not used */"},{"lineNumber":49,"author":{"gitId":"-"},"content":"let MOD_ORG \u003d \u0027\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"/** Name of Settings repository, currently not used */"},{"lineNumber":51,"author":{"gitId":"-"},"content":"let DATA_REPO \u003d \u0027\u0027;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"const MAX_ITEMS_PER_PAGE \u003d 100;"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"let octokit \u003d new Octokit();"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"})"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":61,"author":{"gitId":"-"},"content":" * Responsible for communicating with GitHub to create, update, read and delete"},{"lineNumber":62,"author":{"gitId":"-"},"content":" * features related to Github using GitHub API Requests."},{"lineNumber":63,"author":{"gitId":"-"},"content":" * For example, issues, issue labels and repositories."},{"lineNumber":64,"author":{"gitId":"-"},"content":" */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"export class GithubService {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  private static readonly IF_NONE_MATCH_EMPTY \u003d { \u0027If-None-Match\u0027: \u0027\u0027 };"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  private issuesCacheManager \u003d new IssuesCacheManager();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  private issuesLastModifiedManager \u003d new IssueLastModifiedManagerModel();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  private issueQueryRefs \u003d new Map\u003cNumber, QueryRef\u003cFetchIssueQuery\u003e\u003e();"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private apollo: Apollo,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private electronService: ElectronService,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private logger: LoggingService"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  storeOAuthAccessToken(accessToken: string) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    octokit \u003d new Octokit({"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      auth() {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return `Token ${accessToken}`;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      log: {"},{"lineNumber":85,"author":{"gitId":"cheehongw"},"content":"        debug: (message, ...otherInfo) \u003d\u003e this.logger.debug(\u0027GithubService: \u0027 + message, ...otherInfo),"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Do not log info for HTTP response 304 due to repeated polling"},{"lineNumber":87,"author":{"gitId":"Eclipse-Dominator"},"content":"        info: (message, ...otherInfo) \u003d\u003e"},{"lineNumber":88,"author":{"gitId":"Eclipse-Dominator"},"content":"          /304 in \\d+ms$/.test(message) ? undefined : this.logger.info(\u0027GithubService: \u0027 + message, ...otherInfo),"},{"lineNumber":89,"author":{"gitId":"cheehongw"},"content":"        warn: (message, ...otherInfo) \u003d\u003e this.logger.warn(\u0027GithubService: \u0027 + message, ...otherInfo),"},{"lineNumber":90,"author":{"gitId":"cheehongw"},"content":"        error: (message, ...otherInfo) \u003d\u003e this.logger.error(\u0027GithubService: \u0027 + message, ...otherInfo)"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"   * Sets settings repository. Not used."},{"lineNumber":97,"author":{"gitId":"-"},"content":"   * @param orgName WATcher organisation"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * @param dataRepo WATcher repository"},{"lineNumber":99,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  storeOrganizationDetails(orgName: string, dataRepo: string) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    MOD_ORG \u003d orgName;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    DATA_REPO \u003d dataRepo;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   * Sets repository to watch. This repository is used for fetching from Github."},{"lineNumber":107,"author":{"gitId":"-"},"content":"   * @param phaseRepoOwner Repository owner"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * @param repoName Repository name"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  storePhaseDetails(phaseRepoOwner: string, repoName: string) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    REPO \u003d repoName;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    ORG_NAME \u003d phaseRepoOwner;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   * Fetches an array of filtered GitHubIssues using GraphQL query for a given team."},{"lineNumber":117,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   * @param tutorial - The tutorial that the team belongs to."},{"lineNumber":119,"author":{"gitId":"-"},"content":"   * @param team - The team\u0027s designated name."},{"lineNumber":120,"author":{"gitId":"-"},"content":"   * @param issuesFilter - The issue filter."},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * @returns An observable array of filtered GithubIssues"},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  fetchIssuesGraphqlByTeam(tutorial: string, team: string, issuesFilter: RestGithubIssueFilter): Observable\u003cArray\u003cGithubIssue\u003e\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    const graphqlFilter \u003d issuesFilter.convertToGraphqlFilter();"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    return this.toFetchIssues(issuesFilter).pipe("},{"lineNumber":126,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return this.fetchGraphqlList\u003cFetchIssuesByTeamQuery, GithubGraphqlIssue\u003e("},{"lineNumber":129,"author":{"gitId":"-"},"content":"          FetchIssuesByTeam,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            owner: ORG_NAME,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            name: REPO,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            filter: {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              ...graphqlFilter,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"              labels: [...(graphqlFilter.labels ? graphqlFilter.labels : []), team]"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            tutorial"},{"lineNumber":138,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":139,"author":{"gitId":"-"},"content":"          (result) \u003d\u003e result.data.repository.label.issues.edges,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"          GithubGraphqlIssue"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":147,"author":{"gitId":"-"},"content":"   * Fetches an array of filtered GitHubIssues using GraphQL query."},{"lineNumber":148,"author":{"gitId":"-"},"content":"   * In WATcher, this includes pull requests."},{"lineNumber":149,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   * @param issuesFilter - The issue filter."},{"lineNumber":151,"author":{"gitId":"-"},"content":"   * @returns An observable array of filtered GithubIssues"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  fetchIssuesGraphql(issuesFilter: RestGithubIssueFilter): Observable\u003cArray\u003cGithubIssue\u003e\u003e {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    const graphqlFilter \u003d issuesFilter.convertToGraphqlFilter();"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /*"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Github Issues consists of issues and pull requests in WATcher."},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    const issueObs \u003d this.toFetchIssues(issuesFilter).pipe("},{"lineNumber":159,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return this.fetchGraphqlList\u003cFetchIssuesQuery, GithubGraphqlIssueOrPr\u003e("},{"lineNumber":162,"author":{"gitId":"-"},"content":"          FetchIssues,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"          { owner: ORG_NAME, name: REPO, filter: graphqlFilter },"},{"lineNumber":164,"author":{"gitId":"-"},"content":"          (result) \u003d\u003e result.data.repository.issues.edges,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"          GithubGraphqlIssueOrPr"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    const prObs \u003d this.toFetchIssues(issuesFilter).pipe("},{"lineNumber":170,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return this.fetchGraphqlList\u003cFetchPullRequestsQuery, GithubGraphqlIssueOrPr\u003e("},{"lineNumber":173,"author":{"gitId":"-"},"content":"          FetchPullRequests,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          { owner: ORG_NAME, name: REPO },"},{"lineNumber":175,"author":{"gitId":"-"},"content":"          (result) \u003d\u003e result.data.repository.pullRequests.edges,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"          GithubGraphqlIssueOrPr"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    // Concatenate both streams together."},{"lineNumber":182,"author":{"gitId":"-"},"content":"    return zip(issueObs, prObs).pipe(map((x) \u003d\u003e x[0].concat(x[1])));"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":186,"author":{"gitId":"-"},"content":"   * Checks if there are pages of filtered issues that are not cached in the cache model,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   * and updates the model to cache these new pages."},{"lineNumber":188,"author":{"gitId":"-"},"content":"   * @param filter - The issue filter."},{"lineNumber":189,"author":{"gitId":"-"},"content":"   * @returns Observable\u003cboolean\u003e that returns true if there are pages that do not exist in the cache model."},{"lineNumber":190,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  private toFetchIssues(filter: RestGithubIssueFilter): Observable\u003cboolean\u003e {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    let responseInFirstPage: GithubResponse\u003cGithubIssue[]\u003e;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    return this.getIssuesAPICall(filter, 1).pipe("},{"lineNumber":194,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue[]\u003e) \u003d\u003e {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        responseInFirstPage \u003d response;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return getNumberOfPages(response);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      flatMap((numOfPages: number) \u003d\u003e {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        const apiCalls: Observable\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e[] \u003d [];"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        for (let i \u003d 2; i \u003c\u003d numOfPages; i++) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"          apiCalls.push(this.getIssuesAPICall(filter, i));"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return apiCalls.length \u003d\u003d\u003d 0 ? of([]) : forkJoin(apiCalls);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      map((resultArray: GithubResponse\u003cGithubIssue[]\u003e[]) \u003d\u003e {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        const responses \u003d [responseInFirstPage, ...resultArray];"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        const isCached \u003d responses.reduce((result, response) \u003d\u003e {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"          return result \u0026\u0026 response.isCached;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }, true);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        responses.forEach((resp, index) \u003d\u003e this.issuesCacheManager.set(index + 1, resp));"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return !isCached;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":217,"author":{"gitId":"-"},"content":"   * Checks if the specified repository exists."},{"lineNumber":218,"author":{"gitId":"-"},"content":"   * @param owner - Owner of Specified Repository."},{"lineNumber":219,"author":{"gitId":"-"},"content":"   * @param repo - Name of Repository."},{"lineNumber":220,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  isRepositoryPresent(owner: string, repo: string): Observable\u003cboolean\u003e {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    return from(octokit.repos.get({ owner: owner, repo: repo, headers: GithubService.IF_NONE_MATCH_EMPTY })).pipe("},{"lineNumber":223,"author":{"gitId":"-"},"content":"      map((rawData: { status: number }) \u003d\u003e {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return rawData.status !\u003d\u003d ERRORCODE_NOT_FOUND;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        return of(false);"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":229,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch repo data.\u0027))"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":234,"author":{"gitId":"-"},"content":"   * Creates a repository in for the authenticated user location."},{"lineNumber":235,"author":{"gitId":"-"},"content":"   * @param name - Name of Repo to create."},{"lineNumber":236,"author":{"gitId":"-"},"content":"   * @return Observable\u003cboolean\u003e - That returns true if the repository has been successfully"},{"lineNumber":237,"author":{"gitId":"-"},"content":"   *                                created."},{"lineNumber":238,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  createRepository(name: string): void {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    octokit.repos.createForAuthenticatedUser({ name: name });"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":244,"author":{"gitId":"-"},"content":"   * Fetches information about an issue using GraphQL."},{"lineNumber":245,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   * If the issue is not modified, return a `304 - Not Modified` response."},{"lineNumber":247,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":248,"author":{"gitId":"-"},"content":"   * @param id - The issue id."},{"lineNumber":249,"author":{"gitId":"-"},"content":"   * @returns Observable\u003cGithubGraphqlIssue\u003e that represents the response object."},{"lineNumber":250,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  fetchIssueGraphql(id: number): Observable\u003cGithubGraphqlIssue\u003e {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    if (this.issueQueryRefs.get(id) \u003d\u003d\u003d undefined) {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      const newQueryRef \u003d this.apollo.watchQuery\u003cFetchIssueQuery\u003e({"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        query: FetchIssue,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        variables: {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"          owner: ORG_NAME,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"          name: REPO,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"          issueId: id"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":261,"author":{"gitId":"-"},"content":"      this.issueQueryRefs.set(id, newQueryRef);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"    const queryRef \u003d this.issueQueryRefs.get(id);"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    return this.toFetchIssue(id).pipe("},{"lineNumber":266,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e from(queryRef.refetch())),"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      map((value: ApolloQueryResult\u003cFetchIssueQuery\u003e) \u003d\u003e {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        return new GithubGraphqlIssue(value.data.repository.issue);"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      throwIfEmpty(() \u003d\u003e new HttpErrorResponse({ status: 304 }))"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":276,"author":{"gitId":"-"},"content":"   * Checks if the issue has been modified since the last query, and"},{"lineNumber":277,"author":{"gitId":"-"},"content":"   * updates the model to reflect the last modified time."},{"lineNumber":278,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":279,"author":{"gitId":"-"},"content":"   * @param id - The issue id."},{"lineNumber":280,"author":{"gitId":"-"},"content":"   * @returns Observable\u003cboolean\u003e that returns true if the issue has been modified."},{"lineNumber":281,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  toFetchIssue(id: number): Observable\u003cboolean\u003e {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":284,"author":{"gitId":"-"},"content":"      octokit.issues.get({"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        issue_number: id,"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        headers: { \u0027If-Modified-Since\u0027: this.issuesLastModifiedManager.get(id) }"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":291,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch issue.\u0027))"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"  fetchAllMilestones(): Observable\u003cArray\u003c{}\u003e\u003e {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":301,"author":{"gitId":"-"},"content":"      octokit.issues.listMilestonesForRepo({"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        state: \u0027all\u0027,"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        per_page: MAX_ITEMS_PER_PAGE,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        headers: GithubService.IF_NONE_MATCH_EMPTY"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":309,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch milestones.\u0027))"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":314,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"  fetchAllLabels(): Observable\u003cArray\u003c{}\u003e\u003e {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":318,"author":{"gitId":"-"},"content":"      octokit.issues.listLabelsForRepo({"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        per_page: MAX_ITEMS_PER_PAGE,"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        headers: GithubService.IF_NONE_MATCH_EMPTY"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":325,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch labels.\u0027))"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":330,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":333,"author":{"gitId":"-"},"content":"   * Creates a label in the current repository."},{"lineNumber":334,"author":{"gitId":"-"},"content":"   * @param formattedLabelName - name of new label."},{"lineNumber":335,"author":{"gitId":"-"},"content":"   * @param labelColor - colour of new label."},{"lineNumber":336,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  createLabel(formattedLabelName: string, labelColor: string): void {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    octokit.issues.createLabel({ owner: ORG_NAME, repo: REPO, name: formattedLabelName, color: labelColor });"},{"lineNumber":339,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":342,"author":{"gitId":"-"},"content":"   * Updates a label\u0027s information in the current repository."},{"lineNumber":343,"author":{"gitId":"-"},"content":"   * @param labelName - name of existing label"},{"lineNumber":344,"author":{"gitId":"-"},"content":"   * @param labelColor - new color to be assigned to existing label."},{"lineNumber":345,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":346,"author":{"gitId":"-"},"content":"  updateLabel(labelName: string, labelColor: string): void {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    octokit.issues.updateLabel({ owner: ORG_NAME, repo: REPO, name: labelName, current_name: labelName, color: labelColor });"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":351,"author":{"gitId":"-"},"content":"   * Checks if the given list of users are allowed to be assigned to an issue."},{"lineNumber":352,"author":{"gitId":"-"},"content":"   * @param assignees - GitHub usernames to be checked"},{"lineNumber":353,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":354,"author":{"gitId":"-"},"content":"  areUsersAssignable(assignees: string[]): Observable\u003cvoid\u003e {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":356,"author":{"gitId":"-"},"content":"      octokit.issues.listAssignees({"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        repo: REPO"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":361,"author":{"gitId":"-"},"content":"      map(({ data }: { data: { login: string }[] }) \u003d\u003e data.map(({ login }) \u003d\u003e login)),"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      map((assignables: string[]) \u003d\u003e"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        assignees.forEach((assignee) \u003d\u003e {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"          if (!assignables.includes(assignee)) {"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            throw new Error(`Cannot assign ${assignee} to the issue. Please check if ${assignee} is authorized.`);"},{"lineNumber":366,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":370,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"  getUsersAssignable(): Observable\u003cGithubUser[]\u003e {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":374,"author":{"gitId":"-"},"content":"      octokit.issues.listAssignees({"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        repo: REPO"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":379,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch assignable users for repo.\u0027))"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"  closeIssue(id: number): Observable\u003cGithubIssue\u003e {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    return from(octokit.issues.update({ owner: ORG_NAME, repo: REPO, issue_number: id, state: \u0027closed\u0027 })).pipe("},{"lineNumber":388,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":393,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"  createIssue(title: string, description: string, labels: string[]): Observable\u003cGithubIssue\u003e {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    return from(octokit.issues.create({ owner: ORG_NAME, repo: REPO, title: title, body: description, labels: labels })).pipe("},{"lineNumber":397,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":401,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"  createIssueComment(issueId: number, description: string): Observable\u003cGithubComment\u003e {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    return from(octokit.issues.createComment({ owner: ORG_NAME, repo: REPO, issue_number: issueId, body: description })).pipe("},{"lineNumber":405,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubComment\u003e) \u003d\u003e {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        return response.data;"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":409,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"  updateIssue(id: number, title: string, description: string, labels: string[], assignees?: string[]): Observable\u003cGithubIssue\u003e {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":413,"author":{"gitId":"-"},"content":"      octokit.issues.update({"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        issue_number: id,"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        title: title,"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        body: description,"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        labels: labels,"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        assignees: assignees"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":423,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        return throwError(err);"},{"lineNumber":429,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"  updateIssueComment(issueComment: IssueComment): Observable\u003cGithubComment\u003e {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":435,"author":{"gitId":"-"},"content":"      octokit.issues.updateComment({ owner: ORG_NAME, repo: REPO, comment_id: issueComment.id, body: issueComment.description })"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":437,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubComment\u003e) \u003d\u003e {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        return response.data;"},{"lineNumber":439,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":441,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"  uploadFile(filename: string, base64String: string): Observable\u003cany\u003e {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":445,"author":{"gitId":"-"},"content":"      octokit.repos.createOrUpdateFile({"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        path: `files/${filename}`,"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        message: \u0027upload file\u0027,"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        content: base64String"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":453,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":454,"author":{"gitId":"-"},"content":""},{"lineNumber":455,"author":{"gitId":"-"},"content":"  fetchEventsForRepo(): Observable\u003cany[]\u003e {"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    return from(octokit.issues.listEventsForRepo({ owner: ORG_NAME, repo: REPO, headers: GithubService.IF_NONE_MATCH_EMPTY })).pipe("},{"lineNumber":457,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":460,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch events for repo.\u0027))"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":462,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"  fetchEventsForRepoCall(pageNumber: number): Observable\u003cGithubResponse\u003cany[]\u003e\u003e {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    return \u003cObservable\u003cGithubResponse\u003cany[]\u003e\u003e\u003efrom("},{"lineNumber":466,"author":{"gitId":"-"},"content":"      octokit.activity.listRepoEvents({"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        page: pageNumber"},{"lineNumber":470,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    ).pipe(catchError((err) \u003d\u003e throwError(\u0027Failed to fetch events for repo.\u0027)));"},{"lineNumber":472,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":475,"author":{"gitId":"-"},"content":"   * Fetches all events of current repository for Activity Dashboard."},{"lineNumber":476,"author":{"gitId":"-"},"content":"   * Adapted from getIssueApiCalls()."},{"lineNumber":477,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":478,"author":{"gitId":"-"},"content":"   * @returns GithubEvents observable"},{"lineNumber":479,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":480,"author":{"gitId":"-"},"content":"  fetchAllEventsForRepo(): Observable\u003cGithubEvent[]\u003e {"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    let responseInFirstPage: GithubResponse\u003cGithubEvent[]\u003e;"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    return this.fetchEventsForRepoCall(1).pipe("},{"lineNumber":483,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubEvent[]\u003e) \u003d\u003e {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        responseInFirstPage \u003d response;"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        return getNumberOfPages(response);"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":487,"author":{"gitId":"-"},"content":"      flatMap((numOfPages: number) \u003d\u003e {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        const apiCalls: Observable\u003cGithubResponse\u003cGithubEvent[]\u003e\u003e[] \u003d [];"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        for (let i \u003d 1; i \u003c\u003d numOfPages; i++) {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"          apiCalls.push(this.fetchEventsForRepoCall(i));"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        return apiCalls.length \u003d\u003d\u003d 0 ? of([]) : forkJoin(apiCalls);"},{"lineNumber":493,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      map((responseArray) \u003d\u003e responseArray.map((x) \u003d\u003e x[\u0027data\u0027]))"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":496,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":499,"author":{"gitId":"-"},"content":"   * Not in use. Fetches data csv file from Organization repository."},{"lineNumber":500,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":501,"author":{"gitId":"-"},"content":"  fetchDataFile(): Observable\u003c{}\u003e {"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":503,"author":{"gitId":"-"},"content":"      octokit.repos.getContents({ owner: MOD_ORG, repo: DATA_REPO, path: \u0027data.csv\u0027, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":505,"author":{"gitId":"-"},"content":"      map((rawData) \u003d\u003e {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        return { data: atob(rawData[\u0027data\u0027][\u0027content\u0027]) };"},{"lineNumber":507,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch data file.\u0027))"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":510,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":513,"author":{"gitId":"-"},"content":"   * Gets information of latest release of WATcher."},{"lineNumber":514,"author":{"gitId":"-"},"content":"   * @returns GithubRelease observable"},{"lineNumber":515,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":516,"author":{"gitId":"-"},"content":"  fetchLatestRelease(): Observable\u003cGithubRelease\u003e {"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":518,"author":{"gitId":"-"},"content":"      octokit.repos.getLatestRelease({ owner: WATCHER_ORG, repo: WATCHER_REPO, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":520,"author":{"gitId":"-"},"content":"      map((res) \u003d\u003e res[\u0027data\u0027]),"},{"lineNumber":521,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch latest release.\u0027))"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":523,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   * Fetches the data file that is regulates session information."},{"lineNumber":527,"author":{"gitId":"-"},"content":"   * @return Observable\u003cSessionData\u003e representing session information."},{"lineNumber":528,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":529,"author":{"gitId":"-"},"content":"  fetchSettingsFile(): Observable\u003cSessionData\u003e {"},{"lineNumber":530,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":531,"author":{"gitId":"-"},"content":"      octokit.repos.getContents({ owner: MOD_ORG, repo: DATA_REPO, path: \u0027settings.json\u0027, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":533,"author":{"gitId":"-"},"content":"      map((rawData) \u003d\u003e JSON.parse(atob(rawData[\u0027data\u0027][\u0027content\u0027]))),"},{"lineNumber":534,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch settings file.\u0027))"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":536,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"  fetchAuthenticatedUser(): Observable\u003cGithubUser\u003e {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    return from(octokit.users.getAuthenticated()).pipe("},{"lineNumber":540,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":543,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch authenticated user.\u0027))"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":545,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"  getRepoURL(): string {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"    return ORG_NAME.concat(\u0027/\u0027).concat(REPO);"},{"lineNumber":549,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"  viewIssueInBrowser(id: number, event: Event) {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    if (id) {"},{"lineNumber":553,"author":{"gitId":"-"},"content":"      this.electronService.openLink(\u0027https://github.com/\u0027.concat(this.getRepoURL()).concat(\u0027/issues/\u0027).concat(String(id)));"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"      this.errorHandlingService.handleError(new Error(UNABLE_TO_OPEN_IN_BROWSER));"},{"lineNumber":556,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":558,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":559,"author":{"gitId":"-"},"content":""},{"lineNumber":560,"author":{"gitId":"-"},"content":"  reset(): void {"},{"lineNumber":561,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`GithubService: Resetting issues cache`);"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    this.issuesCacheManager.clear();"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    this.issuesLastModifiedManager.clear();"},{"lineNumber":564,"author":{"gitId":"-"},"content":"    this.issueQueryRefs.clear();"},{"lineNumber":565,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":566,"author":{"gitId":"-"},"content":""},{"lineNumber":567,"author":{"gitId":"-"},"content":"  getProfilesData(): Promise\u003cResponse\u003e {"},{"lineNumber":568,"author":{"gitId":"-"},"content":"    return fetch(AppConfig.clientDataUrl);"},{"lineNumber":569,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":570,"author":{"gitId":"-"},"content":""},{"lineNumber":571,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":572,"author":{"gitId":"-"},"content":"   * Performs an API call to fetch a page of filtered issues with a given pageNumber."},{"lineNumber":573,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   * The request is sent with the ETag of the latest cached HTTP response."},{"lineNumber":575,"author":{"gitId":"-"},"content":"   * If page requested has the same ETag, or the request results in an error,"},{"lineNumber":576,"author":{"gitId":"-"},"content":"   * then the cached page is returned instead."},{"lineNumber":577,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":578,"author":{"gitId":"-"},"content":"   * @param filter - The issue filter"},{"lineNumber":579,"author":{"gitId":"-"},"content":"   * @param pageNumber - The page to be fetched"},{"lineNumber":580,"author":{"gitId":"-"},"content":"   * @returns An observable representing the response containing a single page of filtered issues"},{"lineNumber":581,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":582,"author":{"gitId":"-"},"content":"  private getIssuesAPICall(filter: RestGithubIssueFilter, pageNumber: number): Observable\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e {"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    const apiCall: Promise\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e \u003d octokit.issues.listForRepo({"},{"lineNumber":584,"author":{"gitId":"-"},"content":"      ...filter,"},{"lineNumber":585,"author":{"gitId":"-"},"content":"      owner: ORG_NAME,"},{"lineNumber":586,"author":{"gitId":"-"},"content":"      repo: REPO,"},{"lineNumber":587,"author":{"gitId":"-"},"content":"      sort: \u0027created\u0027,"},{"lineNumber":588,"author":{"gitId":"-"},"content":"      direction: \u0027desc\u0027,"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      per_page: 100,"},{"lineNumber":590,"author":{"gitId":"-"},"content":"      page: pageNumber,"},{"lineNumber":591,"author":{"gitId":"-"},"content":"      headers: { \u0027If-None-Match\u0027: this.issuesCacheManager.getEtagFor(pageNumber) },"},{"lineNumber":592,"author":{"gitId":"-"},"content":"      state: \u0027all\u0027"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    const apiCall$ \u003d from(apiCall);"},{"lineNumber":595,"author":{"gitId":"-"},"content":"    return apiCall$.pipe("},{"lineNumber":596,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        return of(this.issuesCacheManager.get(pageNumber));"},{"lineNumber":598,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":599,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":600,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":601,"author":{"gitId":"-"},"content":""},{"lineNumber":602,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":603,"author":{"gitId":"-"},"content":"   * Fetches a list of items using a GraphQL query that queries for paginated data."},{"lineNumber":604,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":605,"author":{"gitId":"-"},"content":"   * @param query - The GraphQL query that queries for paginated data."},{"lineNumber":606,"author":{"gitId":"-"},"content":"   * @param variables - Additional variables for the GraphQL query."},{"lineNumber":607,"author":{"gitId":"-"},"content":"   * @callback pluckEdges A function that returns a list of edges in a ApolloQueryResult."},{"lineNumber":608,"author":{"gitId":"-"},"content":"   * @callback Model Constructor for the item model."},{"lineNumber":609,"author":{"gitId":"-"},"content":"   * @returns A list of items from the query."},{"lineNumber":610,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":611,"author":{"gitId":"-"},"content":"  private fetchGraphqlList\u003cT, M\u003e("},{"lineNumber":612,"author":{"gitId":"-"},"content":"    query: DocumentNode,"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    variables: {},"},{"lineNumber":614,"author":{"gitId":"-"},"content":"    pluckEdges: (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e Array\u003cany\u003e,"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    Model: new (data) \u003d\u003e M"},{"lineNumber":616,"author":{"gitId":"-"},"content":"  ): Observable\u003cArray\u003cM\u003e\u003e {"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    return from(this.withPagination\u003cT\u003e(pluckEdges)(query, variables)).pipe("},{"lineNumber":618,"author":{"gitId":"-"},"content":"      map((results: Array\u003cApolloQueryResult\u003cT\u003e\u003e) \u003d\u003e {"},{"lineNumber":619,"author":{"gitId":"-"},"content":"        const issues \u003d results.reduce((accumulated, current) \u003d\u003e accumulated.concat(pluckEdges(current)), []);"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        return issues.map((issue) \u003d\u003e new Model(issue.node));"},{"lineNumber":621,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":622,"author":{"gitId":"-"},"content":"      throwIfEmpty(() \u003d\u003e {"},{"lineNumber":623,"author":{"gitId":"-"},"content":"        return new HttpErrorResponse({ status: 304 });"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":626,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":627,"author":{"gitId":"-"},"content":""},{"lineNumber":628,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":629,"author":{"gitId":"-"},"content":"   * Returns an async function that will accept a GraphQL query that requests for paginated items."},{"lineNumber":630,"author":{"gitId":"-"},"content":"   * Said function will recursively query for all subsequent pages until a page that has less than 100 items is found,"},{"lineNumber":631,"author":{"gitId":"-"},"content":"   * then return all queried pages in an array."},{"lineNumber":632,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":633,"author":{"gitId":"-"},"content":"   * @callback pluckEdges - A function that returns a list of edges in a ApolloQueryResult."},{"lineNumber":634,"author":{"gitId":"-"},"content":"   * @returns an async function that accepts a GraphQL query for paginated data and any additional variables to that query"},{"lineNumber":635,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":636,"author":{"gitId":"-"},"content":"  private withPagination\u003cT\u003e(pluckEdges: (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e Array\u003cany\u003e) {"},{"lineNumber":637,"author":{"gitId":"-"},"content":"    return async (query: DocumentNode, variables: { [key: string]: any } \u003d {}): Promise\u003cArray\u003cApolloQueryResult\u003cT\u003e\u003e\u003e \u003d\u003e {"},{"lineNumber":638,"author":{"gitId":"-"},"content":"      const maxResultsCount \u003d 100;"},{"lineNumber":639,"author":{"gitId":"-"},"content":"      const cursor \u003d variables.cursor || null;"},{"lineNumber":640,"author":{"gitId":"-"},"content":"      const graphqlQuery \u003d this.apollo.watchQuery\u003cT\u003e({ query, variables: { ...variables, cursor } });"},{"lineNumber":641,"author":{"gitId":"-"},"content":"      return graphqlQuery.refetch().then(async (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e {"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        const intermediate \u003d Array.isArray(results) ? results : [results];"},{"lineNumber":643,"author":{"gitId":"-"},"content":"        const edges \u003d pluckEdges(results);"},{"lineNumber":644,"author":{"gitId":"-"},"content":"        const nextCursor \u003d edges.length \u003d\u003d\u003d 0 ? null : edges[edges.length - 1].cursor;"},{"lineNumber":645,"author":{"gitId":"-"},"content":""},{"lineNumber":646,"author":{"gitId":"-"},"content":"        if (edges.length \u003c maxResultsCount || !nextCursor) {"},{"lineNumber":647,"author":{"gitId":"-"},"content":"          return intermediate;"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        const nextResults \u003d await this.withPagination\u003cT\u003e(pluckEdges)(query, {"},{"lineNumber":650,"author":{"gitId":"-"},"content":"          ...variables,"},{"lineNumber":651,"author":{"gitId":"-"},"content":"          cursor: nextCursor"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":653,"author":{"gitId":"-"},"content":"        return intermediate.concat(nextResults);"},{"lineNumber":654,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":655,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":656,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":657,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":2,"-":651,"cheehongw":4}},{"path":"src/app/core/services/label.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Label } from \u0027../models/label.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/* The threshold to decide if color is dark or light."},{"lineNumber":8,"author":{"gitId":"-"},"content":"A higher threshold value will result in more colors determined to be \"dark\"."},{"lineNumber":9,"author":{"gitId":"-"},"content":"W3C recommendation is 0.179, but 0.184 is chosen so that some colors (like bright red)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"are considered dark (Github too consider them dark) */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"const COLOR_DARKNESS_THRESHOLD \u003d 0.184;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"const COLOR_BLACK \u003d \u0027000000\u0027; // Dark color for text with light background"},{"lineNumber":14,"author":{"gitId":"-"},"content":"const COLOR_WHITE \u003d \u0027ffffff\u0027; // Light color for text with dark background"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":18,"author":{"gitId":"-"},"content":"})"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Responsible for retrieval and parsing of label data"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * from the GitHub repository for the WATcher application."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export class LabelService {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  labels: Label[];"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService) {}"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * Fetch labels from Github."},{"lineNumber":31,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  public fetchLabels(): Observable\u003cany\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    return this.githubService.fetchAllLabels().pipe("},{"lineNumber":34,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.labels \u003d this.parseLabelData(response);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return response;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * Parses label information and returns an array of Label objects."},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * @param labels - Label Information from API."},{"lineNumber":44,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  parseLabelData(labels: Array\u003cany\u003e): Label[] {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    const labelData: Label[] \u003d [];"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    for (const label of labels) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      labelData.push(new Label(label));"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    return labelData;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * Returns true if the given color is considered \"dark\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * The color is considered \"dark\" if its luminance is less than COLOR_DARKNESS_THRESHOLD"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * @param inputColor: the color"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  isDarkColor(inputColor: string): boolean {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    const COLOR \u003d inputColor.charAt(0) \u003d\u003d\u003d \u0027#\u0027 ? inputColor.substring(1, 7) : inputColor;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    const R \u003d parseInt(COLOR.substring(0, 2), 16);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    const G \u003d parseInt(COLOR.substring(2, 4), 16);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    const B \u003d parseInt(COLOR.substring(4, 6), 16);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    const RGB \u003d [R / 255, G / 255, B / 255];"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    const LINEAR_RGB \u003d RGB.map((col) \u003d\u003e {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      if (col \u003c\u003d 0.03928) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return col / 12.92;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      return Math.pow((col + 0.055) / 1.055, 2.4);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Calculate the luminance of the color"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    const LUMINANCE \u003d 0.2126 * LINEAR_RGB[0] + 0.7152 * LINEAR_RGB[1] + 0.0722 * LINEAR_RGB[2];"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    // The color is \"dark\" if the luminance is lower than the threshold"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    return LUMINANCE \u003c COLOR_DARKNESS_THRESHOLD;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":78,"author":{"gitId":"Eclipse-Dominator"},"content":"   * Returns a css style for the background and text color of the label"},{"lineNumber":79,"author":{"gitId":"-"},"content":"   * @param color: the color of the label"},{"lineNumber":80,"author":{"gitId":"-"},"content":"   * @return the style with background-color in rgb"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * @throws exception if input is an invalid color code"},{"lineNumber":82,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":83,"author":{"gitId":"Eclipse-Dominator"},"content":"  setLabelStyle(color: string) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    let textColor: string;"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    textColor \u003d this.isDarkColor(color) ? COLOR_WHITE : COLOR_BLACK;"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    const styles \u003d {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u0027background-color\u0027: `#${color}`,"},{"lineNumber":90,"author":{"gitId":"Eclipse-Dominator"},"content":"      color: `#${textColor}`"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    return styles;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":3,"-":92}},{"path":"src/app/core/services/phase.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"import { Observable, Subject } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Repo } from \u0027../models/repo.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { SessionData } from \u0027../models/session.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"export const SESSION_AVALIABILITY_FIX_FAILED \u003d \u0027Session Availability Fix failed.\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The title of each phase that appears in the header bar."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export const PhaseDescription \u003d {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  [Phase.issuesViewer]: \u0027Issues Dashboard\u0027,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  [Phase.activityDashboard]: \u0027Activity Dashboard\u0027"},{"lineNumber":17,"author":{"gitId":"-"},"content":"};"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * All data of the session."},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Add accessible phases here."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export const STARTING_SESSION_DATA: SessionData \u003d {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  sessionRepo: ["},{"lineNumber":25,"author":{"gitId":"-"},"content":"    { phase: Phase.issuesViewer, repos: [] }"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // { phase: Phase.activityDashboard, repos: [] }"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":28,"author":{"gitId":"-"},"content":"};"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"export const STARTING_PHASE \u003d Phase.issuesViewer;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":34,"author":{"gitId":"-"},"content":"})"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Responsible for managing the current selected feature of WATcher as well as the"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * current session data and repository details related to the session."},{"lineNumber":39,"author":{"gitId":"-"},"content":" *"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * A phase is terminology from CATcher, in WATcher it refers to a feature of WATcher."},{"lineNumber":41,"author":{"gitId":"-"},"content":" */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"export class PhaseService {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  public currentPhase: Phase \u003d STARTING_PHASE;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  public currentRepo: Repo; // current or main repository of current phase"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  public otherRepos: Repo[]; // more repositories relevant to this phase"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"  /**"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":"   * Expose an observable to track changes to currentRepo"},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"   *"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"   * TODO - replace all references to currentRepo to have"},{"lineNumber":51,"author":{"gitId":"cheehongw"},"content":"   * dependencies subscribe to this observable?"},{"lineNumber":52,"author":{"gitId":"cheehongw"},"content":"   */"},{"lineNumber":53,"author":{"gitId":"cheehongw"},"content":"  public repoChanged$: Subject\u003cRepo | null\u003e \u003d new Subject();"},{"lineNumber":54,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  public sessionData \u003d STARTING_SESSION_DATA; // stores session data for the session"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService, public logger: LoggingService) {}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * Sets the current main repository and additional repos if any."},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * Updates session data in Phase Service and local storage."},{"lineNumber":62,"author":{"gitId":"-"},"content":"   * Updates Github Service with current repository."},{"lineNumber":63,"author":{"gitId":"-"},"content":"   * @param repo Main current repository"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   * @param repos Additional repositories"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  setRepository(repo: Repo, repos?: Repo[]): void {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.currentRepo \u003d repo;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    this.otherRepos \u003d repos ? repos : [];"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.sessionData.sessionRepo.find((x) \u003d\u003e x.phase \u003d\u003d\u003d this.currentPhase).repos \u003d this.getRepository();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    this.githubService.storePhaseDetails(this.currentRepo.owner, this.currentRepo.name);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    localStorage.setItem(\u0027sessionData\u0027, JSON.stringify(this.sessionData));"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   * Changes current respository to a new repository."},{"lineNumber":76,"author":{"gitId":"-"},"content":"   * If on Issue Dashboard, add previously visited repositories to otherRepos."},{"lineNumber":77,"author":{"gitId":"-"},"content":"   * @param repo New current repository"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  changeCurrentRepository(repo: Repo): void {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    this.logger.info(`PhaseService: Changing current repository to \u0027${repo}\u0027`);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    if (this.currentPhase \u003d\u003d\u003d Phase.issuesViewer) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      /** Adds past repositories to phase */"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      this.otherRepos.push(this.currentRepo); // TODO feature: can be used to provide repo suggestions"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    this.setRepository(repo, this.otherRepos);"},{"lineNumber":87,"author":{"gitId":"cheehongw"},"content":"    this.repoChanged$.next(repo);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":91,"author":{"gitId":"-"},"content":"   * Returns the full repository array of the current feature."},{"lineNumber":92,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  getRepository(): Repo[] {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    return [this.currentRepo].concat(this.otherRepos);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * Retrieves the repository url from local storage and sets to current repository."},{"lineNumber":99,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  initializeCurrentRepository() {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    const repo \u003d new Repo(window.localStorage.getItem(\u0027org\u0027), window.localStorage.getItem(\u0027dataRepo\u0027));"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    this.setRepository(repo);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   * Checks if the necessary repository is available. TODO: Future to use to verify setRepository."},{"lineNumber":107,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  verifySessionAvailability(): Observable\u003cboolean\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    return this.githubService.isRepositoryPresent(this.currentRepo.owner, this.currentRepo.name);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   * Changes phase and updates Phase Service\u0027s properties."},{"lineNumber":114,"author":{"gitId":"-"},"content":"   * @param phase New phase"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  changePhase(phase: Phase) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    this.currentPhase \u003d phase;"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    // For now, assumes repository stays the same"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    this.githubService.storePhaseDetails(this.currentRepo.owner, this.currentRepo.name);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"  public getCurrentRepositoryURL() {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    return this.currentRepo.owner.concat(\u0027/\u0027).concat(this.currentRepo.name);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"  reset() {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    this.currentPhase \u003d STARTING_PHASE;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":120,"cheehongw":10}},{"path":"src/app/core/services/user.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../models/github-user.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { User, UserRole } from \u0027../models/user.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":11,"author":{"gitId":"-"},"content":"})"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Responsible for creation of users and teams within the WATcher application."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class UserService {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  public currentUser: User;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"  constructor(private githubService: GithubService, private logger: LoggingService) {}"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   * Get the authenticated user if it exist."},{"lineNumber":23,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  getAuthenticatedUser(): Observable\u003cGithubUser\u003e {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    return this.githubService.fetchAuthenticatedUser().pipe("},{"lineNumber":26,"author":{"gitId":"-"},"content":"      map((data: GithubUser) \u003d\u003e {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return data;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  createUserModel(userLoginId: string): Observable\u003cUser\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.currentUser \u003d \u003cUser\u003e{ loginId: userLoginId, role: UserRole.Student };"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // to refactor"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    const o \u003d new Observable\u003cUser\u003e((s) \u003d\u003e {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      s.next(this.currentUser);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      s.complete();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    return o;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  reset() {"},{"lineNumber":43,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.logger.info(\u0027UserService: Clearing current user\u0027);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.currentUser \u003d undefined;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":1,"-":43,"cheehongw":2}},{"path":"src/app/issues-viewer/card-view/card-view.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card-column\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"column-header\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-card\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cmat-card-header\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        \u003cdiv"},{"lineNumber":6,"author":{"gitId":"-"},"content":"          mat-card-avatar"},{"lineNumber":7,"author":{"gitId":"-"},"content":"          [ngStyle]\u003d\"{"},{"lineNumber":8,"author":{"gitId":"-"},"content":"            background: \u0027url(\u0027 + this.assignee.avatar_url + \u0027)\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            \u0027background-size\u0027: \u002740px\u0027"},{"lineNumber":10,"author":{"gitId":"-"},"content":"          }\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003e\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003cmat-card-title\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          {{ this.assignee !\u003d\u003d undefined ? this.assignee.login : \u0027\u0027 }}"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003c/mat-card-title\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row-count\"\u003e{{ this.issues.count }}\u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/mat-card-header\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/mat-card\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cdiv *ngFor\u003d\"let issue of this.issues$ | async; index as i\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cmat-card class\u003d\"card\" [ngClass]\u003d\"this.getIssueOpenOrCloseColorCSSClass(issue)\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003ca class\u003d\"no-underline link-grey-dark\" (click)\u003d\"viewIssueInBrowser(issue.id, $event)\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cspan [matTooltip]\u003d\"this.issue.updated_at\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cmat-card-header\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cmat-card-title\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cspan class\u003d\"octicon\" [octicon]\u003d\"this.getOcticon(issue)\" [color]\u003d\"this.getIssueOpenOrCloseColor(issue)\"\u003e\u003c/span\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              #{{ issue.id }}: {{ this.fitTitleText(issue.title) }}"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/mat-card-title\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/mat-card-header\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cmat-card-content\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cmat-chip-list aria-label\u003d\"Labels\"\u003e"},{"lineNumber":32,"author":{"gitId":"Echomo-Xinyu"},"content":"              \u003cspan *ngIf\u003d\"issue.milestone\" class\u003d\"octicon-milestone\" octicon\u003d\"milestone\" color\u003d\"grey\" size\u003d\"8\"\u003e\u003c/span\u003e"},{"lineNumber":33,"author":{"gitId":"Echomo-Xinyu"},"content":"              {{ issue.milestone?.title }}"},{"lineNumber":34,"author":{"gitId":"Eclipse-Dominator"},"content":"              \u003cmat-chip *ngFor\u003d\"let label of issue.githubLabels\" [ngStyle]\u003d\"labelService.setLabelStyle(label.color)\" selected\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                {{ label.name }}"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003c/mat-chip\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003c/mat-chip-list\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/mat-card-content\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/span\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003c/a\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/mat-card\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003cmat-card *ngIf\u003d\"this.issues.isLoading$ | async\" style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u003c/mat-card\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"Echomo-Xinyu":2,"Eclipse-Dominator":1,"-":45}},{"path":"src/app/issues-viewer/card-view/card-view.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../../core/models/github-user.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../../core/services/github.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { LabelService } from \u0027../../core/services/label.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { IssuesDataTable } from \u0027../../shared/issue-tables/IssuesDataTable\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  selector: \u0027app-card-view\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./card-view.component.html\u0027,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./card-view.component.css\u0027]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Displays issues as Cards."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class CardViewComponent implements OnInit, AfterViewInit, OnDestroy {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  @Input() headers: string[];"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  @Input() assignee?: GithubUser \u003d undefined;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  @Input() filters?: any \u003d undefined;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  @Input() sort?: MatSort \u003d undefined;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  issues: IssuesDataTable;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  issues$: Observable\u003cIssue[]\u003e;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"Eclipse-Dominator"},"content":"  constructor("},{"lineNumber":33,"author":{"gitId":"Eclipse-Dominator"},"content":"    private githubService: GithubService,"},{"lineNumber":34,"author":{"gitId":"Eclipse-Dominator"},"content":"    public issueService: IssueService,"},{"lineNumber":35,"author":{"gitId":"Eclipse-Dominator"},"content":"    public labelService: LabelService,"},{"lineNumber":36,"author":{"gitId":"Eclipse-Dominator"},"content":"    private logger: LoggingService"},{"lineNumber":37,"author":{"gitId":"Eclipse-Dominator"},"content":"  ) {}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    this.issues \u003d new IssuesDataTable(this.issueService, this.sort, this.paginator, this.headers, this.assignee, this.filters);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      this.issues.loadIssues();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      this.issues$ \u003d this.issues.connect();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  ngOnDestroy(): void {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      this.issues.disconnect();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * Formats the title text to account for those that contain long words."},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * @param title - Title of Issue that is to be displayed in the Table Row."},{"lineNumber":59,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  fitTitleText(title: string): string {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // Arbitrary Length of Characters beyond which an overflow occurs."},{"lineNumber":62,"author":{"gitId":"-"},"content":"    const MAX_WORD_LENGTH \u003d 43;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    const SPLITTER_TEXT \u003d \u0027 \u0027;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    const ELLIPSES \u003d \u0027...\u0027;"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    return title"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      .split(SPLITTER_TEXT)"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      .map((word) \u003d\u003e {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (word.length \u003e MAX_WORD_LENGTH) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          return word.substring(0, MAX_WORD_LENGTH - 5).concat(ELLIPSES);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return word;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      .join(SPLITTER_TEXT);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  /** Opens issue in new window */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  viewIssueInBrowser(id: number, event: Event) {"},{"lineNumber":79,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`CardViewComponent: Opening Issue ${id} on Github`);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    this.githubService.viewIssueInBrowser(id, event);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  /** Returns status color for issue */"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  getIssueOpenOrCloseColor(issue: Issue) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    return issue.state \u003d\u003d\u003d \u0027OPEN\u0027 ? \u0027green\u0027 : \u0027purple\u0027;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  /** Returns CSS class for border color */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  getIssueOpenOrCloseColorCSSClass(issue: Issue) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    return issue.state \u003d\u003d\u003d \u0027OPEN\u0027 ? \u0027border-green\u0027 : \u0027border-purple\u0027;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":94,"author":{"gitId":"-"},"content":"   * Returns corresponding Github icon identifier for issue to display."},{"lineNumber":95,"author":{"gitId":"-"},"content":"   * @param issue Issue to display"},{"lineNumber":96,"author":{"gitId":"-"},"content":"   * @returns string to create icon"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  getOcticon(issue: Issue) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    const type \u003d issue.issueOrPr;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    const state \u003d issue.state;"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    switch (true) {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      case type \u003d\u003d\u003d \u0027Issue\u0027 \u0026\u0026 state \u003d\u003d\u003d \u0027OPEN\u0027: {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return \u0027issue-opened\u0027;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      case type \u003d\u003d\u003d \u0027Issue\u0027 \u0026\u0026 state \u003d\u003d\u003d \u0027CLOSED\u0027: {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return \u0027issue-closed\u0027;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      case type \u003d\u003d\u003d \u0027PullRequest\u0027 \u0026\u0026 state \u003d\u003d\u003d \u0027OPEN\u0027: {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return \u0027git-pull-request\u0027;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      case type \u003d\u003d\u003d \u0027PullRequest\u0027: {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return \u0027git-merge\u0027;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      default: {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return \u0027circle\u0027; // unknown type and state"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":122,"author":{"gitId":"-"},"content":"   * Truncates description to fit in card content."},{"lineNumber":123,"author":{"gitId":"-"},"content":"   * @param description - Description of Issue that is to be displayed."},{"lineNumber":124,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  fitDescriptionText(description: string): string {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    // Arbitrary Length of Characters beyond which an overflow occurs."},{"lineNumber":127,"author":{"gitId":"-"},"content":"    const MAX_CHARACTER_LENGTH \u003d 72;"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    const ELLIPSES \u003d \u0027...\u0027;"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    return description.slice(0, MAX_CHARACTER_LENGTH) + ELLIPSES;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":6,"vigneshsankariyer1234567890":1,"-":124,"cheehongw":1}},{"path":"src/app/issues-viewer/issues-viewer.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"  \u003cmat-grid-list cols\u003d\"7\" rowHeight\u003d\"80px\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile colspan\u003d\"2\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cmat-form-field class\u003d\"search-bar\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\" /\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile colspan\u003d\"3\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"dropdown-filters\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003cmat-form-field appearance\u003d\"standard\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          \u003cmat-label\u003eStatus\u003c/mat-label\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003cmat-select [(value)]\u003d\"this.dropdownFilter.status\" (selectionChange)\u003d\"applyDropdownFilter()\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"all\"\u003eAll\u003c/mat-option\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"open\"\u003eOpen\u003c/mat-option\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"closed\"\u003eClosed\u003c/mat-option\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          \u003c/mat-select\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cmat-form-field appearance\u003d\"standard\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          \u003cmat-label\u003eType\u003c/mat-label\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003cmat-select [(value)]\u003d\"this.dropdownFilter.type\" (selectionChange)\u003d\"applyDropdownFilter()\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"all\"\u003eAll\u003c/mat-option\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"issue\"\u003eIssue\u003c/mat-option\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"pullrequest\"\u003ePull Request\u003c/mat-option\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/mat-select\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cmat-form-field appearance\u003d\"standard\" matSort [matSortDisableClear]\u003d\"true\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cmat-label\u003eSort\u003c/mat-label\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cmat-select [(value)]\u003d\"this.dropdownFilter.sort\" (selectionChange)\u003d\"applyDropdownFilter()\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"id\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cspan mat-sort-header\u003d\"id\"\u003eID\u003c/span\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/mat-option\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"title\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003cspan mat-sort-header\u003d\"title\"\u003eTitle\u003c/span\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/mat-option\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"date\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cspan mat-sort-header\u003d\"date\"\u003eDate Updated\u003c/span\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003c/mat-option\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/mat-select\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmat-form-field appearance\u003d\"standard\"\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cmat-label\u003eMilestone\u003c/mat-label\u003e"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"          \u003cmat-select #milestoneSelectorRef [(value)]\u003d\"this.dropdownFilter.milestones\" (selectionChange)\u003d\"applyDropdownFilter()\" multiple\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cmat-option *ngFor\u003d\"let milestone of this.milestoneService.milestones\" [value]\u003d\"milestone.number\"\u003e{{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"              milestone.title"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }}\u003c/mat-option\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/mat-select\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile class\u003d\"label-filter-grid-tile\" colspan\u003d\"2\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      \u003capp-label-chip-bar [selectedLabels]\u003d\"this.labelFilter$\"\u003e\u003c/app-label-chip-bar\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-list\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003cdiv style\u003d\"display: flex\"\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003capp-card-view"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      *ngFor\u003d\"let assignee of assignees\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"      class\u003d\"issue-table\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"      [assignee]\u003d\"assignee\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"      [headers]\u003d\"this.displayedColumns\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"      [sort]\u003d\"this.matSort\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003e\u003c/app-card-view\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"-":64,"cheehongw":2}},{"path":"src/app/issues-viewer/issues-viewer.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FormControl, FormGroup, Validators } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"import { MatOption, MatSelect, MatSort } from \u0027@angular/material\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { BehaviorSubject, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../core/models/github-user.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../core/services/github.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../core/services/issue.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../core/services/logging.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { MilestoneService } from \u0027../core/services/milestone.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../core/services/phase.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { DEFAULT_DROPDOWN_FILTER, DropdownFilter } from \u0027../shared/issue-tables/IssuesDataTable\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { CardViewComponent } from \u0027./card-view/card-view.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { LabelChipBarComponent } from \u0027./label-chip-bar/label-chip-bar.component\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  selector: \u0027app-issues-viewer\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issues-viewer.component.html\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issues-viewer.component.css\u0027]"},{"lineNumber":20,"author":{"gitId":"-"},"content":"})"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class IssuesViewerComponent implements OnInit, AfterViewInit, OnDestroy {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  readonly displayedColumns \u003d [TABLE_COLUMNS.ID, TABLE_COLUMNS.TITLE, TABLE_COLUMNS.ASSIGNEE, TABLE_COLUMNS.LABEL];"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"cheehongw"},"content":"  /** Observes for any change in repo*/"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"  repoChangeSubscription: Subscription;"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  /** Users to show as columns */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  assignees: GithubUser[];"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  /** Selected dropdown filter value */"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  dropdownFilter: DropdownFilter \u003d DEFAULT_DROPDOWN_FILTER;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  /** Selected label filters, instance passed into LabelChipBar to populate */"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  labelFilter$ \u003d new BehaviorSubject\u003cstring[]\u003e([]);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  labelFilterSubscription: Subscription;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  @ViewChildren(CardViewComponent) cardViews: QueryList\u003cCardViewComponent\u003e;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  /** One MatSort controls all IssueDataTables */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  @ViewChild(MatSort, { static: true }) matSort: MatSort;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  @ViewChild(LabelChipBarComponent, { static: true }) labelChipBar: LabelChipBarComponent;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"  @ViewChild(\u0027milestoneSelectorRef\u0027, { static: false }) milestoneSelectorRef: MatSelect;"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  /** Switch repository form */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  repoForm \u003d new FormGroup({"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    repoInput: new FormControl([\u0027\u0027, Validators.required])"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public phaseService: PhaseService,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public githubService: GithubService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public issueService: IssueService,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public milestoneService: MilestoneService,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private logger: LoggingService"},{"lineNumber":57,"author":{"gitId":"cheehongw"},"content":"  ) {"},{"lineNumber":58,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.repoChangeSubscription \u003d this.phaseService.repoChanged$.subscribe((newRepo) \u003d\u003e this.initialize());"},{"lineNumber":59,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    this.initialize();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /** Apply dropdown filter when LabelChipBar populates with label filters */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.labelFilterSubscription \u003d this.labelFilter$.subscribe((labels) \u003d\u003e {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      this.dropdownFilter.labels \u003d labels;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      this.applyDropdownFilter();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  ngOnDestroy(): void {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    this.labelFilterSubscription.unsubscribe();"},{"lineNumber":75,"author":{"gitId":"cheehongw"},"content":"    this.repoChangeSubscription.unsubscribe();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":79,"author":{"gitId":"-"},"content":"   * Signals to IssuesDataTable that a change has occurred in filter."},{"lineNumber":80,"author":{"gitId":"-"},"content":"   * @param filterValue"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  applyFilter(filterValue: string) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    this.cardViews.forEach((v) \u003d\u003e (v.issues.filter \u003d filterValue));"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   * Signals to IssuesDataTable that a change has occurred in dropdown filter."},{"lineNumber":88,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  applyDropdownFilter() {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    this.cardViews.forEach((v) \u003d\u003e (v.issues.dropdownFilter \u003d this.dropdownFilter));"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":94,"author":{"gitId":"-"},"content":"   * Fetch and initialize all information from repository to populate Issue Dashboard."},{"lineNumber":95,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  private initialize() {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    // Fetch assignees"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    this.assignees \u003d [];"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    this.githubService.getUsersAssignable().subscribe((x) \u003d\u003e (this.assignees \u003d x));"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    // Fetch issues"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    this.issueService.reloadAllIssues();"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    // Fetch labels"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    this.labelChipBar.load();"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"    // Fetch milestones"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    this.milestoneService.fetchMilestones().subscribe("},{"lineNumber":109,"author":{"gitId":"-"},"content":"      (response) \u003d\u003e {"},{"lineNumber":110,"author":{"gitId":"cheehongw"},"content":"        this.logger.debug(\u0027IssuesViewerComponent: Fetched milestones from Github\u0027);"},{"lineNumber":111,"author":{"gitId":"cheehongw"},"content":"        this.milestoneSelectorRef.options.forEach((data: MatOption) \u003d\u003e data.deselect());"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      (err) \u003d\u003e {},"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      () \u003d\u003e {}"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":1,"-":105,"cheehongw":11}},{"path":"src/app/issues-viewer/label-chip-bar/label-chip-bar.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { COMMA, ENTER } from \u0027@angular/cdk/keycodes\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Component, ElementRef, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormControl } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { MatAutocompleteSelectedEvent } from \u0027@angular/material/autocomplete\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { MatChipInputEvent } from \u0027@angular/material/chips\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { BehaviorSubject, Observable } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { Label } from \u0027../../core/models/label.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../core/services/label.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  selector: \u0027app-label-chip-bar\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./label-chip-bar.component.html\u0027,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./label-chip-bar.component.css\u0027]"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Angular Material Chips Autocomplete Example"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * ref: https://material.angular.io/components/chips/examples#chips-autocomplete"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"export class LabelChipBarComponent implements OnInit {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  labels: Label[];"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  @Input() selectedLabels: BehaviorSubject\u003cstring[]\u003e; // array of label strings"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  separatorKeysCodes: number[] \u003d [ENTER, COMMA];"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  labelCtrl \u003d new FormControl(\u0027\u0027);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  filteredLabels: Observable\u003cstring[]\u003e; // filtered by text in search bar"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  selectedLabelNames: string[] \u003d [];"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  allLabelNames: string[];"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  @ViewChild(\u0027labelInput\u0027, { static: true }) labelInput: ElementRef\u003cHTMLInputElement\u003e;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  constructor(private labelService: LabelService, private logger: LoggingService) {}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    this.load();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  public load() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    this.labelService.fetchLabels().subscribe("},{"lineNumber":42,"author":{"gitId":"-"},"content":"      (response) \u003d\u003e {"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"        this.logger.debug(\u0027LabelChipBarComponent: Fetched labels from Github\u0027);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      (err) \u003d\u003e {},"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      () \u003d\u003e {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.initialize();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  private initialize() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    this.labels \u003d this.labelService.labels;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    this.allLabelNames \u003d this.labels.map((label) \u003d\u003e label.getFormattedName());"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    this.filteredLabels \u003d this.labelCtrl.valueChanges.pipe("},{"lineNumber":57,"author":{"gitId":"-"},"content":"      map((label: string | null) \u003d\u003e (label ? this._filter(label) : this.allLabelNames.slice()))"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  add(event: MatChipInputEvent): void {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    const value \u003d (event.value || \u0027\u0027).trim();"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    if (!value || !this.allLabelNames.includes(value) || this.selectedLabelNames.includes(value)) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    this.selectedLabelNames.push(value);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.selectedLabels.next(this.selectedLabelNames);"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    if (event.input) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      event.input.value \u003d \u0027\u0027; // Clear the input value"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    this.labelCtrl.setValue(null);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  remove(label: string): void {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    const index \u003d this.selectedLabelNames.indexOf(label);"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    if (index \u003e\u003d 0) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      this.selectedLabelNames.splice(index, 1);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    this.selectedLabels.next(this.selectedLabelNames);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  selected(event: MatAutocompleteSelectedEvent): void {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    const value \u003d event.option.viewValue;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    if (this.selectedLabelNames.includes(value)) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      // no duplicates"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    this.selectedLabelNames.push(value); // selected from dropdown"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    this.selectedLabels.next(this.selectedLabelNames);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    this.labelInput.nativeElement.value \u003d \u0027\u0027;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    this.labelCtrl.setValue(null);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"  private _filter(value: string): string[] {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    const filterValue \u003d value.toLowerCase();"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    return this.allLabelNames.filter((label) \u003d\u003e label.toLowerCase().includes(filterValue) \u0026\u0026 !this.selectedLabelNames.includes(label));"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":105,"cheehongw":1}},{"path":"src/app/shared/layout/header.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cmat-toolbar color\u003d\"primary\" style\u003d\"position: sticky; position: -webkit-sticky; top: 0; z-index: 1000\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cbutton"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    *ngIf\u003d\"isBackButtonShown()\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"    mat-icon-button"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    class\u003d\"mat-toolbar mat-primary back-button\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"    style\u003d\"transform: scale(0.9)\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    (click)\u003d\"goBack()\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003earrow_back_ios\u003c/mat-icon\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003ca class\u003d\"mat-toolbar mat-primary\" style\u003d\"text-decoration: none\" [routerLink]\u003d\"phaseService.currentPhase\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003eWATcher v{{ this.getVersion() }}\u003c/a"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cspan id\u003d\"phase-descriptor\" *ngIf\u003d\"auth.isAuthenticated()\" style\u003d\"margin-left: 10px\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ({{ this.getPhaseDescription(phaseService.currentPhase) }})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/span\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cdiv *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 this.phaseService.sessionData.sessionRepo.length \u003e 1\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cbutton mat-button [matMenuTriggerFor]\u003d\"menu\"\u003e\u003cmat-icon style\u003d\"color: white\"\u003eexpand_more\u003c/mat-icon\u003e\u003c/button\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cmat-menu #menu\u003d\"matMenu\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cbutton"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        mat-menu-item"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        *ngFor\u003d\"let sessionRepo of this.phaseService.sessionData.sessionRepo\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        (click)\u003d\"this.routeToSelectedPhase(sessionRepo.phase)\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cspan\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cmat-icon [ngStyle]\u003d\"{ color: \u0027green\u0027, visibility: this.phaseService.currentPhase \u003d\u003d\u003d sessionRepo.phase ? \u0027visible\u0027 : \u0027hidden\u0027 }\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003edone\u003c/mat-icon"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          {{ this.getPhaseDescription(sessionRepo.phase) }}"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/span\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/mat-menu\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"  \u003c!-- everything else --\u003e"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cspan style\u003d\"flex: 1 1 auto\"\u003e\u003c/span\u003e"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"  \u003cdiv *ngIf\u003d\"auth.isAuthenticated()\"\u003e"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"    \u003cspan id\u003d\"phase-descriptor\" style\u003d\"margin-left: 10px\"\u003e"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"      {{ this.currentRepo }}"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"    \u003c/span\u003e"},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"    \u003cbutton mat-button matTooltip\u003d\"Change Repository\" (click)\u003d\"this.openChangeRepoDialog()\"\u003e"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"      \u003cmat-icon\u003eedit\u003c/mat-icon\u003e"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"    \u003c/button\u003e"},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"  \u003c/div\u003e"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003cspan style\u003d\"flex: 1 1 auto\"\u003e\u003c/span\u003e"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cbutton mat-button matTooltip\u003d\"Download WATcher Log\" (click)\u003d\"this.exportLogFile()\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003ereceipt\u003c/mat-icon\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cbutton mat-button matTooltip\u003d\"Give feedback about WATcher\" (click)\u003d\"openIssueTracker()\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003email\u003c/mat-icon\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cbutton"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isOpenUrlButtonShown()\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    mat-button"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    matTooltip\u003d\"View current page on GitHub\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    (click)\u003d\"viewBrowser()\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003eopen_in_new\u003c/mat-icon\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003cbutton"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isReloadButtonShown() \u0026\u0026 !this.isReloadButtonDisabled\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    mat-button"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    matTooltip\u003d\"Synchronize with Github data\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    (click)\u003d\"reload()\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    Sync"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003erefresh\u003c/mat-icon\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"sync-spinner\" *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isReloadButtonShown() \u0026\u0026 this.isReloadButtonDisabled\"\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003cspan style\u003d\"font-size: 14px; margin-right: 7px\"\u003eSync\u003c/span\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u003cmat-spinner class\u003d\"white-spinner\" [diameter]\u003d\"20\"\u003e\u003c/mat-spinner\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003cbutton *ngIf\u003d\"auth.isAuthenticated()\" mat-button matTooltip\u003d\"Log out\" (click)\u003d\"openLogOutDialog(); $event.stopPropagation()\"\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ({{ userService.currentUser.loginId }})"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003cmat-icon style\u003d\"margin-left: 2px\"\u003eexit_to_app\u003c/mat-icon\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/mat-toolbar\u003e"}],"authorContributionMap":{"-":71,"cheehongw":13}},{"path":"src/app/shared/layout/header.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Location } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Router, RoutesRecognized } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { filter, pairwise } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../core/models/phase.model\u0027;"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { Repo } from \u0027../../core/models/repo.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../core/services/auth.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { DialogService } from \u0027../../core/services/dialog.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../../core/services/electron.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../../core/services/github.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { PhaseDescription, PhaseService } from \u0027../../core/services/phase.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"const ISSUE_TRACKER_URL \u003d \u0027https://github.com/CATcher-org/WATcher/issues\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  selector: \u0027app-layout-header\u0027,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./header.component.html\u0027"},{"lineNumber":24,"author":{"gitId":"-"},"content":"})"},{"lineNumber":25,"author":{"gitId":"-"},"content":"export class HeaderComponent implements OnInit {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  private prevUrl;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  isReloadButtonDisabled \u003d false;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  ISSUE_FILTER \u003d \u0027/issues?q\u003dis:issue+is:all\u0027; // the filtered list must be an issue and must be open"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  TUTORIAL_LABEL \u003d \u0027+label:tutorial.\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  TEAM_LABEL \u003d \u0027+label:team.\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  EXCLUDE_DUPLICATE \u003d \u0027+-label:duplicate\u0027; // exclude duplicate issues"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  // Messages for the modal popup window upon logging out"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  private readonly logOutDialogMessages \u003d [\u0027Do you wish to log out?\u0027];"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  private readonly yesButtonDialogMessage \u003d \u0027Yes, I wish to log out\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  private readonly noButtonDialogMessage \u003d \"No, I don\u0027t wish to log out\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"  /** Model for the displayed repository name */"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  currentRepo \u003d \u0027\u0027;"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private router: Router,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public auth: AuthService,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public phaseService: PhaseService,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public userService: UserService,"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"    public logger: LoggingService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private location: Location,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private electronService: ElectronService,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private dialogService: DialogService"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    router.events"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":57,"author":{"gitId":"-"},"content":"        filter((e: any) \u003d\u003e e instanceof RoutesRecognized),"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        pairwise()"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      .subscribe((e) \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.prevUrl \u003d e[0].urlAfterRedirects;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":63,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":64,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.auth.currentAuthState.subscribe((authState) \u003d\u003e {"},{"lineNumber":65,"author":{"gitId":"cheehongw"},"content":"      if (auth.isAuthenticated()) {"},{"lineNumber":66,"author":{"gitId":"cheehongw"},"content":"        this.initializeRepoNameInTitle();"},{"lineNumber":67,"author":{"gitId":"Eclipse-Dominator"},"content":"      }"},{"lineNumber":68,"author":{"gitId":"Eclipse-Dominator"},"content":"    });"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  ngOnInit() {}"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   * Replaces and resets the current phase data and routes the app to the"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   * newly selected phase."},{"lineNumber":76,"author":{"gitId":"-"},"content":"   * @param openPhase - Open Phase that is selected by the user."},{"lineNumber":77,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  routeToSelectedPhase(openPhase: string): void {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    // Do nothing if the selected phase is the current phase."},{"lineNumber":80,"author":{"gitId":"-"},"content":"    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase[openPhase]) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    // Replace Current Phase Data."},{"lineNumber":85,"author":{"gitId":"-"},"content":"    this.phaseService.changePhase(Phase[openPhase]);"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    // Remove current phase issues and load selected phase issues."},{"lineNumber":88,"author":{"gitId":"-"},"content":"    this.githubService.reset();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    this.issueService.reset(false);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    this.reload();"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    // Route app to new phase."},{"lineNumber":93,"author":{"gitId":"-"},"content":"    this.router.navigateByUrl(this.phaseService.currentPhase);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  isBackButtonShown(): boolean {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    return `/${this.phaseService.currentPhase}` !\u003d\u003d this.router.url \u0026\u0026 this.router.url !\u003d\u003d \u0027/\u0027 \u0026\u0026 !this.router.url.startsWith(\u0027/?code\u0027);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  isReloadButtonShown(): boolean {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    return this.router.url !\u003d\u003d \u0027/phaseBugReporting/issues/new\u0027;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  isOpenUrlButtonShown(): boolean {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    return this.phaseService.currentPhase \u003d\u003d\u003d Phase.issuesViewer || this.phaseService.currentPhase \u003d\u003d\u003d Phase.activityDashboard;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  getVersion(): string {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    return AppConfig.version;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  getPhaseDescription(openPhase: string): string {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    return PhaseDescription[openPhase];"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"  goBack() {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    if (this.prevUrl \u003d\u003d\u003d `/${this.phaseService.currentPhase}/issues/new`) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      this.router.navigateByUrl(this.phaseService.currentPhase);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      this.location.back();"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"  viewBrowser() {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase.activityDashboard) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      this.electronService.openLink("},{"lineNumber":127,"author":{"gitId":"-"},"content":"        `https://github.com/${this.phaseService.currentRepo.owner}/${this.phaseService.currentRepo.name}/pulse`"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    const routerUrl \u003d this.router.url.substring(1); // remove the first \u0027/\u0027 from string"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    const issueUrlIndex \u003d routerUrl.indexOf(\u0027/\u0027); // find the index of second \u0027/\u0027"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    let issueUrl: string;"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    // If can\u0027t find the index of second \u0027/\u0027, then router is at the /issues (table list) page"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    if (issueUrlIndex \u003c 0) {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      // Apply filters to the issueUrl"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      issueUrl \u003d this.ISSUE_FILTER;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      // issueUrl will be from the second \u0027/\u0027"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      issueUrl \u003d routerUrl.substring(issueUrlIndex);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    // Open the url in user\u0027s preferred browser"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    this.electronService.openLink(\u0027https://github.com/\u0027.concat(this.githubService.getRepoURL()).concat(issueUrl));"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"  openIssueTracker() {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    this.electronService.openLink(ISSUE_TRACKER_URL);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"  reload() {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    this.isReloadButtonDisabled \u003d true;"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    this.githubEventService.reloadPage().subscribe("},{"lineNumber":156,"author":{"gitId":"-"},"content":"      (success) \u003d\u003e success,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      (error) \u003d\u003e {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(error, () \u003d\u003e this.githubEventService.reloadPage());"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    // Prevent user from spamming the reload button"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      this.isReloadButtonDisabled \u003d false;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }, 3000);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"  logOut() {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    this.auth.logOut();"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  openLogOutDialog() {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    const dialogRef \u003d this.dialogService.openUserConfirmationModal("},{"lineNumber":174,"author":{"gitId":"-"},"content":"      this.logOutDialogMessages,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      this.yesButtonDialogMessage,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      this.noButtonDialogMessage"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    dialogRef.afterClosed().subscribe((res) \u003d\u003e {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      if (res) {"},{"lineNumber":181,"author":{"gitId":"cheehongw"},"content":"        this.logger.info(`HeaderComponent: Logging out from ${this.userService.currentUser.loginId}`);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        this.logOut();"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"  exportLogFile() {"},{"lineNumber":188,"author":{"gitId":"cheehongw"},"content":"    this.logger.exportLogFile();"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":190,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":191,"author":{"gitId":"cheehongw"},"content":"  initializeRepoNameInTitle() {"},{"lineNumber":192,"author":{"gitId":"cheehongw"},"content":"    this.currentRepo \u003d this.phaseService.currentRepo.toString();"},{"lineNumber":193,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.logger.info(\u0027HeaderComponent: initializing current repo name\u0027);"},{"lineNumber":194,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":195,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":196,"author":{"gitId":"cheehongw"},"content":"  /**"},{"lineNumber":197,"author":{"gitId":"cheehongw"},"content":"   * Change repository viewed on Issue Dashboard."},{"lineNumber":198,"author":{"gitId":"cheehongw"},"content":"   */"},{"lineNumber":199,"author":{"gitId":"cheehongw"},"content":"  switchRepo() {"},{"lineNumber":200,"author":{"gitId":"cheehongw"},"content":"    this.phaseService.changeCurrentRepository(Repo.of(this.currentRepo));"},{"lineNumber":201,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":202,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":203,"author":{"gitId":"cheehongw"},"content":"  openChangeRepoDialog() {"},{"lineNumber":204,"author":{"gitId":"cheehongw"},"content":"    const dialogRef \u003d this.dialogService.openChangeRepoDialog(this.currentRepo);"},{"lineNumber":205,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":206,"author":{"gitId":"Eclipse-Dominator"},"content":"    dialogRef.afterClosed().subscribe((res) \u003d\u003e {"},{"lineNumber":207,"author":{"gitId":"cheehongw"},"content":"      if (!res) {"},{"lineNumber":208,"author":{"gitId":"cheehongw"},"content":"        return;"},{"lineNumber":209,"author":{"gitId":"cheehongw"},"content":"      }"},{"lineNumber":210,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":211,"author":{"gitId":"cheehongw"},"content":"      this.currentRepo \u003d res;"},{"lineNumber":212,"author":{"gitId":"cheehongw"},"content":"      this.switchRepo();"},{"lineNumber":213,"author":{"gitId":"Eclipse-Dominator"},"content":"    });"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":6,"vigneshsankariyer1234567890":2,"-":178,"cheehongw":29}},{"path":"src/app/shared/repo-change-form/repo-change-form.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":".change-repo-form-title {"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"  width: 100%;"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"}"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":".mat-dialog-content {"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"  width: 100%;"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"}"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":".mat-form-field {"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"  width: 100%;"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"}"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":".mat-dialog-actions {"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"  justify-content: flex-end;"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"}"}],"authorContributionMap":{"cheehongw":15}},{"path":"src/app/shared/repo-change-form/repo-change-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"\u003ch1 mat-dialog-title class\u003d\"change-repo-form-title\"\u003eChange repository\u003c/h1\u003e"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"\u003cdiv mat-dialog-content\u003e"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"  \u003cmat-form-field appearance\u003d\"fill\"\u003e"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"    \u003cmat-label\u003eRepository Location (Org/Repo)\u003c/mat-label\u003e"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003cinput matInput [(ngModel)]\u003d\"this.repoName\" /\u003e"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"  \u003c/mat-form-field\u003e"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"\u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"\u003cdiv mat-dialog-actions\u003e"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"  \u003cbutton mat-button (click)\u003d\"onNoClick()\" color\u003d\"warn\"\u003eCancel\u003c/button\u003e"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"  \u003cbutton mat-button (click)\u003d\"onYesClick()\" color\u003d\"primary\"\u003eChange Repo\u003c/button\u003e"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"Eclipse-Dominator":2,"cheehongw":9}},{"path":"src/app/shared/repo-change-form/repo-change-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { MAT_DIALOG_DATA, MatDialogRef } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"  selector: \u0027app-repo-change-form\u0027,"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"  templateUrl: \u0027./repo-change-form.component.html\u0027,"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"  styleUrls: [\u0027./repo-change-form.component.css\u0027]"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"})"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"export class RepoChangeFormComponent {"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"  private repoName: String;"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"  constructor(public dialogRef: MatDialogRef\u003cRepoChangeFormComponent\u003e, @Inject(MAT_DIALOG_DATA) public data) {"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"    this.repoName \u003d data.repoName;"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"  onYesClick(): void {"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"    this.dialogRef.close(this.repoName);"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"  onNoClick(): void {"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"    this.dialogRef.close(false);"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":1,"vigneshsankariyer1234567890":1,"cheehongw":21}},{"path":"tests/services/logging.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../src/app/core/services/logging.service\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MockLocalStorage } from \u0027../helper/mock.local.storage\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"let logger: LoggingService;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"let headerLog: string;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"let sessionSeparator: string;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"const mockDate \u003d new Date(2021, 6, 27);"},{"lineNumber":8,"author":{"gitId":"-"},"content":"const infoLogMessage \u003d \u0027Info log message\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"const mockLocalStorageFunctionCalls \u003d (mockLocalStorage: MockLocalStorage) \u003d\u003e {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  spyOn(localStorage, \u0027getItem\u0027).and.callFake(mockLocalStorage.getItem.bind(mockLocalStorage));"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  spyOn(localStorage, \u0027setItem\u0027).and.callFake(mockLocalStorage.setItem.bind(mockLocalStorage));"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  spyOn(localStorage, \u0027removeItem\u0027).and.callFake(mockLocalStorage.removeItem.bind(mockLocalStorage));"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  spyOn(localStorage, \u0027clear\u0027).and.callFake(mockLocalStorage.clear.bind(mockLocalStorage));"},{"lineNumber":15,"author":{"gitId":"-"},"content":"};"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"const mockDates \u003d () \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  jasmine.clock().install();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  jasmine.clock().mockDate(mockDate);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"};"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"const initializeLoggingService \u003d () \u003d\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  const electronService \u003d jasmine.createSpyObj(\u0027ElectronService\u0027, [\u0027isElectron\u0027]);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  electronService.isElectron \u003d jasmine.createSpy(\u0027isElectron\u0027, () \u003d\u003e false);"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"  logger \u003d new LoggingService(electronService);"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"  headerLog \u003d `${logger.LOG_START_HEADER}\\n${mockDate.toLocaleString()}`;"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"  sessionSeparator \u003d logger.SESSION_LOG_SEPARATOR;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"};"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"describe(\u0027LoggingService\u0027, () \u003d\u003e {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  beforeAll(() \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    const mockLocalStorage \u003d new MockLocalStorage();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mockLocalStorageFunctionCalls(mockLocalStorage);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    mockDates();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    initializeLoggingService();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"    logger.reset();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    localStorage.clear();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  afterAll(() \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    jasmine.clock().uninstall();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  describe(\u0027.startSession()\u0027, () \u003d\u003e {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    it(\u0027should successfully initialize logging session\u0027, () \u003d\u003e {"},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"      logger.startSession();"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"      const actualLog \u003d logger.getCachedLog();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      const expectedLog \u003d headerLog;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      expect(actualLog).toEqual(expectedLog);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    it(\u0027should successfully reinitialize logging session\u0027, () \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"cheehongw"},"content":"      logger.startSession();"},{"lineNumber":57,"author":{"gitId":"cheehongw"},"content":"      logger.reset();"},{"lineNumber":58,"author":{"gitId":"cheehongw"},"content":"      logger.startSession();"},{"lineNumber":59,"author":{"gitId":"cheehongw"},"content":"      const actualLog \u003d logger.getCachedLog();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      const expectedLog \u003d `${headerLog}${sessionSeparator}${headerLog}`;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      expect(actualLog).toEqual(expectedLog);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    it(\u0027should successfully reinitialize logging session when limit reached\u0027, () \u003d\u003e {"},{"lineNumber":65,"author":{"gitId":"cheehongw"},"content":"      Array(logger.LOG_COUNT_LIMIT)"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        .fill(0)"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        .forEach(() \u003d\u003e {"},{"lineNumber":68,"author":{"gitId":"cheehongw"},"content":"          logger.startSession();"},{"lineNumber":69,"author":{"gitId":"cheehongw"},"content":"          logger.reset();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":71,"author":{"gitId":"cheehongw"},"content":"      logger.startSession();"},{"lineNumber":72,"author":{"gitId":"cheehongw"},"content":"      const actualLog \u003d logger.getCachedLog();"},{"lineNumber":73,"author":{"gitId":"cheehongw"},"content":"      const expectedLog \u003d Array(logger.LOG_COUNT_LIMIT)"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        .fill(\u0027\u0027)"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        .map((_) \u003d\u003e headerLog)"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        .join(sessionSeparator);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      expect(actualLog).toEqual(expectedLog);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  describe(\u0027.reset()\u0027, () \u003d\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    it(\u0027should do nothing if no session is ongoing\u0027, () \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"cheehongw"},"content":"      logger.reset();"},{"lineNumber":84,"author":{"gitId":"cheehongw"},"content":"      const actualLog \u003d logger.getCachedLog();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      expect(actualLog).toBeNull();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    it(\u0027should not tamper with existing log histories\u0027, () \u003d\u003e {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      let expectedLog \u003d headerLog;"},{"lineNumber":90,"author":{"gitId":"cheehongw"},"content":"      for (let i \u003d 0; i \u003c logger.LOG_COUNT_LIMIT + 1; i +\u003d 1) {"},{"lineNumber":91,"author":{"gitId":"cheehongw"},"content":"        logger.startSession();"},{"lineNumber":92,"author":{"gitId":"cheehongw"},"content":"        logger.reset();"},{"lineNumber":93,"author":{"gitId":"cheehongw"},"content":"        const actualLog \u003d logger.getCachedLog();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expect(actualLog).toEqual(expectedLog);"},{"lineNumber":95,"author":{"gitId":"cheehongw"},"content":"        if (i \u003c logger.LOG_COUNT_LIMIT - 1) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"          expectedLog +\u003d `${sessionSeparator}${headerLog}`;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  describe(\u0027adding logs\u0027, () \u003d\u003e {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    it(\u0027should successfully add info logs\u0027, () \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"cheehongw"},"content":"      logger.startSession();"},{"lineNumber":105,"author":{"gitId":"cheehongw"},"content":"      const initialLog \u003d logger.getCachedLog();"},{"lineNumber":106,"author":{"gitId":"cheehongw"},"content":"      logger.info(infoLogMessage);"},{"lineNumber":107,"author":{"gitId":"cheehongw"},"content":"      const actualLog \u003d logger.getCachedLog();"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      const expectedLog \u003d `${initialLog}\\n${infoLogMessage}`;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      expect(actualLog).toEqual(expectedLog);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"  describe(\u0027updating and trimming logs from sessions\u0027, () \u003d\u003e {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    it(\u0027should trim oldest log if number of sessions exceed session limit\u0027, () \u003d\u003e {"},{"lineNumber":115,"author":{"gitId":"cheehongw"},"content":"      Array(logger.LOG_COUNT_LIMIT + 1)"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        .fill(0)"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        .forEach(() \u003d\u003e {"},{"lineNumber":118,"author":{"gitId":"cheehongw"},"content":"          logger.startSession();"},{"lineNumber":119,"author":{"gitId":"cheehongw"},"content":"          logger.info(infoLogMessage);"},{"lineNumber":120,"author":{"gitId":"cheehongw"},"content":"          logger.reset();"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":122,"author":{"gitId":"cheehongw"},"content":"      logger.startSession();"},{"lineNumber":123,"author":{"gitId":"cheehongw"},"content":"      const actualLog \u003d logger.getCachedLog();"},{"lineNumber":124,"author":{"gitId":"cheehongw"},"content":"      const expectedLog \u003d Array(logger.LOG_COUNT_LIMIT)"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        .fill(\u0027\u0027)"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        .map((_) \u003d\u003e headerLog)"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        .join(`\\n${infoLogMessage}${sessionSeparator}`);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      expect(actualLog).toEqual(expectedLog);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":131,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":96,"cheehongw":35}}]
