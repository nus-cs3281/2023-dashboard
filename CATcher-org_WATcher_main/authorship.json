[{"path":"src/app/activity-dashboard/event-tables/GithubEventDataTable.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DataSource } from \u0027@angular/cdk/table\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatPaginator } from \u0027@angular/material/paginator\u0027;"},{"lineNumber":3,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSort } from \u0027@angular/material/sort\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import * as moment from \u0027moment\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { BehaviorSubject, merge, Observable, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../../core/models/github-user.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { GithubEvent } from \u0027../../core/models/github/github-event.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { EventWeek } from \u0027../event-week.model\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { paginateData } from \u0027./event-paginator\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adapted from IssuesDataTable for Events."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class GithubEventDataTable extends DataSource\u003cEventWeek\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  private startDate \u003d new BehaviorSubject(\u0027\u0027);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  private endDate \u003d new BehaviorSubject(\u0027\u0027);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  private eventsSubject \u003d new BehaviorSubject\u003cEventWeek[]\u003e([]);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  private eventSubscription: Subscription;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  public isLoading$ \u003d this.githubEventService.isLoading.asObservable();"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private logger: LoggingService,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private sort: MatSort,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private paginator: MatPaginator,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private actor?: GithubUser,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private defaultFilter?: (event: GithubEvent) \u003d\u003e boolean"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    super();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  connect(): Observable\u003cEventWeek[]\u003e {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    return this.eventsSubject.asObservable();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  disconnect() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    this.startDate.complete();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    this.endDate.complete();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.eventsSubject.complete();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.eventSubscription.unsubscribe();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  /** Group GithubEvents[] week by week. Needs refactoring. */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  groupByWeeks(githubEvents: GithubEvent[]): EventWeek[] {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    const endDate \u003d this.startDate.getValue() \u003d\u003d\u003d \u0027\u0027 ? moment() : moment(this.endDate.getValue());"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    const startDate \u003d"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      this.startDate.getValue() \u003d\u003d\u003d \u0027\u0027 ? endDate.clone().subtract(1, \u0027month\u0027).startOf(\u0027day\u0027) : moment(this.startDate.getValue());"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    const loopDate \u003d moment(startDate).day(\u0027Sunday\u0027);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    const eventWeeks \u003d [];"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    let eventsInAWeek \u003d [];"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    let weekNum \u003d 1;"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    githubEvents.forEach((githubEvent) \u003d\u003e {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      weekNum++;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      const eventDate \u003d moment(githubEvent.created_at);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      if (loopDate.isAfter(eventDate)) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // event in earlier week"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      } else if (loopDate.clone().add(7, \u0027days\u0027).isAfter(eventDate) \u0026\u0026 loopDate.isBefore(eventDate)) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // event in this week"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        eventsInAWeek.push(githubEvent);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // event in later week"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        eventWeeks.push(EventWeek.of(loopDate.format(\u0027ll\u0027), eventsInAWeek)); // push previous week"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        eventsInAWeek \u003d [];"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        loopDate.add(7, \u0027days\u0027);"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Empty weeks if any"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        while (loopDate.clone().add(7, \u0027days\u0027).isBefore(eventDate) \u0026\u0026 loopDate.clone().add(7, \u0027days\u0027).isBefore(endDate)) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          eventWeeks.push(EventWeek.of(loopDate.format(\u0027ll\u0027), []));"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          loopDate.add(7, \u0027days\u0027);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        console.assert(loopDate.clone().add(7, \u0027days\u0027).isAfter(eventDate) \u0026\u0026 loopDate.isBefore(eventDate));"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (eventDate.isBefore(endDate)) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"          eventsInAWeek.push(githubEvent);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    eventWeeks.push(EventWeek.of(loopDate.format(\u0027ll\u0027), eventsInAWeek)); // push final week"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    return eventWeeks;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  loadEvents() {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    // If no pagination and sorting"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    let sortChange;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    if (this.sort !\u003d\u003d undefined) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      sortChange \u003d this.sort.sortChange;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    let page;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    if (this.paginator !\u003d\u003d undefined) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      page \u003d this.paginator.page;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    const displayDataChanges \u003d [page, sortChange, this.startDate, this.endDate].filter((x) \u003d\u003e x !\u003d\u003d undefined);"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    this.githubEventService.pollEvents();"},{"lineNumber":105,"author":{"gitId":"cheehongw"},"content":"    this.githubEventService.events$.subscribe((x) \u003d\u003e this.logger.debug(\u0027GithubEventDataTable: \u0027, x));"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    this.eventSubscription \u003d this.githubEventService.events$"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":108,"author":{"gitId":"-"},"content":"        flatMap(() \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"          // merge creates an observable from values that changes display"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          return merge(...displayDataChanges).pipe("},{"lineNumber":111,"author":{"gitId":"-"},"content":"            // maps each change in display value to new event ordering or filtering"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            map(() \u003d\u003e {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"              let data \u003d \u003cGithubEvent[]\u003eObject.values(this.githubEventService.events$.getValue()).reverse();"},{"lineNumber":114,"author":{"gitId":"-"},"content":"              if (this.defaultFilter) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                data \u003d data.filter(this.defaultFilter);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":117,"author":{"gitId":"-"},"content":"              // Filter by actor of event"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              if (this.actor) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                data \u003d data.filter((githubEvent) \u003d\u003e {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                  if (!githubEvent.actor) {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                    return false;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                  } else {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    return githubEvent.actor.login \u003d\u003d\u003d this.actor.login;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                  }"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":126,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"              let weekData \u003d this.groupByWeeks(data);"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"              if (this.paginator !\u003d\u003d undefined) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                weekData \u003d paginateData(this.paginator, weekData);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":133,"author":{"gitId":"-"},"content":"              return weekData;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            })"},{"lineNumber":135,"author":{"gitId":"-"},"content":"          );"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      .subscribe((data) \u003d\u003e {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        this.eventsSubject.next(data);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"  /*"},{"lineNumber":144,"author":{"gitId":"-"},"content":"   * Start and end date getters and setters."},{"lineNumber":145,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  get start(): string {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    return this.startDate.value;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"  set start(date: string) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    this.startDate.next(date);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"  get end(): string {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    return this.endDate.value;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"  set end(date: string) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    this.endDate.next(date);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":2,"-":158,"cheehongw":1}},{"path":"src/app/activity-dashboard/event-tables/event-paginator.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatPaginator } from \u0027@angular/material/paginator\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { EventWeek } from \u0027../event-week.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"export function paginateData(paginator: MatPaginator, data: EventWeek[]): EventWeek[] {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  paginator.length \u003d data.length;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  let result \u003d getDataForPage(paginator.pageIndex, paginator.pageSize, data);"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  if (result.length \u003d\u003d\u003d 0) {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    paginator.pageIndex -\u003d 1;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    result \u003d getDataForPage(paginator.pageIndex, paginator.pageSize, data);"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  return result;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"function getDataForPage(pageIndex: number, pageSize: number, data: EventWeek[]): EventWeek[] {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  const startIndex \u003d pageIndex * pageSize;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  return data.splice(startIndex, pageSize);"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":16}},{"path":"src/app/activity-dashboard/event-tables/event-tables.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { animate, state, style, transition, trigger } from \u0027@angular/animations\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatPaginator } from \u0027@angular/material/paginator\u0027;"},{"lineNumber":4,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSort } from \u0027@angular/material/sort\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../../core/models/github-user.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { EventWeek } from \u0027../event-week.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { GithubEventDataTable } from \u0027./GithubEventDataTable\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"export enum ACTION_BUTTONS {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  VIEW_IN_WEB,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  COLLAPSE"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  selector: \u0027app-event-tables\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./event-tables.component.html\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./event-tables.component.css\u0027],"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  animations: ["},{"lineNumber":21,"author":{"gitId":"-"},"content":"    trigger(\u0027detailExpand\u0027, ["},{"lineNumber":22,"author":{"gitId":"-"},"content":"      state(\u0027collapsed\u0027, style({ height: \u00270px\u0027, minHeight: \u00270\u0027 })),"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      state(\u0027expanded\u0027, style({ height: \u0027*\u0027 })),"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      transition(\u0027expanded \u003c\u003d\u003e collapsed\u0027, animate(\u0027225ms cubic-bezier(0.4, 0.0, 0.2, 1)\u0027))"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ])"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":27,"author":{"gitId":"-"},"content":"})"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Angular Table Expandable Rows"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * ref: https://material.angular.io/components/table/examples#table-expandable-rows"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"export class EventTablesComponent implements OnInit, AfterViewInit {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  @Input() columnsToDisplay: string[];"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  @Input() expandedColumnsToDisplay: string[];"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  @Input() actions: ACTION_BUTTONS[];"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  @Input() actor?: GithubUser \u003d undefined;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  @Input() filters?: any \u003d undefined;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  @ViewChild(MatSort, { static: true }) sort: MatSort;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  githubEvents: GithubEventDataTable;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  public readonly action_buttons \u003d ACTION_BUTTONS;"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  /** The expanded row */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  expandedElement: EventWeek | null;"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"  constructor(public githubEventService: GithubEventService, private logger: LoggingService) {}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":53,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.githubEvents \u003d new GithubEventDataTable(this.githubEventService, this.logger, this.sort, this.paginator, this.actor, this.filters);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      this.githubEvents.loadEvents();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  reload() {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    this.githubEvents.loadEvents();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":67,"author":{"gitId":"-"},"content":"   * Formats the title text to account for those that contain long words."},{"lineNumber":68,"author":{"gitId":"-"},"content":"   * @param title - Title of Event that is to be displayed in the Table Row."},{"lineNumber":69,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  fitTitleText(title: string): string {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Arbitrary Length of Characters beyond which an overflow occurs."},{"lineNumber":72,"author":{"gitId":"-"},"content":"    const MAX_WORD_LENGTH \u003d 43;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    const SPLITTER_TEXT \u003d \u0027 \u0027;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    const ELLIPSES \u003d \u0027...\u0027;"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    return title"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      .split(SPLITTER_TEXT)"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      .map((word) \u003d\u003e {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (word.length \u003e MAX_WORD_LENGTH) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"          return word.substring(0, MAX_WORD_LENGTH - 5).concat(ELLIPSES);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return word;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      .join(SPLITTER_TEXT);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  /** Not implemented yet. */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  viewEventInBrowser(id: number, event: Event) {"},{"lineNumber":89,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`EventTablesComponent: Opening Event ${id} on Github`);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    // window.open(\u0027https://github.com/\u0027, \u0027_blank\u0027);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  /** Show individual GithubEvents of EventWeek. */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  showExpandedDetails(element: EventWeek) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    if (element.events.length \u003e 0) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      this.expandedElement \u003d this.expandedElement \u003d\u003d\u003d element ? null : element;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  /** Returns color string of cell. Shade darkens with magnitude of number. */"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  colorCell(count: number) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    if (count \u003d\u003d\u003d 0) {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      return \u0027white\u0027;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    } else if (count \u003e 0 \u0026\u0026 count \u003c\u003d 5) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      return \u0027pale-green\u0027;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    } else if (count \u003e 6) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      return \u0027green\u0027;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":2,"Eclipse-Dominator":1,"-":105,"cheehongw":2}},{"path":"src/app/app.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../environments/environment\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./core/services/electron.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027./core/services/error-handling.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./core/services/logging.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  selector: \u0027app-root\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./app.component.html\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./app.component.css\u0027]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"})"},{"lineNumber":12,"author":{"gitId":"-"},"content":"export class AppComponent implements AfterViewInit {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  NOT_CONNECTED_ERROR: Error \u003d new Error(\u0027You are not connected to the internet.\u0027);"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"  constructor(public electronService: ElectronService, logger: LoggingService, public errorHandlingService: ErrorHandlingService) {"},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"    logger.info(\u0027AppComponent: AppConfig\u0027, AppConfig);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    if (electronService.isElectron()) {"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"      logger.info(\u0027AppComponent: Mode electron\u0027);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"      logger.info(\u0027AppComponent: Mode web\u0027);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  ngAfterViewInit() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    this.addListenerForHttpLinks();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    this.addListenerForNetworkOffline();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * This listener will prevent the default behaviour of electron to open http links on electron browser itself."},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * Will use the client\u0027s default OS browser to open the link."},{"lineNumber":33,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  addListenerForHttpLinks() {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    document.addEventListener("},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u0027click\u0027,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      (event) \u003d\u003e {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        const elem \u003d \u003cHTMLLinkElement\u003e(\u003cHTMLElement\u003eevent.target).closest(\u0027a[href^\u003d\"http\"]\u0027);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (elem) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          event.preventDefault();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          event.stopPropagation();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          this.electronService.openLink(elem.href);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      false"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   * This listener checks if WATcher has a connection to a network, and will show an error snackbar if it does not."},{"lineNumber":51,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  addListenerForNetworkOffline() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    window.addEventListener("},{"lineNumber":54,"author":{"gitId":"-"},"content":"      \u0027offline\u0027,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      (event) \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(this.NOT_CONNECTED_ERROR);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      false"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":58,"cheehongw":3}},{"path":"src/app/app.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientModule } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ErrorHandler, NgModule, NgZone } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { BrowserModule, Title } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { BrowserAnimationsModule } from \u0027@angular/platform-browser/animations\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Apollo, ApolloModule } from \u0027apollo-angular\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { HttpLink, HttpLinkModule } from \u0027apollo-angular-link-http\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { InMemoryCache, IntrospectionFragmentMatcher } from \u0027apollo-cache-inmemory\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ApolloLink } from \u0027apollo-link\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { setContext } from \u0027apollo-link-context\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { MarkdownModule, MarkedOptions } from \u0027ngx-markdown\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import \u0027reflect-metadata\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import graphqlTypes from \u0027../../graphql/graphql-types\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import \u0027../polyfills\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { ActivityDashboardModule } from \u0027./activity-dashboard/activity-dashboard.module\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { AppRoutingModule } from \u0027./app-routing.module\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { AppComponent } from \u0027./app.component\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { AuthModule } from \u0027./auth/auth.module\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { UserConfirmationComponent } from \u0027./core/guards/user-confirmation/user-confirmation.component\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027./core/services/auth.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./core/services/electron.service\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027./core/services/error-handling.service\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { AuthServiceFactory } from \u0027./core/services/factories/factory.auth.service\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { GithubServiceFactory } from \u0027./core/services/factories/factory.github.service\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { IssueServiceFactory } from \u0027./core/services/factories/factory.issue.service\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./core/services/github.service\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027./core/services/githubevent.service\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027./core/services/issue.service\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./core/services/logging.service\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027./core/services/phase.service\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { SessionFixConfirmationComponent } from \u0027./core/services/session-fix-confirmation/session-fix-confirmation.component\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./core/services/user.service\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { IssuesViewerModule } from \u0027./issues-viewer/issues-viewer.module\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import { LabelDefinitionPopupComponent } from \u0027./shared/label-definition-popup/label-definition-popup.component\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import { HeaderComponent } from \u0027./shared/layout\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import { markedOptionsFactory } from \u0027./shared/lib/marked\u0027;"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"import { RepoChangeFormComponent } from \u0027./shared/repo-change-form/repo-change-form.component\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027./shared/shared.module\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":41,"author":{"gitId":"Eclipse-Dominator"},"content":"  declarations: ["},{"lineNumber":42,"author":{"gitId":"Eclipse-Dominator"},"content":"    AppComponent,"},{"lineNumber":43,"author":{"gitId":"Eclipse-Dominator"},"content":"    HeaderComponent,"},{"lineNumber":44,"author":{"gitId":"Eclipse-Dominator"},"content":"    UserConfirmationComponent,"},{"lineNumber":45,"author":{"gitId":"Eclipse-Dominator"},"content":"    LabelDefinitionPopupComponent,"},{"lineNumber":46,"author":{"gitId":"Eclipse-Dominator"},"content":"    RepoChangeFormComponent,"},{"lineNumber":47,"author":{"gitId":"Eclipse-Dominator"},"content":"    SessionFixConfirmationComponent"},{"lineNumber":48,"author":{"gitId":"Eclipse-Dominator"},"content":"  ],"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":50,"author":{"gitId":"-"},"content":"    BrowserModule,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    BrowserAnimationsModule,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    AuthModule,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    IssuesViewerModule,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ActivityDashboardModule,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    SharedModule,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    HttpClientModule,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    MarkdownModule.forRoot({"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      markedOptions: {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        provide: MarkedOptions,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        useFactory: markedOptionsFactory"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }),"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    AppRoutingModule,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    ApolloModule,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    HttpLinkModule"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  providers: ["},{"lineNumber":68,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      provide: GithubService,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      useFactory: GithubServiceFactory,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      deps: [ErrorHandlingService, Apollo, ElectronService, LoggingService]"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      provide: AuthService,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      useFactory: AuthServiceFactory,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      deps: ["},{"lineNumber":77,"author":{"gitId":"-"},"content":"        ElectronService,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Router,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NgZone,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        GithubService,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserService,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        IssueService,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        PhaseService,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        GithubEventService,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Title,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        LoggingService"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      ]"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      provide: IssueService,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      useFactory: IssueServiceFactory,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      deps: [GithubService, UserService, PhaseService, ElectronService]"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      provide: ErrorHandler,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      useClass: ErrorHandlingService"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":99,"author":{"gitId":"Echomo-Xinyu"},"content":"  bootstrap: [AppComponent]"},{"lineNumber":100,"author":{"gitId":"-"},"content":"})"},{"lineNumber":101,"author":{"gitId":"-"},"content":"export class AppModule {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  constructor(private apollo: Apollo, private httpLink: HttpLink, private authService: AuthService, private logger: LoggingService) {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    const URI \u003d \u0027https://api.github.com/graphql\u0027;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    const log \u003d new ApolloLink((operation, forward) \u003d\u003e {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      operation.setContext({ start: performance.now() });"},{"lineNumber":106,"author":{"gitId":"cheehongw"},"content":"      this.logger.info(\u0027AppModule: GraphQL request\u0027, operation.getContext());"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      return forward(operation).map((result) \u003d\u003e {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        const time \u003d performance.now() - operation.getContext().start;"},{"lineNumber":109,"author":{"gitId":"cheehongw"},"content":"        this.logger.info(\u0027AppModule: GraphQL response\u0027, operation.getContext(), `in ${Math.round(time)}ms`);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        const repo \u003d operation.getContext().response.body.data.repository;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        const item \u003d Object.keys(repo)[0];"},{"lineNumber":112,"author":{"gitId":"cheehongw"},"content":"        this.logger.debug(\u0027AppModule: GraphQL response body\u0027, item, repo[item].edges.length, repo[item].edges);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return result;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    const basic \u003d setContext(() \u003d\u003e {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      return { headers: { Accept: \u0027charset\u003dutf-8\u0027 } };"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    const auth \u003d setContext(() \u003d\u003e {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      return { headers: { Authorization: `Token ${this.authService.accessToken.getValue()}` } };"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    const link \u003d ApolloLink.from([log, basic, auth, this.httpLink.create({ uri: URI })]);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    const fragmentMatcher \u003d new IntrospectionFragmentMatcher({"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      introspectionQueryResultData: graphqlTypes"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    const cache \u003d new InMemoryCache({ fragmentMatcher });"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    this.apollo.create({"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      link: link,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      cache: cache"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":8,"Echomo-Xinyu":1,"-":119,"cheehongw":4}},{"path":"src/app/auth/auth.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, NgZone, OnDestroy, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Observable, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { filter, flatMap, map } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../environments/environment\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../core/models/github-user.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ApplicationService } from \u0027../core/services/application.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AuthService, AuthState } from \u0027../core/services/auth.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../core/services/electron.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../core/services/error-handling.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../core/services/logging.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../core/services/phase.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../core/services/user.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"const APPLICATION_VERSION_OUTDATED_ERROR \u003d \u0027Please update to the latest version of WATcher.\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  selector: \u0027app-auth\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./auth.component.html\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./auth.component.css\u0027]"},{"lineNumber":21,"author":{"gitId":"-"},"content":"})"},{"lineNumber":22,"author":{"gitId":"-"},"content":"export class AuthComponent implements OnInit, OnDestroy {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  authState: AuthState;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  accessTokenSubscription: Subscription;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  authStateSubscription: Subscription;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  currentUserName: string;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  urlEncodedSessionName: string;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  urlEncodedRepo: string;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  sessionInformation: string;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public appService: ApplicationService,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public electronService: ElectronService,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private authService: AuthService,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private router: Router,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ngZone: NgZone,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private activatedRoute: ActivatedRoute,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private logger: LoggingService"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.electronService.registerIpcListener(\u0027github-oauth-reply\u0027, (event, { token, error, isWindowClosed }) \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      this.ngZone.run(() \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (error) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          if (!isWindowClosed) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            this.errorHandlingService.handleError(error);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          this.goToSessionSelect();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          return;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.authService.storeOAuthAccessToken(token);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    this.logger.startSession();"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    const oauthCode \u003d this.activatedRoute.snapshot.queryParamMap.get(\u0027code\u0027);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    const state \u003d this.activatedRoute.snapshot.queryParamMap.get(\u0027state\u0027);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    if (this.authService.isAuthenticated()) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      this.router.navigate([this.phaseService.currentPhase]);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.initAccessTokenSubscription();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    this.initAuthStateSubscription();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.createProfileFromUrlQueryParams();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    this.getRepoFromUrlQueryParams();"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    if (oauthCode) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      // runs upon receiving oauthCode from the redirect"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      this.authService.changeAuthState(AuthState.AwaitingAuthentication);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      // this.restoreOrgDetailsFromLocalStorage();"},{"lineNumber":75,"author":{"gitId":"cheehongw"},"content":"      this.logger.info(\u0027AuthComponent: Obtained authorisation code from Github\u0027);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      this.fetchAccessToken(oauthCode, state);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * Will fetch the access token from GitHub."},{"lineNumber":82,"author":{"gitId":"-"},"content":"   * @param oauthCode - The authorisation code obtained from GitHub."},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * @param state - The state returned from GitHub."},{"lineNumber":84,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  fetchAccessToken(oauthCode: string, state: string) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    if (!this.authService.isReturnedStateSame(state)) {"},{"lineNumber":87,"author":{"gitId":"cheehongw"},"content":"      this.logger.info(`AuthComponent: Received incorrect state ${state}, continue waiting for correct state`);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`AuthComponent: Retrieving access token from Github`);"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    const accessTokenUrl \u003d `${AppConfig.accessTokenUrl}/${oauthCode}/client_id/${AppConfig.clientId}`;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    fetch(accessTokenUrl)"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      .then((res) \u003d\u003e res.json())"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      .then((data) \u003d\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (data.error) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          throw new Error(data.error);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.authService.storeOAuthAccessToken(data.token);"},{"lineNumber":101,"author":{"gitId":"cheehongw"},"content":"        this.logger.info(`AuthComponent: Sucessfully obtained access token`);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      .catch((err) \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"cheehongw"},"content":"        this.logger.info(`AuthComponent: Error in data fetched from access token URL: ${err}`);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(err);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  ngOnDestroy() {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    this.electronService.removeIpcListeners(\u0027github-oauth-reply\u0027);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    if (this.authStateSubscription) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      this.authStateSubscription.unsubscribe();"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    if (this.accessTokenSubscription) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      this.accessTokenSubscription.unsubscribe();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Checks whether the current version of WATcher is outdated."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  checkAppIsOutdated(): Observable\u003cany\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    return this.appService.isApplicationOutdated().pipe("},{"lineNumber":125,"author":{"gitId":"-"},"content":"      map((isOutdated: boolean) \u003d\u003e {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (isOutdated) {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"          throw new Error(APPLICATION_VERSION_OUTDATED_ERROR);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"  updateSession(sessionEvent: string) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    this.sessionInformation \u003d sessionEvent;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"  goToSessionSelect() {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"  isUserNotAuthenticated(): boolean {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.NotAuthenticated;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"  isUserAuthenticating(): boolean {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.AwaitingAuthentication;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"  isAwaitingOAuthUserConfirm(): boolean {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    return this.authState \u003d\u003d\u003d AuthState.ConfirmOAuthUser;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"  get currentSessionOrg(): string {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    if (!this.sessionInformation) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      // Retrieve org details of session information from local storage"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      return window.localStorage.getItem(\u0027org\u0027);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    return this.getOrgDetails(this.sessionInformation);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":162,"author":{"gitId":"-"},"content":"   * Extracts the Organization Details from the input sessionInformation."},{"lineNumber":163,"author":{"gitId":"-"},"content":"   * @param sessionInformation - string in the format of \u0027orgName/dataRepo\u0027"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  private getOrgDetails(sessionInformation: string) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    return sessionInformation.split(\u0027/\u0027)[0];"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"  private initAuthStateSubscription() {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    this.authStateSubscription \u003d this.authService.currentAuthState.subscribe((state) \u003d\u003e {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      this.ngZone.run(() \u003d\u003e {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        this.authState \u003d state;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"  private initAccessTokenSubscription() {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    this.accessTokenSubscription \u003d this.authService.accessToken"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":180,"author":{"gitId":"-"},"content":"        filter((token: string) \u003d\u003e !!token),"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        flatMap(() \u003d\u003e this.userService.getAuthenticatedUser())"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      .subscribe((user: GithubUser) \u003d\u003e {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        this.ngZone.run(() \u003d\u003e {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"          this.currentUserName \u003d user.login;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"          this.authService.changeAuthState(AuthState.ConfirmOAuthUser);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"  private createProfileFromUrlQueryParams() {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    const urlParams \u003d this.activatedRoute.snapshot.queryParamMap;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    if (urlParams.has(\u0027session\u0027)) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      this.urlEncodedSessionName \u003d urlParams.get(\u0027session\u0027);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"  private getRepoFromUrlQueryParams() {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    const urlParams \u003d this.activatedRoute.snapshot.queryParamMap;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    if (urlParams.has(\u0027repo\u0027)) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      this.urlEncodedRepo \u003d urlParams.get(\u0027repo\u0027);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":199,"cheehongw":5}},{"path":"src/app/auth/auth.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared/shared.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AuthRoutingModule } from \u0027./auth-routing.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AuthComponent } from \u0027./auth.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ConfirmLoginComponent } from \u0027./confirm-login/confirm-login.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { JsonParseErrorDialogComponent } from \u0027./profiles/json-parse-error-dialog/json-parse-error-dialog.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ProfilesComponent } from \u0027./profiles/profiles.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { SessionSelectionComponent } from \u0027./session-selection/session-selection.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  imports: [AuthRoutingModule, SharedModule, CommonModule],"},{"lineNumber":13,"author":{"gitId":"Echomo-Xinyu"},"content":"  declarations: [AuthComponent, ProfilesComponent, JsonParseErrorDialogComponent, ConfirmLoginComponent, SessionSelectionComponent]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class AuthModule {}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":14}},{"path":"src/app/auth/confirm-login/confirm-login.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { mergeMap } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../core/models/phase.model\u0027;"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { Repo } from \u0027../../core/models/repo.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { AuthService, AuthState } from \u0027../../core/services/auth.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../../core/services/electron.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { GithubService } from \u0027../../core/services/github.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../core/services/phase.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  selector: \u0027app-auth-confirm-login\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./confirm-login.component.html\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./confirm-login.component.css\u0027]"},{"lineNumber":20,"author":{"gitId":"-"},"content":"})"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class ConfirmLoginComponent implements OnInit {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  @Input() username: string;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  @Input() currentSessionOrg: string;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public electronService: ElectronService,"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public authService: AuthService,"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public phaseService: PhaseService,"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public userService: UserService,"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public errorHandlingService: ErrorHandlingService,"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public githubEventService: GithubEventService,"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public logger: LoggingService,"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public router: Router,"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public githubService: GithubService"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  ngOnInit() {}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  onGithubWebsiteClicked() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    window.open(\u0027https://github.com/\u0027, \u0027_blank\u0027);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    window.location.reload();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  logIntoAnotherAccount() {"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(\u0027ConfirmLoginComponent: Logging into another account\u0027);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    this.electronService.clearCookies();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    this.authService.startOAuthProcess();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   * Handles the clean up required after authentication and setting up of user data is completed."},{"lineNumber":52,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  handleAuthSuccess() {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    this.authService.setTitleWithPhaseDetail();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    this.router.navigateByUrl(Phase.issuesViewer);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    this.authService.changeAuthState(AuthState.Authenticated);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * Will complete the process of logging in the given user."},{"lineNumber":61,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  completeLoginProcess(): void {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    this.authService.changeAuthState(AuthState.AwaitingAuthentication);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    this.phaseService.initializeCurrentRepository();"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    this.logger.info(`ConfirmLoginComponent: Current repo is ${this.phaseService.currentRepo}`);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    this.userService"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      .createUserModel(this.username)"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      .pipe("},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        mergeMap(() \u003d\u003e {"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"          const currentRepo \u003d this.phaseService.currentRepo;"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"          if (Repo.isInvalidRepoName(currentRepo)) {"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return of(false);"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"          }"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"          return this.githubService.isRepositoryPresent(currentRepo.owner, currentRepo.name);"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }),"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        mergeMap((isValidRepository) \u003d\u003e {"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"          if (!isValidRepository) {"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new Observable();"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"          }"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"          return this.githubEventService.setLatestChangeEvent();"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        })"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      )"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      .subscribe("},{"lineNumber":84,"author":{"gitId":"-"},"content":"        () \u003d\u003e {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          this.handleAuthSuccess();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        (error) \u003d\u003e {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":90,"author":{"gitId":"cheehongw"},"content":"          this.logger.info(`ConfirmLoginComponent: Completion of login process failed with an error: ${error}`);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    this.handleAuthSuccess();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vigneshsankariyer1234567890":28,"-":65,"cheehongw":2}},{"path":"src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatDialogRef } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ProfilesComponent } from \u0027../profiles.component\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * This Component is responsible for informing the user if there"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * are errors in the profiles.json file that is available to the app."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  selector: \u0027app-json-parse-error-dialog\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./json-parse-error-dialog.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./json-parse-error-dialog.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class JsonParseErrorDialogComponent implements OnInit {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  constructor(public dialogRef: MatDialogRef\u003cProfilesComponent\u003e) {}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  ngOnInit() {}"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   * Closes the Dialog"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  onClick(): void {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    this.dialogRef.close();"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":25}},{"path":"src/app/auth/profiles/profiles.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { animate, state, style, transition, trigger } from \u0027@angular/animations\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatDialog } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { isValidProfile, Profile } from \u0027../../core/models/profile.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { MALFORMED_PROFILES_ERROR, ProfileService } from \u0027../../core/services/profile.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { JsonParseErrorDialogComponent } from \u0027./json-parse-error-dialog/json-parse-error-dialog.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  selector: \u0027app-profiles\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./profiles.component.html\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./profiles.component.css\u0027],"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  animations: ["},{"lineNumber":14,"author":{"gitId":"-"},"content":"    // animation triggers go here"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    trigger(\u0027triggerFileInput\u0027, ["},{"lineNumber":16,"author":{"gitId":"-"},"content":"      state(\u0027normal\u0027, style({})),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      state("},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u0027pressed\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        style({"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          color: \u0027orange\u0027"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      ),"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      transition(\u0027normal \u003d\u003e pressed\u0027, [animate(\u00270.25s ease\u0027)]),"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      transition(\u0027pressed \u003d\u003e normal\u0027, [animate(\u00270.25s ease\u0027)])"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ])"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":27,"author":{"gitId":"-"},"content":"})"},{"lineNumber":28,"author":{"gitId":"-"},"content":"export class ProfilesComponent implements OnInit {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  private readonly ANIMATION_DURATION: number \u003d 250;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  profiles: Profile[] \u003d []; // List of profiles taken from profiles.json"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  blankProfile: Profile \u003d { profileName: \u0027\u0027, repoName: \u0027\u0027 }; // A blank profile to reset values"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  animationActivated \u003d false; // Assists color change animations."},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  selectedProfile: Profile \u003d this.blankProfile;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  @Input() urlEncodedSessionName: string;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  @Output() selectedProfileEmitter: EventEmitter\u003cProfile\u003e \u003d new EventEmitter\u003cProfile\u003e();"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  profilesData \u003d {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    isDirectoryMessageVisible: false,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    fileName: null,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    fileDirectory: null"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  constructor(public errorDialog: MatDialog, public profileService: ProfileService, public errorHandlingService: ErrorHandlingService) {}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    this.initProfiles();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * Activates the button selection animation and opens the file selector."},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * @param fileInput - OS default file selector."},{"lineNumber":54,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  fileSelectorInitiation(fileInput: HTMLInputElement): void {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    this.animationActivated \u003d true;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      this.animationActivated \u003d false;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      fileInput.click();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }, this.ANIMATION_DURATION);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   * Reads the user selected file"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  fileSelected(event: Event): void {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    const target \u003d event.target as HTMLInputElement;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const file \u003d target.files[0];"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    const reader \u003d new FileReader();"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    reader.onload \u003d () \u003d\u003e {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      if (!(reader.result instanceof ArrayBuffer)) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          const { profiles } \u003d JSON.parse(reader.result);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          this.profileService.validateProfiles(profiles);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"          this.profiles \u003d profiles.concat(this.profiles).filter((p) \u003d\u003e !!p);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"          target.value \u003d \u0027\u0027;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (e) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          this.openErrorDialog();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    reader.readAsText(file);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   * Processes available Profiles information from the external repository."},{"lineNumber":88,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  initProfiles(): void {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    this.profileService"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      .fetchExternalProfiles()"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      .then((externalProfiles) \u003d\u003e {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.profiles \u003d this.profiles.concat(externalProfiles).filter((p) \u003d\u003e !!p);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      .then(() \u003d\u003e this.setUrlEncodedProfile(this.profiles))"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      .catch((e) \u003d\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (e \u003d\u003d\u003d MALFORMED_PROFILES_ERROR) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          this.openErrorDialog();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(e);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   * Makes Error dialog visible to the user."},{"lineNumber":107,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  openErrorDialog(): void {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    this.errorDialog.open(JsonParseErrorDialogComponent);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   * Sends the selected profile information to listening component."},{"lineNumber":114,"author":{"gitId":"-"},"content":"   * @param profile - Profile selected by user."},{"lineNumber":115,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  selectProfile(profile: Profile): void {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    if (profile \u003d\u003d\u003d this.blankProfile || isValidProfile(profile)) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      this.selectedProfileEmitter.emit(profile);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      this.openErrorDialog();"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  setUrlEncodedProfile(validProfiles: Profile[]) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    if (!this.urlEncodedSessionName) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    const profile \u003d validProfiles.find((profile) \u003d\u003e profile.profileName \u003d\u003d\u003d this.urlEncodedSessionName);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    if (profile) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      this.selectedProfile.profileName \u003d this.urlEncodedSessionName;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      this.selectProfile(profile);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      this.errorHandlingService.handleError(new Error(\u0027Invalid URL provided session\u0027));"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":135}},{"path":"src/app/auth/session-selection/session-selection.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FormBuilder, FormGroup, Validators } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Profile } from \u0027../../core/models/profile.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { AuthService, AuthState } from \u0027../../core/services/auth.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  selector: \u0027app-session-selection\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-selection.component.html\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-selection.component.css\u0027, \u0027../auth.component.css\u0027]"},{"lineNumber":12,"author":{"gitId":"-"},"content":"})"},{"lineNumber":13,"author":{"gitId":"-"},"content":"export class SessionSelectionComponent implements OnInit {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  // isSettingUpSession is used to indicate whether WATcher is in the midst of setting up the session."},{"lineNumber":15,"author":{"gitId":"-"},"content":"  isSettingUpSession: boolean;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  profileForm: FormGroup;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  repoForm: FormGroup;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  @Input() urlEncodedSessionName: string;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  @Input() urlEncodedRepo: string;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  @Output() sessionEmitter: EventEmitter\u003cstring\u003e \u003d new EventEmitter\u003cstring\u003e();"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private formBuilder: FormBuilder,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private logger: LoggingService,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private authService: AuthService,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    this.isSettingUpSession \u003d false;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.initProfileForm();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    this.initRepoForm();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    this.autofillRepo();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * Fills the login form with data from the given Profile."},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * @param profile - Profile selected by the user."},{"lineNumber":41,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  onProfileSelect(profile: Profile): void {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.profileForm.get(\u0027session\u0027).setValue(profile.repoName);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.sessionEmitter.emit(profile.repoName);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  setupSession() {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    if (this.repoForm.invalid) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    this.isSettingUpSession \u003d true;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    const repoInformation: string \u003d this.repoForm.get(\u0027repo\u0027).value;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    const repoOrg: string \u003d this.getOrgDetails(repoInformation);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    const repoName: string \u003d this.getDataRepoDetails(repoInformation);"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Persist repo information in local browser storage"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * To retrieve after authentication redirects back to WATcher"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Since localStorage::setItem with an undefined value can result in"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * the subsequent value being stored as a string being \u0027undefined\u0027, check"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * if undefined before storing it. Let\u0027s reset the items before setting them."},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    window.localStorage.removeItem(\u0027org\u0027);"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    window.localStorage.removeItem(\u0027dataRepo\u0027);"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    if (repoOrg \u0026\u0026 repoName) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      window.localStorage.setItem(\u0027org\u0027, repoOrg);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      window.localStorage.setItem(\u0027dataRepo\u0027, repoName);"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`SessionSelectionComponent: Selected Repository: ${repoInformation}`);"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    try {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      this.authService.startOAuthProcess();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    } catch (error) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      this.errorHandlingService.handleError(error);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      this.authService.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      this.isSettingUpSession \u003d false;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":85,"author":{"gitId":"-"},"content":"   * Extracts the Organization Details from the input sessionInformation."},{"lineNumber":86,"author":{"gitId":"-"},"content":"   * @param sessionInformation - string in the format of \u0027orgName/dataRepo\u0027"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  private getOrgDetails(sessionInformation: string) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    return sessionInformation.split(\u0027/\u0027)[0];"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":93,"author":{"gitId":"-"},"content":"   * Extracts the Data Repository Details from the input sessionInformation."},{"lineNumber":94,"author":{"gitId":"-"},"content":"   * @param sessionInformation - string in the format of \u0027orgName/dataRepo\u0027"},{"lineNumber":95,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  private getDataRepoDetails(sessionInformation: string) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    return sessionInformation.split(\u0027/\u0027)[1];"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  private initProfileForm() {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    this.profileForm \u003d this.formBuilder.group({"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      session: [\u0027\u0027, Validators.required]"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  private initRepoForm() {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    this.repoForm \u003d this.formBuilder.group({"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      repo: [\u0027\u0027, Validators.required]"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  private autofillRepo() {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    this.repoForm.get(\u0027repo\u0027).setValue(this.urlEncodedRepo);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vigneshsankariyer1234567890":9,"-":105,"cheehongw":1}},{"path":"src/app/core/guards/user-confirmation/user-confirmation.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatDialogRef, MAT_DIALOG_DATA } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CanDeactivateIssueGuard } from \u0027../can-deactivate-issue-guard.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The UserConfirmationComponent is responsible for rendering the UserDialog"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * to verify if certain changes made to relevant inputs are to be discarded."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  selector: \u0027app-user-confirmation\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./user-confirmation.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./user-confirmation.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class UserConfirmationComponent implements OnInit {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  // Injection of a reference to Dialog from the Service that it is to be"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  // displayed in."},{"lineNumber":18,"author":{"gitId":"-"},"content":"  constructor(public dialogRef: MatDialogRef\u003cCanDeactivateIssueGuard\u003e, @Inject(MAT_DIALOG_DATA) public data) {}"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  ngOnInit() {}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   * Closes the dialog."},{"lineNumber":24,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  onNoClick(): void {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    this.dialogRef.close(false);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":27}},{"path":"src/app/core/models/issue.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import * as moment from \u0027moment\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027./comment.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027./github/github-comment.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027./github/github-issue.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027./github/github-label.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { HiddenData } from \u0027./hidden-data.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssueDispute } from \u0027./issue-dispute.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { Milestone } from \u0027./milestone.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { Team } from \u0027./team.model\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { TeamAcceptedTemplate } from \u0027./templates/team-accepted-template.model\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { TeamResponseTemplate } from \u0027./templates/team-response-template.model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { TesterResponseTemplate } from \u0027./templates/tester-response-template.model\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { TutorModerationIssueTemplate } from \u0027./templates/tutor-moderation-issue-template.model\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { TutorModerationTodoTemplate } from \u0027./templates/tutor-moderation-todo-template.model\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { TesterResponse } from \u0027./tester-response.model\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"export class Issue {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  /** Basic Fields */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  readonly globalId: string;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  readonly id: number;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  readonly created_at: string;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  readonly githubIssue: GithubIssue;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  githubComments: GithubComment[];"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  title: string;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  description: string;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  hiddenDataInDescription: HiddenData;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  updated_at: string;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  closed_at: string;"},{"lineNumber":30,"author":{"gitId":"Echomo-Xinyu"},"content":"  milestone: Milestone;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  state: string;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  issueOrPr: string;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  author: string;"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  /** Fields derived from Labels */"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  severity: string;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  type: string;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  responseTag?: string;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  duplicated?: boolean;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  status?: string;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  pending?: string;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  unsure?: boolean;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  teamAssigned?: Team;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  /** Depending on the phase, assignees attribute can be derived from Github\u0027s assignee feature OR from the Github\u0027s issue description */"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  assignees?: string[];"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  labels?: string[];"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  githubLabels?: GithubLabel[];"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  /** Fields derived from parsing of Github\u0027s issue description */"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  duplicateOf?: number;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  teamResponse?: string;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  testerResponses?: TesterResponse[];"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  testerDisagree?: boolean; // whether tester agrees or disagree to teams reponse"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  issueComment?: IssueComment; // Issue comment is used for Tutor Response and Tester Response"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  issueDisputes?: IssueDispute[];"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  teamChosenSeverity?: string;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  teamChosenType?: string;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  teamAccepted?: boolean;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  /** Fields for error messages during parsing of Github\u0027s issue description */"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  teamResponseError: boolean;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  testerResponseError: boolean;"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   * Formats the text to create space at the end of the user input to prevent any issues with"},{"lineNumber":67,"author":{"gitId":"-"},"content":"   * the markdown interpretation."},{"lineNumber":68,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":69,"author":{"gitId":"-"},"content":"   * Brought over from comment-editor.component.ts"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  static formatText(text: string): string {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    if (text \u003d\u003d\u003d null) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      return null;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    if (text \u003d\u003d\u003d undefined) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      return undefined;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    const newLinesRegex \u003d /[\\n\\r]/gi;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    const textSplitArray \u003d text.split(newLinesRegex);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    if (textSplitArray.filter((split) \u003d\u003e split.trim() !\u003d\u003d \u0027\u0027).length \u003e 0) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      return `${text}\\n\\n`;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      return text;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"   * Processes and cleans a raw issue description obtained from user input."},{"lineNumber":91,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  static updateDescription(description: string): string {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    const defaultString \u003d \u0027No details provided by bug reporter.\u0027;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    return Issue.orDefaultString(Issue.formatText(description), defaultString);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * Processes and cleans a raw team response obtained from user input."},{"lineNumber":99,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  static updateTeamResponse(teamResponse: string): string {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    const defaultString \u003d \u0027No details provided by team.\u0027;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    return Issue.orDefaultString(Issue.formatText(teamResponse), defaultString);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   * Given two strings, returns the first if it is not an empty string or a false value such as null/undefined."},{"lineNumber":107,"author":{"gitId":"-"},"content":"   * Returns the second string if the first is an empty string."},{"lineNumber":108,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  private static orDefaultString(stringA: string, def: string): string {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    if (!stringA) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      return def;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    return stringA.length !\u003d\u003d 0 ? stringA : def;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"  protected constructor(githubIssue: GithubIssue) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /** Basic Fields */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    this.globalId \u003d githubIssue.id;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    this.id \u003d +githubIssue.number;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    this.created_at \u003d moment(githubIssue.created_at).format(\u0027lll\u0027);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    this.updated_at \u003d moment(githubIssue.updated_at).format(\u0027lll\u0027);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    this.closed_at \u003d moment(githubIssue.closed_at).format(\u0027lll\u0027);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    this.title \u003d githubIssue.title;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    this.hiddenDataInDescription \u003d new HiddenData(githubIssue.body);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    this.description \u003d Issue.updateDescription(this.hiddenDataInDescription.originalStringWithoutHiddenData);"},{"lineNumber":126,"author":{"gitId":"Echomo-Xinyu"},"content":"    // githubIssue without milestone will be set to default milestone"},{"lineNumber":127,"author":{"gitId":"Echomo-Xinyu"},"content":"    this.milestone \u003d githubIssue.milestone ? new Milestone(githubIssue.milestone) : Milestone.DefaultMilestone;"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    this.state \u003d githubIssue.state;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    this.issueOrPr \u003d githubIssue.issueOrPr;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    this.author \u003d githubIssue.user.login;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    // this.githubIssue \u003d githubIssue;"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"    this.assignees \u003d githubIssue.assignees.map((assignee) \u003d\u003e assignee.login);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    this.githubLabels \u003d githubIssue.labels;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    this.labels \u003d githubIssue.labels.map((label) \u003d\u003e label.name);"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /** Fields derived from Labels */"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    this.severity \u003d githubIssue.findLabel(GithubLabel.LABELS.severity);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    this.type \u003d githubIssue.findLabel(GithubLabel.LABELS.type);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    this.responseTag \u003d githubIssue.findLabel(GithubLabel.LABELS.response);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    this.duplicated \u003d !!githubIssue.findLabel(GithubLabel.LABELS.duplicated, false);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    this.status \u003d githubIssue.findLabel(GithubLabel.LABELS.status);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    this.pending \u003d githubIssue.findLabel(GithubLabel.LABELS.pending);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"  public static createPhaseBugReportingIssue(githubIssue: GithubIssue): Issue {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    return new Issue(githubIssue);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"  public static createPhaseTeamResponseIssue(githubIssue: GithubIssue, teamData: Team): Issue {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    const issue \u003d new Issue(githubIssue);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    const template \u003d new TeamResponseTemplate(githubIssue.comments);"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    issue.githubComments \u003d githubIssue.comments;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    issue.teamAssigned \u003d teamData;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    issue.assignees \u003d githubIssue.assignees.map((assignee) \u003d\u003e assignee.login);"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"    issue.teamResponseError \u003d template.parseFailure;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    issue.issueComment \u003d template.comment;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    issue.teamResponse \u003d template.teamResponse \u0026\u0026 Issue.updateTeamResponse(template.teamResponse.content);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    issue.duplicateOf \u003d template.duplicateOf \u0026\u0026 template.duplicateOf.issueNumber;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    issue.duplicated \u003d issue.duplicateOf !\u003d\u003d undefined \u0026\u0026 issue.duplicateOf !\u003d\u003d null;"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    return issue;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"  public static createPhaseTesterResponseIssue(githubIssue: GithubIssue): Issue {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    const issue \u003d new Issue(githubIssue);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    const testerResponseTemplate \u003d new TesterResponseTemplate(githubIssue.comments);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    const teamAcceptedTemplate \u003d new TeamAcceptedTemplate(githubIssue.comments);"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"    issue.githubComments \u003d githubIssue.comments;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    issue.testerResponseError \u003d testerResponseTemplate.parseFailure \u0026\u0026 teamAcceptedTemplate.parseFailure;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    issue.teamAccepted \u003d teamAcceptedTemplate.teamAccepted;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    issue.issueComment \u003d testerResponseTemplate.comment;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    issue.teamResponse \u003d testerResponseTemplate.teamResponse \u0026\u0026 Issue.updateTeamResponse(testerResponseTemplate.teamResponse.content);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    issue.testerResponses \u003d testerResponseTemplate.testerResponse \u0026\u0026 testerResponseTemplate.testerResponse.testerResponses;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    issue.testerDisagree \u003d testerResponseTemplate.testerDisagree;"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    issue.teamChosenSeverity \u003d testerResponseTemplate.teamChosenSeverity || null;"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    issue.teamChosenType \u003d testerResponseTemplate.teamChosenType || null;"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"    return issue;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"  public static createPhaseModerationIssue(githubIssue: GithubIssue, teamData: Team): Issue {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    const issue \u003d new Issue(githubIssue);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    const issueTemplate \u003d new TutorModerationIssueTemplate(githubIssue);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    const todoTemplate \u003d new TutorModerationTodoTemplate(githubIssue.comments);"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    issue.githubComments \u003d githubIssue.comments;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    issue.teamAssigned \u003d teamData;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    issue.description \u003d issueTemplate.description.content;"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    issue.teamResponse \u003d issueTemplate.teamResponse \u0026\u0026 Issue.updateTeamResponse(issueTemplate.teamResponse.content);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    issue.issueDisputes \u003d issueTemplate.dispute.disputes;"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"    if (todoTemplate.moderation \u0026\u0026 todoTemplate.comment) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      issue.issueDisputes \u003d todoTemplate.moderation.disputesToResolve.map((dispute, i) \u003d\u003e {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        dispute.description \u003d issueTemplate.dispute.disputes[i].description;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return dispute;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      issue.issueComment \u003d todoTemplate.comment;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    return issue;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":208,"author":{"gitId":"-"},"content":"   * Creates a new copy of an exact same issue."},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * This would come useful in the event when you want to update the issue but not the actual"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * state of the application."},{"lineNumber":211,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  clone(phase: Phase): Issue {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    switch (phase) {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      case Phase.issuesViewer:"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        return Issue.createPhaseBugReportingIssue(this.githubIssue);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return Issue.createPhaseBugReportingIssue(this.githubIssue);"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":222,"author":{"gitId":"-"},"content":"   * Depending on the phase of the peer testing, each phase will have a response associated to them."},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * This function will allow the current instance of issue to retain the state of response of the given `issue`."},{"lineNumber":224,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":225,"author":{"gitId":"-"},"content":"   * @param phase - The phase in which you want to retain your responses."},{"lineNumber":226,"author":{"gitId":"-"},"content":"   * @param issue - The issue which you want your current instance to retain from."},{"lineNumber":227,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  retainResponses(phase: Phase, issue: Issue) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    this.issueComment \u003d issue.issueComment;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    this.githubComments \u003d issue.githubComments;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    switch (phase) {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      case Phase.issuesViewer:"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        this.description \u003d issue.description;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":241,"author":{"gitId":"-"},"content":"   * Updates the tester\u0027s responses and team response based on the given githubComment."},{"lineNumber":242,"author":{"gitId":"-"},"content":"   * @param githubComment - A version of githubComment to update the issue with."},{"lineNumber":243,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  updateTesterResponse(githubComment: GithubComment): void {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    const template \u003d new TesterResponseTemplate([githubComment]);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    this.issueComment \u003d template.comment;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    this.teamResponse \u003d template.teamResponse \u0026\u0026 template.teamResponse.content;"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    this.testerResponses \u003d template.testerResponse \u0026\u0026 template.testerResponse.testerResponses;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   * Updates the tutor\u0027s resolution of the disputes with a new version of githubComment."},{"lineNumber":253,"author":{"gitId":"-"},"content":"   * @param githubComment - A version of githubComment to update the dispute with."},{"lineNumber":254,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  updateDispute(githubComment: GithubComment): void {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    const todoTemplate \u003d new TutorModerationTodoTemplate([githubComment]);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    this.issueComment \u003d todoTemplate.comment;"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    this.issueDisputes \u003d todoTemplate.moderation.disputesToResolve.map((dispute, i) \u003d\u003e {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      dispute.description \u003d this.issueDisputes[i].description;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"      return dispute;"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"  createGithubIssueDescription(): string {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    return `${this.description}\\n${this.hiddenDataInDescription.toString()}`;"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"  // Template url: https://github.com/CATcher-org/templates#dev-response-phase"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  createGithubTeamResponse(): string {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    return ("},{"lineNumber":271,"author":{"gitId":"-"},"content":"      `# Team\\\u0027s Response\\n${this.teamResponse}\\n` +"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      `## Duplicate status (if any):\\n${this.duplicateOf ? `Duplicate of #${this.duplicateOf}` : `--`}`"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"  // Template url: https://github.com/CATcher-org/templates#tutor-moderation"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  createGithubTutorResponse(): string {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    let tutorResponseString \u003d \u0027# Tutor Moderation\\n\\n\u0027;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    for (const issueDispute of this.issueDisputes) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      tutorResponseString +\u003d issueDispute.toTutorResponseString();"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    return tutorResponseString;"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"  // Template url: https://github.com/CATcher-org/templates#teams-response-1"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  createGithubTesterResponse(): string {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    return ("},{"lineNumber":288,"author":{"gitId":"-"},"content":"      `# Team\\\u0027s Response\\n${this.teamResponse}\\n` +"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      `# Items for the Tester to Verify\\n${this.getTesterResponsesString(this.testerResponses)}`"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":294,"author":{"gitId":"-"},"content":"   * Gets the number of unresolved disputes in an Issue."},{"lineNumber":295,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  numOfUnresolvedDisputes(): number {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    if (!this.issueDisputes) {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      return 0;"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"    return this.issueDisputes.reduce((prev, current) \u003d\u003e prev + Number(!current.isDone()), 0);"},{"lineNumber":302,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"  private getTesterResponsesString(testerResponses: TesterResponse[]): string {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    let testerResponsesString \u003d \u0027\u0027;"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    for (const testerResponse of testerResponses) {"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      testerResponsesString +\u003d testerResponse.toString();"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    return testerResponsesString;"},{"lineNumber":310,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"export interface Issues {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"  [id: number]: Issue;"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"export const SEVERITY_ORDER \u003d { \u0027-\u0027: 0, VeryLow: 1, Low: 2, Medium: 3, High: 4 };"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"export const ISSUE_TYPE_ORDER \u003d { \u0027-\u0027: 0, DocumentationBug: 1, FeatureFlaw: 2, FunctionalityBug: 3 };"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"export enum STATUS {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"  Incomplete \u003d \u0027Incomplete\u0027,"},{"lineNumber":323,"author":{"gitId":"-"},"content":"  Done \u003d \u0027Done\u0027"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"export const IssuesFilter \u003d {"},{"lineNumber":327,"author":{"gitId":"-"},"content":"  issuesViewer: {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    Student: \u0027NO_FILTER\u0027,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    Tutor: \u0027NO_FILTER\u0027,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    Admin: \u0027NO_FILTER\u0027"},{"lineNumber":331,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":332,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"Echomo-Xinyu":3,"-":329}},{"path":"src/app/core/models/milestone.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Represents a milestone and its attributes fetched from Github."},{"lineNumber":3,"author":{"gitId":"-"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":"export class Milestone {"},{"lineNumber":5,"author":{"gitId":"Echomo-Xinyu"},"content":"  static DefaultMilestone: Milestone \u003d new Milestone({ number: \u0027untracked\u0027, title: \u0027Without a milestone\u0027, state: null });"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  readonly number: string; // equivalent to the id of an issue e.g. milestone #1"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  title: string;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  state: string;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  constructor(milestone: { number: string; title: string; state: string }) {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    this.number \u003d milestone.number;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    this.title \u003d milestone.title;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    this.state \u003d milestone.state;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  public equals(milestone: Milestone) {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    return this.number \u003d\u003d\u003d milestone.number;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":18}},{"path":"src/app/core/models/repo.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Represents a repository."},{"lineNumber":3,"author":{"gitId":"-"},"content":" * Repository url is owner/name."},{"lineNumber":4,"author":{"gitId":"-"},"content":" */"},{"lineNumber":5,"author":{"gitId":"-"},"content":"export class Repo {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  owner: string;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  name: string;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"  /** Creates a new Repo from owner and name strings. */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  constructor(owner: string, name: string) {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    this.owner \u003d owner;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    this.name \u003d name;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"  /** Creates a new Repo from one repository url. */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  public static of(repoUrl: string) {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    const repoUrlSplit \u003d repoUrl.split(\u0027/\u0027);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    if (repoUrlSplit.length !\u003d\u003d 2) {"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      throw new Error(\u0027Invalid repository name. Please provide repository name in the format Org/Repository Name.\u0027);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    return new Repo(repoUrlSplit[0], repoUrlSplit[1]);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  public static ofEmptyRepo() {"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    return EMPTY_REPO;"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  }"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  public static isInvalidRepoName(repo: unknown) {"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    if (repo instanceof Repo) {"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      const otherRepo \u003d repo as Repo;"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      return otherRepo.equals(EMPTY_REPO);"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    return false;"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  /** String representation of a Repo. */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  public toString(): string {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    return this.owner + \u0027/\u0027 + this.name;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  public equals(otherRepo: unknown): boolean {"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    if (otherRepo instanceof Repo) {"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      return otherRepo.name \u003d\u003d\u003d this.name \u0026\u0026 otherRepo.owner \u003d\u003d\u003d this.owner;"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    return false;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"const EMPTY_REPO \u003d new Repo(\u0027\u0027, \u0027\u0027);"}],"authorContributionMap":{"vigneshsankariyer1234567890":23,"-":28}},{"path":"src/app/core/services/auth.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgZone } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Title } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { BehaviorSubject } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { generateSessionId } from \u0027../../shared/lib/session\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { uuid } from \u0027../../shared/lib/uuid\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./electron.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027./githubevent.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027./issue.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027./phase.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./user.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"export enum AuthState {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u0027NotAuthenticated\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u0027AwaitingAuthentication\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u0027ConfirmOAuthUser\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u0027Authenticated\u0027"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":26,"author":{"gitId":"-"},"content":"})"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Responsible for initiating the authentication process and querying or"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * updating the application state with regards to authentication."},{"lineNumber":31,"author":{"gitId":"-"},"content":" */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"export class AuthService {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  authStateSource \u003d new BehaviorSubject(AuthState.NotAuthenticated);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  currentAuthState \u003d this.authStateSource.asObservable();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  accessToken \u003d new BehaviorSubject(undefined);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  private state: string;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  ENABLE_POPUP_MESSAGE \u003d \u0027Please enable pop-ups in your browser\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private electronService: ElectronService,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private router: Router,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private ngZone: NgZone,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private titleService: Title,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private logger: LoggingService"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * Will store the OAuth token."},{"lineNumber":55,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  storeOAuthAccessToken(token: string) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    this.githubService.storeOAuthAccessToken(token);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    this.accessToken.next(token);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  reset(): void {"},{"lineNumber":62,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.logger.info(\u0027AuthService: Clearing access token and setting AuthState to NotAuthenticated.\u0027);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    this.accessToken.next(undefined);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    this.changeAuthState(AuthState.NotAuthenticated);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    this.ngZone.run(() \u003d\u003e this.router.navigate([\u0027\u0027]));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  logOut(): void {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.githubService.reset();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    this.userService.reset();"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    this.issueService.reset(true);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    this.phaseService.reset();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    this.githubEventService.reset();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    this.logger.reset();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    this.setLandingPageTitle();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    this.issueService.setIssueTeamFilter(\u0027All Teams\u0027);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    this.reset();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  setTitleWithPhaseDetail(): void {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    const appSetting \u003d require(\u0027../../../../package.json\u0027);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    const title \u003d `${appSetting.name} ${appSetting.version} - ${this.phaseService.getCurrentRepositoryURL()}`;"},{"lineNumber":83,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`AuthService: Setting Title as ${title}`);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    this.titleService.setTitle(title);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  setLandingPageTitle(): void {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    const appSetting \u003d require(\u0027../../../../package.json\u0027);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    const title \u003d `${appSetting.name} ${appSetting.version}`;"},{"lineNumber":90,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`AuthService: Setting Title as ${title}`);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    this.titleService.setTitle(title);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  isAuthenticated(): boolean {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    return this.authStateSource.getValue() \u003d\u003d\u003d AuthState.Authenticated;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  changeAuthState(newAuthState: AuthState) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    if (newAuthState \u003d\u003d\u003d AuthState.Authenticated) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      const sessionId \u003d generateSessionId();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      this.issueService.setSessionId(sessionId);"},{"lineNumber":102,"author":{"gitId":"cheehongw"},"content":"      this.logger.info(`AuthService: Successfully authenticated with session: ${sessionId}`);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    this.authStateSource.next(newAuthState);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * Generates and assigns an unguessable random \u0027state\u0027 string to pass to Github for protection against cross-site request forgery attacks"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  generateStateString() {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    this.state \u003d uuid();"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    sessionStorage.setItem(\u0027state\u0027, this.state);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"  isReturnedStateSame(returnedState: string): boolean {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    const state \u003d sessionStorage.getItem(\u0027state\u0027);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    return returnedState \u003d\u003d\u003d state;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * Will start the Github OAuth web flow process."},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  startOAuthProcess() {"},{"lineNumber":124,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(\u0027AuthService: Starting authentication\u0027);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    // Available OAuth scopes https://docs.github.com/en/developers/apps/building-oauth-apps/scopes-for-oauth-apps#available-scopes"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    const githubRepoPermission \u003d \u0027public_repo\u0027;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    this.changeAuthState(AuthState.AwaitingAuthentication);"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    if (this.electronService.isElectron()) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      this.electronService.sendIpcMessage(\u0027github-oauth\u0027, githubRepoPermission);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      this.generateStateString();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      this.redirectToOAuthPage("},{"lineNumber":134,"author":{"gitId":"-"},"content":"        encodeURI("},{"lineNumber":135,"author":{"gitId":"-"},"content":"          `${AppConfig.githubUrl}/login/oauth/authorize?client_id\u003d${AppConfig.clientId}\u0026scope\u003d${githubRepoPermission},read:user\u0026state\u003d${this.state}`"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":138,"author":{"gitId":"cheehongw"},"content":"      this.logger.info(`AuthService: Redirecting for Github authentication`);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":143,"author":{"gitId":"-"},"content":"   * Will redirect to GitHub OAuth page"},{"lineNumber":144,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  private redirectToOAuthPage(url: string): void {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    if (url \u003d\u003d null) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    window.location.href \u003d url;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":1,"-":145,"cheehongw":5}},{"path":"src/app/core/services/dialog.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatDialog } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { LabelDefinitionPopupComponent } from \u0027../../shared/label-definition-popup/label-definition-popup.component\u0027;"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { RepoChangeFormComponent } from \u0027../../shared/repo-change-form/repo-change-form.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { UserConfirmationComponent } from \u0027../guards/user-confirmation/user-confirmation.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":9,"author":{"gitId":"-"},"content":"})"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class DialogService {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  constructor(private dialog: MatDialog) {}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  openUserConfirmationModal(messages: string[], yesButtonMessage: string, noButtonMessage: string) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    return this.dialog.open(UserConfirmationComponent, {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      data: {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        messages: messages,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        yesMessage: yesButtonMessage,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        noMessage: noButtonMessage"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  openLabelDefinitionDialog(labelName: String, labelDefinition: String) {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    return this.dialog.open(LabelDefinitionPopupComponent, {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      data: {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        header: labelName,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        body: labelDefinition"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":32,"author":{"gitId":"cheehongw"},"content":"  openChangeRepoDialog(repoName: String) {"},{"lineNumber":33,"author":{"gitId":"cheehongw"},"content":"    return this.dialog.open(RepoChangeFormComponent, {"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"      data: {"},{"lineNumber":35,"author":{"gitId":"cheehongw"},"content":"        repoName: repoName"},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"      },"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"      height: \u0027auto\u0027,"},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"      width: \u002740%\u0027"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"    });"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"vigneshsankariyer1234567890":1,"-":29,"cheehongw":10}},{"path":"src/app/core/services/error-handling.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ErrorHandler, Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSnackBar } from \u0027@angular/material/snack-bar\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RequestError } from \u0027@octokit/request-error\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { FormErrorComponent } from \u0027../../shared/error-toasters/form-error/form-error.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GeneralMessageErrorComponent } from \u0027../../shared/error-toasters/general-message-error/general-message-error.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"export const ERRORCODE_NOT_FOUND \u003d 404;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"const FILTERABLE \u003d [\u0027node_modules\u0027];"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class ErrorHandlingService implements ErrorHandler {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  constructor(private snackBar: MatSnackBar, private logger: LoggingService) {}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  handleError(error: HttpErrorResponse | Error | RequestError, actionCallback?: () \u003d\u003e void) {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    this.logger.error(error);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    if (error instanceof Error) {"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"      this.logger.debug(\u0027ErrorHandlingService: \u0027, this.cleanStack(error.stack));"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    if (error instanceof HttpErrorResponse) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      this.handleHttpError(error, actionCallback);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    } else if (error.constructor.name \u003d\u003d\u003d \u0027RequestError\u0027) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      this.handleHttpError(error as RequestError, actionCallback);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      this.handleGeneralError(error.message || JSON.stringify(error));"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  private cleanStack(stacktrace: string): string {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    return stacktrace"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      .split(\u0027\\n\u0027)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      .filter((line) \u003d\u003e !FILTERABLE.some((word) \u003d\u003e line.includes(word))) // exclude lines that contain words in FILTERABLE"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      .join(\u0027\\n\u0027);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  // Ref: https://developer.github.com/v3/#client-errors"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  private handleHttpError(error: HttpErrorResponse | RequestError, actionCallback?: () \u003d\u003e void): void {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Angular treats 304 Not Modified as an error, we will ignore it."},{"lineNumber":43,"author":{"gitId":"-"},"content":"    if (error.status \u003d\u003d\u003d 304) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    if (!navigator.onLine) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      this.handleGeneralError(\u0027No Internet Connection\u0027);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    switch (error.status) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      case 500: // Internal Server Error."},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.snackBar.openFromComponent(GeneralMessageErrorComponent, { data: error });"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      case 422: // Form errors"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.snackBar.openFromComponent(FormErrorComponent, { data: error });"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      case 400: // Bad request"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      case 401: // Unauthorized"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      case 404: // Not found"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.snackBar.openFromComponent(GeneralMessageErrorComponent, { data: error });"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.snackBar.openFromComponent(GeneralMessageErrorComponent, { data: error });"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  private handleGeneralError(error: string): void {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    this.snackBar.openFromComponent(GeneralMessageErrorComponent, { data: { message: error } });"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":71,"cheehongw":1}},{"path":"src/app/core/services/github.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Apollo, QueryRef } from \u0027apollo-angular\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ApolloQueryResult } from \u0027apollo-client\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { DocumentNode } from \u0027graphql\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { forkJoin, from, Observable, of, throwError, zip } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { catchError, filter, flatMap, map, throwIfEmpty } from \u0027rxjs/operators\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FetchIssue,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FetchIssueQuery,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FetchIssues,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  FetchIssuesByTeam,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  FetchIssuesByTeamQuery,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  FetchIssuesQuery,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FetchPullRequests,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FetchPullRequestsQuery"},{"lineNumber":17,"author":{"gitId":"-"},"content":"} from \u0027../../../../graphql/graphql-types\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { getNumberOfPages } from \u0027../../shared/lib/github-paginator-parser\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../models/comment.model\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../models/github-user.model\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { IssueLastModifiedManagerModel } from \u0027../models/github/cache-manager/issue-last-modified-manager.model\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { IssuesCacheManager } from \u0027../models/github/cache-manager/issues-cache-manager.model\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027../models/github/github-comment.model\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { GithubEvent } from \u0027../models/github/github-event.model\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { GithubGraphqlIssue } from \u0027../models/github/github-graphql.issue\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { GithubGraphqlIssueOrPr } from \u0027../models/github/github-graphql.issue-or-pr\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import RestGithubIssueFilter from \u0027../models/github/github-issue-filter.model\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../models/github/github-issue.model\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import { GithubResponse } from \u0027../models/github/github-response.model\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import { GithubRelease } from \u0027../models/github/github.release\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { SessionData } from \u0027../models/session.model\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./electron.service\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import { ERRORCODE_NOT_FOUND, ErrorHandlingService } from \u0027./error-handling.service\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"const { Octokit } \u003d require(\u0027@octokit/rest\u0027);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"const WATCHER_ORG \u003d \u0027WATcher-org\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"const WATCHER_REPO \u003d \u0027WATcher\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"const UNABLE_TO_OPEN_IN_BROWSER \u003d \u0027Unable to open this issue in Browser\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"/** Owner of Repository to watch */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"let ORG_NAME \u003d \u0027\u0027; // repoOrg"},{"lineNumber":45,"author":{"gitId":"-"},"content":"/** Name of Repository to watch */"},{"lineNumber":46,"author":{"gitId":"-"},"content":"let REPO \u003d \u0027\u0027; // repoName"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"/** Owner of Settings repository, currently not used */"},{"lineNumber":49,"author":{"gitId":"-"},"content":"let MOD_ORG \u003d \u0027\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"/** Name of Settings repository, currently not used */"},{"lineNumber":51,"author":{"gitId":"-"},"content":"let DATA_REPO \u003d \u0027\u0027;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"const MAX_ITEMS_PER_PAGE \u003d 100;"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"let octokit \u003d new Octokit();"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"})"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":61,"author":{"gitId":"-"},"content":" * Responsible for communicating with GitHub to create, update, read and delete"},{"lineNumber":62,"author":{"gitId":"-"},"content":" * features related to Github using GitHub API Requests."},{"lineNumber":63,"author":{"gitId":"-"},"content":" * For example, issues, issue labels and repositories."},{"lineNumber":64,"author":{"gitId":"-"},"content":" */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"export class GithubService {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  private static readonly IF_NONE_MATCH_EMPTY \u003d { \u0027If-None-Match\u0027: \u0027\u0027 };"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  private issuesCacheManager \u003d new IssuesCacheManager();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  private issuesLastModifiedManager \u003d new IssueLastModifiedManagerModel();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  private issueQueryRefs \u003d new Map\u003cNumber, QueryRef\u003cFetchIssueQuery\u003e\u003e();"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private apollo: Apollo,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private electronService: ElectronService,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private logger: LoggingService"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  storeOAuthAccessToken(accessToken: string) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    octokit \u003d new Octokit({"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      auth() {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return `Token ${accessToken}`;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      log: {"},{"lineNumber":85,"author":{"gitId":"cheehongw"},"content":"        debug: (message, ...otherInfo) \u003d\u003e this.logger.debug(\u0027GithubService: \u0027 + message, ...otherInfo),"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Do not log info for HTTP response 304 due to repeated polling"},{"lineNumber":87,"author":{"gitId":"Eclipse-Dominator"},"content":"        info: (message, ...otherInfo) \u003d\u003e"},{"lineNumber":88,"author":{"gitId":"Eclipse-Dominator"},"content":"          /304 in \\d+ms$/.test(message) ? undefined : this.logger.info(\u0027GithubService: \u0027 + message, ...otherInfo),"},{"lineNumber":89,"author":{"gitId":"cheehongw"},"content":"        warn: (message, ...otherInfo) \u003d\u003e this.logger.warn(\u0027GithubService: \u0027 + message, ...otherInfo),"},{"lineNumber":90,"author":{"gitId":"cheehongw"},"content":"        error: (message, ...otherInfo) \u003d\u003e this.logger.error(\u0027GithubService: \u0027 + message, ...otherInfo)"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"   * Sets settings repository. Not used."},{"lineNumber":97,"author":{"gitId":"-"},"content":"   * @param orgName WATcher organisation"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * @param dataRepo WATcher repository"},{"lineNumber":99,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  storeOrganizationDetails(orgName: string, dataRepo: string) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    MOD_ORG \u003d orgName;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    DATA_REPO \u003d dataRepo;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   * Sets repository to watch. This repository is used for fetching from Github."},{"lineNumber":107,"author":{"gitId":"-"},"content":"   * @param phaseRepoOwner Repository owner"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * @param repoName Repository name"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  storePhaseDetails(phaseRepoOwner: string, repoName: string) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    REPO \u003d repoName;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    ORG_NAME \u003d phaseRepoOwner;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   * Fetches an array of filtered GitHubIssues using GraphQL query for a given team."},{"lineNumber":117,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   * @param tutorial - The tutorial that the team belongs to."},{"lineNumber":119,"author":{"gitId":"-"},"content":"   * @param team - The team\u0027s designated name."},{"lineNumber":120,"author":{"gitId":"-"},"content":"   * @param issuesFilter - The issue filter."},{"lineNumber":121,"author":{"gitId":"-"},"content":"   * @returns An observable array of filtered GithubIssues"},{"lineNumber":122,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  fetchIssuesGraphqlByTeam(tutorial: string, team: string, issuesFilter: RestGithubIssueFilter): Observable\u003cArray\u003cGithubIssue\u003e\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    const graphqlFilter \u003d issuesFilter.convertToGraphqlFilter();"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    return this.toFetchIssues(issuesFilter).pipe("},{"lineNumber":126,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return this.fetchGraphqlList\u003cFetchIssuesByTeamQuery, GithubGraphqlIssue\u003e("},{"lineNumber":129,"author":{"gitId":"-"},"content":"          FetchIssuesByTeam,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            owner: ORG_NAME,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            name: REPO,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            filter: {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"              ...graphqlFilter,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"              labels: [...(graphqlFilter.labels ? graphqlFilter.labels : []), team]"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            tutorial"},{"lineNumber":138,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":139,"author":{"gitId":"-"},"content":"          (result) \u003d\u003e result.data.repository.label.issues.edges,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"          GithubGraphqlIssue"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":147,"author":{"gitId":"-"},"content":"   * Fetches an array of filtered GitHubIssues using GraphQL query."},{"lineNumber":148,"author":{"gitId":"-"},"content":"   * In WATcher, this includes pull requests."},{"lineNumber":149,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   * @param issuesFilter - The issue filter."},{"lineNumber":151,"author":{"gitId":"-"},"content":"   * @returns An observable array of filtered GithubIssues"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  fetchIssuesGraphql(issuesFilter: RestGithubIssueFilter): Observable\u003cArray\u003cGithubIssue\u003e\u003e {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    const graphqlFilter \u003d issuesFilter.convertToGraphqlFilter();"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /*"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Github Issues consists of issues and pull requests in WATcher."},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    const issueObs \u003d this.toFetchIssues(issuesFilter).pipe("},{"lineNumber":159,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return this.fetchGraphqlList\u003cFetchIssuesQuery, GithubGraphqlIssueOrPr\u003e("},{"lineNumber":162,"author":{"gitId":"-"},"content":"          FetchIssues,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"          { owner: ORG_NAME, name: REPO, filter: graphqlFilter },"},{"lineNumber":164,"author":{"gitId":"-"},"content":"          (result) \u003d\u003e result.data.repository.issues.edges,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"          GithubGraphqlIssueOrPr"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    const prObs \u003d this.toFetchIssues(issuesFilter).pipe("},{"lineNumber":170,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return this.fetchGraphqlList\u003cFetchPullRequestsQuery, GithubGraphqlIssueOrPr\u003e("},{"lineNumber":173,"author":{"gitId":"-"},"content":"          FetchPullRequests,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          { owner: ORG_NAME, name: REPO },"},{"lineNumber":175,"author":{"gitId":"-"},"content":"          (result) \u003d\u003e result.data.repository.pullRequests.edges,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"          GithubGraphqlIssueOrPr"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    // Concatenate both streams together."},{"lineNumber":182,"author":{"gitId":"-"},"content":"    return zip(issueObs, prObs).pipe(map((x) \u003d\u003e x[0].concat(x[1])));"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":186,"author":{"gitId":"-"},"content":"   * Checks if there are pages of filtered issues that are not cached in the cache model,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   * and updates the model to cache these new pages."},{"lineNumber":188,"author":{"gitId":"-"},"content":"   * @param filter - The issue filter."},{"lineNumber":189,"author":{"gitId":"-"},"content":"   * @returns Observable\u003cboolean\u003e that returns true if there are pages that do not exist in the cache model."},{"lineNumber":190,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  private toFetchIssues(filter: RestGithubIssueFilter): Observable\u003cboolean\u003e {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    let responseInFirstPage: GithubResponse\u003cGithubIssue[]\u003e;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    return this.getIssuesAPICall(filter, 1).pipe("},{"lineNumber":194,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue[]\u003e) \u003d\u003e {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        responseInFirstPage \u003d response;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return getNumberOfPages(response);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      flatMap((numOfPages: number) \u003d\u003e {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        const apiCalls: Observable\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e[] \u003d [];"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        for (let i \u003d 2; i \u003c\u003d numOfPages; i++) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"          apiCalls.push(this.getIssuesAPICall(filter, i));"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return apiCalls.length \u003d\u003d\u003d 0 ? of([]) : forkJoin(apiCalls);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      map((resultArray: GithubResponse\u003cGithubIssue[]\u003e[]) \u003d\u003e {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        const responses \u003d [responseInFirstPage, ...resultArray];"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        const isCached \u003d responses.reduce((result, response) \u003d\u003e {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"          return result \u0026\u0026 response.isCached;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }, true);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        responses.forEach((resp, index) \u003d\u003e this.issuesCacheManager.set(index + 1, resp));"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return !isCached;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":217,"author":{"gitId":"-"},"content":"   * Checks if the specified repository exists."},{"lineNumber":218,"author":{"gitId":"-"},"content":"   * @param owner - Owner of Specified Repository."},{"lineNumber":219,"author":{"gitId":"-"},"content":"   * @param repo - Name of Repository."},{"lineNumber":220,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  isRepositoryPresent(owner: string, repo: string): Observable\u003cboolean\u003e {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    return from(octokit.repos.get({ owner: owner, repo: repo, headers: GithubService.IF_NONE_MATCH_EMPTY })).pipe("},{"lineNumber":223,"author":{"gitId":"-"},"content":"      map((rawData: { status: number }) \u003d\u003e {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return rawData.status !\u003d\u003d ERRORCODE_NOT_FOUND;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        return of(false);"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":229,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch repository data.\u0027))"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":234,"author":{"gitId":"-"},"content":"   * Creates a repository in for the authenticated user location."},{"lineNumber":235,"author":{"gitId":"-"},"content":"   * @param name - Name of Repo to create."},{"lineNumber":236,"author":{"gitId":"-"},"content":"   * @return Observable\u003cboolean\u003e - That returns true if the repository has been successfully"},{"lineNumber":237,"author":{"gitId":"-"},"content":"   *                                created."},{"lineNumber":238,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  createRepository(name: string): void {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    octokit.repos.createForAuthenticatedUser({ name: name });"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":244,"author":{"gitId":"-"},"content":"   * Fetches information about an issue using GraphQL."},{"lineNumber":245,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   * If the issue is not modified, return a `304 - Not Modified` response."},{"lineNumber":247,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":248,"author":{"gitId":"-"},"content":"   * @param id - The issue id."},{"lineNumber":249,"author":{"gitId":"-"},"content":"   * @returns Observable\u003cGithubGraphqlIssue\u003e that represents the response object."},{"lineNumber":250,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  fetchIssueGraphql(id: number): Observable\u003cGithubGraphqlIssue\u003e {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    if (this.issueQueryRefs.get(id) \u003d\u003d\u003d undefined) {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      const newQueryRef \u003d this.apollo.watchQuery\u003cFetchIssueQuery\u003e({"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        query: FetchIssue,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        variables: {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"          owner: ORG_NAME,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"          name: REPO,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"          issueId: id"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":261,"author":{"gitId":"-"},"content":"      this.issueQueryRefs.set(id, newQueryRef);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"    const queryRef \u003d this.issueQueryRefs.get(id);"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    return this.toFetchIssue(id).pipe("},{"lineNumber":266,"author":{"gitId":"-"},"content":"      filter((toFetch) \u003d\u003e toFetch),"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      flatMap(() \u003d\u003e from(queryRef.refetch())),"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      map((value: ApolloQueryResult\u003cFetchIssueQuery\u003e) \u003d\u003e {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        return new GithubGraphqlIssue(value.data.repository.issue);"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      throwIfEmpty(() \u003d\u003e new HttpErrorResponse({ status: 304 }))"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":276,"author":{"gitId":"-"},"content":"   * Checks if the issue has been modified since the last query, and"},{"lineNumber":277,"author":{"gitId":"-"},"content":"   * updates the model to reflect the last modified time."},{"lineNumber":278,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":279,"author":{"gitId":"-"},"content":"   * @param id - The issue id."},{"lineNumber":280,"author":{"gitId":"-"},"content":"   * @returns Observable\u003cboolean\u003e that returns true if the issue has been modified."},{"lineNumber":281,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  toFetchIssue(id: number): Observable\u003cboolean\u003e {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":284,"author":{"gitId":"-"},"content":"      octokit.issues.get({"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        issue_number: id,"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        headers: { \u0027If-Modified-Since\u0027: this.issuesLastModifiedManager.get(id) }"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":291,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch issue.\u0027))"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"  fetchAllMilestones(): Observable\u003cArray\u003c{}\u003e\u003e {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":301,"author":{"gitId":"-"},"content":"      octokit.issues.listMilestonesForRepo({"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        state: \u0027all\u0027,"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        per_page: MAX_ITEMS_PER_PAGE,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        headers: GithubService.IF_NONE_MATCH_EMPTY"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":309,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch milestones.\u0027))"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":314,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"  fetchAllLabels(): Observable\u003cArray\u003c{}\u003e\u003e {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":318,"author":{"gitId":"-"},"content":"      octokit.issues.listLabelsForRepo({"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        per_page: MAX_ITEMS_PER_PAGE,"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        headers: GithubService.IF_NONE_MATCH_EMPTY"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":325,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch labels.\u0027))"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":330,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":333,"author":{"gitId":"-"},"content":"   * Creates a label in the current repository."},{"lineNumber":334,"author":{"gitId":"-"},"content":"   * @param formattedLabelName - name of new label."},{"lineNumber":335,"author":{"gitId":"-"},"content":"   * @param labelColor - colour of new label."},{"lineNumber":336,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  createLabel(formattedLabelName: string, labelColor: string): void {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    octokit.issues.createLabel({ owner: ORG_NAME, repo: REPO, name: formattedLabelName, color: labelColor });"},{"lineNumber":339,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":342,"author":{"gitId":"-"},"content":"   * Updates a label\u0027s information in the current repository."},{"lineNumber":343,"author":{"gitId":"-"},"content":"   * @param labelName - name of existing label"},{"lineNumber":344,"author":{"gitId":"-"},"content":"   * @param labelColor - new color to be assigned to existing label."},{"lineNumber":345,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":346,"author":{"gitId":"-"},"content":"  updateLabel(labelName: string, labelColor: string): void {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    octokit.issues.updateLabel({ owner: ORG_NAME, repo: REPO, name: labelName, current_name: labelName, color: labelColor });"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":351,"author":{"gitId":"-"},"content":"   * Checks if the given list of users are allowed to be assigned to an issue."},{"lineNumber":352,"author":{"gitId":"-"},"content":"   * @param assignees - GitHub usernames to be checked"},{"lineNumber":353,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":354,"author":{"gitId":"-"},"content":"  areUsersAssignable(assignees: string[]): Observable\u003cvoid\u003e {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":356,"author":{"gitId":"-"},"content":"      octokit.issues.listAssignees({"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        repo: REPO"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":361,"author":{"gitId":"-"},"content":"      map(({ data }: { data: { login: string }[] }) \u003d\u003e data.map(({ login }) \u003d\u003e login)),"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      map((assignables: string[]) \u003d\u003e"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        assignees.forEach((assignee) \u003d\u003e {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"          if (!assignables.includes(assignee)) {"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            throw new Error(`Cannot assign ${assignee} to the issue. Please check if ${assignee} is authorized.`);"},{"lineNumber":366,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":370,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"  getUsersAssignable(): Observable\u003cGithubUser[]\u003e {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":374,"author":{"gitId":"-"},"content":"      octokit.issues.listAssignees({"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        repo: REPO"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":379,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":382,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch assignable users for repository\u0027))"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"  closeIssue(id: number): Observable\u003cGithubIssue\u003e {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    return from(octokit.issues.update({ owner: ORG_NAME, repo: REPO, issue_number: id, state: \u0027closed\u0027 })).pipe("},{"lineNumber":388,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":393,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"  createIssue(title: string, description: string, labels: string[]): Observable\u003cGithubIssue\u003e {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    return from(octokit.issues.create({ owner: ORG_NAME, repo: REPO, title: title, body: description, labels: labels })).pipe("},{"lineNumber":397,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":401,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"  createIssueComment(issueId: number, description: string): Observable\u003cGithubComment\u003e {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    return from(octokit.issues.createComment({ owner: ORG_NAME, repo: REPO, issue_number: issueId, body: description })).pipe("},{"lineNumber":405,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubComment\u003e) \u003d\u003e {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        return response.data;"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":409,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"  updateIssue(id: number, title: string, description: string, labels: string[], assignees?: string[]): Observable\u003cGithubIssue\u003e {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":413,"author":{"gitId":"-"},"content":"      octokit.issues.update({"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        issue_number: id,"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        title: title,"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        body: description,"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        labels: labels,"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        assignees: assignees"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":423,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubIssue\u003e) \u003d\u003e {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        this.issuesLastModifiedManager.set(id, response.headers[\u0027last-modified\u0027]);"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        return new GithubIssue(response.data);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        return throwError(err);"},{"lineNumber":429,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"  updateIssueComment(issueComment: IssueComment): Observable\u003cGithubComment\u003e {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":435,"author":{"gitId":"-"},"content":"      octokit.issues.updateComment({ owner: ORG_NAME, repo: REPO, comment_id: issueComment.id, body: issueComment.description })"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":437,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubComment\u003e) \u003d\u003e {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        return response.data;"},{"lineNumber":439,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":441,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"  uploadFile(filename: string, base64String: string): Observable\u003cany\u003e {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":445,"author":{"gitId":"-"},"content":"      octokit.repos.createOrUpdateFile({"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        path: `files/${filename}`,"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        message: \u0027upload file\u0027,"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        content: base64String"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":453,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":454,"author":{"gitId":"-"},"content":""},{"lineNumber":455,"author":{"gitId":"-"},"content":"  fetchEventsForRepo(): Observable\u003cany[]\u003e {"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    return from(octokit.issues.listEventsForRepo({ owner: ORG_NAME, repo: REPO, headers: GithubService.IF_NONE_MATCH_EMPTY })).pipe("},{"lineNumber":457,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":460,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch issue events for repository\u0027))"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":462,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"  fetchEventsForRepoCall(pageNumber: number): Observable\u003cGithubResponse\u003cany[]\u003e\u003e {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    return \u003cObservable\u003cGithubResponse\u003cany[]\u003e\u003e\u003efrom("},{"lineNumber":466,"author":{"gitId":"-"},"content":"      octokit.activity.listRepoEvents({"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        owner: ORG_NAME,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        repo: REPO,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        page: pageNumber"},{"lineNumber":470,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":471,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    ).pipe(catchError((err) \u003d\u003e throwError(\u0027Failed to fetch activity events for repository\u0027)));"},{"lineNumber":472,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":475,"author":{"gitId":"-"},"content":"   * Fetches all events of current repository for Activity Dashboard."},{"lineNumber":476,"author":{"gitId":"-"},"content":"   * Adapted from getIssueApiCalls()."},{"lineNumber":477,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":478,"author":{"gitId":"-"},"content":"   * @returns GithubEvents observable"},{"lineNumber":479,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":480,"author":{"gitId":"-"},"content":"  fetchAllEventsForRepo(): Observable\u003cGithubEvent[]\u003e {"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    let responseInFirstPage: GithubResponse\u003cGithubEvent[]\u003e;"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    return this.fetchEventsForRepoCall(1).pipe("},{"lineNumber":483,"author":{"gitId":"-"},"content":"      map((response: GithubResponse\u003cGithubEvent[]\u003e) \u003d\u003e {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        responseInFirstPage \u003d response;"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        return getNumberOfPages(response);"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":487,"author":{"gitId":"-"},"content":"      flatMap((numOfPages: number) \u003d\u003e {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        const apiCalls: Observable\u003cGithubResponse\u003cGithubEvent[]\u003e\u003e[] \u003d [];"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        for (let i \u003d 1; i \u003c\u003d numOfPages; i++) {"},{"lineNumber":490,"author":{"gitId":"-"},"content":"          apiCalls.push(this.fetchEventsForRepoCall(i));"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        return apiCalls.length \u003d\u003d\u003d 0 ? of([]) : forkJoin(apiCalls);"},{"lineNumber":493,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      map((responseArray) \u003d\u003e responseArray.map((x) \u003d\u003e x[\u0027data\u0027]))"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":496,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":499,"author":{"gitId":"-"},"content":"   * Not in use. Fetches data csv file from Organization repository."},{"lineNumber":500,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":501,"author":{"gitId":"-"},"content":"  fetchDataFile(): Observable\u003c{}\u003e {"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":503,"author":{"gitId":"-"},"content":"      octokit.repos.getContents({ owner: MOD_ORG, repo: DATA_REPO, path: \u0027data.csv\u0027, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":505,"author":{"gitId":"-"},"content":"      map((rawData) \u003d\u003e {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        return { data: atob(rawData[\u0027data\u0027][\u0027content\u0027]) };"},{"lineNumber":507,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch data file.\u0027))"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":510,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":513,"author":{"gitId":"-"},"content":"   * Gets information of latest release of WATcher."},{"lineNumber":514,"author":{"gitId":"-"},"content":"   * @returns GithubRelease observable"},{"lineNumber":515,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":516,"author":{"gitId":"-"},"content":"  fetchLatestRelease(): Observable\u003cGithubRelease\u003e {"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":518,"author":{"gitId":"-"},"content":"      octokit.repos.getLatestRelease({ owner: WATCHER_ORG, repo: WATCHER_REPO, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":520,"author":{"gitId":"-"},"content":"      map((res) \u003d\u003e res[\u0027data\u0027]),"},{"lineNumber":521,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch latest release.\u0027))"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":523,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   * Fetches the data file that is regulates session information."},{"lineNumber":527,"author":{"gitId":"-"},"content":"   * @return Observable\u003cSessionData\u003e representing session information."},{"lineNumber":528,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":529,"author":{"gitId":"-"},"content":"  fetchSettingsFile(): Observable\u003cSessionData\u003e {"},{"lineNumber":530,"author":{"gitId":"-"},"content":"    return from("},{"lineNumber":531,"author":{"gitId":"-"},"content":"      octokit.repos.getContents({ owner: MOD_ORG, repo: DATA_REPO, path: \u0027settings.json\u0027, headers: GithubService.IF_NONE_MATCH_EMPTY })"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    ).pipe("},{"lineNumber":533,"author":{"gitId":"-"},"content":"      map((rawData) \u003d\u003e JSON.parse(atob(rawData[\u0027data\u0027][\u0027content\u0027]))),"},{"lineNumber":534,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch settings file.\u0027))"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":536,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"  fetchAuthenticatedUser(): Observable\u003cGithubUser\u003e {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    return from(octokit.users.getAuthenticated()).pipe("},{"lineNumber":540,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        return response[\u0027data\u0027];"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":543,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e throwError(\u0027Failed to fetch authenticated user.\u0027))"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":545,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"  getRepoURL(): string {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"    return ORG_NAME.concat(\u0027/\u0027).concat(REPO);"},{"lineNumber":549,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"  viewIssueInBrowser(id: number, event: Event) {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    if (id) {"},{"lineNumber":553,"author":{"gitId":"-"},"content":"      this.electronService.openLink(\u0027https://github.com/\u0027.concat(this.getRepoURL()).concat(\u0027/issues/\u0027).concat(String(id)));"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"      this.errorHandlingService.handleError(new Error(UNABLE_TO_OPEN_IN_BROWSER));"},{"lineNumber":556,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    event.stopPropagation();"},{"lineNumber":558,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":559,"author":{"gitId":"-"},"content":""},{"lineNumber":560,"author":{"gitId":"-"},"content":"  reset(): void {"},{"lineNumber":561,"author":{"gitId":"cheehongw"},"content":"    this.logger.info(`GithubService: Resetting issues cache`);"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    this.issuesCacheManager.clear();"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    this.issuesLastModifiedManager.clear();"},{"lineNumber":564,"author":{"gitId":"-"},"content":"    this.issueQueryRefs.clear();"},{"lineNumber":565,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":566,"author":{"gitId":"-"},"content":""},{"lineNumber":567,"author":{"gitId":"-"},"content":"  getProfilesData(): Promise\u003cResponse\u003e {"},{"lineNumber":568,"author":{"gitId":"-"},"content":"    return fetch(AppConfig.clientDataUrl);"},{"lineNumber":569,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":570,"author":{"gitId":"-"},"content":""},{"lineNumber":571,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":572,"author":{"gitId":"-"},"content":"   * Performs an API call to fetch a page of filtered issues with a given pageNumber."},{"lineNumber":573,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   * The request is sent with the ETag of the latest cached HTTP response."},{"lineNumber":575,"author":{"gitId":"-"},"content":"   * If page requested has the same ETag, or the request results in an error,"},{"lineNumber":576,"author":{"gitId":"-"},"content":"   * then the cached page is returned instead."},{"lineNumber":577,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":578,"author":{"gitId":"-"},"content":"   * @param filter - The issue filter"},{"lineNumber":579,"author":{"gitId":"-"},"content":"   * @param pageNumber - The page to be fetched"},{"lineNumber":580,"author":{"gitId":"-"},"content":"   * @returns An observable representing the response containing a single page of filtered issues"},{"lineNumber":581,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":582,"author":{"gitId":"-"},"content":"  private getIssuesAPICall(filter: RestGithubIssueFilter, pageNumber: number): Observable\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e {"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    const apiCall: Promise\u003cGithubResponse\u003cGithubIssue[]\u003e\u003e \u003d octokit.issues.listForRepo({"},{"lineNumber":584,"author":{"gitId":"-"},"content":"      ...filter,"},{"lineNumber":585,"author":{"gitId":"-"},"content":"      owner: ORG_NAME,"},{"lineNumber":586,"author":{"gitId":"-"},"content":"      repo: REPO,"},{"lineNumber":587,"author":{"gitId":"-"},"content":"      sort: \u0027created\u0027,"},{"lineNumber":588,"author":{"gitId":"-"},"content":"      direction: \u0027desc\u0027,"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      per_page: 100,"},{"lineNumber":590,"author":{"gitId":"-"},"content":"      page: pageNumber,"},{"lineNumber":591,"author":{"gitId":"-"},"content":"      headers: { \u0027If-None-Match\u0027: this.issuesCacheManager.getEtagFor(pageNumber) },"},{"lineNumber":592,"author":{"gitId":"-"},"content":"      state: \u0027all\u0027"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":594,"author":{"gitId":"Eclipse-Dominator"},"content":"    const apiCall$ \u003d from("},{"lineNumber":595,"author":{"gitId":"Eclipse-Dominator"},"content":"      apiCall.catch((err) \u003d\u003e {"},{"lineNumber":596,"author":{"gitId":"cheehongw"},"content":"        return this.issuesCacheManager.get(pageNumber);"},{"lineNumber":597,"author":{"gitId":"Eclipse-Dominator"},"content":"      })"},{"lineNumber":598,"author":{"gitId":"Eclipse-Dominator"},"content":"    );"},{"lineNumber":599,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":600,"author":{"gitId":"-"},"content":"    return apiCall$.pipe("},{"lineNumber":601,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":602,"author":{"gitId":"cheehongw"},"content":"        // catchError does not appear to catch an error on an observable created from a promise..."},{"lineNumber":603,"author":{"gitId":"cheehongw"},"content":"        this.logger.info(`GithubService: Error caught in getIssuesAPICall`);"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        return of(this.issuesCacheManager.get(pageNumber));"},{"lineNumber":605,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":606,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":607,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":608,"author":{"gitId":"-"},"content":""},{"lineNumber":609,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":610,"author":{"gitId":"-"},"content":"   * Fetches a list of items using a GraphQL query that queries for paginated data."},{"lineNumber":611,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":612,"author":{"gitId":"-"},"content":"   * @param query - The GraphQL query that queries for paginated data."},{"lineNumber":613,"author":{"gitId":"-"},"content":"   * @param variables - Additional variables for the GraphQL query."},{"lineNumber":614,"author":{"gitId":"-"},"content":"   * @callback pluckEdges A function that returns a list of edges in a ApolloQueryResult."},{"lineNumber":615,"author":{"gitId":"-"},"content":"   * @callback Model Constructor for the item model."},{"lineNumber":616,"author":{"gitId":"-"},"content":"   * @returns A list of items from the query."},{"lineNumber":617,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":618,"author":{"gitId":"-"},"content":"  private fetchGraphqlList\u003cT, M\u003e("},{"lineNumber":619,"author":{"gitId":"-"},"content":"    query: DocumentNode,"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    variables: {},"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    pluckEdges: (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e Array\u003cany\u003e,"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    Model: new (data) \u003d\u003e M"},{"lineNumber":623,"author":{"gitId":"-"},"content":"  ): Observable\u003cArray\u003cM\u003e\u003e {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"    return from(this.withPagination\u003cT\u003e(pluckEdges)(query, variables)).pipe("},{"lineNumber":625,"author":{"gitId":"-"},"content":"      map((results: Array\u003cApolloQueryResult\u003cT\u003e\u003e) \u003d\u003e {"},{"lineNumber":626,"author":{"gitId":"-"},"content":"        const issues \u003d results.reduce((accumulated, current) \u003d\u003e accumulated.concat(pluckEdges(current)), []);"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        return issues.map((issue) \u003d\u003e new Model(issue.node));"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":629,"author":{"gitId":"-"},"content":"      throwIfEmpty(() \u003d\u003e {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        return new HttpErrorResponse({ status: 304 });"},{"lineNumber":631,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":633,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":634,"author":{"gitId":"-"},"content":""},{"lineNumber":635,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":636,"author":{"gitId":"-"},"content":"   * Returns an async function that will accept a GraphQL query that requests for paginated items."},{"lineNumber":637,"author":{"gitId":"-"},"content":"   * Said function will recursively query for all subsequent pages until a page that has less than 100 items is found,"},{"lineNumber":638,"author":{"gitId":"-"},"content":"   * then return all queried pages in an array."},{"lineNumber":639,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":640,"author":{"gitId":"-"},"content":"   * @callback pluckEdges - A function that returns a list of edges in a ApolloQueryResult."},{"lineNumber":641,"author":{"gitId":"-"},"content":"   * @returns an async function that accepts a GraphQL query for paginated data and any additional variables to that query"},{"lineNumber":642,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":643,"author":{"gitId":"-"},"content":"  private withPagination\u003cT\u003e(pluckEdges: (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e Array\u003cany\u003e) {"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    return async (query: DocumentNode, variables: { [key: string]: any } \u003d {}): Promise\u003cArray\u003cApolloQueryResult\u003cT\u003e\u003e\u003e \u003d\u003e {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"      const maxResultsCount \u003d 100;"},{"lineNumber":646,"author":{"gitId":"-"},"content":"      const cursor \u003d variables.cursor || null;"},{"lineNumber":647,"author":{"gitId":"-"},"content":"      const graphqlQuery \u003d this.apollo.watchQuery\u003cT\u003e({ query, variables: { ...variables, cursor } });"},{"lineNumber":648,"author":{"gitId":"-"},"content":"      return graphqlQuery.refetch().then(async (results: ApolloQueryResult\u003cT\u003e) \u003d\u003e {"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        const intermediate \u003d Array.isArray(results) ? results : [results];"},{"lineNumber":650,"author":{"gitId":"-"},"content":"        const edges \u003d pluckEdges(results);"},{"lineNumber":651,"author":{"gitId":"-"},"content":"        const nextCursor \u003d edges.length \u003d\u003d\u003d 0 ? null : edges[edges.length - 1].cursor;"},{"lineNumber":652,"author":{"gitId":"-"},"content":""},{"lineNumber":653,"author":{"gitId":"-"},"content":"        if (edges.length \u003c maxResultsCount || !nextCursor) {"},{"lineNumber":654,"author":{"gitId":"-"},"content":"          return intermediate;"},{"lineNumber":655,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":656,"author":{"gitId":"-"},"content":"        const nextResults \u003d await this.withPagination\u003cT\u003e(pluckEdges)(query, {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"          ...variables,"},{"lineNumber":658,"author":{"gitId":"-"},"content":"          cursor: nextCursor"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        return intermediate.concat(nextResults);"},{"lineNumber":661,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":662,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":663,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":664,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":6,"vigneshsankariyer1234567890":4,"-":646,"cheehongw":8}},{"path":"src/app/core/services/label.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Label } from \u0027../models/label.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/* The threshold to decide if color is dark or light."},{"lineNumber":8,"author":{"gitId":"-"},"content":"A higher threshold value will result in more colors determined to be \"dark\"."},{"lineNumber":9,"author":{"gitId":"-"},"content":"W3C recommendation is 0.179, but 0.184 is chosen so that some colors (like bright red)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"are considered dark (Github too consider them dark) */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"const COLOR_DARKNESS_THRESHOLD \u003d 0.184;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"const COLOR_BLACK \u003d \u0027000000\u0027; // Dark color for text with light background"},{"lineNumber":14,"author":{"gitId":"-"},"content":"const COLOR_WHITE \u003d \u0027ffffff\u0027; // Light color for text with dark background"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":18,"author":{"gitId":"-"},"content":"})"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Responsible for retrieval and parsing of label data"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * from the GitHub repository for the WATcher application."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export class LabelService {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  labels: Label[];"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService) {}"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * Fetch labels from Github."},{"lineNumber":31,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  public fetchLabels(): Observable\u003cany\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    return this.githubService.fetchAllLabels().pipe("},{"lineNumber":34,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.labels \u003d this.parseLabelData(response);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return response;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * Parses label information and returns an array of Label objects."},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * @param labels - Label Information from API."},{"lineNumber":44,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  parseLabelData(labels: Array\u003cany\u003e): Label[] {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    const labelData: Label[] \u003d [];"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    for (const label of labels) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      labelData.push(new Label(label));"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    return labelData;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * Returns true if the given color is considered \"dark\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * The color is considered \"dark\" if its luminance is less than COLOR_DARKNESS_THRESHOLD"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * @param inputColor: the color"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  isDarkColor(inputColor: string): boolean {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    const COLOR \u003d inputColor.charAt(0) \u003d\u003d\u003d \u0027#\u0027 ? inputColor.substring(1, 7) : inputColor;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    const R \u003d parseInt(COLOR.substring(0, 2), 16);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    const G \u003d parseInt(COLOR.substring(2, 4), 16);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    const B \u003d parseInt(COLOR.substring(4, 6), 16);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    const RGB \u003d [R / 255, G / 255, B / 255];"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    const LINEAR_RGB \u003d RGB.map((col) \u003d\u003e {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      if (col \u003c\u003d 0.03928) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return col / 12.92;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      return Math.pow((col + 0.055) / 1.055, 2.4);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Calculate the luminance of the color"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    const LUMINANCE \u003d 0.2126 * LINEAR_RGB[0] + 0.7152 * LINEAR_RGB[1] + 0.0722 * LINEAR_RGB[2];"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    // The color is \"dark\" if the luminance is lower than the threshold"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    return LUMINANCE \u003c COLOR_DARKNESS_THRESHOLD;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":78,"author":{"gitId":"Eclipse-Dominator"},"content":"   * Returns a css style for the background and text color of the label"},{"lineNumber":79,"author":{"gitId":"-"},"content":"   * @param color: the color of the label"},{"lineNumber":80,"author":{"gitId":"-"},"content":"   * @return the style with background-color in rgb"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * @throws exception if input is an invalid color code"},{"lineNumber":82,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":83,"author":{"gitId":"Eclipse-Dominator"},"content":"  setLabelStyle(color: string) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    let textColor: string;"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    textColor \u003d this.isDarkColor(color) ? COLOR_WHITE : COLOR_BLACK;"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    const styles \u003d {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u0027background-color\u0027: `#${color}`,"},{"lineNumber":90,"author":{"gitId":"Eclipse-Dominator"},"content":"      color: `#${textColor}`"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    return styles;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":3,"-":92}},{"path":"src/app/core/services/milestone.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Milestone } from \u0027../models/milestone.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":9,"author":{"gitId":"-"},"content":"})"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Responsible for retrieval and parsing and syncing of milestone data"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * from the GitHub repository for the WATcher application."},{"lineNumber":14,"author":{"gitId":"-"},"content":" */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class MilestoneService {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  milestones: Milestone[];"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService) {}"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   * Fetch all milestones from github."},{"lineNumber":22,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  public fetchMilestones(): Observable\u003cany\u003e {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    return this.githubService.fetchAllMilestones().pipe("},{"lineNumber":25,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.milestones \u003d this.parseMilestoneData(response);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return response;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * Parses milestone information and returns an array of Milestone objects."},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * @param milestones - Milestone Information from API."},{"lineNumber":35,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  parseMilestoneData(milestones: Array\u003cany\u003e): Milestone[] {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    const milestoneData: Milestone[] \u003d [];"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    for (const milestone of milestones) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      milestoneData.push(new Milestone(milestone));"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Echomo-Xinyu"},"content":"    milestoneData.sort((a: Milestone, b: Milestone) \u003d\u003e a.title.localeCompare(b.title));"},{"lineNumber":43,"author":{"gitId":"Echomo-Xinyu"},"content":""},{"lineNumber":44,"author":{"gitId":"Echomo-Xinyu"},"content":"    // add default milestone for untracked issues/PRs at the end"},{"lineNumber":45,"author":{"gitId":"Echomo-Xinyu"},"content":"    milestoneData.push(Milestone.DefaultMilestone);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    return milestoneData;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":4,"-":44}},{"path":"src/app/core/services/phase.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"import { Observable, Subject } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Repo } from \u0027../models/repo.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { SessionData } from \u0027../models/session.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"export const SESSION_AVALIABILITY_FIX_FAILED \u003d \u0027Session Availability Fix failed.\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The title of each phase that appears in the header bar."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export const PhaseDescription \u003d {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  [Phase.issuesViewer]: \u0027Issues Dashboard\u0027,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  [Phase.activityDashboard]: \u0027Activity Dashboard\u0027"},{"lineNumber":17,"author":{"gitId":"-"},"content":"};"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * All data of the session."},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Add accessible phases here."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export const STARTING_SESSION_DATA: SessionData \u003d {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  sessionRepo: ["},{"lineNumber":25,"author":{"gitId":"-"},"content":"    { phase: Phase.issuesViewer, repos: [] }"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // { phase: Phase.activityDashboard, repos: [] }"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":28,"author":{"gitId":"-"},"content":"};"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"export const STARTING_PHASE \u003d Phase.issuesViewer;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":34,"author":{"gitId":"-"},"content":"})"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Responsible for managing the current selected feature of WATcher as well as the"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * current session data and repository details related to the session."},{"lineNumber":39,"author":{"gitId":"-"},"content":" *"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * A phase is terminology from CATcher, in WATcher it refers to a feature of WATcher."},{"lineNumber":41,"author":{"gitId":"-"},"content":" */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"export class PhaseService {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  public currentPhase: Phase \u003d STARTING_PHASE;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  public currentRepo: Repo; // current or main repository of current phase"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  public otherRepos: Repo[]; // more repositories relevant to this phase"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"  /**"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":"   * Expose an observable to track changes to currentRepo"},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"   *"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"   * TODO - replace all references to currentRepo to have"},{"lineNumber":51,"author":{"gitId":"cheehongw"},"content":"   * dependencies subscribe to this observable?"},{"lineNumber":52,"author":{"gitId":"cheehongw"},"content":"   */"},{"lineNumber":53,"author":{"gitId":"cheehongw"},"content":"  public repoChanged$: Subject\u003cRepo | null\u003e \u003d new Subject();"},{"lineNumber":54,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  public sessionData \u003d STARTING_SESSION_DATA; // stores session data for the session"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService, public logger: LoggingService) {}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * Sets the current main repository and additional repos if any."},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * Updates session data in Phase Service and local storage."},{"lineNumber":62,"author":{"gitId":"-"},"content":"   * Updates Github Service with current repository."},{"lineNumber":63,"author":{"gitId":"-"},"content":"   * @param repo Main current repository"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   * @param repos Additional repositories"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  setRepository(repo: Repo, repos?: Repo[]): void {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.currentRepo \u003d repo;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    this.otherRepos \u003d repos ? repos : [];"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    this.sessionData.sessionRepo.find((x) \u003d\u003e x.phase \u003d\u003d\u003d this.currentPhase).repos \u003d this.getRepository();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    this.githubService.storePhaseDetails(this.currentRepo.owner, this.currentRepo.name);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    localStorage.setItem(\u0027sessionData\u0027, JSON.stringify(this.sessionData));"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   * Changes current respository to a new repository."},{"lineNumber":76,"author":{"gitId":"-"},"content":"   * If on Issue Dashboard, add previously visited repositories to otherRepos."},{"lineNumber":77,"author":{"gitId":"-"},"content":"   * @param repo New current repository"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  changeCurrentRepository(repo: Repo): void {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    this.logger.info(`PhaseService: Changing current repository to \u0027${repo}\u0027`);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    if (this.currentPhase \u003d\u003d\u003d Phase.issuesViewer) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      /** Adds past repositories to phase */"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      this.otherRepos.push(this.currentRepo); // TODO feature: can be used to provide repo suggestions"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    this.setRepository(repo, this.otherRepos);"},{"lineNumber":87,"author":{"gitId":"cheehongw"},"content":"    this.repoChanged$.next(repo);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":91,"author":{"gitId":"-"},"content":"   * Returns the full repository array of the current feature."},{"lineNumber":92,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  getRepository(): Repo[] {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    return [this.currentRepo].concat(this.otherRepos);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * Retrieves the repository url from local storage and sets to current repository."},{"lineNumber":99,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  initializeCurrentRepository() {"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    const org \u003d window.localStorage.getItem(\u0027org\u0027);"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    const repoName \u003d window.localStorage.getItem(\u0027dataRepo\u0027);"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    this.logger.info(`Phase Service: received initial org (${org}) and initial name (${repoName})`);"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    let repo: Repo;"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    if (!org || !repoName) {"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      repo \u003d Repo.ofEmptyRepo();"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    } else {"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      repo \u003d new Repo(org, repoName);"},{"lineNumber":109,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    this.logger.info(`PhaseService: Repo is ${repo}`);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    this.setRepository(repo);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   * Checks if the necessary repository is available. TODO: Future to use to verify setRepository."},{"lineNumber":116,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  verifySessionAvailability(): Observable\u003cboolean\u003e {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    return this.githubService.isRepositoryPresent(this.currentRepo.owner, this.currentRepo.name);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":122,"author":{"gitId":"-"},"content":"   * Changes phase and updates Phase Service\u0027s properties."},{"lineNumber":123,"author":{"gitId":"-"},"content":"   * @param phase New phase"},{"lineNumber":124,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  changePhase(phase: Phase) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    this.currentPhase \u003d phase;"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    // For now, assumes repository stays the same"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    this.githubService.storePhaseDetails(this.currentRepo.owner, this.currentRepo.name);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  public getCurrentRepositoryURL() {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    return this.currentRepo.owner.concat(\u0027/\u0027).concat(this.currentRepo.name);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  reset() {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    this.currentPhase \u003d STARTING_PHASE;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vigneshsankariyer1234567890":10,"-":119,"cheehongw":10}},{"path":"src/app/core/services/repo-creator.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatDialog, MatDialogRef } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Observable, of, pipe, UnaryFunction } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { flatMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { SessionFixConfirmationComponent } from \u0027./session-fix-confirmation/session-fix-confirmation.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./user.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"export const MISSING_REQUIRED_REPO \u003d \u0027You cannot proceed without the required repository.\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"export const CURRENT_PHASE_REPO_CLOSED \u003d \"Current Phase\u0027s Repository has not been opened.\";"},{"lineNumber":12,"author":{"gitId":"-"},"content":"export const BUG_REPORTING_INVALID_ROLE \u003d \"\u0027Bug-Reporting Phase\u0027s repository initialisation is only available to Students.\u0027\";"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class RepoCreatorService {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService, private userService: UserService, private repoCreationConfirmationDialog: MatDialog) {}"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   * Prompts user to allow WATcher to create a repo, if repo does not"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   * exist and current phase is the bug reporting phase."},{"lineNumber":23,"author":{"gitId":"-"},"content":"   * @param currentPhase the current phase of the session."},{"lineNumber":24,"author":{"gitId":"-"},"content":"   * @param phaseRepo the name of the specified repository."},{"lineNumber":25,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  public requestRepoCreationPermissions("},{"lineNumber":27,"author":{"gitId":"-"},"content":"    currentPhase: Phase,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    phaseRepo: string"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  ): UnaryFunction\u003cObservable\u003cboolean\u003e, Observable\u003cboolean | null\u003e\u003e {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    return pipe("},{"lineNumber":31,"author":{"gitId":"-"},"content":"      flatMap((isRepoPresent: boolean) \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!isRepoPresent \u0026\u0026 currentPhase \u003d\u003d\u003d Phase.issuesViewer) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          return this.openRepoCreationConfirmation(phaseRepo);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          return of(null);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * Launches the SessionFixConfirmation Dialog."},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * @param phaseRepo the name of the specified repository."},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * @return Observable\u003cboolean\u003e - Representing user\u0027s permission grant."},{"lineNumber":45,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  private openRepoCreationConfirmation(phaseRepo: string): Observable\u003cboolean\u003e {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    const dialogRef: MatDialogRef\u003cSessionFixConfirmationComponent\u003e \u003d this.repoCreationConfirmationDialog.open("},{"lineNumber":48,"author":{"gitId":"-"},"content":"      SessionFixConfirmationComponent,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        data: { user: this.userService.currentUser.loginId, repoName: phaseRepo }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    return dialogRef.afterClosed();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * Checks if the current phase and current user role match the given permissions"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * for the user to create the phase repository if deemed necessary"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * @param currentPhase the current phase of the session."},{"lineNumber":60,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  public verifyRepoCreationPermissions(currentPhase: Phase): UnaryFunction\u003cObservable\u003cboolean | null\u003e, Observable\u003cboolean | null\u003e\u003e {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    return pipe("},{"lineNumber":63,"author":{"gitId":"-"},"content":"      tap((repoCreationPermission: boolean | null) \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (repoCreationPermission \u003d\u003d\u003d null) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          return;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (repoCreationPermission \u003d\u003d\u003d false) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          throw new Error(MISSING_REQUIRED_REPO);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        } else if (currentPhase !\u003d\u003d Phase.issuesViewer) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          throw new Error(CURRENT_PHASE_REPO_CLOSED);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   * Attempts to create the repository if permissions have been given to do so."},{"lineNumber":79,"author":{"gitId":"-"},"content":"   * @param phaseRepo the name of the specified repository."},{"lineNumber":80,"author":{"gitId":"-"},"content":"   * @return - Dummy Observable to give the API sometime to propagate if the creation of the new"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   *           repository is needed since the API Call used here does not return any response."},{"lineNumber":82,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  public attemptRepoCreation(phaseRepo: string): UnaryFunction\u003cObservable\u003cboolean | null\u003e, Observable\u003cboolean | null\u003e\u003e {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    return pipe("},{"lineNumber":85,"author":{"gitId":"-"},"content":"      flatMap((repoCreationPermission: boolean | null) \u003d\u003e {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (repoCreationPermission \u003d\u003d\u003d null) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"          // No Session Fix Necessary"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          return of(null);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"          this.githubService.createRepository(phaseRepo);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          return new Observable((subscriber) \u003d\u003e {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            setTimeout(() \u003d\u003e subscriber.next(true), 1000);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   * Checks if the specified repository has been created."},{"lineNumber":101,"author":{"gitId":"-"},"content":"   * @param phaseOwner the user or organization holding the specified repository."},{"lineNumber":102,"author":{"gitId":"-"},"content":"   * @param phaseRepo the name of the specified repository."},{"lineNumber":103,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  public verifyRepoCreation(phaseOwner: string, phaseRepo: string): UnaryFunction\u003cObservable\u003cboolean | null\u003e, Observable\u003cboolean\u003e\u003e {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    return pipe("},{"lineNumber":106,"author":{"gitId":"-"},"content":"      flatMap((isFixAttempted: boolean | null) \u003d\u003e {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!isFixAttempted) {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"          // If no fix has been attempted, there is no need to verify fix outcome."},{"lineNumber":109,"author":{"gitId":"-"},"content":"          return of(true);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          // Verify that Repository has been created if a fix attempt has occurred."},{"lineNumber":112,"author":{"gitId":"-"},"content":"          return this.githubService.isRepositoryPresent(phaseOwner, phaseRepo);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":116}},{"path":"src/app/core/services/session-fix-confirmation/session-fix-confirmation.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatDialogRef, MAT_DIALOG_DATA } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"export interface RepositoryData {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  user: string;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  repoName: string;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  selector: \u0027app-session-fix-confirmation\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-fix-confirmation.component.html\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-fix-confirmation.component.css\u0027]"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class SessionFixConfirmationComponent implements OnInit {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  constructor(public dialogRef: MatDialogRef\u003cSessionFixConfirmationComponent\u003e, @Inject(MAT_DIALOG_DATA) public data: RepositoryData) {}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  ngOnInit() {}"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":17}},{"path":"src/app/core/services/user.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../models/github-user.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { User, UserRole } from \u0027../models/user.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":11,"author":{"gitId":"-"},"content":"})"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Responsible for creation of users and teams within the WATcher application."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export class UserService {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  public currentUser: User;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":"  constructor(private githubService: GithubService, private logger: LoggingService) {}"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   * Get the authenticated user if it exist."},{"lineNumber":23,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  getAuthenticatedUser(): Observable\u003cGithubUser\u003e {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    return this.githubService.fetchAuthenticatedUser().pipe("},{"lineNumber":26,"author":{"gitId":"-"},"content":"      map((data: GithubUser) \u003d\u003e {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return data;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  createUserModel(userLoginId: string): Observable\u003cUser\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.currentUser \u003d \u003cUser\u003e{ loginId: userLoginId, role: UserRole.Student };"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // to refactor"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    const o \u003d new Observable\u003cUser\u003e((s) \u003d\u003e {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      s.next(this.currentUser);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      s.complete();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    return o;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  reset() {"},{"lineNumber":43,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.logger.info(\u0027UserService: Clearing current user\u0027);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.currentUser \u003d undefined;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":1,"-":43,"cheehongw":2}},{"path":"src/app/issues-viewer/card-view/card-view.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card-column\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"column-header\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cmat-card\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cmat-card-header\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        \u003cdiv"},{"lineNumber":6,"author":{"gitId":"-"},"content":"          mat-card-avatar"},{"lineNumber":7,"author":{"gitId":"-"},"content":"          [ngStyle]\u003d\"{"},{"lineNumber":8,"author":{"gitId":"-"},"content":"            background: \u0027url(\u0027 + this.assignee.avatar_url + \u0027)\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            \u0027background-size\u0027: \u002740px\u0027"},{"lineNumber":10,"author":{"gitId":"-"},"content":"          }\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003e\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003cmat-card-title\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          {{ this.assignee !\u003d\u003d undefined ? this.assignee.login : \u0027\u0027 }}"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003c/mat-card-title\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row-count\"\u003e{{ this.issues.count }}\u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/mat-card-header\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/mat-card\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cdiv *ngFor\u003d\"let issue of this.issues$ | async; index as i\"\u003e"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003capp-issue-pr-card [issue]\u003d\"issue\" [dropdownFilter]\u003d\"issues.dropdownFilter\"\u003e\u003c/app-issue-pr-card\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003cmat-card *ngIf\u003d\"this.issues.isLoading$ | async\" style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/mat-card\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  \u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"Eclipse-Dominator":1,"-":27}},{"path":"src/app/issues-viewer/card-view/card-view.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatPaginator } from \u0027@angular/material/paginator\u0027;"},{"lineNumber":3,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSort } from \u0027@angular/material/sort\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../../core/models/github-user.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssuesDataTable } from \u0027../../shared/issue-tables/IssuesDataTable\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  selector: \u0027app-card-view\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./card-view.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./card-view.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Displays issues as Cards."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"export class CardViewComponent implements OnInit, AfterViewInit, OnDestroy {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  @Input() headers: string[];"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @Input() assignee?: GithubUser \u003d undefined;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  @Input() filters?: any \u003d undefined;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  @Input() sort?: MatSort \u003d undefined;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  issues: IssuesDataTable;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  issues$: Observable\u003cIssue[]\u003e;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"  constructor(public issueService: IssueService) {}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.issues \u003d new IssuesDataTable(this.issueService, this.sort, this.paginator, this.headers, this.assignee, this.filters);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      this.issues.loadIssues();"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      this.issues$ \u003d this.issues.connect();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  ngOnDestroy(): void {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      this.issues.disconnect();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":2,"Eclipse-Dominator":1,"-":45}},{"path":"src/app/issues-viewer/issues-viewer.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".issue-table {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  width: 25%;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  min-width: 200px;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  max-width: 400px;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":".dropdown-filters .mat-form-field {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  margin: 8px;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  font-size: 14px;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  max-width: 20%;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  width: 25%; /* depends on number of filters*/"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":".search-bar {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  width: 90%;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":".dropdown-filters {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":".label-filter-grid-tile {"},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":"  width: 100%;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":".submit-button {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  margin-left: 8px;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":".switch-repo-tile {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  background-color: lightblue;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":1,"-":31}},{"path":"src/app/issues-viewer/issues-viewer.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"  \u003cmat-grid-list cols\u003d\"7\" rowHeight\u003d\"80px\"\u003e"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003cmat-grid-tile colspan\u003d\"3\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cmat-form-field class\u003d\"search-bar\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\" /\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \u003c/mat-form-field\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cmat-grid-tile colspan\u003d\"3\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"dropdown-filters\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003cmat-form-field appearance\u003d\"standard\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          \u003cmat-label\u003eStatus\u003c/mat-label\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003cmat-select [(value)]\u003d\"this.dropdownFilter.status\" (selectionChange)\u003d\"applyDropdownFilter()\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"all\"\u003eAll\u003c/mat-option\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"open\"\u003eOpen\u003c/mat-option\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"closed\"\u003eClosed\u003c/mat-option\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          \u003c/mat-select\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cmat-form-field appearance\u003d\"standard\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          \u003cmat-label\u003eType\u003c/mat-label\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003cmat-select [(value)]\u003d\"this.dropdownFilter.type\" (selectionChange)\u003d\"applyDropdownFilter()\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"all\"\u003eAll\u003c/mat-option\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"issue\"\u003eIssue\u003c/mat-option\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"pullrequest\"\u003ePull Request\u003c/mat-option\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/mat-select\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cmat-form-field appearance\u003d\"standard\" matSort [matSortDisableClear]\u003d\"true\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cmat-label\u003eSort\u003c/mat-label\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cmat-select [(value)]\u003d\"this.dropdownFilter.sort\" (selectionChange)\u003d\"applyDropdownFilter()\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"id\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cspan mat-sort-header\u003d\"id\"\u003eID\u003c/span\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/mat-option\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"title\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003cspan mat-sort-header\u003d\"title\"\u003eTitle\u003c/span\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/mat-option\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cmat-option value\u003d\"date\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cspan mat-sort-header\u003d\"date\"\u003eDate Updated\u003c/span\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003c/mat-option\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/mat-select\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmat-form-field appearance\u003d\"standard\"\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cmat-label\u003eMilestone\u003c/mat-label\u003e"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"          \u003cmat-select #milestoneSelectorRef [(value)]\u003d\"this.dropdownFilter.milestones\" (selectionChange)\u003d\"applyDropdownFilter()\" multiple\u003e"},{"lineNumber":44,"author":{"gitId":"Echomo-Xinyu"},"content":"            \u003cmat-option *ngFor\u003d\"let milestone of this.milestoneService.milestones\" [value]\u003d\"milestone.number\"\u003e"},{"lineNumber":45,"author":{"gitId":"Echomo-Xinyu"},"content":"              {{ milestone.title }}"},{"lineNumber":46,"author":{"gitId":"Echomo-Xinyu"},"content":"            \u003c/mat-option\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/mat-select\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003cmat-grid-tile class\u003d\"label-filter-grid-tile\" colspan\u003d\"1\"\u003e"},{"lineNumber":53,"author":{"gitId":"Eclipse-Dominator"},"content":"      \u003capp-label-filter-bar [selectedLabels]\u003d\"this.labelFilter$\" [hiddenLabels]\u003d\"this.hiddenLabels$\"\u003e\u003c/app-label-filter-bar\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003c/mat-grid-tile\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u003c/mat-grid-list\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003cdiv style\u003d\"display: flex\"\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003capp-card-view"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      *ngFor\u003d\"let assignee of assignees\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"      class\u003d\"issue-table\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"      [assignee]\u003d\"assignee\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"      [headers]\u003d\"this.displayedColumns\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"      [sort]\u003d\"this.matSort\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003e\u003c/app-card-view\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"Eclipse-Dominator":3,"Echomo-Xinyu":3,"-":58,"cheehongw":2}},{"path":"src/app/issues-viewer/issues-viewer.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSelect } from \u0027@angular/material/select\u0027;"},{"lineNumber":3,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSort } from \u0027@angular/material/sort\u0027;"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { BehaviorSubject, of, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../core/models/github-user.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Repo } from \u0027../core/models/repo.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../core/services/github.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../core/services/issue.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../core/services/logging.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { MilestoneService } from \u0027../core/services/milestone.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../core/services/phase.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { DEFAULT_DROPDOWN_FILTER, DropdownFilter } from \u0027../shared/issue-tables/IssuesDataTable\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { CardViewComponent } from \u0027./card-view/card-view.component\u0027;"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":"import { LabelFilterBarComponent } from \u0027./label-filter-bar/label-filter-bar.component\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  selector: \u0027app-issues-viewer\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./issues-viewer.component.html\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./issues-viewer.component.css\u0027]"},{"lineNumber":21,"author":{"gitId":"-"},"content":"})"},{"lineNumber":22,"author":{"gitId":"-"},"content":"export class IssuesViewerComponent implements OnInit, AfterViewInit, OnDestroy {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  readonly displayedColumns \u003d [TABLE_COLUMNS.ID, TABLE_COLUMNS.TITLE, TABLE_COLUMNS.ASSIGNEE, TABLE_COLUMNS.LABEL];"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"  /** Observes for any change in repo*/"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"  repoChangeSubscription: Subscription;"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  /** Users to show as columns */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  assignees: GithubUser[];"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  /** Selected dropdown filter value */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  dropdownFilter: DropdownFilter \u003d DEFAULT_DROPDOWN_FILTER;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  /** Selected label filters, instance passed into LabelChipBar to populate */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  labelFilter$ \u003d new BehaviorSubject\u003cstring[]\u003e([]);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  labelFilterSubscription: Subscription;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"Eclipse-Dominator"},"content":"  /** Selected label to hide */"},{"lineNumber":39,"author":{"gitId":"Eclipse-Dominator"},"content":"  hiddenLabels$ \u003d new BehaviorSubject\u003cSet\u003cstring\u003e\u003e(new Set());"},{"lineNumber":40,"author":{"gitId":"Eclipse-Dominator"},"content":"  hiddenLabelSubscription: Subscription;"},{"lineNumber":41,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  @ViewChildren(CardViewComponent) cardViews: QueryList\u003cCardViewComponent\u003e;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  /** One MatSort controls all IssueDataTables */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  @ViewChild(MatSort, { static: true }) matSort: MatSort;"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"Eclipse-Dominator"},"content":"  @ViewChild(LabelFilterBarComponent, { static: true }) labelFilterBar: LabelFilterBarComponent;"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"  @ViewChild(\u0027milestoneSelectorRef\u0027, { static: false }) milestoneSelectorRef: MatSelect;"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public phaseService: PhaseService,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public githubService: GithubService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public issueService: IssueService,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public milestoneService: MilestoneService,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private logger: LoggingService"},{"lineNumber":57,"author":{"gitId":"cheehongw"},"content":"  ) {"},{"lineNumber":58,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.repoChangeSubscription \u003d this.phaseService.repoChanged$.subscribe((newRepo) \u003d\u003e this.initialize());"},{"lineNumber":59,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    this.initialize();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /** Apply dropdown filter when LabelChipBar populates with label filters */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    this.labelFilterSubscription \u003d this.labelFilter$.subscribe((labels) \u003d\u003e {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      this.dropdownFilter.labels \u003d labels;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      this.applyDropdownFilter();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":71,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":72,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.hiddenLabelSubscription \u003d this.hiddenLabels$.subscribe((labels) \u003d\u003e {"},{"lineNumber":73,"author":{"gitId":"Eclipse-Dominator"},"content":"      this.dropdownFilter.hiddenLabels \u003d labels;"},{"lineNumber":74,"author":{"gitId":"Eclipse-Dominator"},"content":"      this.applyDropdownFilter();"},{"lineNumber":75,"author":{"gitId":"Eclipse-Dominator"},"content":"    });"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  ngOnDestroy(): void {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    this.labelFilterSubscription.unsubscribe();"},{"lineNumber":80,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.hiddenLabelSubscription.unsubscribe();"},{"lineNumber":81,"author":{"gitId":"cheehongw"},"content":"    this.repoChangeSubscription.unsubscribe();"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":85,"author":{"gitId":"-"},"content":"   * Signals to IssuesDataTable that a change has occurred in filter."},{"lineNumber":86,"author":{"gitId":"-"},"content":"   * @param filterValue"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  applyFilter(filterValue: string) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    this.cardViews.forEach((v) \u003d\u003e (v.issues.filter \u003d filterValue));"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":93,"author":{"gitId":"-"},"content":"   * Signals to IssuesDataTable that a change has occurred in dropdown filter."},{"lineNumber":94,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  applyDropdownFilter() {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    this.cardViews.forEach((v) \u003d\u003e (v.issues.dropdownFilter \u003d this.dropdownFilter));"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   * Fetch and initialize all information from repository to populate Issue Dashboard."},{"lineNumber":101,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  private initialize() {"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    this.checkIfValidRepository().subscribe((isValidRepository) \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      if (!isValidRepository) {"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        throw new Error(\u0027Invalid repository name. Please provide repository name in the format Org/Repository.\u0027);"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      }"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    });"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    // Fetch assignees"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    this.assignees \u003d [];"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    this.githubService.getUsersAssignable().subscribe((x) \u003d\u003e (this.assignees \u003d x));"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    // Fetch issues"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    this.issueService.reset(false);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    this.issueService.reloadAllIssues();"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    // Fetch labels"},{"lineNumber":119,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.labelFilterBar.load();"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"Echomo-Xinyu"},"content":"    // Fetch milestones and update dropdown filter"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    this.milestoneService.fetchMilestones().subscribe("},{"lineNumber":123,"author":{"gitId":"-"},"content":"      (response) \u003d\u003e {"},{"lineNumber":124,"author":{"gitId":"cheehongw"},"content":"        this.logger.debug(\u0027IssuesViewerComponent: Fetched milestones from Github\u0027);"},{"lineNumber":125,"author":{"gitId":"Echomo-Xinyu"},"content":"        this.milestoneService.milestones.forEach((milestone) \u003d\u003e this.dropdownFilter.milestones.push(milestone.number));"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      (err) \u003d\u003e {},"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      () \u003d\u003e {}"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":132,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  /**"},{"lineNumber":133,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"   * Checks if our current repository available on phase service is indeed a valid repository"},{"lineNumber":134,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"   */"},{"lineNumber":135,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  private checkIfValidRepository() {"},{"lineNumber":136,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    const currentRepo \u003d this.phaseService.currentRepo;"},{"lineNumber":137,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":138,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    if (Repo.isInvalidRepoName(currentRepo)) {"},{"lineNumber":139,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      return of(false);"},{"lineNumber":140,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":142,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    return this.githubService.isRepositoryPresent(currentRepo.owner, currentRepo.name);"},{"lineNumber":143,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  }"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":4,"Eclipse-Dominator":14,"vigneshsankariyer1234567890":21,"-":97,"cheehongw":8}},{"path":"src/app/issues-viewer/issues-viewer.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MarkdownModule } from \u0027ngx-markdown\u0027;"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"import { IssuesPrCardModule } from \u0027../shared/issue-pr-card/issue-pr-card.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { SharedModule } from \u0027../shared/shared.module\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { CardViewComponent } from \u0027./card-view/card-view.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { IssuesViewerRoutingModule } from \u0027./issues-viewer-routing.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssuesViewerComponent } from \u0027./issues-viewer.component\u0027;"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"import { LabelFilterBarComponent } from \u0027./label-filter-bar/label-filter-bar.component\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"  imports: [IssuesViewerRoutingModule, IssuesPrCardModule, SharedModule, MarkdownModule.forChild()],"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"  declarations: [IssuesViewerComponent, CardViewComponent, LabelFilterBarComponent]"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class IssuesViewerModule {}"}],"authorContributionMap":{"Eclipse-Dominator":4,"-":10}},{"path":"src/app/issues-viewer/label-filter-bar/label-filter-bar.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":".popup-container {"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"  padding-top: 0px;"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"  padding-left: 15px;"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"  padding-right: 15px;"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"  flex-direction: column;"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":".popupmenu {"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"  width: max-content;"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":".scroll-container {"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"  height: 400px;"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":"  width: 100%;"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":"  overflow-y: auto;"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"  -ms-overflow-style: none; /* IE and Edge */"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"  scrollbar-width: none; /* Firefox */"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":".flexbox-container {"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"  display: flex;"},{"lineNumber":22,"author":{"gitId":"Eclipse-Dominator"},"content":"  flex-direction: row;"},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":"  justify-content: flex-start;"},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":"  align-items: center;"},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":26,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":27,"author":{"gitId":"Eclipse-Dominator"},"content":".scroll-container::-webkit-scrollbar {"},{"lineNumber":28,"author":{"gitId":"Eclipse-Dominator"},"content":"  display: none; /* Hide scrollbar for Chrome, Safari and Opera */"},{"lineNumber":29,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":31,"author":{"gitId":"Eclipse-Dominator"},"content":".input-field {"},{"lineNumber":32,"author":{"gitId":"Eclipse-Dominator"},"content":"  width: 100%;"},{"lineNumber":33,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":34,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":35,"author":{"gitId":"Eclipse-Dominator"},"content":".list-option {"},{"lineNumber":36,"author":{"gitId":"Eclipse-Dominator"},"content":"  width: 100%;"},{"lineNumber":37,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":38,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":39,"author":{"gitId":"Eclipse-Dominator"},"content":".mat-chip {"},{"lineNumber":40,"author":{"gitId":"Eclipse-Dominator"},"content":"  position: inherit;"},{"lineNumber":41,"author":{"gitId":"Eclipse-Dominator"},"content":"  border-radius: 6px;"},{"lineNumber":42,"author":{"gitId":"Eclipse-Dominator"},"content":"  font-size: 12px;"},{"lineNumber":43,"author":{"gitId":"Eclipse-Dominator"},"content":"  padding: 11px 7px;"},{"lineNumber":44,"author":{"gitId":"Eclipse-Dominator"},"content":"  min-height: 16px;"},{"lineNumber":45,"author":{"gitId":"Eclipse-Dominator"},"content":"  margin: 0px;"},{"lineNumber":46,"author":{"gitId":"Eclipse-Dominator"},"content":"  top: 50%;"},{"lineNumber":47,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":48,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":49,"author":{"gitId":"Echomo-Xinyu"},"content":".mat-stroked-button {"},{"lineNumber":50,"author":{"gitId":"Echomo-Xinyu"},"content":"  font-weight: normal;"},{"lineNumber":51,"author":{"gitId":"Echomo-Xinyu"},"content":"}"},{"lineNumber":52,"author":{"gitId":"Echomo-Xinyu"},"content":""},{"lineNumber":53,"author":{"gitId":"Eclipse-Dominator"},"content":".hidden {"},{"lineNumber":54,"author":{"gitId":"Eclipse-Dominator"},"content":"  display: none !important;"},{"lineNumber":55,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":56,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":57,"author":{"gitId":"Eclipse-Dominator"},"content":"mat-list-option {"},{"lineNumber":58,"author":{"gitId":"Eclipse-Dominator"},"content":"  width: max-content;"},{"lineNumber":59,"author":{"gitId":"Eclipse-Dominator"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":55,"Echomo-Xinyu":4}},{"path":"src/app/issues-viewer/label-filter-bar/label-filter-bar.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"Echomo-Xinyu"},"content":"\u003cbutton mat-stroked-button *ngIf\u003d\"loaded\" [matMenuTriggerFor]\u003d\"menu\"\u003e"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"  {{ selectedLabelNames.length \u003d\u003d 0 ? \u0027All\u0027 : selectedLabelNames.length }} Selected | {{ hiddenLabelNames?.size || 0 }} Hidden ▾"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003c/button\u003e"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":5,"author":{"gitId":"Echomo-Xinyu"},"content":"\u003cbutton mat-stroked-button disabled *ngIf\u003d\"!loaded\" color\u003d\"accent\"\u003e"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"  \u003cmat-progress-bar mode\u003d\"query\"\u003e\u003c/mat-progress-bar\u003e"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003c/button\u003e"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003cmat-menu #menu\u003d\"matMenu\" class\u003d\"popupmenu\"\u003e"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"  \u003cdiv (click)\u003d\"$event.stopPropagation()\" class\u003d\"popup-container\"\u003e"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003cmat-form-field appearance\u003d\"standard\" class\u003d\"input-field\"\u003e"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"      \u003cmat-label\u003eLabels\u003c/mat-label\u003e"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"      \u003cinput #input matInput placeholder\u003d\"Find labels\" /\u003e"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003c/mat-form-field\u003e"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003cdiv class\u003d\"scroll-container\"\u003e"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"      \u003cmat-selection-list [(ngModel)]\u003d\"selectedLabelNames\" (selectionChange)\u003d\"selectedLabels.next(selectedLabelNames)\"\u003e"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":"        \u003cmat-list-option"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"          #option"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":"          *ngFor\u003d\"let label of allLabels\""},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"          [value]\u003d\"label.name\""},{"lineNumber":22,"author":{"gitId":"Eclipse-Dominator"},"content":"          [selected]\u003d\"selectedLabelNames.includes(label.name)\""},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":"          class\u003d\"list-option\""},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":"          [class.hidden]\u003d\"filter(input.value, label.name)\""},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":"        \u003e"},{"lineNumber":26,"author":{"gitId":"Eclipse-Dominator"},"content":"          \u003cdiv class\u003d\"flexbox-container\"\u003e"},{"lineNumber":27,"author":{"gitId":"Eclipse-Dominator"},"content":"            \u003cbutton mat-icon-button *ngIf\u003d\"!hiddenLabelNames.has(label.name)\" (click)\u003d\"hide(label.name); $event.stopPropagation()\"\u003e"},{"lineNumber":28,"author":{"gitId":"Eclipse-Dominator"},"content":"              \u003cmat-icon\u003evisibility\u003c/mat-icon\u003e"},{"lineNumber":29,"author":{"gitId":"Eclipse-Dominator"},"content":"            \u003c/button\u003e"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"            \u003cbutton mat-icon-button *ngIf\u003d\"hiddenLabelNames.has(label.name)\" (click)\u003d\"show(label.name); $event.stopPropagation()\"\u003e"},{"lineNumber":31,"author":{"gitId":"Eclipse-Dominator"},"content":"              \u003cmat-icon\u003evisibility_off\u003c/mat-icon\u003e"},{"lineNumber":32,"author":{"gitId":"Eclipse-Dominator"},"content":"            \u003c/button\u003e"},{"lineNumber":33,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":34,"author":{"gitId":"Eclipse-Dominator"},"content":"            \u003cmat-chip"},{"lineNumber":35,"author":{"gitId":"Eclipse-Dominator"},"content":"              [ngStyle]\u003d\"labelService.setLabelStyle(label.color)\""},{"lineNumber":36,"author":{"gitId":"Eclipse-Dominator"},"content":"              [disabled]\u003d\"hiddenLabelNames.has(label.name)\""},{"lineNumber":37,"author":{"gitId":"Eclipse-Dominator"},"content":"              (click)\u003d\"simulateClick(option); $event.stopPropagation()\""},{"lineNumber":38,"author":{"gitId":"Eclipse-Dominator"},"content":"            \u003e"},{"lineNumber":39,"author":{"gitId":"Eclipse-Dominator"},"content":"              {{ label.name }}"},{"lineNumber":40,"author":{"gitId":"Eclipse-Dominator"},"content":"            \u003c/mat-chip\u003e"},{"lineNumber":41,"author":{"gitId":"Eclipse-Dominator"},"content":"          \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"Eclipse-Dominator"},"content":"        \u003c/mat-list-option\u003e"},{"lineNumber":43,"author":{"gitId":"Eclipse-Dominator"},"content":"      \u003c/mat-selection-list\u003e"},{"lineNumber":44,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"Eclipse-Dominator"},"content":"  \u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003c/mat-menu\u003e"}],"authorContributionMap":{"Echomo-Xinyu":3,"Eclipse-Dominator":43}},{"path":"src/app/issues-viewer/label-filter-bar/label-filter-bar.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"import { Component, Input, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatListOption } from \u0027@angular/material/list\u0027;"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"import { BehaviorSubject } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"import { LabelService } from \u0027../../core/services/label.service\u0027;"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"export type simplifiedLabel \u003d {"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"  name: string;"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"  color: string;"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"};"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"@Component({"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"  selector: \u0027app-label-filter-bar\u0027,"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":"  templateUrl: \u0027./label-filter-bar.component.html\u0027,"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":"  styleUrls: [\u0027./label-filter-bar.component.css\u0027]"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"})"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"export class LabelFilterBarComponent implements OnInit {"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":"  @Input() selectedLabels: BehaviorSubject\u003cstring[]\u003e;"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"  @Input() hiddenLabels: BehaviorSubject\u003cSet\u003cstring\u003e\u003e;"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"  allLabels: simplifiedLabel[];"},{"lineNumber":22,"author":{"gitId":"Eclipse-Dominator"},"content":"  selectedLabelNames: string[] \u003d [];"},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":"  hiddenLabelNames: Set\u003cstring\u003e \u003d new Set();"},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":"  loaded \u003d false;"},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":26,"author":{"gitId":"Eclipse-Dominator"},"content":"  constructor(private labelService: LabelService, private logger: LoggingService) {}"},{"lineNumber":27,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":28,"author":{"gitId":"Eclipse-Dominator"},"content":"  ngOnInit() {"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    this.setLoaded(false);"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.load();"},{"lineNumber":31,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":33,"author":{"gitId":"Eclipse-Dominator"},"content":"  hide(label: string): void {"},{"lineNumber":34,"author":{"gitId":"Eclipse-Dominator"},"content":"    if (this.hiddenLabelNames.has(label)) {"},{"lineNumber":35,"author":{"gitId":"Eclipse-Dominator"},"content":"      return;"},{"lineNumber":36,"author":{"gitId":"Eclipse-Dominator"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":38,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.hiddenLabelNames.add(label);"},{"lineNumber":39,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.hiddenLabels.next(this.hiddenLabelNames);"},{"lineNumber":40,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":42,"author":{"gitId":"Eclipse-Dominator"},"content":"  /** Show labels that were hidden */"},{"lineNumber":43,"author":{"gitId":"Eclipse-Dominator"},"content":"  show(label: string): void {"},{"lineNumber":44,"author":{"gitId":"Eclipse-Dominator"},"content":"    if (!this.hiddenLabelNames.has(label)) {"},{"lineNumber":45,"author":{"gitId":"Eclipse-Dominator"},"content":"      return;"},{"lineNumber":46,"author":{"gitId":"Eclipse-Dominator"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.hiddenLabelNames.delete(label);"},{"lineNumber":48,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.hiddenLabels.next(this.hiddenLabelNames);"},{"lineNumber":49,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":51,"author":{"gitId":"Eclipse-Dominator"},"content":"  /**"},{"lineNumber":52,"author":{"gitId":"Eclipse-Dominator"},"content":"   * chip as of the current project version consumes click events"},{"lineNumber":53,"author":{"gitId":"Eclipse-Dominator"},"content":"   * this method is used as an workaround the issue."},{"lineNumber":54,"author":{"gitId":"Eclipse-Dominator"},"content":"   * https://github.com/angular/components/issues/19759"},{"lineNumber":55,"author":{"gitId":"Eclipse-Dominator"},"content":"   */"},{"lineNumber":56,"author":{"gitId":"Eclipse-Dominator"},"content":"  simulateClick(el: MatListOption): void {"},{"lineNumber":57,"author":{"gitId":"Eclipse-Dominator"},"content":"    if (el.disabled) {"},{"lineNumber":58,"author":{"gitId":"Eclipse-Dominator"},"content":"      return;"},{"lineNumber":59,"author":{"gitId":"Eclipse-Dominator"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Eclipse-Dominator"},"content":"    el.toggle();"},{"lineNumber":61,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.selectedLabels.next(this.selectedLabelNames);"},{"lineNumber":62,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":63,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":64,"author":{"gitId":"Eclipse-Dominator"},"content":"  /** loads in the labels in the repository */"},{"lineNumber":65,"author":{"gitId":"Eclipse-Dominator"},"content":"  public load() {"},{"lineNumber":66,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.labelService.fetchLabels().subscribe("},{"lineNumber":67,"author":{"gitId":"Eclipse-Dominator"},"content":"      (response) \u003d\u003e {"},{"lineNumber":68,"author":{"gitId":"Eclipse-Dominator"},"content":"        this.logger.debug(\u0027LabelFilterBarComponent: Fetched labels from Github\u0027);"},{"lineNumber":69,"author":{"gitId":"Eclipse-Dominator"},"content":"      },"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      (err) \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.logger.info(`LabelFilterBarComponent: Encountered errors (${err})`);"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.setLoaded(true);"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      },"},{"lineNumber":74,"author":{"gitId":"Eclipse-Dominator"},"content":"      () \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"Eclipse-Dominator"},"content":"        this.initialize();"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.setLoaded(true);"},{"lineNumber":77,"author":{"gitId":"Eclipse-Dominator"},"content":"      }"},{"lineNumber":78,"author":{"gitId":"Eclipse-Dominator"},"content":"    );"},{"lineNumber":79,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":80,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":81,"author":{"gitId":"Eclipse-Dominator"},"content":"  private initialize() {"},{"lineNumber":82,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.allLabels \u003d this.labelService.labels.map((label) \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"Eclipse-Dominator"},"content":"      return {"},{"lineNumber":84,"author":{"gitId":"Eclipse-Dominator"},"content":"        name: label.getFormattedName(),"},{"lineNumber":85,"author":{"gitId":"Eclipse-Dominator"},"content":"        color: label.color"},{"lineNumber":86,"author":{"gitId":"Eclipse-Dominator"},"content":"      };"},{"lineNumber":87,"author":{"gitId":"Eclipse-Dominator"},"content":"    });"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  }"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  private setLoaded(nextLoadedValue: boolean) {"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    this.loaded \u003d nextLoadedValue;"},{"lineNumber":92,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":93,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":94,"author":{"gitId":"Eclipse-Dominator"},"content":"  filter(filter: string, target: string): boolean {"},{"lineNumber":95,"author":{"gitId":"Eclipse-Dominator"},"content":"    return !target.toLowerCase().includes(filter.toLowerCase());"},{"lineNumber":96,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"Eclipse-Dominator"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":86,"Echomo-Xinyu":1,"vigneshsankariyer1234567890":10}},{"path":"src/app/shared/error-toasters/error-toaster.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MaterialModule } from \u0027../material.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { FormErrorComponent } from \u0027./form-error/form-error.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GeneralMessageErrorComponent } from \u0027./general-message-error/general-message-error.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { InvalidCredentialsErrorComponent } from \u0027./invalid-credentials-error/invalid-credentials-error.component\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ToasterComponent } from \u0027./toaster/toaster.component\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  imports: [CommonModule, MaterialModule],"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  declarations: [GeneralMessageErrorComponent, FormErrorComponent, InvalidCredentialsErrorComponent, ToasterComponent],"},{"lineNumber":12,"author":{"gitId":"Echomo-Xinyu"},"content":"  exports: [GeneralMessageErrorComponent, FormErrorComponent, InvalidCredentialsErrorComponent]"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class ErrorToasterModule {}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":13}},{"path":"src/app/shared/error-toasters/form-error/form-error.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MAT_SNACK_BAR_DATA } from \u0027@angular/material/snack-bar\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  selector: \u0027app-form-error\u0027,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./form-error.component.html\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"})"},{"lineNumber":8,"author":{"gitId":"-"},"content":"export class FormErrorComponent {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) {}"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":9}},{"path":"src/app/shared/error-toasters/general-message-error/general-message-error.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MAT_SNACK_BAR_DATA } from \u0027@angular/material/snack-bar\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  selector: \u0027app-general-message-error\u0027,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./general-message-error.component.html\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"})"},{"lineNumber":8,"author":{"gitId":"-"},"content":"export class GeneralMessageErrorComponent {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) {}"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":9}},{"path":"src/app/shared/error-toasters/invalid-credentials-error/invalid-credentials-error.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSnackBarRef, MAT_SNACK_BAR_DATA } from \u0027@angular/material/snack-bar\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  selector: \u0027app-form-error\u0027,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./invalid-credentials-error.component.html\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"})"},{"lineNumber":8,"author":{"gitId":"-"},"content":"export class InvalidCredentialsErrorComponent {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  constructor(public snackBarRef: MatSnackBarRef\u003cInvalidCredentialsErrorComponent\u003e, @Inject(MAT_SNACK_BAR_DATA) public data: any) {}"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":9}},{"path":"src/app/shared/error-toasters/toaster/toaster.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSnackBarRef } from \u0027@angular/material/snack-bar\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  selector: \u0027app-toaster\u0027,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./toaster.component.html\u0027,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./toaster.component.css\u0027]"},{"lineNumber":8,"author":{"gitId":"-"},"content":"})"},{"lineNumber":9,"author":{"gitId":"-"},"content":"export class ToasterComponent implements OnInit {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  constructor(public snackBarRef: MatSnackBarRef\u003cToasterComponent\u003e) {}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  ngOnInit() {}"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":12}},{"path":"src/app/shared/issue-pr-card/issue-pr-card-header/issue-pr-card-header.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"span.octicon {"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"    margin-right: 8px;"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"    display: inline-flex;"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":".mat-card-title {"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"    display: flex;"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"    align-items: center;"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"    font-size: 12px;"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"    text-align: left;"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"    overflow: auto;"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":".column-header .mat-card-title {"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":"font-size: 14px;"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"  "},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":".mat-card-header {"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"    display: flex;"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":"    align-items: center;"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"    justify-content: center;"},{"lineNumber":22,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":":host ::ng-deep .mat-card-header-text {"},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":"    margin: 2px;"},{"lineNumber":26,"author":{"gitId":"Eclipse-Dominator"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":26}},{"path":"src/app/shared/issue-pr-card/issue-pr-card-header/issue-pr-card-header.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003cmat-card-header\u003e"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003cmat-card-title\u003e"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"        \u003cspan class\u003d\"octicon\" [octicon]\u003d\"getOcticon()\" [color]\u003d\"getIssueOpenOrCloseColor()\"\u003e\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"        #{{ issue.id }}: {{ fitTitleText() }}"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003c/mat-card-title\u003e"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003c/mat-card-header\u003e"}],"authorContributionMap":{"Eclipse-Dominator":6}},{"path":"src/app/shared/issue-pr-card/issue-pr-card-header/issue-pr-card-header.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"import { Component, Input } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"import { Issue } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"  selector: \u0027app-issue-pr-card-header\u0027,"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"  templateUrl: \u0027./issue-pr-card-header.component.html\u0027,"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"  styleUrls: [\u0027./issue-pr-card-header.component.css\u0027]"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"})"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"export class IssuePrCardHeaderComponent {"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"  @Input() issue: Issue;"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"  constructor() { }"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":"  /**"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"   * Returns corresponding Github icon identifier for issue to display."},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"   * @returns string to create icon"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":"   */"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"  getOcticon() {"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":"    const type \u003d this.issue.issueOrPr;"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"    const state \u003d this.issue.state;"},{"lineNumber":22,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":"    switch (true) {"},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":"      case type \u003d\u003d\u003d \u0027Issue\u0027 \u0026\u0026 state \u003d\u003d\u003d \u0027OPEN\u0027: {"},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":"        return \u0027issue-opened\u0027;"},{"lineNumber":26,"author":{"gitId":"Eclipse-Dominator"},"content":"      }"},{"lineNumber":27,"author":{"gitId":"Eclipse-Dominator"},"content":"      case type \u003d\u003d\u003d \u0027Issue\u0027 \u0026\u0026 state \u003d\u003d\u003d \u0027CLOSED\u0027: {"},{"lineNumber":28,"author":{"gitId":"Eclipse-Dominator"},"content":"        return \u0027issue-closed\u0027;"},{"lineNumber":29,"author":{"gitId":"Eclipse-Dominator"},"content":"      }"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"      case type \u003d\u003d\u003d \u0027PullRequest\u0027 \u0026\u0026 state \u003d\u003d\u003d \u0027OPEN\u0027: {"},{"lineNumber":31,"author":{"gitId":"Eclipse-Dominator"},"content":"        return \u0027git-pull-request\u0027;"},{"lineNumber":32,"author":{"gitId":"Eclipse-Dominator"},"content":"      }"},{"lineNumber":33,"author":{"gitId":"Eclipse-Dominator"},"content":"      case type \u003d\u003d\u003d \u0027PullRequest\u0027 \u0026\u0026 state \u003d\u003d\u003d \u0027CLOSED\u0027: {"},{"lineNumber":34,"author":{"gitId":"Eclipse-Dominator"},"content":"        return \u0027git-pull-request-closed\u0027;"},{"lineNumber":35,"author":{"gitId":"Eclipse-Dominator"},"content":"      }"},{"lineNumber":36,"author":{"gitId":"Eclipse-Dominator"},"content":"      case type \u003d\u003d\u003d \u0027PullRequest\u0027 \u0026\u0026 state \u003d\u003d\u003d \u0027MERGED\u0027: {"},{"lineNumber":37,"author":{"gitId":"Eclipse-Dominator"},"content":"        return \u0027git-merge\u0027;"},{"lineNumber":38,"author":{"gitId":"Eclipse-Dominator"},"content":"      }"},{"lineNumber":39,"author":{"gitId":"Eclipse-Dominator"},"content":"      default: {"},{"lineNumber":40,"author":{"gitId":"Eclipse-Dominator"},"content":"        return \u0027circle\u0027; // unknown type and state"},{"lineNumber":41,"author":{"gitId":"Eclipse-Dominator"},"content":"      }"},{"lineNumber":42,"author":{"gitId":"Eclipse-Dominator"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":45,"author":{"gitId":"Eclipse-Dominator"},"content":"  /** Returns status color for issue */"},{"lineNumber":46,"author":{"gitId":"Eclipse-Dominator"},"content":"  getIssueOpenOrCloseColor() {"},{"lineNumber":47,"author":{"gitId":"Eclipse-Dominator"},"content":"    if (this.issue.state \u003d\u003d\u003d \u0027OPEN\u0027) {"},{"lineNumber":48,"author":{"gitId":"Eclipse-Dominator"},"content":"      return \u0027green\u0027;"},{"lineNumber":49,"author":{"gitId":"Eclipse-Dominator"},"content":"    } else if (this.issue.issueOrPr \u003d\u003d\u003d \u0027PullRequest\u0027 \u0026\u0026 this.issue.state \u003d\u003d\u003d \u0027CLOSED\u0027) {"},{"lineNumber":50,"author":{"gitId":"Eclipse-Dominator"},"content":"      return \u0027red\u0027;"},{"lineNumber":51,"author":{"gitId":"Eclipse-Dominator"},"content":"    } else {"},{"lineNumber":52,"author":{"gitId":"Eclipse-Dominator"},"content":"      return \u0027purple\u0027;"},{"lineNumber":53,"author":{"gitId":"Eclipse-Dominator"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":56,"author":{"gitId":"Eclipse-Dominator"},"content":"  /**"},{"lineNumber":57,"author":{"gitId":"Eclipse-Dominator"},"content":"   * Formats the title text to account for those that contain long words."},{"lineNumber":58,"author":{"gitId":"Eclipse-Dominator"},"content":"   * @param title - Title of Issue that is to be displayed in the Table Row."},{"lineNumber":59,"author":{"gitId":"Eclipse-Dominator"},"content":"   */"},{"lineNumber":60,"author":{"gitId":"Eclipse-Dominator"},"content":"  fitTitleText(): string {"},{"lineNumber":61,"author":{"gitId":"Eclipse-Dominator"},"content":"    // Arbitrary Length of Characters beyond which an overflow occurs."},{"lineNumber":62,"author":{"gitId":"Eclipse-Dominator"},"content":"    const MAX_WORD_LENGTH \u003d 43;"},{"lineNumber":63,"author":{"gitId":"Eclipse-Dominator"},"content":"    const SPLITTER_TEXT \u003d \u0027 \u0027;"},{"lineNumber":64,"author":{"gitId":"Eclipse-Dominator"},"content":"    const ELLIPSES \u003d \u0027...\u0027;"},{"lineNumber":65,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":66,"author":{"gitId":"Eclipse-Dominator"},"content":"    return this.issue.title"},{"lineNumber":67,"author":{"gitId":"Eclipse-Dominator"},"content":"      .split(SPLITTER_TEXT)"},{"lineNumber":68,"author":{"gitId":"Eclipse-Dominator"},"content":"      .map((word) \u003d\u003e {"},{"lineNumber":69,"author":{"gitId":"Eclipse-Dominator"},"content":"        if (word.length \u003e MAX_WORD_LENGTH) {"},{"lineNumber":70,"author":{"gitId":"Eclipse-Dominator"},"content":"          return word.substring(0, MAX_WORD_LENGTH - 5).concat(ELLIPSES);"},{"lineNumber":71,"author":{"gitId":"Eclipse-Dominator"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"Eclipse-Dominator"},"content":"        return word;"},{"lineNumber":73,"author":{"gitId":"Eclipse-Dominator"},"content":"      })"},{"lineNumber":74,"author":{"gitId":"Eclipse-Dominator"},"content":"      .join(SPLITTER_TEXT);"},{"lineNumber":75,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":76,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":77,"author":{"gitId":"Eclipse-Dominator"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":77}},{"path":"src/app/shared/issue-pr-card/issue-pr-card-labels/issue-pr-card-labels.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":".mat-chip {"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"    border-radius: 6px;"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"    font-size: 10px;"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"    padding: 11px 7px;"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"    min-height: 16px;"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"    margin: 2px;"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":":host ::ng-deep .mat-chip-list-wrapper .mat-standard-chip,"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":".mat-chip-list-wrapper input.mat-input-element {"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"  margin: 2px;"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":".mat-chip-list {"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":"    margin: 0;"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"  "}],"authorContributionMap":{"Eclipse-Dominator":17}},{"path":"src/app/shared/issue-pr-card/issue-pr-card-labels/issue-pr-card-labels.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003cmat-chip-list aria-label\u003d\"Labels\"\u003e"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003cng-container *ngFor\u003d\"let label of labels\"\u003e"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"        \u003cmat-chip *ngIf\u003d\"!labelSet?.has(label.name)\" [ngStyle]\u003d\"labelService.setLabelStyle(label.color)\" selected\u003e"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"            {{ label.name }}"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"        \u003c/mat-chip\u003e"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003c/ng-container\u003e"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003c/mat-chip-list\u003e"}],"authorContributionMap":{"Eclipse-Dominator":7}},{"path":"src/app/shared/issue-pr-card/issue-pr-card-labels/issue-pr-card-labels.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"import { Component, Input } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"import { Label } from \u0027../../../core/models/label.model\u0027;"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"import { LabelService } from \u0027../../../core/services/label.service\u0027;"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"@Component({"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"  selector: \u0027app-issue-pr-card-labels\u0027,"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"  templateUrl: \u0027./issue-pr-card-labels.component.html\u0027,"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"  styleUrls: [\u0027./issue-pr-card-labels.component.css\u0027]"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"})"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"export class IssuePrCardLabelsComponent {"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"  @Input() labels: Label[];"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"  @Input() labelSet: Set\u003cLabel\u003e;"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"  constructor(public labelService: LabelService) { }"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":14}},{"path":"src/app/shared/issue-pr-card/issue-pr-card-milestone/issue-pr-card-milestone.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"span.octicon-milestone {"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"    margin-right: 4px;"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"    display: inline-flex;"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":".milestone {"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"    display: inline-flex;"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"    margin-right: 8px;"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"    margin-bottom: 0px;"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"    margin-top: 0px;"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"    align-items: center;"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":12}},{"path":"src/app/shared/issue-pr-card/issue-pr-card-milestone/issue-pr-card-milestone.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003cdiv *ngIf\u003d\"milestone.state\" class\u003d\"milestone\"\u003e"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003cspan class\u003d\"octicon-milestone\" octicon\u003d\"milestone\" color\u003d\"grey\" size\u003d\"8\"\u003e \u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"    {{ milestone.title }}"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"Eclipse-Dominator":4}},{"path":"src/app/shared/issue-pr-card/issue-pr-card-milestone/issue-pr-card-milestone.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"import { Component, Input } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"import { Milestone } from \u0027../../../core/models/milestone.model\u0027;"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"  selector: \u0027app-issue-pr-card-milestone\u0027,"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"  templateUrl: \u0027./issue-pr-card-milestone.component.html\u0027,"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"  styleUrls: [\u0027./issue-pr-card-milestone.component.css\u0027]"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"})"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"export class IssuePrCardMilestoneComponent {"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"  @Input() milestone: Milestone;"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"  constructor() { }"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":13}},{"path":"src/app/shared/issue-pr-card/issue-pr-card.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":".card {"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"  margin: 8px 0px 8px 0px;"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":".mat-card {"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"  padding: 10px;"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":".column-header {"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"  justify-content: center;"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"  margin: 0;"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":".border-green {"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":"  border-left: 2.4px solid green;"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":".border-purple {"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"  border-left: 2.4px solid purple;"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":22,"author":{"gitId":"Eclipse-Dominator"},"content":".border-red {"},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":"  border-left: 2.4px solid red;"},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":26,"author":{"gitId":"Eclipse-Dominator"},"content":".mat-card-content {"},{"lineNumber":27,"author":{"gitId":"Eclipse-Dominator"},"content":"  display: flex;"},{"lineNumber":28,"author":{"gitId":"Eclipse-Dominator"},"content":"  align-items: center;"},{"lineNumber":29,"author":{"gitId":"Eclipse-Dominator"},"content":"  font-size: 11px;"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"  text-align: left;"},{"lineNumber":31,"author":{"gitId":"Eclipse-Dominator"},"content":"  margin: 0px;"},{"lineNumber":32,"author":{"gitId":"Eclipse-Dominator"},"content":"  padding: 0px;"},{"lineNumber":33,"author":{"gitId":"Eclipse-Dominator"},"content":"}"},{"lineNumber":34,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":35,"author":{"gitId":"Eclipse-Dominator"},"content":".mat-card-subtitle {"},{"lineNumber":36,"author":{"gitId":"Eclipse-Dominator"},"content":"  display: flex;"},{"lineNumber":37,"author":{"gitId":"Eclipse-Dominator"},"content":"  align-items: center;"},{"lineNumber":38,"author":{"gitId":"Eclipse-Dominator"},"content":"  font-size: 11px;"},{"lineNumber":39,"author":{"gitId":"Eclipse-Dominator"},"content":"  text-align: left;"},{"lineNumber":40,"author":{"gitId":"Eclipse-Dominator"},"content":"  overflow: auto;"},{"lineNumber":41,"author":{"gitId":"Eclipse-Dominator"},"content":"  margin: 6px 0;"},{"lineNumber":42,"author":{"gitId":"Eclipse-Dominator"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":42}},{"path":"src/app/shared/issue-pr-card/issue-pr-card.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003cmat-card class\u003d\"card\" [ngClass]\u003d\"getIssueOpenOrCloseColorCSSClass()\"\u003e"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"  \u003ca class\u003d\"no-underline link-grey-dark\" (click)\u003d\"viewIssueInBrowser($event)\"\u003e"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003cspan [matTooltip]\u003d\"this.issue.updated_at\"\u003e"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"      \u003capp-issue-pr-card-header [issue]\u003d\"issue\"\u003e\u003c/app-issue-pr-card-header\u003e"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"      \u003cmat-card-content\u003e"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"          \u003capp-issue-pr-card-milestone [milestone]\u003d\"issue.milestone\"\u003e\u003c/app-issue-pr-card-milestone\u003e"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"          \u003capp-issue-pr-card-labels [labels]\u003d\"issue.githubLabels\" [labelSet]\u003d\"dropdownFilter?.hiddenLabels\"\u003e\u003c/app-issue-pr-card-labels\u003e"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"      \u003c/mat-card-content\u003e"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"  \u003c/a\u003e"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"\u003c/mat-card\u003e"}],"authorContributionMap":{"Eclipse-Dominator":11}},{"path":"src/app/shared/issue-pr-card/issue-pr-card.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"import { Component, Input } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"import { GithubService } from \u0027../../core/services/github.service\u0027;"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"import { LabelService } from \u0027../../core/services/label.service\u0027;"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"import { DropdownFilter } from \u0027../issue-tables/IssuesDataTable\u0027;"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"@Component({"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"  selector: \u0027app-issue-pr-card\u0027,"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"  templateUrl: \u0027./issue-pr-card.component.html\u0027,"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"  styleUrls: [\u0027./issue-pr-card.component.css\u0027]"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"})"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"export class IssuePrCardComponent {"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":"  @Input() issue: Issue;"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":"  @Input() dropdownFilter?: DropdownFilter;"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"  constructor(private logger: LoggingService, private githubService: GithubService, public labelService: LabelService) {}"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"  /** Opens issue in new window */"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":"  viewIssueInBrowser(event: Event) {"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.logger.info(`CardViewComponent: Opening Issue ${this.issue.id} on Github`);"},{"lineNumber":22,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.githubService.viewIssueInBrowser(this.issue.id, event);"},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":26,"author":{"gitId":"Eclipse-Dominator"},"content":"  /** Returns CSS class for border color */"},{"lineNumber":27,"author":{"gitId":"Eclipse-Dominator"},"content":"  getIssueOpenOrCloseColorCSSClass() {"},{"lineNumber":28,"author":{"gitId":"Eclipse-Dominator"},"content":"    if (this.issue.state \u003d\u003d\u003d \u0027OPEN\u0027) {"},{"lineNumber":29,"author":{"gitId":"Eclipse-Dominator"},"content":"      return \u0027border-green\u0027;"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"    } else if (this.issue.issueOrPr \u003d\u003d\u003d \u0027PullRequest\u0027 \u0026\u0026 this.issue.state \u003d\u003d\u003d \u0027CLOSED\u0027) {"},{"lineNumber":31,"author":{"gitId":"Eclipse-Dominator"},"content":"      return \u0027border-red\u0027;"},{"lineNumber":32,"author":{"gitId":"Eclipse-Dominator"},"content":"    } else {"},{"lineNumber":33,"author":{"gitId":"Eclipse-Dominator"},"content":"      return \u0027border-purple\u0027;"},{"lineNumber":34,"author":{"gitId":"Eclipse-Dominator"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":37,"author":{"gitId":"Eclipse-Dominator"},"content":"  /**"},{"lineNumber":38,"author":{"gitId":"Eclipse-Dominator"},"content":"   * Truncates description to fit in card content."},{"lineNumber":39,"author":{"gitId":"Eclipse-Dominator"},"content":"   * @param description - Description of Issue that is to be displayed."},{"lineNumber":40,"author":{"gitId":"Eclipse-Dominator"},"content":"   */"},{"lineNumber":41,"author":{"gitId":"Eclipse-Dominator"},"content":"  fitDescriptionText(): string {"},{"lineNumber":42,"author":{"gitId":"Eclipse-Dominator"},"content":"    // Arbitrary Length of Characters beyond which an overflow occurs."},{"lineNumber":43,"author":{"gitId":"Eclipse-Dominator"},"content":"    const MAX_CHARACTER_LENGTH \u003d 72;"},{"lineNumber":44,"author":{"gitId":"Eclipse-Dominator"},"content":"    const ELLIPSES \u003d \u0027...\u0027;"},{"lineNumber":45,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":46,"author":{"gitId":"Eclipse-Dominator"},"content":"    return this.issue.description.slice(0, MAX_CHARACTER_LENGTH) + ELLIPSES;"},{"lineNumber":47,"author":{"gitId":"Eclipse-Dominator"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"Eclipse-Dominator"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":48}},{"path":"src/app/shared/issue-pr-card/issue-pr-card.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Eclipse-Dominator"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":"import { SharedModule } from \u0027../shared.module\u0027;"},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"import { IssuePrCardHeaderComponent } from \u0027./issue-pr-card-header/issue-pr-card-header.component\u0027;"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":"import { IssuePrCardLabelsComponent } from \u0027./issue-pr-card-labels/issue-pr-card-labels.component\u0027;"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"import { IssuePrCardMilestoneComponent } from \u0027./issue-pr-card-milestone/issue-pr-card-milestone.component\u0027;"},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"import { IssuePrCardComponent } from \"./issue-pr-card.component\";"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"@NgModule({"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"  imports: [SharedModule],"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"  declarations: [IssuePrCardComponent, IssuePrCardHeaderComponent, IssuePrCardMilestoneComponent, IssuePrCardLabelsComponent],"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"  exports: [IssuePrCardComponent]"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"})"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"export class IssuesPrCardModule {}"}],"authorContributionMap":{"Eclipse-Dominator":13}},{"path":"src/app/shared/issue-tables/IssuesDataTable.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DataSource } from \u0027@angular/cdk/table\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatPaginator } from \u0027@angular/material/paginator\u0027;"},{"lineNumber":3,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSort } from \u0027@angular/material/sort\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { BehaviorSubject, merge, Observable, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"import { map } from \u0027rxjs/operators\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubUser } from \u0027../../core/models/github-user.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { paginateData } from \u0027./issue-paginator\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { getSortedData } from \u0027./issue-sorter\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { applySearchFilter } from \u0027./search-filter\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"export type DropdownFilter \u003d {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  status: string;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  type: string;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  sort: string;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  labels: string[];"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  milestones: string[];"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"  hiddenLabels?: Set\u003cstring\u003e;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"};"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"export const DEFAULT_DROPDOWN_FILTER \u003d \u003cDropdownFilter\u003e{"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  status: \u0027all\u0027,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  type: \u0027all\u0027,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  sort: \u0027id\u0027,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  labels: [],"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  milestones: []"},{"lineNumber":28,"author":{"gitId":"-"},"content":"};"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"export class IssuesDataTable extends DataSource\u003cIssue\u003e {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  public count \u003d 0;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  private filterChange \u003d new BehaviorSubject(\u0027\u0027);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  private dropdownFilterChange \u003d new BehaviorSubject(DEFAULT_DROPDOWN_FILTER);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  private teamFilterChange \u003d new BehaviorSubject(\u0027\u0027);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  private issuesSubject \u003d new BehaviorSubject\u003cIssue[]\u003e([]);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  private issueSubscription: Subscription;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  public isLoading$ \u003d this.issueService.isLoading.asObservable();"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private sort: MatSort,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private paginator: MatPaginator,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private displayedColumn: string[],"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private assignee?: GithubUser,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private defaultFilter?: (issue: Issue) \u003d\u003e boolean"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    super();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  connect(): Observable\u003cIssue[]\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    return this.issuesSubject.asObservable();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  disconnect() {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    this.dropdownFilterChange.complete();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    this.filterChange.complete();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    this.teamFilterChange.complete();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    this.issuesSubject.complete();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    this.issueSubscription.unsubscribe();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    this.issueService.stopPollIssues();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  loadIssues() {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // If no pagination and sorting"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    let sortChange;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    if (this.sort !\u003d\u003d undefined) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      sortChange \u003d this.sort.sortChange;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    let page;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    if (this.paginator !\u003d\u003d undefined) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      page \u003d this.paginator.page;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    const displayDataChanges \u003d ["},{"lineNumber":77,"author":{"gitId":"-"},"content":"      this.issueService.issues$,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      page,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      sortChange,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      this.filterChange,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      this.teamFilterChange,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      this.dropdownFilterChange"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    ].filter((x) \u003d\u003e x !\u003d\u003d undefined);"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    this.issueService.startPollIssues();"},{"lineNumber":86,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.issueSubscription \u003d merge(...displayDataChanges)"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // maps each change in display value to new issue ordering or filtering"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        map(() \u003d\u003e {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"          let data \u003d \u003cIssue[]\u003eObject.values(this.issueService.issues$.getValue()).reverse();"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          if (this.defaultFilter) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            data \u003d data.filter(this.defaultFilter);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":94,"author":{"gitId":"-"},"content":"          // Filter by assignee of issue"},{"lineNumber":95,"author":{"gitId":"-"},"content":"          if (this.assignee) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            data \u003d data.filter((issue) \u003d\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              if (issue.issueOrPr \u003d\u003d\u003d \u0027PullRequest\u0027) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                return issue.author \u003d\u003d\u003d this.assignee.login;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"              } else if (!issue.assignees) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                return issue.assignees.includes(this.assignee.login);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"          // Dropdown Filters"},{"lineNumber":107,"author":{"gitId":"-"},"content":"          data \u003d data"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            .filter((issue) \u003d\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"              if (this.dropdownFilter.status \u003d\u003d\u003d \u0027open\u0027) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                return issue.state \u003d\u003d\u003d \u0027OPEN\u0027;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"              } else if (this.dropdownFilter.status \u003d\u003d\u003d \u0027closed\u0027) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                return issue.state !\u003d\u003d \u0027OPEN\u0027;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            })"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            .filter((issue) \u003d\u003e {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              if (this.dropdownFilter.type \u003d\u003d\u003d \u0027issue\u0027) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                return issue.issueOrPr \u003d\u003d\u003d \u0027Issue\u0027;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"              } else if (this.dropdownFilter.type \u003d\u003d\u003d \u0027pullrequest\u0027) {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                return issue.issueOrPr \u003d\u003d\u003d \u0027PullRequest\u0027;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            })"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            .filter((issue) \u003d\u003e {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"              return this.dropdownFilter.labels.every((label) \u003d\u003e issue.labels.includes(label));"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"Echomo-Xinyu"},"content":"          if (Array.isArray(this.dropdownFilter.milestones)) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            data \u003d data.filter((issue) \u003d\u003e {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"              return issue.milestone \u0026\u0026 this.dropdownFilter.milestones.some((milestone) \u003d\u003e issue.milestone.number \u003d\u003d\u003d milestone);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":134,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"          if (this.sort !\u003d\u003d undefined) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            data \u003d getSortedData(this.sort, data);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"          data \u003d this.getFilteredTeamData(data);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"          data \u003d applySearchFilter(this.filter, this.displayedColumn, this.issueService, data);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"          this.count \u003d data.length;"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"          if (this.paginator !\u003d\u003d undefined) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            data \u003d paginateData(this.paginator, data);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":146,"author":{"gitId":"-"},"content":"          return data;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      .subscribe((issues) \u003d\u003e {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        this.issuesSubject.next(issues);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"  get filter(): string {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    return this.filterChange.value;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"  set filter(filter: string) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    this.filterChange.next(filter);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"  get teamFilter(): string {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    return this.teamFilterChange.value;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"  set teamFilter(teamFilter: string) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    this.teamFilterChange.next(teamFilter);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    this.issueService.setIssueTeamFilter(this.teamFilterChange.value);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"  private getFilteredTeamData(data: Issue[]): Issue[] {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    return data.filter((issue) \u003d\u003e {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      if (!this.teamFilter || this.teamFilter \u003d\u003d\u003d \u0027All Teams\u0027) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      return issue.teamAssigned.id \u003d\u003d\u003d this.teamFilter;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"  get dropdownFilter(): DropdownFilter {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    return this.dropdownFilterChange.value;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"  set dropdownFilter(filter: DropdownFilter) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    this.dropdownFilterChange.next(filter);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":3,"Eclipse-Dominator":3,"-":181}},{"path":"src/app/shared/issue-tables/issue-paginator.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatPaginator } from \u0027@angular/material/paginator\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"export function paginateData(paginator: MatPaginator, data: Issue[]): Issue[] {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  paginator.length \u003d data.length;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  let result \u003d getDataForPage(paginator.pageIndex, paginator.pageSize, data);"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  if (result.length \u003d\u003d\u003d 0) {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    paginator.pageIndex -\u003d 1;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    result \u003d getDataForPage(paginator.pageIndex, paginator.pageSize, data);"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  return result;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"function getDataForPage(pageIndex: number, pageSize: number, data: Issue[]): Issue[] {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  const startIndex \u003d pageIndex * pageSize;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  return data.splice(startIndex, pageSize);"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":16}},{"path":"src/app/shared/issue-tables/issue-sorter.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSort } from \u0027@angular/material/sort\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import * as moment from \u0027moment\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Issue, ISSUE_TYPE_ORDER, SEVERITY_ORDER } from \u0027../../core/models/issue.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"export function getSortedData(sort: MatSort, data: Issue[]): Issue[] {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  if (!sort.active) {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    return data;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  const direction: number \u003d sort.direction \u003d\u003d\u003d \u0027asc\u0027 ? 1 : -1;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  return data.sort((a, b) \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    switch (sort.active) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      case \u0027type\u0027:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return direction * compareByIssueType(a.type, b.type);"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      case \u0027severity\u0027:"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return direction * compareBySeverity(a.severity, b.severity);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      case \u0027assignees\u0027:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return direction * compareByStringValue(a.assignees.join(\u0027, \u0027), b.assignees.join(\u0027, \u0027));"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      case \u0027teamAssigned\u0027:"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return direction * compareByStringValue(a.teamAssigned.id, b.teamAssigned.id);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      case \u0027Todo Remaining\u0027:"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return -direction * compareByIntegerValue(a.numOfUnresolvedDisputes(), b.numOfUnresolvedDisputes());"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      case \u0027id\u0027:"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return direction * compareByIntegerValue(a.id, b.id);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      case \u0027date\u0027:"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return direction * compareByDateValue(a.created_at, b.created_at);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // title, responseTag are string values"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return direction * compareByStringValue(a[sort.active], b[sort.active]);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"function compareBySeverity(severityA: string, severityB: string): number {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  const orderA \u003d SEVERITY_ORDER[severityA];"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  const orderB \u003d SEVERITY_ORDER[severityB];"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  return compareByIntegerValue(orderA, orderB);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"function compareByIssueType(issueTypeA: string, issueTypeB: string): number {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  const orderA \u003d ISSUE_TYPE_ORDER[issueTypeA];"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  const orderB \u003d ISSUE_TYPE_ORDER[issueTypeB];"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  return compareByIntegerValue(orderA, orderB);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"function compareByStringValue(valueA: string, valueB: string): number {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  const orderA \u003d String(valueA || \u0027\u0027).toUpperCase();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  const orderB \u003d String(valueB || \u0027\u0027).toUpperCase();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  return orderA \u003c orderB ? -1 : 1;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"function compareByIntegerValue(valueA: number, valueB: number): number {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  return valueA \u003c valueB ? -1 : 1;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"function compareByDateValue(valueA: string, valueB: string): number {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  return moment(valueA).isBefore(valueB) ? -1 : 1;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":60}},{"path":"src/app/shared/label-definition-popup/label-definition-popup.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatDialogRef, MAT_DIALOG_DATA } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { DomSanitizer } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The LabelDefinitionPopupComponent is responsible for rendering the UserDialog"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * to show the definition of the corresponding label."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  selector: \u0027app-label-definition-popup\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./label-definition-popup.component.html\u0027,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./label-definition-popup.component.css\u0027]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"})"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export class LabelDefinitionPopupComponent {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  labelName: string;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  labelDefinitionHtmlTemplate;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  // Injection of a reference to Dialog from the Service that it is to be"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  // displayed in."},{"lineNumber":20,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public dialogRef: MatDialogRef\u003cLabelDefinitionPopupComponent\u003e,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Inject(MAT_DIALOG_DATA) public data,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private _sanitizer: DomSanitizer"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    this.labelName \u003d data.header;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // since we only display HTML fetched from our own source, we can safely bypass the sanitization of HTML"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    this.labelDefinitionHtmlTemplate \u003d _sanitizer.bypassSecurityTrustHtml(data.body);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * Closes the dialog."},{"lineNumber":32,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  onNoClick(): void {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    this.dialogRef.close(false);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":35}},{"path":"src/app/shared/layout/header.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cmat-toolbar color\u003d\"primary\" style\u003d\"position: sticky; position: -webkit-sticky; top: 0; z-index: 1000\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cbutton"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    *ngIf\u003d\"isBackButtonShown()\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"    mat-icon-button"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    class\u003d\"mat-toolbar mat-primary back-button\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"    style\u003d\"transform: scale(0.9)\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    (click)\u003d\"goBack()\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003earrow_back_ios\u003c/mat-icon\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003ca class\u003d\"mat-toolbar mat-primary\" style\u003d\"text-decoration: none\" [routerLink]\u003d\"phaseService.currentPhase\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003eWATcher v{{ this.getVersion() }}\u003c/a"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cspan id\u003d\"phase-descriptor\" *ngIf\u003d\"auth.isAuthenticated()\" style\u003d\"margin-left: 10px\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ({{ this.getPhaseDescription(phaseService.currentPhase) }})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/span\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cdiv *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 this.phaseService.sessionData.sessionRepo.length \u003e 1\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cbutton mat-button [matMenuTriggerFor]\u003d\"menu\"\u003e\u003cmat-icon style\u003d\"color: white\"\u003eexpand_more\u003c/mat-icon\u003e\u003c/button\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cmat-menu #menu\u003d\"matMenu\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cbutton"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        mat-menu-item"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        *ngFor\u003d\"let sessionRepo of this.phaseService.sessionData.sessionRepo\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        (click)\u003d\"this.routeToSelectedPhase(sessionRepo.phase)\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cspan\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cmat-icon [ngStyle]\u003d\"{ color: \u0027green\u0027, visibility: this.phaseService.currentPhase \u003d\u003d\u003d sessionRepo.phase ? \u0027visible\u0027 : \u0027hidden\u0027 }\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003edone\u003c/mat-icon"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          {{ this.getPhaseDescription(sessionRepo.phase) }}"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/span\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/mat-menu\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"cheehongw"},"content":"  \u003c!-- everything else --\u003e"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cspan style\u003d\"flex: 1 1 auto\"\u003e\u003c/span\u003e"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":"  \u003cdiv *ngIf\u003d\"auth.isAuthenticated()\"\u003e"},{"lineNumber":41,"author":{"gitId":"cheehongw"},"content":"    \u003cspan id\u003d\"phase-descriptor\" style\u003d\"margin-left: 10px\"\u003e"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"      {{ this.currentRepo }}"},{"lineNumber":43,"author":{"gitId":"cheehongw"},"content":"    \u003c/span\u003e"},{"lineNumber":44,"author":{"gitId":"cheehongw"},"content":"    \u003cbutton mat-button matTooltip\u003d\"Change Repository\" (click)\u003d\"this.openChangeRepoDialog()\"\u003e"},{"lineNumber":45,"author":{"gitId":"cheehongw"},"content":"      \u003cmat-icon\u003eedit\u003c/mat-icon\u003e"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"    \u003c/button\u003e"},{"lineNumber":47,"author":{"gitId":"cheehongw"},"content":"  \u003c/div\u003e"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003cspan style\u003d\"flex: 1 1 auto\"\u003e\u003c/span\u003e"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cbutton mat-button matTooltip\u003d\"Download WATcher Log\" (click)\u003d\"this.exportLogFile()\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003ereceipt\u003c/mat-icon\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cbutton mat-button matTooltip\u003d\"Give feedback about WATcher\" (click)\u003d\"openIssueTracker()\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003email\u003c/mat-icon\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cbutton"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isOpenUrlButtonShown()\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    mat-button"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    matTooltip\u003d\"View current page on GitHub\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    (click)\u003d\"viewBrowser()\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003eopen_in_new\u003c/mat-icon\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003cbutton"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isReloadButtonShown() \u0026\u0026 !this.isReloadButtonDisabled\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    mat-button"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    matTooltip\u003d\"Synchronize with Github data\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    (click)\u003d\"reload()\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    Sync"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003erefresh\u003c/mat-icon\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"sync-spinner\" *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isReloadButtonShown() \u0026\u0026 this.isReloadButtonDisabled\"\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003cspan style\u003d\"font-size: 14px; margin-right: 7px\"\u003eSync\u003c/span\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u003cmat-spinner class\u003d\"white-spinner\" [diameter]\u003d\"20\"\u003e\u003c/mat-spinner\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003cbutton *ngIf\u003d\"auth.isAuthenticated()\" mat-button matTooltip\u003d\"Log out\" (click)\u003d\"openLogOutDialog(); $event.stopPropagation()\"\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ({{ userService.currentUser.loginId }})"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003cmat-icon style\u003d\"margin-left: 2px\"\u003eexit_to_app\u003c/mat-icon\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/mat-toolbar\u003e"}],"authorContributionMap":{"-":71,"cheehongw":13}},{"path":"src/app/shared/layout/header.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Location } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Router, RoutesRecognized } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { filter, pairwise } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AppConfig } from \u0027../../../environments/environment\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../core/models/phase.model\u0027;"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { Repo } from \u0027../../core/models/repo.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../core/services/auth.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { DialogService } from \u0027../../core/services/dialog.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027../../core/services/electron.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../../core/services/github.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../core/services/issue.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../core/services/logging.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { PhaseDescription, PhaseService } from \u0027../../core/services/phase.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { UserService } from \u0027../../core/services/user.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"const ISSUE_TRACKER_URL \u003d \u0027https://github.com/CATcher-org/WATcher/issues\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  selector: \u0027app-layout-header\u0027,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./header.component.html\u0027"},{"lineNumber":24,"author":{"gitId":"-"},"content":"})"},{"lineNumber":25,"author":{"gitId":"-"},"content":"export class HeaderComponent implements OnInit {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  private prevUrl;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  isReloadButtonDisabled \u003d false;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  ISSUE_FILTER \u003d \u0027/issues?q\u003dis:issue+is:all\u0027; // the filtered list must be an issue and must be open"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  TUTORIAL_LABEL \u003d \u0027+label:tutorial.\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  TEAM_LABEL \u003d \u0027+label:team.\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  EXCLUDE_DUPLICATE \u003d \u0027+-label:duplicate\u0027; // exclude duplicate issues"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  // Messages for the modal popup window upon logging out"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  private readonly logOutDialogMessages \u003d [\u0027Do you wish to log out?\u0027];"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  private readonly yesButtonDialogMessage \u003d \u0027Yes, I wish to log out\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  private readonly noButtonDialogMessage \u003d \"No, I don\u0027t wish to log out\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"cheehongw"},"content":"  /** Model for the displayed repository name */"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  currentRepo \u003d \u0027\u0027;"},{"lineNumber":40,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private router: Router,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public auth: AuthService,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public phaseService: PhaseService,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public userService: UserService,"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"    public logger: LoggingService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private location: Location,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private githubEventService: GithubEventService,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private issueService: IssueService,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private electronService: ElectronService,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private dialogService: DialogService"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    router.events"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":57,"author":{"gitId":"-"},"content":"        filter((e: any) \u003d\u003e e instanceof RoutesRecognized),"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        pairwise()"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      .subscribe((e) \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.prevUrl \u003d e[0].urlAfterRedirects;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":63,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":64,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.auth.currentAuthState.subscribe((authState) \u003d\u003e {"},{"lineNumber":65,"author":{"gitId":"cheehongw"},"content":"      if (auth.isAuthenticated()) {"},{"lineNumber":66,"author":{"gitId":"cheehongw"},"content":"        this.initializeRepoNameInTitle();"},{"lineNumber":67,"author":{"gitId":"Eclipse-Dominator"},"content":"      }"},{"lineNumber":68,"author":{"gitId":"Eclipse-Dominator"},"content":"    });"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  ngOnInit() {}"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   * Replaces and resets the current phase data and routes the app to the"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   * newly selected phase."},{"lineNumber":76,"author":{"gitId":"-"},"content":"   * @param openPhase - Open Phase that is selected by the user."},{"lineNumber":77,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  routeToSelectedPhase(openPhase: string): void {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    // Do nothing if the selected phase is the current phase."},{"lineNumber":80,"author":{"gitId":"-"},"content":"    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase[openPhase]) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    // Replace Current Phase Data."},{"lineNumber":85,"author":{"gitId":"-"},"content":"    this.phaseService.changePhase(Phase[openPhase]);"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    // Remove current phase issues and load selected phase issues."},{"lineNumber":88,"author":{"gitId":"-"},"content":"    this.githubService.reset();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    this.issueService.reset(false);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    this.reload();"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    // Route app to new phase."},{"lineNumber":93,"author":{"gitId":"-"},"content":"    this.router.navigateByUrl(this.phaseService.currentPhase);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  isBackButtonShown(): boolean {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    return `/${this.phaseService.currentPhase}` !\u003d\u003d this.router.url \u0026\u0026 this.router.url !\u003d\u003d \u0027/\u0027 \u0026\u0026 !this.router.url.startsWith(\u0027/?code\u0027);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  isReloadButtonShown(): boolean {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    return this.router.url !\u003d\u003d \u0027/phaseBugReporting/issues/new\u0027;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  isOpenUrlButtonShown(): boolean {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    return this.phaseService.currentPhase \u003d\u003d\u003d Phase.issuesViewer || this.phaseService.currentPhase \u003d\u003d\u003d Phase.activityDashboard;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  getVersion(): string {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    return AppConfig.version;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"  getPhaseDescription(openPhase: string): string {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    return PhaseDescription[openPhase];"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"  goBack() {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    if (this.prevUrl \u003d\u003d\u003d `/${this.phaseService.currentPhase}/issues/new`) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      this.router.navigateByUrl(this.phaseService.currentPhase);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      this.location.back();"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"  viewBrowser() {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase.activityDashboard) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      this.electronService.openLink("},{"lineNumber":127,"author":{"gitId":"-"},"content":"        `https://github.com/${this.phaseService.currentRepo.owner}/${this.phaseService.currentRepo.name}/pulse`"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    const routerUrl \u003d this.router.url.substring(1); // remove the first \u0027/\u0027 from string"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    const issueUrlIndex \u003d routerUrl.indexOf(\u0027/\u0027); // find the index of second \u0027/\u0027"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    let issueUrl: string;"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    // If can\u0027t find the index of second \u0027/\u0027, then router is at the /issues (table list) page"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    if (issueUrlIndex \u003c 0) {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      // Apply filters to the issueUrl"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      issueUrl \u003d this.ISSUE_FILTER;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      // issueUrl will be from the second \u0027/\u0027"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      issueUrl \u003d routerUrl.substring(issueUrlIndex);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    // Open the url in user\u0027s preferred browser"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    this.electronService.openLink(\u0027https://github.com/\u0027.concat(this.githubService.getRepoURL()).concat(issueUrl));"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"  openIssueTracker() {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    this.electronService.openLink(ISSUE_TRACKER_URL);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"  reload() {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    this.isReloadButtonDisabled \u003d true;"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    this.githubEventService.reloadPage().subscribe("},{"lineNumber":156,"author":{"gitId":"-"},"content":"      (success) \u003d\u003e success,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      (error) \u003d\u003e {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        this.errorHandlingService.handleError(error, () \u003d\u003e this.githubEventService.reloadPage());"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    // Prevent user from spamming the reload button"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      this.isReloadButtonDisabled \u003d false;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }, 3000);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"  logOut() {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    this.auth.logOut();"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  openLogOutDialog() {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    const dialogRef \u003d this.dialogService.openUserConfirmationModal("},{"lineNumber":174,"author":{"gitId":"-"},"content":"      this.logOutDialogMessages,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      this.yesButtonDialogMessage,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      this.noButtonDialogMessage"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    dialogRef.afterClosed().subscribe((res) \u003d\u003e {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      if (res) {"},{"lineNumber":181,"author":{"gitId":"cheehongw"},"content":"        this.logger.info(`HeaderComponent: Logging out from ${this.userService.currentUser.loginId}`);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        this.logOut();"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"  exportLogFile() {"},{"lineNumber":188,"author":{"gitId":"cheehongw"},"content":"    this.logger.exportLogFile();"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":190,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":191,"author":{"gitId":"cheehongw"},"content":"  initializeRepoNameInTitle() {"},{"lineNumber":192,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    if (Repo.isInvalidRepoName(this.phaseService.currentRepo)) {"},{"lineNumber":193,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      return;"},{"lineNumber":194,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    const currentRepoString \u003d this.phaseService.currentRepo.toString();"},{"lineNumber":196,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    this.logger.info(`HeaderComponent: initializing current repository name as ${currentRepoString}`);"},{"lineNumber":197,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    this.currentRepo \u003d currentRepoString;"},{"lineNumber":198,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":199,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":200,"author":{"gitId":"cheehongw"},"content":"  /**"},{"lineNumber":201,"author":{"gitId":"cheehongw"},"content":"   * Change repository viewed on Issue Dashboard."},{"lineNumber":202,"author":{"gitId":"cheehongw"},"content":"   */"},{"lineNumber":203,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  switchRepo(repo: Repo) {"},{"lineNumber":204,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    this.phaseService.changeCurrentRepository(repo);"},{"lineNumber":205,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  }"},{"lineNumber":206,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":207,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  changeRepositoryInPhaseIfValid(repo: Repo, newRepoString: string) {"},{"lineNumber":208,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    this.githubService.isRepositoryPresent(repo.owner, repo.name).subscribe((isValidRepository) \u003d\u003e {"},{"lineNumber":209,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      if (!isValidRepository) {"},{"lineNumber":210,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        throw new Error(\u0027Invalid repository name. Please check your organisation and repository name.\u0027);"},{"lineNumber":211,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      }"},{"lineNumber":212,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":213,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      this.switchRepo(repo);"},{"lineNumber":214,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      this.currentRepo \u003d newRepoString;"},{"lineNumber":215,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    });"},{"lineNumber":216,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":217,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":218,"author":{"gitId":"cheehongw"},"content":"  openChangeRepoDialog() {"},{"lineNumber":219,"author":{"gitId":"cheehongw"},"content":"    const dialogRef \u003d this.dialogService.openChangeRepoDialog(this.currentRepo);"},{"lineNumber":220,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":221,"author":{"gitId":"Eclipse-Dominator"},"content":"    dialogRef.afterClosed().subscribe((res) \u003d\u003e {"},{"lineNumber":222,"author":{"gitId":"cheehongw"},"content":"      if (!res) {"},{"lineNumber":223,"author":{"gitId":"cheehongw"},"content":"        return;"},{"lineNumber":224,"author":{"gitId":"cheehongw"},"content":"      }"},{"lineNumber":225,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      const newRepo \u003d Repo.of(res);"},{"lineNumber":226,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":227,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      // instead of switching immediately, check if this is a valid repo first"},{"lineNumber":228,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      this.changeRepositoryInPhaseIfValid(newRepo, res);"},{"lineNumber":229,"author":{"gitId":"Eclipse-Dominator"},"content":"    });"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":5,"vigneshsankariyer1234567890":24,"-":178,"cheehongw":24}},{"path":"src/app/shared/material.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DragDropModule } from \u0027@angular/cdk/drag-drop\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ScrollingModule } from \u0027@angular/cdk/scrolling\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { CdkTableModule } from \u0027@angular/cdk/table\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { CdkTreeModule } from \u0027@angular/cdk/tree\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatAutocompleteModule } from \u0027@angular/material/autocomplete\u0027;"},{"lineNumber":8,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatBadgeModule } from \u0027@angular/material/badge\u0027;"},{"lineNumber":9,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatBottomSheetModule } from \u0027@angular/material/bottom-sheet\u0027;"},{"lineNumber":10,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatButtonModule } from \u0027@angular/material/button\u0027;"},{"lineNumber":11,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatButtonToggleModule } from \u0027@angular/material/button-toggle\u0027;"},{"lineNumber":12,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatCardModule } from \u0027@angular/material/card\u0027;"},{"lineNumber":13,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatCheckboxModule } from \u0027@angular/material/checkbox\u0027;"},{"lineNumber":14,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatChipsModule } from \u0027@angular/material/chips\u0027;"},{"lineNumber":15,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatNativeDateModule, MatRippleModule } from \u0027@angular/material/core\u0027;"},{"lineNumber":16,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatDatepickerModule } from \u0027@angular/material/datepicker\u0027;"},{"lineNumber":17,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatDialogModule } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":18,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatDividerModule } from \u0027@angular/material/divider\u0027;"},{"lineNumber":19,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatExpansionModule } from \u0027@angular/material/expansion\u0027;"},{"lineNumber":20,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatGridListModule } from \u0027@angular/material/grid-list\u0027;"},{"lineNumber":21,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatIconModule } from \u0027@angular/material/icon\u0027;"},{"lineNumber":22,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatInputModule } from \u0027@angular/material/input\u0027;"},{"lineNumber":23,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatListModule } from \u0027@angular/material/list\u0027;"},{"lineNumber":24,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatMenuModule } from \u0027@angular/material/menu\u0027;"},{"lineNumber":25,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatPaginatorModule } from \u0027@angular/material/paginator\u0027;"},{"lineNumber":26,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatProgressBarModule } from \u0027@angular/material/progress-bar\u0027;"},{"lineNumber":27,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatProgressSpinnerModule } from \u0027@angular/material/progress-spinner\u0027;"},{"lineNumber":28,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatRadioModule } from \u0027@angular/material/radio\u0027;"},{"lineNumber":29,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSelectModule } from \u0027@angular/material/select\u0027;"},{"lineNumber":30,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSidenavModule } from \u0027@angular/material/sidenav\u0027;"},{"lineNumber":31,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSlideToggleModule } from \u0027@angular/material/slide-toggle\u0027;"},{"lineNumber":32,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSliderModule } from \u0027@angular/material/slider\u0027;"},{"lineNumber":33,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSnackBarModule } from \u0027@angular/material/snack-bar\u0027;"},{"lineNumber":34,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSortModule } from \u0027@angular/material/sort\u0027;"},{"lineNumber":35,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatStepperModule } from \u0027@angular/material/stepper\u0027;"},{"lineNumber":36,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatTableModule } from \u0027@angular/material/table\u0027;"},{"lineNumber":37,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatTabsModule } from \u0027@angular/material/tabs\u0027;"},{"lineNumber":38,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatToolbarModule } from \u0027@angular/material/toolbar\u0027;"},{"lineNumber":39,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatTooltipModule } from \u0027@angular/material/tooltip\u0027;"},{"lineNumber":40,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatTreeModule } from \u0027@angular/material/tree\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":44,"author":{"gitId":"-"},"content":"    CdkTableModule,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    CdkTreeModule,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    DragDropModule,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    MatAutocompleteModule,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    MatBadgeModule,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    MatBottomSheetModule,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    MatButtonModule,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    MatButtonToggleModule,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    MatCardModule,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    MatCheckboxModule,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    MatChipsModule,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    MatStepperModule,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    MatDatepickerModule,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    MatDialogModule,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    MatDividerModule,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    MatExpansionModule,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    MatGridListModule,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    MatIconModule,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    MatInputModule,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    MatListModule,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    MatMenuModule,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    MatNativeDateModule,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    MatPaginatorModule,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    MatProgressBarModule,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    MatProgressSpinnerModule,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    MatRadioModule,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    MatRippleModule,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    MatSelectModule,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    MatSidenavModule,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    MatSliderModule,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    MatSlideToggleModule,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    MatSnackBarModule,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    MatSortModule,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    MatTableModule,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    MatTabsModule,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    MatToolbarModule,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    MatTooltipModule,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    MatTreeModule,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ScrollingModule"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":84,"author":{"gitId":"-"},"content":"})"},{"lineNumber":85,"author":{"gitId":"-"},"content":"export class MaterialModule {}"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"/**  Copyright 2018 Google Inc. All Rights Reserved."},{"lineNumber":88,"author":{"gitId":"-"},"content":" Use of this source code is governed by an MIT-style license that"},{"lineNumber":89,"author":{"gitId":"-"},"content":" can be found in the LICENSE file at http://angular.io/license */"}],"authorContributionMap":{"Echomo-Xinyu":34,"-":55}},{"path":"src/app/shared/repo-change-form/repo-change-form.component.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":".change-repo-form-title {"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"  width: 100%;"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"}"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":".mat-dialog-content {"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"  width: 100%;"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"}"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":".mat-form-field {"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"  width: 100%;"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"}"},{"lineNumber":12,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":".mat-dialog-actions {"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"  justify-content: flex-end;"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":"}"}],"authorContributionMap":{"cheehongw":15}},{"path":"src/app/shared/repo-change-form/repo-change-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"\u003ch1 mat-dialog-title class\u003d\"change-repo-form-title\"\u003eChange repository\u003c/h1\u003e"},{"lineNumber":2,"author":{"gitId":"cheehongw"},"content":"\u003cdiv mat-dialog-content\u003e"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":"  \u003cmat-form-field appearance\u003d\"fill\"\u003e"},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"    \u003cmat-label\u003eRepository Location (Org/Repo)\u003c/mat-label\u003e"},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003cinput matInput [(ngModel)]\u003d\"this.repoName\" /\u003e"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"  \u003c/mat-form-field\u003e"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"\u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"\u003cdiv mat-dialog-actions\u003e"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"  \u003cbutton mat-button (click)\u003d\"onNoClick()\" color\u003d\"warn\"\u003eCancel\u003c/button\u003e"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"  \u003cbutton mat-button (click)\u003d\"onYesClick()\" color\u003d\"primary\"\u003eChange Repo\u003c/button\u003e"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"Eclipse-Dominator":2,"cheehongw":9}},{"path":"src/app/shared/repo-change-form/repo-change-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"cheehongw"},"content":"import { Component, Inject } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatDialogRef, MAT_DIALOG_DATA } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":3,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"@Component({"},{"lineNumber":5,"author":{"gitId":"cheehongw"},"content":"  selector: \u0027app-repo-change-form\u0027,"},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"  templateUrl: \u0027./repo-change-form.component.html\u0027,"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"  styleUrls: [\u0027./repo-change-form.component.css\u0027]"},{"lineNumber":8,"author":{"gitId":"cheehongw"},"content":"})"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"export class RepoChangeFormComponent {"},{"lineNumber":10,"author":{"gitId":"Echomo-Xinyu"},"content":"  public repoName: String;"},{"lineNumber":11,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"  constructor(public dialogRef: MatDialogRef\u003cRepoChangeFormComponent\u003e, @Inject(MAT_DIALOG_DATA) public data) {"},{"lineNumber":13,"author":{"gitId":"cheehongw"},"content":"    this.repoName \u003d data.repoName;"},{"lineNumber":14,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":15,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":16,"author":{"gitId":"cheehongw"},"content":"  onYesClick(): void {"},{"lineNumber":17,"author":{"gitId":"cheehongw"},"content":"    this.dialogRef.close(this.repoName);"},{"lineNumber":18,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":19,"author":{"gitId":"cheehongw"},"content":""},{"lineNumber":20,"author":{"gitId":"cheehongw"},"content":"  onNoClick(): void {"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"    this.dialogRef.close(false);"},{"lineNumber":22,"author":{"gitId":"cheehongw"},"content":"  }"},{"lineNumber":23,"author":{"gitId":"cheehongw"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":2,"Eclipse-Dominator":1,"cheehongw":20}},{"path":"tests/app/auth/confirm-login/confirm-login.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { ConfirmLoginComponent } from \u0027../../../../src/app/auth/confirm-login/confirm-login.component\u0027;"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { Repo } from \u0027../../../../src/app/core/models/repo.model\u0027;"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { User, UserRole } from \u0027../../../../src/app/core/models/user.model\u0027;"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { AuthService } from \u0027../../../../src/app/core/services/auth.service\u0027;"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { ElectronService } from \u0027../../../../src/app/core/services/electron.service\u0027;"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { ErrorHandlingService } from \u0027../../../../src/app/core/services/error-handling.service\u0027;"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { GithubService } from \u0027../../../../src/app/core/services/github.service\u0027;"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { GithubEventService } from \u0027../../../../src/app/core/services/githubevent.service\u0027;"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { LoggingService } from \u0027../../../../src/app/core/services/logging.service\u0027;"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { PhaseService } from \u0027../../../../src/app/core/services/phase.service\u0027;"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import { UserService } from \u0027../../../../src/app/core/services/user.service\u0027;"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"const mockUser: User \u003d {"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  loginId: \u0027Mock User\u0027,"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  role: UserRole.Student"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"};"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"const getRepoWithValidName \u003d () \u003d\u003e new Repo(\u0027mock\u0027, \u0027repo\u0027);"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"describe(\u0027ConfirmLoginComponent\u0027, () \u003d\u003e {"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  let electronService: jasmine.SpyObj\u003cElectronService\u003e;"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  let authService: jasmine.SpyObj\u003cAuthService\u003e;"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  let phaseService: jasmine.SpyObj\u003cPhaseService\u003e;"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  let userService: jasmine.SpyObj\u003cUserService\u003e;"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  let errorHandlingService: jasmine.SpyObj\u003cErrorHandlingService\u003e;"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  let githubEventService: jasmine.SpyObj\u003cGithubEventService\u003e;"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  let logger: jasmine.SpyObj\u003cLoggingService\u003e;"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  let router: jasmine.SpyObj\u003cRouter\u003e;"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  let githubService: jasmine.SpyObj\u003cGithubService\u003e;"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  let component: ConfirmLoginComponent;"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  let fixture: ComponentFixture\u003cConfirmLoginComponent\u003e;"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    electronService \u003d jasmine.createSpyObj\u003cElectronService\u003e(\u0027ElectronService\u0027, [\u0027clearCookies\u0027]);"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    authService \u003d jasmine.createSpyObj\u003cAuthService\u003e(\u0027AuthService\u0027, [\u0027changeAuthState\u0027, \u0027setTitleWithPhaseDetail\u0027, \u0027startOAuthProcess\u0027]);"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    phaseService \u003d jasmine.createSpyObj\u003cPhaseService\u003e(\u0027PhaseService\u0027, [\u0027initializeCurrentRepository\u0027, \u0027currentRepo\u0027]);"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    logger \u003d jasmine.createSpyObj\u003cLoggingService\u003e(\u0027LoggingService\u0027, [\u0027info\u0027]);"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    userService \u003d jasmine.createSpyObj\u003cUserService\u003e(\u0027UserService\u0027, [\u0027createUserModel\u0027]);"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    githubService \u003d jasmine.createSpyObj\u003cGithubService\u003e(\u0027GithubService\u0027, [\u0027isRepositoryPresent\u0027]);"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    githubEventService \u003d jasmine.createSpyObj\u003cGithubEventService\u003e(\u0027GithubEventService\u0027, [\u0027setLatestChangeEvent\u0027]);"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    router \u003d jasmine.createSpyObj\u003cRouter\u003e(\u0027Router\u0027, [\u0027navigateByUrl\u0027]);"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    errorHandlingService \u003d jasmine.createSpyObj\u003cErrorHandlingService\u003e(\u0027ErrorHandlingService\u0027, [\u0027handleError\u0027]);"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      providers: ["},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        { provide: ElectronService, useValue: electronService },"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        { provide: AuthService, useValue: authService },"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        { provide: PhaseService, useValue: phaseService },"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        { provide: LoggingService, useValue: logger },"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        { provide: UserService, useValue: userService },"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        { provide: GithubService, useValue: githubService },"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        { provide: GithubEventService, useValue: githubEventService },"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        { provide: Router, useValue: router },"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        { provide: ErrorHandlingService, useValue: errorHandlingService }"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      ],"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"      declarations: [ConfirmLoginComponent]"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }).compileComponents();"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    fixture \u003d TestBed.createComponent(ConfirmLoginComponent);"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    fixture.detectChanges();"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  }));"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  });"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  it(\u0027should complete login process with valid repo\u0027, () \u003d\u003e {"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    userService.createUserModel.and.returnValue(of(mockUser));"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    phaseService.currentRepo \u003d getRepoWithValidName();"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    githubService.isRepositoryPresent.and.returnValue(of(true));"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    component.completeLoginProcess();"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":""},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    expect(authService.changeAuthState).toHaveBeenCalled();"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    expect(phaseService.initializeCurrentRepository).toHaveBeenCalled();"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    expect(logger.info).toHaveBeenCalled();"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    expect(userService.createUserModel).toHaveBeenCalled();"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    expect(githubService.isRepositoryPresent).toHaveBeenCalled();"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    expect(githubEventService.setLatestChangeEvent).toHaveBeenCalled();"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    expect(component.handleAuthSuccess).toHaveBeenCalledTimes(2);"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  });"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"});"}],"authorContributionMap":{"vigneshsankariyer1234567890":86}},{"path":"tests/app/core/models/session-model.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  assertSessionDataIntegrity,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  NO_ACCESSIBLE_PHASES,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  NO_VALID_OPEN_PHASES,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  OPENED_PHASE_REPO_UNDEFINED,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  SESSION_DATA_MISSING_OPENPHASES_KEY,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  SESSION_DATA_UNAVAILABLE"},{"lineNumber":9,"author":{"gitId":"-"},"content":"} from \u0027../../../../src/app/core/models/session.model\u0027;"},{"lineNumber":10,"author":{"gitId":"cheehongw"},"content":"import { BUG_REPORTING_PHASE_SESSION_DATA } from \u0027../../../constants/session.constants\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"describe(\u0027Session Model\u0027, () \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  describe(\u0027assertSessionDataIntegrity()\u0027, () \u003d\u003e {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    it(\u0027should throw error on unavailable session\u0027, () \u003d\u003e {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      of(undefined)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(SESSION_DATA_UNAVAILABLE))"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    it(\u0027should throw error on session data with missing crucial values\u0027, () \u003d\u003e {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      of({ dummyKey: undefined })"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(SESSION_DATA_MISSING_OPENPHASES_KEY))"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    it(\u0027should throw error on session with no open phases\u0027, () \u003d\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      of(NO_OPEN_PHASES_SESSION_DATA)"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(NO_ACCESSIBLE_PHASES))"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    it(\u0027should throw error on session data with invalid open phases\u0027, () \u003d\u003e {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      of({ ...BUG_REPORTING_PHASE_SESSION_DATA, openPhases: [\u0027unknownPhase\u0027] })"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(NO_VALID_OPEN_PHASES))"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    it(\u0027should throw error on session data with undefined repo for open phase\u0027, () \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      of({ ...BUG_REPORTING_PHASE_SESSION_DATA, phaseBugReporting: undefined })"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(OPENED_PHASE_REPO_UNDEFINED))"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      of({ ...BUG_REPORTING_PHASE_SESSION_DATA, phaseBugReporting: null })"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(OPENED_PHASE_REPO_UNDEFINED))"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      of({ ...BUG_REPORTING_PHASE_SESSION_DATA, phaseBugReporting: \u0027\u0027 })"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          next: () \u003d\u003e fail(),"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          error: (err) \u003d\u003e expect(err).toEqual(new Error(OPENED_PHASE_REPO_UNDEFINED))"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    it(\u0027should not throw error if session data contains repo information of unopened phases\u0027, () \u003d\u003e {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      of(BUG_REPORTING_PHASE_SESSION_DATA)"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        .subscribe({"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          next: (el) \u003d\u003e expect(el).toEqual(BUG_REPORTING_PHASE_SESSION_DATA),"},{"lineNumber":76,"author":{"gitId":"-"},"content":"          error: () \u003d\u003e fail()"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    it(\u0027should pass valid session data\u0027, () \u003d\u003e {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      of(BUG_REPORTING_PHASE_SESSION_DATA)"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        .pipe(assertSessionDataIntegrity())"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        .subscribe((el) \u003d\u003e expect(el).toEqual(BUG_REPORTING_PHASE_SESSION_DATA));"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":86,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":85,"cheehongw":1}},{"path":"tests/app/issues-viewer/label-filter-bar/label-filter-bar.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Echomo-Xinyu"},"content":"import { ComponentFixture, TestBed, waitForAsync } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":3,"author":{"gitId":"Eclipse-Dominator"},"content":"import { LabelFilterBarComponent } from \u0027../../../../src/app/issues-viewer/label-filter-bar/label-filter-bar.component\u0027;"},{"lineNumber":4,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":5,"author":{"gitId":"Eclipse-Dominator"},"content":"// const dummyDataLabels: simplifiedLabel[] \u003d ["},{"lineNumber":6,"author":{"gitId":"Eclipse-Dominator"},"content":"//   {"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"//     name: \u0027dummy1\u0027,"},{"lineNumber":8,"author":{"gitId":"Eclipse-Dominator"},"content":"//     color: \u0027#2A6478\u0027"},{"lineNumber":9,"author":{"gitId":"Eclipse-Dominator"},"content":"//   },"},{"lineNumber":10,"author":{"gitId":"Eclipse-Dominator"},"content":"//   {"},{"lineNumber":11,"author":{"gitId":"Eclipse-Dominator"},"content":"//     name: \u0027dummy2\u0027,"},{"lineNumber":12,"author":{"gitId":"Eclipse-Dominator"},"content":"//     color: \u0027#705335\u0027"},{"lineNumber":13,"author":{"gitId":"Eclipse-Dominator"},"content":"//   },"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":"//   {"},{"lineNumber":15,"author":{"gitId":"Eclipse-Dominator"},"content":"//     name: \u0027dummy3\u0027,"},{"lineNumber":16,"author":{"gitId":"Eclipse-Dominator"},"content":"//     color: \u0027#6D3F5B\u0027"},{"lineNumber":17,"author":{"gitId":"Eclipse-Dominator"},"content":"//   },"},{"lineNumber":18,"author":{"gitId":"Eclipse-Dominator"},"content":"//   {"},{"lineNumber":19,"author":{"gitId":"Eclipse-Dominator"},"content":"//     name: \u0027dummy4\u0027,"},{"lineNumber":20,"author":{"gitId":"Eclipse-Dominator"},"content":"//     color: \u0027#587246\u0027"},{"lineNumber":21,"author":{"gitId":"Eclipse-Dominator"},"content":"//   },"},{"lineNumber":22,"author":{"gitId":"Eclipse-Dominator"},"content":"//   {"},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":"//     name: \u0027dummy5\u0027,"},{"lineNumber":24,"author":{"gitId":"Eclipse-Dominator"},"content":"//     color: \u0027#FF7514\u0027"},{"lineNumber":25,"author":{"gitId":"Eclipse-Dominator"},"content":"//   },"},{"lineNumber":26,"author":{"gitId":"Eclipse-Dominator"},"content":"//   {"},{"lineNumber":27,"author":{"gitId":"Eclipse-Dominator"},"content":"//     name: \u0027dummy6\u0027,"},{"lineNumber":28,"author":{"gitId":"Eclipse-Dominator"},"content":"//     color: \u0027#1D334A\u0027"},{"lineNumber":29,"author":{"gitId":"Eclipse-Dominator"},"content":"//   }"},{"lineNumber":30,"author":{"gitId":"Eclipse-Dominator"},"content":"// ];"},{"lineNumber":31,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":32,"author":{"gitId":"Eclipse-Dominator"},"content":"describe(\u0027LabelFilterBarComponent\u0027, () \u003d\u003e {"},{"lineNumber":33,"author":{"gitId":"Eclipse-Dominator"},"content":"  let component: LabelFilterBarComponent;"},{"lineNumber":34,"author":{"gitId":"Eclipse-Dominator"},"content":"  let fixture: ComponentFixture\u003cLabelFilterBarComponent\u003e;"},{"lineNumber":35,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":36,"author":{"gitId":"Echomo-Xinyu"},"content":"  beforeEach("},{"lineNumber":37,"author":{"gitId":"Echomo-Xinyu"},"content":"    waitForAsync(() \u003d\u003e {"},{"lineNumber":38,"author":{"gitId":"Eclipse-Dominator"},"content":"      TestBed.configureTestingModule({"},{"lineNumber":39,"author":{"gitId":"Eclipse-Dominator"},"content":"        declarations: [LabelFilterBarComponent]"},{"lineNumber":40,"author":{"gitId":"Eclipse-Dominator"},"content":"      }).compileComponents();"},{"lineNumber":41,"author":{"gitId":"Echomo-Xinyu"},"content":"    })"},{"lineNumber":42,"author":{"gitId":"Echomo-Xinyu"},"content":"  );"},{"lineNumber":43,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":44,"author":{"gitId":"Eclipse-Dominator"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"Eclipse-Dominator"},"content":"    fixture \u003d TestBed.createComponent(LabelFilterBarComponent);"},{"lineNumber":46,"author":{"gitId":"Eclipse-Dominator"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":47,"author":{"gitId":"Eclipse-Dominator"},"content":"    fixture.detectChanges();"},{"lineNumber":48,"author":{"gitId":"Eclipse-Dominator"},"content":"  });"},{"lineNumber":49,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":50,"author":{"gitId":"Eclipse-Dominator"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"Eclipse-Dominator"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":52,"author":{"gitId":"Eclipse-Dominator"},"content":"    console.log(component);"},{"lineNumber":53,"author":{"gitId":"Eclipse-Dominator"},"content":"  });"},{"lineNumber":54,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":55,"author":{"gitId":"Eclipse-Dominator"},"content":"  it(\u0027can filter for labels containing the search key\u0027, () \u003d\u003e {});"},{"lineNumber":56,"author":{"gitId":"Eclipse-Dominator"},"content":"});"}],"authorContributionMap":{"Echomo-Xinyu":5,"Eclipse-Dominator":51}},{"path":"tests/app/shared/issue-tables/issue-paginator.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatPaginator } from \u0027@angular/material/paginator\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../../src/app/core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { paginateData } from \u0027../../../../src/app/shared/issue-tables/issue-paginator\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { TEAM_4 } from \u0027../../../constants/data.constants\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  ISSUE_WITH_ASSIGNEES,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION_LOW_SEVERITY"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../constants/githubissue.constants\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"describe(\u0027issue-paginator\u0027, () \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  describe(\u0027paginateData()\u0027, () \u003d\u003e {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    let dataSet_7: Issue[];"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    let paginator: MatPaginator;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    const dummyTeam \u003d TEAM_4;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    const mediumSeverityIssueWithResponse: Issue \u003d Issue.createPhaseTeamResponseIssue(ISSUE_WITH_EMPTY_DESCRIPTION, dummyTeam);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    const mediumSeverityIssueWithAssigneee: Issue \u003d Issue.createPhaseTeamResponseIssue(ISSUE_WITH_ASSIGNEES, dummyTeam);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    const lowSeverityFeatureFlawIssue: Issue \u003d Issue.createPhaseTeamResponseIssue(ISSUE_WITH_EMPTY_DESCRIPTION_LOW_SEVERITY, dummyTeam);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    const highSeverityDocumentationBugIssue: Issue \u003d Issue.createPhaseTeamResponseIssue("},{"lineNumber":21,"author":{"gitId":"-"},"content":"      ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      dummyTeam"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    beforeEach(() \u003d\u003e {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      dataSet_7 \u003d ["},{"lineNumber":27,"author":{"gitId":"-"},"content":"        mediumSeverityIssueWithResponse,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        mediumSeverityIssueWithAssigneee,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        lowSeverityFeatureFlawIssue,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        mediumSeverityIssueWithResponse,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        mediumSeverityIssueWithAssigneee,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        lowSeverityFeatureFlawIssue,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        highSeverityDocumentationBugIssue"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      ];"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      paginator \u003d { pageSize: 3 } as MatPaginator;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    it(\u0027should set the length of paginator to the length of data\u0027, () \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      paginateData(paginator, dataSet_7);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      expect(paginator.length).toEqual(7);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    it(\u0027should return list of issues according to page index\u0027, () \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      paginator.pageIndex \u003d 0;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"      // Returns issues index 0 to 2"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      const returnedList \u003d paginateData(paginator, dataSet_7);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      expect(returnedList).toEqual([mediumSeverityIssueWithResponse, mediumSeverityIssueWithAssigneee, lowSeverityFeatureFlawIssue]);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    it(\u0027should return list of issues in the previous page if there are no issues on the current page\u0027, () \u003d\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      paginator.pageIndex \u003d 3;"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"      // Returns issues index 6 on page 2"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      const returnedList \u003d paginateData(paginator, dataSet_7);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      expect(returnedList).toEqual([highSeverityDocumentationBugIssue]);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":59,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":58}},{"path":"tests/app/shared/issue-tables/issue-sorter.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"Echomo-Xinyu"},"content":"import { MatSort } from \u0027@angular/material/sort\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../../src/app/core/models/issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { getSortedData } from \u0027../../../../src/app/shared/issue-tables/issue-sorter\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { TEAM_4 } from \u0027../../../constants/data.constants\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ISSUE_PENDING_MODERATION, ISSUE_WITH_ASSIGNEES, ISSUE_WITH_EMPTY_DESCRIPTION } from \u0027../../../constants/githubissue.constants\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"describe(\u0027issuer-sorter\u0027, () \u003d\u003e {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  describe(\u0027getSortedData()\u0027, () \u003d\u003e {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    const dummyTeam \u003d TEAM_4;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    const dummyIssue: Issue \u003d Issue.createPhaseTeamResponseIssue(ISSUE_WITH_EMPTY_DESCRIPTION, dummyTeam);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    const otherDummyIssue: Issue \u003d Issue.createPhaseTeamResponseIssue(ISSUE_WITH_ASSIGNEES, dummyTeam);"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    const issuesList: Issue[] \u003d [dummyIssue, otherDummyIssue];"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    const moderationIssue: Issue \u003d Issue.createPhaseModerationIssue(ISSUE_WITH_EMPTY_DESCRIPTION, dummyTeam);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    const otherModerationIssue: Issue \u003d Issue.createPhaseModerationIssue(ISSUE_PENDING_MODERATION, dummyTeam);"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    const todoIssuesList: Issue[] \u003d [moderationIssue, otherModerationIssue];"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    const matSort: MatSort \u003d new MatSort();"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    it(\u0027sorts issues based on their assignees correctly\u0027, () \u003d\u003e {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      matSort.active \u003d \u0027assignees\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027asc\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      const sortedIssuesByAssigneesAsc \u003d getSortedData(matSort, issuesList);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuesByAssigneesAsc, dummyIssue, otherDummyIssue);"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027desc\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      const sortedIssuesByAssigneesDesc \u003d getSortedData(matSort, issuesList);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuesByAssigneesDesc, otherDummyIssue, dummyIssue);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    it(\u0027sorts issues based on their string fields correctly\u0027, () \u003d\u003e {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      matSort.active \u003d \u0027title\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027asc\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      const sortedIssuesByTitleAsc \u003d getSortedData(matSort, issuesList);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuesByTitleAsc, dummyIssue, otherDummyIssue);"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027desc\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      const sortedIssuesByTitleDesc \u003d getSortedData(matSort, issuesList);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuesByTitleDesc, otherDummyIssue, dummyIssue);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    it(\u0027sorts issues based on their integer fields correctly\u0027, () \u003d\u003e {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      matSort.active \u003d \u0027id\u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027asc\u0027;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      const sortedIssuedByIdAsc \u003d getSortedData(matSort, issuesList);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuedByIdAsc, otherDummyIssue, dummyIssue);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027desc\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      const sortedIssuedByIdDesc \u003d getSortedData(matSort, issuesList);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuedByIdDesc, dummyIssue, otherDummyIssue);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    it(\u0027sorts issues based on their todos left correctly\u0027, () \u003d\u003e {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      matSort.active \u003d \u0027Todo Remaining\u0027;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027asc\u0027;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      const sortedIssuesByTodoAsc \u003d getSortedData(matSort, todoIssuesList);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuesByTodoAsc, otherModerationIssue, moderationIssue);"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"      matSort.direction \u003d \u0027desc\u0027;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      const sortedIssuesByTodoDesc \u003d getSortedData(matSort, todoIssuesList);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      assertOrder(sortedIssuesByTodoDesc, moderationIssue, otherModerationIssue);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":63,"author":{"gitId":"-"},"content":"});"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":66,"author":{"gitId":"-"},"content":" * This helper method helps to check if the sorted issues are in their"},{"lineNumber":67,"author":{"gitId":"-"},"content":" * correct order based on the variable arguments provided."},{"lineNumber":68,"author":{"gitId":"-"},"content":" */"},{"lineNumber":69,"author":{"gitId":"-"},"content":"function assertOrder(sortedIssues: Issue[], ...expectedSortedIssues: Issue[]) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  for (let i \u003d 0; i \u003c sortedIssues.length; i++) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    expect(sortedIssues[i].id).toBe(expectedSortedIssues[i].id);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":72}},{"path":"tests/constants/label.constants.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Label } from \u0027../../src/app/core/models/label.model\u0027;"},{"lineNumber":2,"author":{"gitId":"Echomo-Xinyu"},"content":"import { LabelService, LABEL_DEFINITIONS } from \u0027../../src/app/core/services/label.service\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"// Label name constants"},{"lineNumber":5,"author":{"gitId":"-"},"content":"export const SEVERITY_VERY_LOW \u003d \u0027Very Low\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"export const SEVERITY_LOW \u003d \u0027Low\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"export const SEVERITY_MEDIUM \u003d \u0027Medium\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"export const SEVERITY_HIGH \u003d \u0027High\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"export const TYPE_DOCUMENTATION_BUG \u003d \u0027DocumentationBug\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export const TYPE_FUNCTIONALITY_BUG \u003d \u0027FunctionalityBug\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"export const TYPE_FEATURE_FLAW \u003d \u0027FeatureFlaw\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"export const RESPONSE_ACCEPTED \u003d \u0027Accepted\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"export const RESPONSE_REJECTED \u003d \u0027Rejected\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export const RESPONSE_ISSUE_UNCLEAR \u003d \u0027IssueUnclear\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"export const RESPONSE_CANNOT_REPRODUCE \u003d \u0027CannotReproduce\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"export const STATUS_DONE \u003d \u0027Done\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export const STATUS_INCOMPLETE \u003d \u0027Incomplete\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"// Label category constants"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export const SEVERITY \u003d \u0027severity\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export const TYPE \u003d \u0027type\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"export const RESPONSE \u003d \u0027response\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export const STATUS \u003d \u0027status\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Label color constants"},{"lineNumber":26,"author":{"gitId":"-"},"content":"export const COLOR_BLACK \u003d \u0027000000\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"export const COLOR_WHITE \u003d \u0027ffffff\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"export const COLOR_SEVERITY_VERY_LOW \u003d \u0027ffe0e0\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"export const COLOR_SEVERITY_LOW \u003d \u0027ffcccc\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"export const COLOR_SEVERITY_MEDIUM \u003d \u0027ff9999\u0027;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"export const COLOR_SEVERITY_HIGH \u003d \u0027ff6666\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"export const COLOR_TYPE_DOCUMENTATION_BUG \u003d \u0027d966ff\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"export const COLOR_TYPE_FUNCTIONALITY_BUG \u003d \u00279900cc\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"export const COLOR_RESPONSE_ACCEPTED \u003d \u002700802b\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"export const COLOR_RESPONSE_REJECTED \u003d \u0027ff9900\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"export const COLOR_RESPONSE_ISSUE_UNCLEAR \u003d \u0027ffcc80\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"export const COLOR_RESPONSE_CANNOT_REPRODUCE \u003d \u0027ffebcc\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"export const COLOR_STATUS_DONE \u003d \u0027a6a6a6\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"export const COLOR_STATUS_INCOMPLETE \u003d \u0027000000\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"export const CSS_BORDER_RADIUS_3PX \u003d \u00273px\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"export const CSS_CURSOR_DEFAULT \u003d \u0027default\u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"export const CSS_PADDING_3PX \u003d \u00273px\u0027;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"export const CSS_FONT_WEIGHT_410 \u003d \u0027410\u0027;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"export const CSS_DISPLAY_INLINE_FLEX \u003d \u0027inline-flex\u0027;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"export const CSS_DISPLAY_INLINE_BLOCK \u003d \u0027inline-block\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"// CSS style constants"},{"lineNumber":49,"author":{"gitId":"-"},"content":"export const DARK_BG_LIGHT_TEXT \u003d {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u0027background-color\u0027: `#${COLOR_BLACK}`,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u0027border-radius\u0027: CSS_BORDER_RADIUS_3PX,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  cursor: CSS_CURSOR_DEFAULT,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  padding: CSS_PADDING_3PX,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  color: `#${COLOR_WHITE}`,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u0027font-weight\u0027: CSS_FONT_WEIGHT_410,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  display: CSS_DISPLAY_INLINE_FLEX"},{"lineNumber":57,"author":{"gitId":"-"},"content":"};"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"export const LIGHT_BG_DARK_TEXT \u003d {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u0027background-color\u0027: `#${COLOR_WHITE}`,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u0027border-radius\u0027: CSS_BORDER_RADIUS_3PX,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  cursor: CSS_CURSOR_DEFAULT,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  padding: CSS_PADDING_3PX,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  color: `#${COLOR_BLACK}`,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u0027font-weight\u0027: CSS_FONT_WEIGHT_410,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  display: CSS_DISPLAY_INLINE_FLEX"},{"lineNumber":67,"author":{"gitId":"-"},"content":"};"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"export const INLINE_BLOCK_TEXT \u003d {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u0027background-color\u0027: `#${COLOR_WHITE}`,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u0027border-radius\u0027: CSS_BORDER_RADIUS_3PX,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  cursor: CSS_CURSOR_DEFAULT,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  padding: CSS_PADDING_3PX,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  color: `#${COLOR_BLACK}`,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \u0027font-weight\u0027: CSS_FONT_WEIGHT_410,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  display: CSS_DISPLAY_INLINE_BLOCK"},{"lineNumber":77,"author":{"gitId":"-"},"content":"};"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"export const RESPONSE_REJECTED_LABEL \u003d new Label(RESPONSE, RESPONSE_REJECTED, COLOR_RESPONSE_REJECTED, LABEL_DEFINITIONS.responseRejected);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"export const STATUS_DONE_LABEL \u003d new Label(STATUS, STATUS_DONE, COLOR_STATUS_DONE);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"export const TYPE_DOCUMENTATION_BUG_LABEL \u003d new Label("},{"lineNumber":83,"author":{"gitId":"-"},"content":"  TYPE,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  TYPE_DOCUMENTATION_BUG,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  COLOR_TYPE_DOCUMENTATION_BUG,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  LABEL_DEFINITIONS.typeDocumentationBug"},{"lineNumber":87,"author":{"gitId":"-"},"content":");"},{"lineNumber":88,"author":{"gitId":"-"},"content":"export const TYPE_FUNCTIONALITY_BUG_LABEL \u003d new Label("},{"lineNumber":89,"author":{"gitId":"-"},"content":"  TYPE,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  TYPE_FUNCTIONALITY_BUG,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  COLOR_TYPE_FUNCTIONALITY_BUG,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  LABEL_DEFINITIONS.typeFunctionalityBug"},{"lineNumber":93,"author":{"gitId":"-"},"content":");"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"export const SEVERITY_HIGH_LABEL \u003d new Label(SEVERITY, SEVERITY_HIGH, COLOR_SEVERITY_HIGH, LABEL_DEFINITIONS.severityHigh);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"export const SEVERITY_MEDIUM_LABEL \u003d new Label(SEVERITY, SEVERITY_MEDIUM, COLOR_SEVERITY_MEDIUM, LABEL_DEFINITIONS.severityMedium);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"export const SEVERITY_LOW_LABEL \u003d new Label(SEVERITY, SEVERITY_LOW, COLOR_SEVERITY_LOW, LABEL_DEFINITIONS.severityLow);"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"// Constant array of labels for team response phase and moderation phase to simulate Github response"},{"lineNumber":100,"author":{"gitId":"-"},"content":"export const SOME_TEAM_RESPONSE_PHASE_LABELS \u003d ["},{"lineNumber":101,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    color: COLOR_RESPONSE_ACCEPTED,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    name: RESPONSE + \u0027.\u0027 + RESPONSE_ACCEPTED,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    definition: LABEL_DEFINITIONS.responseAccepted"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    color: COLOR_SEVERITY_LOW,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    name: SEVERITY + \u0027.\u0027 + SEVERITY_LOW,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    definition: LABEL_DEFINITIONS.severityLow"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    color: COLOR_TYPE_FUNCTIONALITY_BUG,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    name: TYPE + \u0027.\u0027 + TYPE_FUNCTIONALITY_BUG,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    definition: LABEL_DEFINITIONS.typeFunctionalityBug"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":116,"author":{"gitId":"-"},"content":"];"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"// Constant array of labels for tester phase to simulate Github response"},{"lineNumber":119,"author":{"gitId":"-"},"content":"export const SOME_TESTER_PHASE_LABELS \u003d ["},{"lineNumber":120,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    color: COLOR_SEVERITY_HIGH,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    name: SEVERITY + \u0027.\u0027 + SEVERITY_HIGH"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    color: COLOR_TYPE_DOCUMENTATION_BUG,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    name: TYPE + \u0027.\u0027 + TYPE_DOCUMENTATION_BUG"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":128,"author":{"gitId":"-"},"content":"];"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"export const ALL_REQUIRED_LABELS_ARRAY: {}[] \u003d LabelService.getRequiredLabelsAsArray(true).map((label: Label) \u003d\u003e {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  return {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    color: label.labelColor,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    name: label.getFormattedName()"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":135,"author":{"gitId":"-"},"content":"});"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"// List of labels"},{"lineNumber":138,"author":{"gitId":"-"},"content":"export const SEVERITY_LABELS \u003d ["},{"lineNumber":139,"author":{"gitId":"-"},"content":"  new Label(SEVERITY, SEVERITY_LOW, COLOR_SEVERITY_LOW, LABEL_DEFINITIONS.severityLow),"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  new Label(SEVERITY, SEVERITY_MEDIUM, COLOR_SEVERITY_MEDIUM, LABEL_DEFINITIONS.severityMedium),"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  new Label(SEVERITY, SEVERITY_HIGH, COLOR_SEVERITY_HIGH, LABEL_DEFINITIONS.undefined)"},{"lineNumber":142,"author":{"gitId":"-"},"content":"];"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":141}},{"path":"tests/services/label.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Label } from \u0027../../src/app/core/models/label.model\u0027;"},{"lineNumber":3,"author":{"gitId":"Echomo-Xinyu"},"content":"import { LabelService, LABEL_DEFINITIONS } from \u0027../../src/app/core/services/label.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import * as LabelConstant from \u0027../constants/label.constants\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"let labelService: LabelService;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"let labelList: Label[];"},{"lineNumber":8,"author":{"gitId":"-"},"content":"let githubService: any;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"describe(\u0027LabelService\u0027, () \u003d\u003e {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    githubService \u003d jasmine.createSpyObj(\u0027GithubService\u0027, [\u0027fetchAllLabels\u0027, \u0027createLabel\u0027]);"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    labelService \u003d new LabelService(githubService);"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  describe(\u0027.syncLabels()\u0027, () \u003d\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    it(\u0027should create all required labels for team response phase if no required labels are fetched\u0027, () \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      githubService.fetchAllLabels.and.callFake(() \u003d\u003e of([]));"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      of(true).pipe(labelService.syncLabels(true)).subscribe();"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.SEVERITY_LOW_LABEL);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.RESPONSE_REJECTED_LABEL);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.STATUS_DONE_LABEL);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.TYPE_DOCUMENTATION_BUG_LABEL);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      expect(githubService.createLabel).toHaveBeenCalledTimes(LabelService.getRequiredLabelsAsArray(true).length);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    it(\u0027should create all required labels for tester phase if no required labels are fetched\u0027, () \u003d\u003e {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      githubService.fetchAllLabels.and.callFake(() \u003d\u003e of([]));"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      of(true).pipe(labelService.syncLabels(false)).subscribe();"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.SEVERITY_LOW_LABEL);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.TYPE_DOCUMENTATION_BUG_LABEL);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      expect(githubService.createLabel).toHaveBeenCalledTimes(LabelService.getRequiredLabelsAsArray(false).length);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    it(\u0027should create missing required labels for team response phase if some required labels are fetched\u0027, () \u003d\u003e {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      githubService.fetchAllLabels.and.callFake(() \u003d\u003e of(LabelConstant.SOME_TEAM_RESPONSE_PHASE_LABELS));"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      of(true).pipe(labelService.syncLabels(true)).subscribe();"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"      assertLabelNotCreated(githubService, LabelConstant.SEVERITY_LOW_LABEL);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.RESPONSE_REJECTED_LABEL);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.STATUS_DONE_LABEL);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.TYPE_DOCUMENTATION_BUG_LABEL);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      expect(githubService.createLabel).toHaveBeenCalledTimes("},{"lineNumber":46,"author":{"gitId":"-"},"content":"        LabelService.getRequiredLabelsAsArray(true).length - LabelConstant.SOME_TEAM_RESPONSE_PHASE_LABELS.length"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    it(\u0027should create missing required labels for tester phase if some required labels are fetched\u0027, () \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      githubService.fetchAllLabels.and.callFake(() \u003d\u003e of(LabelConstant.SOME_TESTER_PHASE_LABELS));"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      of(true).pipe(labelService.syncLabels(false)).subscribe();"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"      assertLabelNotCreated(githubService, LabelConstant.SEVERITY_HIGH_LABEL);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.TYPE_FUNCTIONALITY_BUG_LABEL);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      expect(githubService.createLabel).toHaveBeenCalledTimes("},{"lineNumber":57,"author":{"gitId":"-"},"content":"        LabelService.getRequiredLabelsAsArray(false).length - LabelConstant.SOME_TESTER_PHASE_LABELS.length"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    it(\u0027should not need to create any required labels if all required labels are fetched\u0027, () \u003d\u003e {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      githubService.fetchAllLabels.and.callFake(() \u003d\u003e of(LabelConstant.ALL_REQUIRED_LABELS_ARRAY));"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      of(true).pipe(labelService.syncLabels(true)).subscribe();"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"      expect(githubService.createLabel).toHaveBeenCalledTimes(0);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":68,"author":{"gitId":"-"},"content":"});"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: parseLabelData()\u0027, () \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  beforeAll(() \u003d\u003e {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    labelService \u003d new LabelService(null);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    labelList \u003d labelService.parseLabelData(LabelConstant.SOME_TEAM_RESPONSE_PHASE_LABELS);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  afterAll(() \u003d\u003e {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  it(\u0027should be response.Accepted label\u0027, () \u003d\u003e {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    expect(labelList[0].labelCategory).toBe(LabelConstant.RESPONSE);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    expect(labelList[0].labelValue).toBe(LabelConstant.RESPONSE_ACCEPTED);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    expect(labelList[0].labelColor).toBe(LabelConstant.COLOR_RESPONSE_ACCEPTED);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  it(\u0027should be severity.Low\u0027, () \u003d\u003e {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    expect(labelList[1].labelCategory).toBe(LabelConstant.SEVERITY);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    expect(labelList[1].labelValue).toBe(LabelConstant.SEVERITY_LOW);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    expect(labelList[1].labelColor).toBe(LabelConstant.COLOR_SEVERITY_LOW);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    expect(labelList[1].labelDefinition).toBe(LABEL_DEFINITIONS.severityLow);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  it(\u0027should be type.FunctionalityBug\u0027, () \u003d\u003e {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    expect(labelList[2].labelCategory).toBe(LabelConstant.TYPE);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    expect(labelList[2].labelValue).toBe(LabelConstant.TYPE_FUNCTIONALITY_BUG);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    expect(labelList[2].labelColor).toBe(LabelConstant.COLOR_TYPE_FUNCTIONALITY_BUG);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    expect(labelList[2].labelDefinition).toBe(LABEL_DEFINITIONS.typeFunctionalityBug);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":99,"author":{"gitId":"-"},"content":"});"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: isDarkColor()\u0027, () \u003d\u003e {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    labelService \u003d new LabelService(null);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  afterEach(() \u003d\u003e {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  it(\u0027should be true for dark color\u0027, () \u003d\u003e {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    expect(labelService.isDarkColor(LabelConstant.COLOR_BLACK)).toBeTruthy();"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  it(\u0027should be false for light color\u0027, () \u003d\u003e {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    expect(labelService.isDarkColor(LabelConstant.COLOR_WHITE)).toBeFalsy();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":117,"author":{"gitId":"-"},"content":"});"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: setLabelStyle()\u0027, () \u003d\u003e {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    labelService \u003d new LabelService(null);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"  afterEach(() \u003d\u003e {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  it(\u0027should be dark color background with light color text\u0027, () \u003d\u003e {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    expect(labelService.setLabelStyle(LabelConstant.COLOR_BLACK)).toEqual(LabelConstant.DARK_BG_LIGHT_TEXT);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  it(\u0027should be light color background with dark color text\u0027, () \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    expect(labelService.setLabelStyle(LabelConstant.COLOR_WHITE)).toEqual(LabelConstant.LIGHT_BG_DARK_TEXT);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  it(\u0027should be light color background with dark color text\u0027, () \u003d\u003e {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    expect(labelService.setLabelStyle(LabelConstant.COLOR_WHITE, \u0027inline-block\u0027)).toEqual(LabelConstant.INLINE_BLOCK_TEXT);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":139,"author":{"gitId":"-"},"content":"});"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: getColorOfLabel()\u0027, () \u003d\u003e {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    labelService \u003d new LabelService(null);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"  afterEach(() \u003d\u003e {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"  it(\u0027should be correct label color for Severity.Low\u0027, () \u003d\u003e {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    expect(labelService.getColorOfLabel(LabelConstant.SEVERITY_LOW)).toEqual(LabelConstant.COLOR_SEVERITY_LOW);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"  it(\u0027should be white color for invalid inputs\u0027, () \u003d\u003e {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    expect(labelService.getColorOfLabel(null)).toEqual(LabelConstant.COLOR_WHITE.toLowerCase());"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":157,"author":{"gitId":"-"},"content":"});"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: getLabelDefinition()\u0027, () \u003d\u003e {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    labelService \u003d new LabelService(null);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"  afterEach(() \u003d\u003e {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"  it(\u0027should return the correct label definition for type.FunctionalityBug\u0027, () \u003d\u003e {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(LabelConstant.TYPE_FUNCTIONALITY_BUG, LabelConstant.TYPE)).toEqual("},{"lineNumber":170,"author":{"gitId":"-"},"content":"      LABEL_DEFINITIONS.typeFunctionalityBug"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"  it(\u0027should return the correct label definition for severity.Medium\u0027, () \u003d\u003e {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(LabelConstant.SEVERITY_MEDIUM, LabelConstant.SEVERITY)).toEqual("},{"lineNumber":176,"author":{"gitId":"-"},"content":"      LABEL_DEFINITIONS.severityMedium"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"  it(\u0027should return the correct label definition for response.Rejected\u0027, () \u003d\u003e {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(LabelConstant.RESPONSE_REJECTED, LabelConstant.RESPONSE)).toEqual("},{"lineNumber":182,"author":{"gitId":"-"},"content":"      LABEL_DEFINITIONS.responseRejected"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"  it(\u0027should return null for label with no definition\u0027, () \u003d\u003e {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(LabelConstant.STATUS_DONE, LabelConstant.STATUS)).toEqual(LABEL_DEFINITIONS.undefined);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"  it(\u0027should return null for invalid inputs\u0027, () \u003d\u003e {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(null, null)).toEqual(LABEL_DEFINITIONS.undefined);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(null, LabelConstant.SEVERITY)).toEqual(LABEL_DEFINITIONS.undefined);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(LabelConstant.SEVERITY_MEDIUM, null)).toEqual(LABEL_DEFINITIONS.undefined);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":195,"author":{"gitId":"-"},"content":"});"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"function assertLabelCreated(githubService: any, label: Label) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  expect(githubService.createLabel).toHaveBeenCalledWith(label.getFormattedName(), label.labelColor);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"function assertLabelNotCreated(githubService: any, label: Label) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  expect(githubService.createLabel).not.toHaveBeenCalledWith(label.getFormattedName(), label.labelColor);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Echomo-Xinyu":1,"-":202}},{"path":"tests/services/logging.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027../../src/app/core/services/logging.service\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { MockLocalStorage } from \u0027../helper/mock.local.storage\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"cheehongw"},"content":"let logger: LoggingService;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"let headerLog: string;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"let sessionSeparator: string;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"const mockDate \u003d new Date(2021, 6, 27);"},{"lineNumber":8,"author":{"gitId":"-"},"content":"const infoLogMessage \u003d \u0027Info log message\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"const mockLocalStorageFunctionCalls \u003d (mockLocalStorage: MockLocalStorage) \u003d\u003e {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  spyOn(localStorage, \u0027getItem\u0027).and.callFake(mockLocalStorage.getItem.bind(mockLocalStorage));"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  spyOn(localStorage, \u0027setItem\u0027).and.callFake(mockLocalStorage.setItem.bind(mockLocalStorage));"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  spyOn(localStorage, \u0027removeItem\u0027).and.callFake(mockLocalStorage.removeItem.bind(mockLocalStorage));"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  spyOn(localStorage, \u0027clear\u0027).and.callFake(mockLocalStorage.clear.bind(mockLocalStorage));"},{"lineNumber":15,"author":{"gitId":"-"},"content":"};"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"const mockDates \u003d () \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  jasmine.clock().install();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  jasmine.clock().mockDate(mockDate);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"};"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"const initializeLoggingService \u003d () \u003d\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  const electronService \u003d jasmine.createSpyObj(\u0027ElectronService\u0027, [\u0027isElectron\u0027]);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  electronService.isElectron \u003d jasmine.createSpy(\u0027isElectron\u0027, () \u003d\u003e false);"},{"lineNumber":25,"author":{"gitId":"cheehongw"},"content":"  logger \u003d new LoggingService(electronService);"},{"lineNumber":26,"author":{"gitId":"cheehongw"},"content":"  headerLog \u003d `${logger.LOG_START_HEADER}\\n${mockDate.toLocaleString()}`;"},{"lineNumber":27,"author":{"gitId":"cheehongw"},"content":"  sessionSeparator \u003d logger.SESSION_LOG_SEPARATOR;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"};"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"describe(\u0027LoggingService\u0027, () \u003d\u003e {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  beforeAll(() \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    const mockLocalStorage \u003d new MockLocalStorage();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mockLocalStorageFunctionCalls(mockLocalStorage);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    mockDates();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    initializeLoggingService();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"cheehongw"},"content":"    logger.reset();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    localStorage.clear();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  afterAll(() \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    jasmine.clock().uninstall();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  describe(\u0027.startSession()\u0027, () \u003d\u003e {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    it(\u0027should successfully initialize logging session\u0027, () \u003d\u003e {"},{"lineNumber":49,"author":{"gitId":"cheehongw"},"content":"      logger.startSession();"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"      const actualLog \u003d logger.getCachedLog();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      const expectedLog \u003d headerLog;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      expect(actualLog).toEqual(expectedLog);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    it(\u0027should successfully reinitialize logging session\u0027, () \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"cheehongw"},"content":"      logger.startSession();"},{"lineNumber":57,"author":{"gitId":"cheehongw"},"content":"      logger.reset();"},{"lineNumber":58,"author":{"gitId":"cheehongw"},"content":"      logger.startSession();"},{"lineNumber":59,"author":{"gitId":"cheehongw"},"content":"      const actualLog \u003d logger.getCachedLog();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      const expectedLog \u003d `${headerLog}${sessionSeparator}${headerLog}`;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      expect(actualLog).toEqual(expectedLog);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    it(\u0027should successfully reinitialize logging session when limit reached\u0027, () \u003d\u003e {"},{"lineNumber":65,"author":{"gitId":"cheehongw"},"content":"      Array(logger.LOG_COUNT_LIMIT)"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        .fill(0)"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        .forEach(() \u003d\u003e {"},{"lineNumber":68,"author":{"gitId":"cheehongw"},"content":"          logger.startSession();"},{"lineNumber":69,"author":{"gitId":"cheehongw"},"content":"          logger.reset();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":71,"author":{"gitId":"cheehongw"},"content":"      logger.startSession();"},{"lineNumber":72,"author":{"gitId":"cheehongw"},"content":"      const actualLog \u003d logger.getCachedLog();"},{"lineNumber":73,"author":{"gitId":"cheehongw"},"content":"      const expectedLog \u003d Array(logger.LOG_COUNT_LIMIT)"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        .fill(\u0027\u0027)"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        .map((_) \u003d\u003e headerLog)"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        .join(sessionSeparator);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      expect(actualLog).toEqual(expectedLog);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  describe(\u0027.reset()\u0027, () \u003d\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    it(\u0027should do nothing if no session is ongoing\u0027, () \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"cheehongw"},"content":"      logger.reset();"},{"lineNumber":84,"author":{"gitId":"cheehongw"},"content":"      const actualLog \u003d logger.getCachedLog();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      expect(actualLog).toBeNull();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    it(\u0027should not tamper with existing log histories\u0027, () \u003d\u003e {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      let expectedLog \u003d headerLog;"},{"lineNumber":90,"author":{"gitId":"cheehongw"},"content":"      for (let i \u003d 0; i \u003c logger.LOG_COUNT_LIMIT + 1; i +\u003d 1) {"},{"lineNumber":91,"author":{"gitId":"cheehongw"},"content":"        logger.startSession();"},{"lineNumber":92,"author":{"gitId":"cheehongw"},"content":"        logger.reset();"},{"lineNumber":93,"author":{"gitId":"cheehongw"},"content":"        const actualLog \u003d logger.getCachedLog();"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expect(actualLog).toEqual(expectedLog);"},{"lineNumber":95,"author":{"gitId":"cheehongw"},"content":"        if (i \u003c logger.LOG_COUNT_LIMIT - 1) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"          expectedLog +\u003d `${sessionSeparator}${headerLog}`;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  describe(\u0027adding logs\u0027, () \u003d\u003e {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    it(\u0027should successfully add info logs\u0027, () \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"cheehongw"},"content":"      logger.startSession();"},{"lineNumber":105,"author":{"gitId":"cheehongw"},"content":"      const initialLog \u003d logger.getCachedLog();"},{"lineNumber":106,"author":{"gitId":"cheehongw"},"content":"      logger.info(infoLogMessage);"},{"lineNumber":107,"author":{"gitId":"cheehongw"},"content":"      const actualLog \u003d logger.getCachedLog();"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      const expectedLog \u003d `${initialLog}\\n${infoLogMessage}`;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      expect(actualLog).toEqual(expectedLog);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"  describe(\u0027updating and trimming logs from sessions\u0027, () \u003d\u003e {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    it(\u0027should trim oldest log if number of sessions exceed session limit\u0027, () \u003d\u003e {"},{"lineNumber":115,"author":{"gitId":"cheehongw"},"content":"      Array(logger.LOG_COUNT_LIMIT + 1)"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        .fill(0)"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        .forEach(() \u003d\u003e {"},{"lineNumber":118,"author":{"gitId":"cheehongw"},"content":"          logger.startSession();"},{"lineNumber":119,"author":{"gitId":"cheehongw"},"content":"          logger.info(infoLogMessage);"},{"lineNumber":120,"author":{"gitId":"cheehongw"},"content":"          logger.reset();"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":122,"author":{"gitId":"cheehongw"},"content":"      logger.startSession();"},{"lineNumber":123,"author":{"gitId":"cheehongw"},"content":"      const actualLog \u003d logger.getCachedLog();"},{"lineNumber":124,"author":{"gitId":"cheehongw"},"content":"      const expectedLog \u003d Array(logger.LOG_COUNT_LIMIT)"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        .fill(\u0027\u0027)"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        .map((_) \u003d\u003e headerLog)"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        .join(`\\n${infoLogMessage}${sessionSeparator}`);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      expect(actualLog).toEqual(expectedLog);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":131,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":96,"cheehongw":35}}]
