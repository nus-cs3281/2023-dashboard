[{"path":"src/app/core/models/issue.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import * as moment from \u0027moment\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027./comment.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027./github/github-comment.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027./github/github-issue.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027./github/github-label.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { HiddenData } from \u0027./hidden-data.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { IssueDispute } from \u0027./issue-dispute.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { Team } from \u0027./team.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { TeamAcceptedTemplate } from \u0027./templates/team-accepted-template.model\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { TeamResponseTemplate } from \u0027./templates/team-response-template.model\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { TesterResponseTemplate } from \u0027./templates/tester-response-template.model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { TutorModerationIssueTemplate } from \u0027./templates/tutor-moderation-issue-template.model\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { TutorModerationTodoTemplate } from \u0027./templates/tutor-moderation-todo-template.model\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { TesterResponse } from \u0027./tester-response.model\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class Issue {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  /** Basic Fields */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  readonly globalId: string;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  readonly id: number;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  readonly created_at: string;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  readonly githubIssue: GithubIssue;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  githubComments: GithubComment[];"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  title: string;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  description: string;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  hiddenDataInDescription: HiddenData;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  /** Fields derived from Labels */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  severity: string;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  type: string;"},{"lineNumber":31,"author":{"gitId":"Eclipse-Dominator"},"content":"  response?: string; // all instance of this should be renamed to response"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  duplicated?: boolean;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  status?: string;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  pending?: string;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  unsure?: boolean;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  teamAssigned?: Team;"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  /** Depending on the phase, assignees attribute can be derived from Github\u0027s assignee feature OR from the Github\u0027s issue description */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  assignees?: string[];"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  /** Fields derived from parsing of Github\u0027s issue description */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  duplicateOf?: number;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  teamResponse?: string;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  testerResponses?: TesterResponse[];"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  testerDisagree?: boolean; // whether tester agrees or disagree to teams reponse"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  issueComment?: IssueComment; // Issue comment is used for Tutor Response and Tester Response"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  issueDisputes?: IssueDispute[];"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  teamChosenSeverity?: string;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  teamChosenType?: string;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  teamAccepted?: boolean;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  /** Fields for error messages during parsing of Github\u0027s issue description */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  teamResponseError: boolean;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  testerResponseError: boolean;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  parseError: string;"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * Formats the text to create space at the end of the user input to prevent any issues with"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * the markdown interpretation."},{"lineNumber":60,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * Brought over from comment-editor.component.ts"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  static formatText(text: string): string {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    if (text \u003d\u003d\u003d null) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      return null;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    if (text \u003d\u003d\u003d undefined) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      return undefined;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    const newLinesRegex \u003d /[\\n\\r]/gi;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    const textSplitArray \u003d text.split(newLinesRegex);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    if (textSplitArray.filter((split) \u003d\u003e split.trim() !\u003d\u003d \u0027\u0027).length \u003e 0) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      return `${text}\\n\\n`;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      return text;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":82,"author":{"gitId":"-"},"content":"   * Processes and cleans a raw issue description obtained from user input."},{"lineNumber":83,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  static updateDescription(description: string): string {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    const defaultString \u003d \u0027No details provided by bug reporter.\u0027;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    return Issue.orDefaultString(Issue.formatText(description), defaultString);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"   * Processes and cleans a raw team response obtained from user input."},{"lineNumber":91,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  static updateTeamResponse(teamResponse: string): string {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    const defaultString \u003d \u0027No details provided by team.\u0027;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    return Issue.orDefaultString(Issue.formatText(teamResponse), defaultString);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   * Given two strings, returns the first if it is not an empty string or a false value such as null/undefined."},{"lineNumber":99,"author":{"gitId":"-"},"content":"   * Returns the second string if the first is an empty string."},{"lineNumber":100,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  private static orDefaultString(stringA: string, def: string): string {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    if (!stringA) {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      return def;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    return stringA.length !\u003d\u003d 0 ? stringA : def;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  protected constructor(githubIssue: GithubIssue) {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /** Basic Fields */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    this.globalId \u003d githubIssue.id;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    this.id \u003d +githubIssue.number;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    this.created_at \u003d moment(githubIssue.created_at).format(\u0027lll\u0027);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    this.title \u003d githubIssue.title;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    this.hiddenDataInDescription \u003d new HiddenData(githubIssue.body);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    this.description \u003d Issue.updateDescription(this.hiddenDataInDescription.originalStringWithoutHiddenData);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    this.githubIssue \u003d githubIssue;"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /** Fields derived from Labels */"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    this.severity \u003d githubIssue.findLabel(GithubLabel.LABELS.severity);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    this.type \u003d githubIssue.findLabel(GithubLabel.LABELS.type);"},{"lineNumber":121,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.response \u003d githubIssue.findLabel(GithubLabel.LABELS.response);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    this.duplicated \u003d !!githubIssue.findLabel(GithubLabel.LABELS.duplicated, false);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    this.status \u003d githubIssue.findLabel(GithubLabel.LABELS.status);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    this.pending \u003d githubIssue.findLabel(GithubLabel.LABELS.pending);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"  public static createPhaseBugReportingIssue(githubIssue: GithubIssue): Issue {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    return new Issue(githubIssue);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  public static createPhaseTeamResponseIssue(githubIssue: GithubIssue, teamData: Team): Issue {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    const issue \u003d new Issue(githubIssue);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    const template \u003d new TeamResponseTemplate(githubIssue.comments);"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    issue.githubComments \u003d githubIssue.comments;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    issue.teamAssigned \u003d teamData;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    issue.assignees \u003d githubIssue.assignees.map((assignee) \u003d\u003e assignee.login);"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    issue.teamResponseError \u003d template.parseFailure;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    issue.parseError \u003d template.parseError;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    issue.issueComment \u003d template.comment;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    issue.teamResponse \u003d template.teamResponse;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    issue.duplicateOf \u003d template.duplicateOf;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    issue.duplicated \u003d issue.duplicateOf !\u003d\u003d undefined \u0026\u0026 issue.duplicateOf !\u003d\u003d null;"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    return issue;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"  public static createPhaseTesterResponseIssue(githubIssue: GithubIssue): Issue {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    const issue \u003d new Issue(githubIssue);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    const testerResponseTemplate \u003d new TesterResponseTemplate(githubIssue.comments);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    const teamAcceptedTemplate \u003d new TeamAcceptedTemplate(githubIssue.comments);"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    issue.githubComments \u003d githubIssue.comments;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    issue.testerResponseError \u003d testerResponseTemplate.parseFailure \u0026\u0026 teamAcceptedTemplate.parseFailure;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    issue.parseError \u003d testerResponseTemplate.parseError;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    issue.teamAccepted \u003d teamAcceptedTemplate.teamAccepted;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    issue.issueComment \u003d testerResponseTemplate.comment;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    issue.teamResponse \u003d testerResponseTemplate.teamResponse;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    issue.testerResponses \u003d testerResponseTemplate.testerResponses;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    issue.testerDisagree \u003d testerResponseTemplate.testerDisagree;"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    issue.teamChosenSeverity \u003d testerResponseTemplate.teamChosenSeverity || null;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    issue.teamChosenType \u003d testerResponseTemplate.teamChosenType || null;"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    return issue;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"  public static createPhaseModerationIssue(githubIssue: GithubIssue, teamData: Team): Issue {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    const issue \u003d new Issue(githubIssue);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    const issueTemplate \u003d new TutorModerationIssueTemplate(githubIssue);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    const todoTemplate \u003d new TutorModerationTodoTemplate(githubIssue.comments);"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    issue.githubComments \u003d githubIssue.comments;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    issue.teamAssigned \u003d teamData;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    issue.description \u003d issueTemplate.description;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    issue.teamResponse \u003d issueTemplate.teamResponse;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    issue.issueDisputes \u003d issueTemplate.disputes;"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    if (todoTemplate.disputesToResolve \u0026\u0026 todoTemplate.comment) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      issue.issueDisputes \u003d todoTemplate.disputesToResolve.map((dispute, i) \u003d\u003e {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        dispute.description \u003d issueTemplate.disputes[i].description;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return dispute;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      issue.issueComment \u003d todoTemplate.comment;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    return issue;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":191,"author":{"gitId":"-"},"content":"   * Creates a new copy of an exact same issue."},{"lineNumber":192,"author":{"gitId":"-"},"content":"   * This would come useful in the event when you want to update the issue but not the actual"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   * state of the application."},{"lineNumber":194,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  clone(phase: Phase): Issue {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    switch (phase) {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      case Phase.phaseBugReporting:"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return Issue.createPhaseBugReportingIssue(this.githubIssue);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      case Phase.phaseTeamResponse:"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return Issue.createPhaseTeamResponseIssue(this.githubIssue, this.teamAssigned);"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      case Phase.phaseTesterResponse:"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return Issue.createPhaseTesterResponseIssue(this.githubIssue);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      case Phase.phaseModeration:"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return Issue.createPhaseModerationIssue(this.githubIssue, this.teamAssigned);"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return Issue.createPhaseBugReportingIssue(this.githubIssue);"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * Depending on the phase of the peer testing, each phase will have a response associated to them."},{"lineNumber":212,"author":{"gitId":"-"},"content":"   * This function will allow the current instance of issue to retain the state of response of the given `issue`."},{"lineNumber":213,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":214,"author":{"gitId":"-"},"content":"   * @param phase - The phase in which you want to retain your responses."},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * @param issue - The issue which you want your current instance to retain from."},{"lineNumber":216,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  retainResponses(phase: Phase, issue: Issue) {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    this.issueComment \u003d issue.issueComment;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    this.githubComments \u003d issue.githubComments;"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    switch (phase) {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      case Phase.phaseBugReporting:"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        this.description \u003d issue.description;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      case Phase.phaseTeamResponse:"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        this.teamResponse \u003d issue.teamResponse;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      case Phase.phaseTesterResponse:"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        this.testerResponses \u003d issue.testerResponses;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        this.teamResponse \u003d issue.teamResponse;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      case Phase.phaseModeration:"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        this.issueDisputes \u003d issue.issueDisputes;"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":240,"author":{"gitId":"-"},"content":"   * Updates the tester\u0027s responses and team response based on the given githubComment."},{"lineNumber":241,"author":{"gitId":"-"},"content":"   * @param githubComment - A version of githubComment to update the issue with."},{"lineNumber":242,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  updateTesterResponse(githubComment: GithubComment): void {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    const template \u003d new TesterResponseTemplate([githubComment]);"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    this.issueComment \u003d template.comment;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    this.teamResponse \u003d template.teamResponse;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    this.testerResponses \u003d template.testerResponses;"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":251,"author":{"gitId":"-"},"content":"   * Updates the tutor\u0027s resolution of the disputes with a new version of githubComment."},{"lineNumber":252,"author":{"gitId":"-"},"content":"   * @param githubComment - A version of githubComment to update the dispute with."},{"lineNumber":253,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  updateDispute(githubComment: GithubComment): void {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    const todoTemplate \u003d new TutorModerationTodoTemplate([githubComment]);"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    this.issueComment \u003d todoTemplate.comment;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    this.issueDisputes \u003d todoTemplate.disputesToResolve.map((dispute, i) \u003d\u003e {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      dispute.description \u003d this.issueDisputes[i].description;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      return dispute;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"  createGithubIssueDescription(): string {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    return `${this.description}\\n${this.hiddenDataInDescription.toString()}`;"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"  // Template url: https://github.com/CATcher-org/templates#dev-response-phase"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  createGithubTeamResponse(): string {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    return ("},{"lineNumber":270,"author":{"gitId":"-"},"content":"      `# Team\\\u0027s Response\\n${this.teamResponse}\\n` +"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      `## Duplicate status (if any):\\n${this.duplicateOf ? `Duplicate of #${this.duplicateOf}` : `--`}`"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"  // Template url: https://github.com/CATcher-org/templates#tutor-moderation"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  createGithubTutorResponse(): string {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    let tutorResponseString \u003d \u0027# Tutor Moderation\\n\\n\u0027;"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    if (this.issueDisputes !\u003d\u003d undefined) {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      for (const issueDispute of this.issueDisputes) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        tutorResponseString +\u003d issueDispute.toTutorResponseString();"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    return tutorResponseString;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"  // Template url: https://github.com/CATcher-org/templates#teams-response-1"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  createGithubTesterResponse(): string {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    return ("},{"lineNumber":289,"author":{"gitId":"-"},"content":"      `# Team\\\u0027s Response\\n${this.teamResponse}\\n` +"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      `# Items for the Tester to Verify\\n${this.getTesterResponsesString(this.testerResponses)}`"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":295,"author":{"gitId":"-"},"content":"   * Gets the number of unresolved disputes in an Issue."},{"lineNumber":296,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  numOfUnresolvedDisputes(): number {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    if (!this.issueDisputes) {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      return 0;"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"    return this.issueDisputes.reduce((prev, current) \u003d\u003e prev + Number(!current.isDone()), 0);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"  private getTesterResponsesString(testerResponses: TesterResponse[]): string {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    let testerResponsesString \u003d \u0027\u0027;"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    for (const testerResponse of testerResponses) {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      testerResponsesString +\u003d testerResponse.toString();"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    return testerResponsesString;"},{"lineNumber":311,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"export interface Issues {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"  [id: number]: Issue;"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"export const SEVERITY_ORDER \u003d { \u0027-\u0027: 0, VeryLow: 1, Low: 2, Medium: 3, High: 4 };"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"export const ISSUE_TYPE_ORDER \u003d { \u0027-\u0027: 0, DocumentationBug: 1, FeatureFlaw: 2, FunctionalityBug: 3 };"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"export enum STATUS {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"  Incomplete \u003d \u0027Incomplete\u0027,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  Done \u003d \u0027Done\u0027"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"export enum FILTER {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"  NoFilter \u003d \u0027NoFilter\u0027,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"  NoAccess \u003d \u0027NoAccess\u0027,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"  FilterByCreator \u003d \u0027FilterByCreator\u0027,"},{"lineNumber":331,"author":{"gitId":"-"},"content":"  FilterByTeam \u003d \u0027FilterByTeam\u0027,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  FilterByTeamAssigned \u003d \u0027FilterByTeamAssigned\u0027"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"export const IssuesFilter \u003d {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"  phaseBugReporting: {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    Student: FILTER.FilterByCreator,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    Tutor: FILTER.NoFilter,"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    Admin: FILTER.NoFilter"},{"lineNumber":340,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  phaseTeamResponse: {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    Student: FILTER.FilterByTeam,"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    Tutor: FILTER.FilterByTeamAssigned,"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    Admin: FILTER.NoFilter"},{"lineNumber":345,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":346,"author":{"gitId":"-"},"content":"  phaseTesterResponse: {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    Student: FILTER.NoFilter,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    Tutor: FILTER.NoAccess,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    Admin: FILTER.NoFilter"},{"lineNumber":350,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":351,"author":{"gitId":"-"},"content":"  phaseModeration: {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    Student: FILTER.NoAccess,"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    Tutor: FILTER.FilterByTeamAssigned,"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    Admin: FILTER.NoFilter"},{"lineNumber":355,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":356,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"Eclipse-Dominator":2,"-":354}},{"path":"src/app/core/models/templates/section-parsers/issue-dispute-section-parser.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { IssueDispute } from \u0027../../issue-dispute.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"const { coroutine, everyCharUntil, optionalWhitespace, str } \u003d require(\u0027arcsecond\u0027);"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"const SECTION_TITLE_PREFIX \u003d \u0027## :question: \u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"const TEAM_SAYS_HEADER \u003d \u0027### Team says:\u0027;"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"const LINE_SEPARATOR \u003d \u0027\u003ccatcher-end-of-segment\u003e\u003chr\u003e\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"export const IssueDisputeSectionParser \u003d coroutine(function* () {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  yield str(SECTION_TITLE_PREFIX);"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  const title \u003d yield everyCharUntil(str(TEAM_SAYS_HEADER));"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  const description \u003d yield everyCharUntil(str(LINE_SEPARATOR));"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  yield str(LINE_SEPARATOR);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  yield optionalWhitespace;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  return new IssueDispute(title.trim(), description.trim());"},{"lineNumber":18,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":17,"cheehongw":1}},{"path":"src/app/core/models/templates/section-parsers/moderation-section-parser.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Checkbox } from \u0027../../checkbox.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { IssueDispute } from \u0027../../issue-dispute.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { buildCheckboxParser } from \u0027./common-parsers.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"const { coroutine, everyCharUntil, lookAhead, optionalWhitespace, str, whitespace } \u003d require(\u0027arcsecond\u0027);"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"const SECTION_TITLE_PREFIX \u003d \u0027## :question: \u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"const DONE_CHECKBOX_DESCRIPTION \u003d \u0027Done\u0027;"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"const LINE_SEPARATOR \u003d \u0027\u003ccatcher-end-of-segment\u003e\u003chr\u003e\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"export const DoneCheckboxParser \u003d buildCheckboxParser(DONE_CHECKBOX_DESCRIPTION);"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"export const ModerationSectionParser \u003d coroutine(function* () {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  yield str(SECTION_TITLE_PREFIX);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  const title \u003d yield everyCharUntil(str(\u0027- [\u0027)); // every char until the done checkbox"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  const description \u003d yield lookAhead(everyCharUntil(str(LINE_SEPARATOR)));"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  const doneCheckboxValue \u003d yield DoneCheckboxParser;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  yield whitespace;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  const tutorResponse \u003d yield everyCharUntil(str(LINE_SEPARATOR));"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  yield str(LINE_SEPARATOR);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  yield optionalWhitespace;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  const dispute \u003d new IssueDispute(title.trim(), description.trim());"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  dispute.todo \u003d new Checkbox(DONE_CHECKBOX_DESCRIPTION, doneCheckboxValue);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  dispute.tutorResponse \u003d tutorResponse.trim();"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  return dispute;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":29,"cheehongw":1}},{"path":"src/app/core/models/templates/section-parsers/tester-response-section-parser.model.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { buildCheckboxParser } from \u0027./common-parsers.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"const {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  between,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  coroutine,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  everyCharUntil,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  letters,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  lookAhead,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  optionalWhitespace,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  pipeParsers,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  possibly,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  str,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  whitespace"},{"lineNumber":14,"author":{"gitId":"-"},"content":"} \u003d require(\u0027arcsecond\u0027);"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"const SECTION_TITLE_PREFIX \u003d \u0027## :question: Issue \u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"const TEAM_CHOSE_PREFIX \u003d \u0027Team chose \u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"const TESTER_CHOSE_PREFIX \u003d \u0027Originally \u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"const DISAGREE_CHECKBOX_DESCRIPTION \u003d \u0027I disagree\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"const DISAGREEMENT_REASON_PREFIX \u003d \u0027**Reason for disagreement:** \u0027;"},{"lineNumber":21,"author":{"gitId":"cheehongw"},"content":"const LINE_SEPARATOR \u003d \u0027\u003ccatcher-end-of-segment\u003e\u003chr\u003e\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"const DUPLICATE_STATUS_MESSAGE \u003d"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \"Team chose to mark this issue as a duplicate of another issue (as explained in the _**Team\u0027s response**_ above)\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"export const DisagreeCheckboxParser \u003d buildCheckboxParser(DISAGREE_CHECKBOX_DESCRIPTION);"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"function buildExtractResponseParser(category: string) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  return between(str(\u0027[`\u0027 + category + \u0027.\u0027))(str(\u0027`]\u0027))(letters);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"function buildTeamResponseParser(category: string) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  const extractResponseParser \u003d buildExtractResponseParser(category);"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  return pipeParsers([str(TEAM_CHOSE_PREFIX), extractResponseParser]);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"function buildTesterResponseParser(category: string) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  const extractResponseParser \u003d buildExtractResponseParser(category);"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  return pipeParsers([str(TESTER_CHOSE_PREFIX), extractResponseParser]);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"export const DisagreeReasonParser \u003d coroutine(function* () {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  yield str(DISAGREEMENT_REASON_PREFIX);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  const reasonForDisagreement \u003d yield everyCharUntil(str(LINE_SEPARATOR));"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  yield str(LINE_SEPARATOR);"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  return reasonForDisagreement.trim();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"});"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"// Issue duplicate section has a different format than the other three"},{"lineNumber":52,"author":{"gitId":"-"},"content":"const DuplicateSectionParser \u003d coroutine(function* () {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  yield str(\u0027status\u0027);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  yield whitespace;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  yield str(DUPLICATE_STATUS_MESSAGE);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  yield whitespace;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  const disagreeCheckboxValue \u003d yield DisagreeCheckboxParser;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  yield whitespace;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  const reasonForDisagreement \u003d yield DisagreeReasonParser;"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  return {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    disagreeCheckboxValue: disagreeCheckboxValue,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    reasonForDisagreement: reasonForDisagreement"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":66,"author":{"gitId":"-"},"content":"});"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"export const TesterResponseSectionParser \u003d coroutine(function* () {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  // section title"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  yield str(SECTION_TITLE_PREFIX);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  const title \u003d yield letters;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  yield whitespace;"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  if (title \u003d\u003d\u003d \u0027duplicate\u0027) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    const dupSectionResult \u003d yield DuplicateSectionParser;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    yield optionalWhitespace;"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      title: title + \u0027 status\u0027,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      description: DUPLICATE_STATUS_MESSAGE,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      teamChose: null,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      testerChose: null,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      disagreeCheckboxValue: dupSectionResult.disagreeCheckboxValue,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      reasonForDisagreement: dupSectionResult.reasonForDisagreement"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  const description \u003d yield lookAhead(everyCharUntil(DisagreeCheckboxParser));"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  // team and tester response"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  const teamResponseParser \u003d buildTeamResponseParser(title);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  const testerResponseParser \u003d buildTesterResponseParser(title);"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  const teamChose \u003d yield teamResponseParser;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  yield whitespace;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  // response section does not have tester response"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  const testerChose \u003d yield possibly(testerResponseParser);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  yield optionalWhitespace;"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  const disagreeCheckboxValue \u003d yield DisagreeCheckboxParser;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  yield whitespace;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  const reasonForDisagreement \u003d yield DisagreeReasonParser;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  yield optionalWhitespace;"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  return {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    title: title,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    description: description.trim(),"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    teamChose: teamChose,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    testerChose: testerChose,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    disagreeCheckboxValue: disagreeCheckboxValue,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    reasonForDisagreement: reasonForDisagreement"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":113,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":112,"cheehongw":1}},{"path":"src/app/core/services/issue.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { BehaviorSubject, EMPTY, forkJoin, Observable, of, Subscription, throwError, timer } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { catchError, exhaustMap, finalize, map, mergeMap } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../models/comment.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027../models/github/github-comment.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import RestGithubIssueFilter from \u0027../models/github/github-issue-filter.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../models/github/github-issue.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027../models/github/github-label.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { HiddenData } from \u0027../models/hidden-data.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { IssueDispute } from \u0027../models/issue-dispute.model\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { FILTER, Issue, Issues, IssuesFilter, STATUS } from \u0027../models/issue.model\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../models/phase.model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { appVersion } from \u0027./application.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { DataService } from \u0027./data.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { ElectronService } from \u0027./electron.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027./phase.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { UserService } from \u0027./user.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":23,"author":{"gitId":"-"},"content":"})"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Responsible for creating and updating issues, and periodically fetching issues"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * using GitHub."},{"lineNumber":28,"author":{"gitId":"-"},"content":" */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"export class IssueService {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  static readonly POLL_INTERVAL \u003d 5000; // 5 seconds"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  issues: Issues;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  issues$: BehaviorSubject\u003cIssue[]\u003e;"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  private sessionId: string;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  private issueTeamFilter \u003d \u0027All Teams\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  private issuesPollSubscription: Subscription;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  /** Whether the IssueService is downloading the data from Github*/"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  public isLoading \u003d new BehaviorSubject\u003cboolean\u003e(false);"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private githubService: GithubService,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private userService: UserService,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private electronService: ElectronService,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private dataService: DataService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private logger: LoggingService"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  ) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    this.issues$ \u003d new BehaviorSubject(new Array\u003cIssue\u003e());"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  startPollIssues() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    if (this.issuesPollSubscription \u003d\u003d\u003d undefined) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      if (this.issues$.getValue().length \u003d\u003d\u003d 0) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.isLoading.next(true);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"      this.issuesPollSubscription \u003d timer(0, IssueService.POLL_INTERVAL)"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":60,"author":{"gitId":"-"},"content":"          exhaustMap(() \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return this.reloadAllIssues().pipe("},{"lineNumber":62,"author":{"gitId":"-"},"content":"              catchError(() \u003d\u003e {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                return EMPTY;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"              }),"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              finalize(() \u003d\u003e this.isLoading.next(false))"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            );"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          })"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        .subscribe();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  stopPollIssues() {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    if (this.issuesPollSubscription) {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      this.issuesPollSubscription.unsubscribe();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      this.issuesPollSubscription \u003d undefined;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * Will constantly poll and update the application\u0027s state\u0027s with the updated issue."},{"lineNumber":82,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   * @param issueId - The issue\u0027s id to poll for."},{"lineNumber":84,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  pollIssue(issueId: number): Observable\u003cIssue\u003e {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    return timer(0, IssueService.POLL_INTERVAL).pipe("},{"lineNumber":87,"author":{"gitId":"-"},"content":"      exhaustMap(() \u003d\u003e {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this.githubService.fetchIssueGraphql(issueId).pipe("},{"lineNumber":89,"author":{"gitId":"-"},"content":"          map((response) \u003d\u003e {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            const issue \u003d this.createIssueModel(response);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            this.updateLocalStore(issue);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return issue;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":94,"author":{"gitId":"-"},"content":"          catchError((err) \u003d\u003e {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return this.getIssue(issueId);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"          })"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  reloadAllIssues() {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    return this.initializeData();"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  getIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    if (this.issues \u003d\u003d\u003d undefined) {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      return this.getLatestIssue(id);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      return of(this.issues[id]);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  getLatestIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    return this.githubService.fetchIssueGraphql(id).pipe("},{"lineNumber":116,"author":{"gitId":"-"},"content":"      map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        this.createAndSaveIssueModel(response);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return this.issues[id];"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return of(this.issues[id]);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"  createIssue(title: string, description: string, severity: string, type: string): Observable\u003cIssue\u003e {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    const labelsArray \u003d [this.createLabel(\u0027severity\u0027, severity), this.createLabel(\u0027type\u0027, type)];"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    const clientType \u003d this.electronService.isElectron() ? \u0027Desktop\u0027 : \u0027Web\u0027;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    const hiddenData \u003d new Map(["},{"lineNumber":130,"author":{"gitId":"-"},"content":"      [\u0027session\u0027, this.sessionId],"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      [\u0027Version\u0027, `${clientType} v${appVersion}`]"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    ]);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    const issueDescription \u003d HiddenData.embedDataIntoString(description, hiddenData);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    return this.githubService"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      .createIssue(title, issueDescription, labelsArray)"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      .pipe(map((response: GithubIssue) \u003d\u003e this.createIssueModel(response)));"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"  updateIssue(issue: Issue): Observable\u003cIssue\u003e {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    const assignees \u003d this.phaseService.currentPhase \u003d\u003d\u003d Phase.phaseModeration ? [] : issue.assignees;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    return this.githubService"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      .updateIssue(issue.id, issue.title, this.createGithubIssueDescription(issue), this.createLabelsForIssue(issue), assignees)"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":144,"author":{"gitId":"-"},"content":"        map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"          response.comments \u003d issue.githubComments;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"          return this.createIssueModel(response);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        catchError((err) \u003d\u003e {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"          this.logger.error(err); // Log full details of error first"},{"lineNumber":150,"author":{"gitId":"-"},"content":"          return throwError(err.response.data.message); // More readable error message"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"  updateIssueWithComment(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    return this.githubService.updateIssueComment(issueComment).pipe("},{"lineNumber":157,"author":{"gitId":"-"},"content":"      mergeMap((updatedComment: GithubComment) \u003d\u003e {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        issue.githubComments \u003d [updatedComment, ...issue.githubComments.filter((c) \u003d\u003e c.id !\u003d\u003d updatedComment.id)];"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return this.updateIssue(issue);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"  updateTesterResponse(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    const isTesterResponseExist \u003d this.issues[issue.id].testerResponses;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    const commentApiToCall \u003d isTesterResponseExist"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      ? this.githubService.updateIssueComment(issueComment)"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      : this.githubService.createIssueComment(issue.id, issueComment.description);"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    const issueClone \u003d issue.clone(this.phaseService.currentPhase);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    issueClone.status \u003d STATUS.Done;"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"    return forkJoin([commentApiToCall, this.updateIssue(issueClone)]).pipe("},{"lineNumber":174,"author":{"gitId":"-"},"content":"      map((responses) \u003d\u003e {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        const [githubComment, issue] \u003d responses;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        issue.updateTesterResponse(githubComment);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return issue;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"  updateTutorResponse(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    return forkJoin([this.githubService.updateIssueComment(issueComment), this.updateIssue(issue)]).pipe("},{"lineNumber":184,"author":{"gitId":"-"},"content":"      map((responses) \u003d\u003e {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        const [githubComment, issue] \u003d responses;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        issue.updateDispute(githubComment);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return issue;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"  createTeamResponse(issue: Issue): Observable\u003cIssue\u003e {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    const teamResponse \u003d issue.createGithubTeamResponse();"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    return this.githubService.createIssueComment(issue.id, teamResponse).pipe("},{"lineNumber":195,"author":{"gitId":"-"},"content":"      mergeMap((githubComment: GithubComment) \u003d\u003e {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        issue.githubComments \u003d [githubComment, ...issue.githubComments.filter((c) \u003d\u003e c.id !\u003d\u003d githubComment.id)];"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return this.updateIssue(issue);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"  createTutorResponse(issue: Issue, response: string): Observable\u003cIssue\u003e {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    return forkJoin([this.githubService.createIssueComment(issue.id, response), this.updateIssue(issue)]).pipe("},{"lineNumber":204,"author":{"gitId":"-"},"content":"      map((responses) \u003d\u003e {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        const [githubComment, issue] \u003d responses;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        issue.updateDispute(githubComment);"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return issue;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":213,"author":{"gitId":"-"},"content":"   * This function will create a github representation of issue\u0027s description. Given the issue model, it will piece together the different"},{"lineNumber":214,"author":{"gitId":"-"},"content":"   * attributes to create the github\u0027s description."},{"lineNumber":215,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  private createGithubIssueDescription(issue: Issue): string {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    switch (this.phaseService.currentPhase) {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      case Phase.phaseModeration:"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return ("},{"lineNumber":221,"author":{"gitId":"-"},"content":"          `# Issue Description\\n${issue.createGithubIssueDescription()}\\n# Team\\\u0027s Response\\n${issue.teamResponse}\\n ` +"},{"lineNumber":222,"author":{"gitId":"-"},"content":"          // `## State the duplicated issue here, if any\\n${issue.duplicateOf ? `Duplicate of #${issue.duplicateOf}` : `--`}\\n` +"},{"lineNumber":223,"author":{"gitId":"-"},"content":"          `# Disputes\\n\\n${this.getIssueDisputeString(issue.issueDisputes)}\\n`"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return issue.createGithubIssueDescription();"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"  private getIssueDisputeString(issueDisputes: IssueDispute[]): string {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    let issueDisputeString \u003d \u0027\u0027;"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    for (const issueDispute of issueDisputes) {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      issueDisputeString +\u003d issueDispute.toString();"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    return issueDisputeString;"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"  deleteIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    return this.githubService.closeIssue(id).pipe("},{"lineNumber":240,"author":{"gitId":"-"},"content":"      map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        const deletedIssue \u003d this.createIssueModel(response);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        this.deleteFromLocalStore(deletedIssue);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        return deletedIssue;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"  undeleteIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    return this.githubService.reopenIssue(id).pipe("},{"lineNumber":250,"author":{"gitId":"-"},"content":"      map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        const reopenedIssue \u003d this.createIssueModel(response);"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        this.updateLocalStore(reopenedIssue);"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        return reopenedIssue;"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":259,"author":{"gitId":"-"},"content":"   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is deleted."},{"lineNumber":260,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  deleteFromLocalStore(issueToDelete: Issue) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    const { [issueToDelete.id]: issueToRemove, ...withoutIssueToRemove } \u003d this.issues;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    this.issues \u003d withoutIssueToRemove;"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    this.issues$.next(Object.values(this.issues));"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":268,"author":{"gitId":"-"},"content":"   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is added/updated."},{"lineNumber":269,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  updateLocalStore(issueToUpdate: Issue) {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    this.issues \u003d {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      ...this.issues,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      [issueToUpdate.id]: issueToUpdate"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    this.issues$.next(Object.values(this.issues));"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":279,"author":{"gitId":"-"},"content":"   * Check whether the issue has been responded in the phase 2/3."},{"lineNumber":280,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  hasTeamResponse(issueId: number): boolean {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    return !!this.issues[issueId].teamResponse;"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":286,"author":{"gitId":"-"},"content":"   * Obtain an observable containing an array of issues that are duplicates of the parentIssue."},{"lineNumber":287,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  getDuplicateIssuesFor(parentIssue: Issue): Observable\u003cIssue[]\u003e {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    return this.issues$.pipe("},{"lineNumber":290,"author":{"gitId":"-"},"content":"      map((issues) \u003d\u003e {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        return issues.filter((issue) \u003d\u003e {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"          return issue.duplicateOf \u003d\u003d\u003d parentIssue.id;"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"  reset(resetSessionId: boolean) {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    if (resetSessionId) {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      this.sessionId \u003d undefined;"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"    this.issues \u003d undefined;"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    this.issues$.next(new Array\u003cIssue\u003e());"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"    this.stopPollIssues();"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    this.isLoading.complete();"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    this.isLoading \u003d new BehaviorSubject\u003cboolean\u003e(false);"},{"lineNumber":309,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"  private initializeData(): Observable\u003cIssue[]\u003e {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    const issuesAPICallsByFilter: Array\u003cObservable\u003cArray\u003cGithubIssue\u003e\u003e\u003e \u003d [];"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"    switch (IssuesFilter[this.phaseService.currentPhase][this.userService.currentUser.role]) {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      case FILTER.FilterByCreator:"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        issuesAPICallsByFilter.push("},{"lineNumber":317,"author":{"gitId":"-"},"content":"          this.githubService.fetchIssuesGraphql(new RestGithubIssueFilter({ creator: this.userService.currentUser.loginId }))"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      case FILTER.FilterByTeam: // Only student has this filter"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        issuesAPICallsByFilter.push("},{"lineNumber":322,"author":{"gitId":"-"},"content":"          this.githubService.fetchIssuesGraphqlByTeam("},{"lineNumber":323,"author":{"gitId":"-"},"content":"            this.createLabel(\u0027tutorial\u0027, this.userService.currentUser.team.tutorialClassId),"},{"lineNumber":324,"author":{"gitId":"-"},"content":"            this.createLabel(\u0027team\u0027, this.userService.currentUser.team.teamId),"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            new RestGithubIssueFilter({})"},{"lineNumber":326,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":329,"author":{"gitId":"-"},"content":"      case FILTER.FilterByTeamAssigned: // Only for Tutors and Admins"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        const allocatedTeams \u003d this.userService.currentUser.allocatedTeams;"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        allocatedTeams.forEach((team) \u003d\u003e {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"          issuesAPICallsByFilter.push("},{"lineNumber":333,"author":{"gitId":"-"},"content":"            this.githubService.fetchIssuesGraphqlByTeam("},{"lineNumber":334,"author":{"gitId":"-"},"content":"              this.createLabel(\u0027tutorial\u0027, team.tutorialClassId),"},{"lineNumber":335,"author":{"gitId":"-"},"content":"              this.createLabel(\u0027team\u0027, team.teamId),"},{"lineNumber":336,"author":{"gitId":"-"},"content":"              new RestGithubIssueFilter({})"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":338,"author":{"gitId":"-"},"content":"          );"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      case FILTER.NoFilter:"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        issuesAPICallsByFilter.push(this.githubService.fetchIssuesGraphql(new RestGithubIssueFilter({})));"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":344,"author":{"gitId":"-"},"content":"      case FILTER.NoAccess:"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        return of([]);"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"    // const issuesAPICallsByFilter \u003d filters.map(filter \u003d\u003e this.githubService.fetchIssuesGraphql(filter));"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    return forkJoin(issuesAPICallsByFilter).pipe("},{"lineNumber":351,"author":{"gitId":"-"},"content":"      map((issuesByFilter: [][]) \u003d\u003e {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        const fetchedIssueIds: Array\u003cNumber\u003e \u003d [];"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"        for (const issues of issuesByFilter) {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"          for (const issue of issues) {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            fetchedIssueIds.push(this.createIssueModel(issue).id);"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            this.createAndSaveIssueModel(issue);"},{"lineNumber":358,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"        const outdatedIssueIds: Array\u003cNumber\u003e \u003d this.getOutdatedIssueIds(fetchedIssueIds);"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        this.deleteIssuesFromLocalStore(outdatedIssueIds);"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return Object.values(this.issues);"},{"lineNumber":365,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":367,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"  private createAndSaveIssueModel(githubIssue: GithubIssue): boolean {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    const issue \u003d this.createIssueModel(githubIssue);"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    this.updateLocalStore(issue);"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    return true;"},{"lineNumber":373,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"  private deleteIssuesFromLocalStore(ids: Array\u003cNumber\u003e): void {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    ids.forEach((id: number) \u003d\u003e {"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      this.getIssue(id).subscribe((issue) \u003d\u003e this.deleteFromLocalStore(issue));"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":379,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":382,"author":{"gitId":"-"},"content":"   * Returns an array of outdated issue ids by comparing the ids of the recently"},{"lineNumber":383,"author":{"gitId":"-"},"content":"   * fetched issues with the current issue ids in the local store"},{"lineNumber":384,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":385,"author":{"gitId":"-"},"content":"  private getOutdatedIssueIds(fetchedIssueIds: Array\u003cNumber\u003e): Array\u003cNumber\u003e {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    /*"},{"lineNumber":387,"author":{"gitId":"-"},"content":"      Ignore for first fetch or ignore if there is no fetch result"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"      We also have to ignore for no fetch result as the cache might return a"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      304 reponse with no differences in issues, resulting in the fetchIssueIds"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      to be empty"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    */"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    if (this.issues \u003d\u003d\u003d undefined || !fetchedIssueIds.length) {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"      return [];"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"    const fetchedIssueIdsSet \u003d new Set\u003cNumber\u003e(fetchedIssueIds);"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"    const result \u003d Object.keys(this.issues)"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      .map((x) \u003d\u003e +x)"},{"lineNumber":401,"author":{"gitId":"-"},"content":"      .filter((issueId) \u003d\u003e !fetchedIssueIdsSet.has(issueId));"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"    return result;"},{"lineNumber":404,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":407,"author":{"gitId":"-"},"content":"   * Given an issue model, create the necessary labels for github."},{"lineNumber":408,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":409,"author":{"gitId":"-"},"content":"  private createLabelsForIssue(issue: Issue): string[] {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    const result \u003d [];"},{"lineNumber":411,"author":{"gitId":"-"},"content":""},{"lineNumber":412,"author":{"gitId":"-"},"content":"    if (this.phaseService.currentPhase !\u003d\u003d Phase.phaseBugReporting \u0026\u0026 this.phaseService.currentPhase !\u003d\u003d Phase.phaseTesterResponse) {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      const studentTeam \u003d issue.teamAssigned.id.split(\u0027-\u0027);"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027tutorial\u0027, `${studentTeam[0]}-${studentTeam[1]}`), this.createLabel(\u0027team\u0027, studentTeam[2]));"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":416,"author":{"gitId":"-"},"content":""},{"lineNumber":417,"author":{"gitId":"-"},"content":"    if (issue.severity) {"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027severity\u0027, issue.severity));"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":420,"author":{"gitId":"-"},"content":""},{"lineNumber":421,"author":{"gitId":"-"},"content":"    if (issue.type) {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027type\u0027, issue.type));"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"Eclipse-Dominator"},"content":"    if (issue.response) {"},{"lineNumber":426,"author":{"gitId":"Eclipse-Dominator"},"content":"      result.push(this.createLabel(\u0027response\u0027, issue.response));"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"    if (issue.duplicated) {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"      result.push(\u0027duplicate\u0027);"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"    if (issue.status) {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027status\u0027, issue.status));"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"    if (issue.pending) {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      if (+issue.pending \u003e 0) {"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        result.push(this.createLabel(\u0027pending\u0027, issue.pending));"},{"lineNumber":440,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"    if (issue.unsure) {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"      result.push(\u0027unsure\u0027);"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"    return result;"},{"lineNumber":448,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"  private createLabel(prepend: string, value: string) {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    return `${prepend}.${value}`;"},{"lineNumber":452,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"  private extractTeamIdFromGithubIssue(githubIssue: GithubIssue): string {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    return githubIssue.findLabel(GithubLabel.LABELS.tutorial).concat(\u0027-\u0027).concat(githubIssue.findLabel(GithubLabel.LABELS.team));"},{"lineNumber":456,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":457,"author":{"gitId":"-"},"content":""},{"lineNumber":458,"author":{"gitId":"-"},"content":"  private createIssueModel(githubIssue: GithubIssue): Issue {"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    let issue: Issue;"},{"lineNumber":460,"author":{"gitId":"-"},"content":""},{"lineNumber":461,"author":{"gitId":"-"},"content":"    switch (this.phaseService.currentPhase) {"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      case Phase.phaseBugReporting:"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        issue \u003d Issue.createPhaseBugReportingIssue(githubIssue);"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      case Phase.phaseTeamResponse:"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        issue \u003d Issue.createPhaseTeamResponseIssue(githubIssue, this.dataService.getTeam(this.extractTeamIdFromGithubIssue(githubIssue)));"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":468,"author":{"gitId":"-"},"content":"      case Phase.phaseTesterResponse:"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        issue \u003d Issue.createPhaseTesterResponseIssue(githubIssue);"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":471,"author":{"gitId":"-"},"content":"      case Phase.phaseModeration:"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        issue \u003d Issue.createPhaseModerationIssue(githubIssue, this.dataService.getTeam(this.extractTeamIdFromGithubIssue(githubIssue)));"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":474,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":477,"author":{"gitId":"-"},"content":""},{"lineNumber":478,"author":{"gitId":"-"},"content":"    if (issue.parseError) {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"      this.logger.error(issue.parseError);"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    return issue;"},{"lineNumber":482,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"  setIssueTeamFilter(filterValue: string) {"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    if (filterValue) {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      this.issueTeamFilter \u003d filterValue;"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":488,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":489,"author":{"gitId":"-"},"content":""},{"lineNumber":490,"author":{"gitId":"-"},"content":"  setSessionId(sessionId: string) {"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    this.sessionId \u003d sessionId;"},{"lineNumber":492,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":493,"author":{"gitId":"-"},"content":""},{"lineNumber":494,"author":{"gitId":"-"},"content":"  getIssueTeamFilter(): string {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    return this.issueTeamFilter;"},{"lineNumber":496,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":497,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":2,"-":495}},{"path":"src/app/core/services/label.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable, pipe, UnaryFunction } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map, mergeMap } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027../models/github/github-label.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Label } from \u0027../models/label.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027./github.service\u0027;"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"import { LoggingService } from \u0027./logging.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/* The threshold to decide if color is dark or light."},{"lineNumber":10,"author":{"gitId":"-"},"content":"A higher threshold value will result in more colors determined to be \"dark\"."},{"lineNumber":11,"author":{"gitId":"-"},"content":"W3C recommendation is 0.179, but 0.184 is chosen so that some colors (like bright red)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"are considered dark (Github too consider them dark) */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"const COLOR_DARKNESS_THRESHOLD \u003d 0.184;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"const COLOR_BLACK \u003d \u0027000000\u0027; // Dark color for text with light background"},{"lineNumber":16,"author":{"gitId":"-"},"content":"const COLOR_WHITE \u003d \u0027ffffff\u0027; // Light color for text with dark background"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"const COLOR_RED_PALE \u003d \u0027ffe0e0\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"const COLOR_RED_LIGHT \u003d \u0027ffcccc\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"const COLOR_RED \u003d \u0027ff9999\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"const COLOR_RED_DARK \u003d \u0027ff6666\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"const COLOR_PURPLE_LIGHT \u003d \u0027d966ff\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"const COLOR_PURPLE \u003d \u00279900cc\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"const COLOR_GREEN \u003d \u002700802b\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"const COLOR_ORANGE_PALE \u003d \u0027ffebcc\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"const COLOR_ORANGE_LIGHT \u003d \u0027ffcc80\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"const COLOR_ORANGE \u003d \u0027ff9900\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"const COLOR_SILVER \u003d \u0027a6a6a6\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"const COLOR_BLUE \u003d \u00270066ff\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"const DISPLAY_NAME_SEVERITY \u003d \u0027Severity\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"const DISPLAY_NAME_BUG_TYPE \u003d \u0027Bug Type\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"const DISPLAY_NAME_RESPONSE \u003d \u0027Response\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"// The HTML template definition of selected labels are hard-coded here, move to a config file in the future"},{"lineNumber":40,"author":{"gitId":"-"},"content":"const VERY_LOW_DEFINITION \u003d"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u0027\u003cp\u003eA flaw that is \u003cmark\u003epurely cosmetic\u003c/mark\u003e and \u003cmark\u003edoes not affect usage\u003c/mark\u003e. For example, \u0027 +"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u0027\u003cul\u003e\u0027 +"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u0027\u003cli\u003etypo issues\u003c/li\u003e\u0027 +"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u0027\u003cli\u003espacing issues\u003c/li\u003e\u0027 +"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u0027\u003cli\u003elayout issues\u003c/li\u003e\u0027 +"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u0027\u003cli\u003ecolor issues\u003c/li\u003e\u0027 +"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u0027\u003cli\u003efont issues\u003c/li\u003e\u0027 +"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u0027\u003c/ul\u003e\u0027 +"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \"in the docs or the UI that doesn\u0027t affect usage.\u003c/p\u003e\";"},{"lineNumber":50,"author":{"gitId":"-"},"content":"const LOW_DEFINITION \u003d"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u0027\u003cp\u003eA flaw that is unlikely to affect normal operations of the product. \u0027 +"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u0027Appears only in very rare situations and causes a minor inconvenience only.\u003c/p\u003e\u0027;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"const MEDIUM_DEFINITION \u003d \u0027\u003cp\u003eA flaw that causes occasional inconvenience to some users but they can \u0027 + \u0027continue to use the product.\u003c/p\u003e\u0027;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"const HIGH_DEFINITION \u003d"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u0027\u003cp\u003eA flaw that affects most users and causes major problems for users.\u0027 + \u0027i.e., makes the product almost unusable for most users.\u003c/p\u003e\u0027;"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"const FUNCTIONALITY_BUG_DEFINITION \u003d \u0027\u003cp\u003eA functionality does not work as specified/expected.\u003c/p\u003e\u0027;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"const FEATURE_FLAW_DEFINITION \u003d"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u0027\u003cp\u003eSome functionality missing from a feature delivered in the current version in \u0027 +"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u0027a way that the feature becomes less useful to the intended target user for \u003ci\u003enormal\u003c/i\u003e usage. \u0027 +"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \"i.e., the feature is not \u0027complete\u0027.\\nIn other words, an acceptance-testing bug that falls within \" +"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u0027the scope of the current version features. These issues are counted against the \u003ci\u003eproduct design\u003c/i\u003e aspect \u0027 +"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u0027of the project.\u003c/p\u003e\u0027;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"const DOCUMENTATION_BUG_DEFINITION \u003d"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u0027\u003cp\u003eA flaw in the documentation \u0027 + \u0027\u003cspan style\u003d\"color:grey;\"\u003ee.g., a missing step, a wrong instruction, typos\u003c/span\u003e\u003c/p\u003e\u0027;"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"const ACCEPTED_DEFINITION \u003d \u0027\u003cp\u003eYou accept it as a bug.\u003c/p\u003e\u0027;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"const NOT_IN_SCOPE_DEFINITION \u003d"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u0027\u003cp\u003eIt is a valid issue but not something the team should be penalized for \u0027 +"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u0027\u003cspan style\u003d\"color:grey;\"\u003ee.g., it was not related to features delivered in this version\u003c/span\u003e.\u003c/p\u003e\u0027;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"const REJECTED_DEFINITION \u003d"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \"\u003cp\u003eWhat tester treated as a bug is in fact the expected behavior (from the user\u0027s point of view), or the tester \" +"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  \u0027was mistaken in some other way.\u003c/p\u003e\u0027;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"const CANNOT_REPRODUCE_DEFINITION \u003d \u0027\u003cp\u003eYou are unable to reproduce the behavior reported in the bug after multiple tries.\u003c/p\u003e\u0027;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"const ISSUE_UNCLEAR_DEFINITION \u003d \u0027\u003cp\u003eThe issue description is not clear.\u003c/p\u003e\u0027;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"const UNDEFINED_DEFINITION \u003d null;"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"export const LABEL_DEFINITIONS \u003d {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  severityVeryLow: VERY_LOW_DEFINITION,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  severityLow: LOW_DEFINITION,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  severityMedium: MEDIUM_DEFINITION,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  severityHigh: HIGH_DEFINITION,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  typeFunctionalityBug: FUNCTIONALITY_BUG_DEFINITION,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  typeFeatureFlaw: FEATURE_FLAW_DEFINITION,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  typeDocumentationBug: DOCUMENTATION_BUG_DEFINITION,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  responseAccepted: ACCEPTED_DEFINITION,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  responseNotInScope: NOT_IN_SCOPE_DEFINITION,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  responseRejected: REJECTED_DEFINITION,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  responseCannotProduce: CANNOT_REPRODUCE_DEFINITION,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  responseIssueUnclear: ISSUE_UNCLEAR_DEFINITION,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  undefined: UNDEFINED_DEFINITION"},{"lineNumber":92,"author":{"gitId":"-"},"content":"};"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"const REQUIRED_LABELS \u003d {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  severity: {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    VeryLow: new Label(\u0027severity\u0027, \u0027VeryLow\u0027, COLOR_RED_PALE, VERY_LOW_DEFINITION),"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    Low: new Label(\u0027severity\u0027, \u0027Low\u0027, COLOR_RED_LIGHT, LOW_DEFINITION),"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    Medium: new Label(\u0027severity\u0027, \u0027Medium\u0027, COLOR_RED, MEDIUM_DEFINITION),"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    High: new Label(\u0027severity\u0027, \u0027High\u0027, COLOR_RED_DARK, HIGH_DEFINITION)"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  type: {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    DocumentationBug: new Label(\u0027type\u0027, \u0027DocumentationBug\u0027, COLOR_PURPLE_LIGHT, DOCUMENTATION_BUG_DEFINITION),"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    FeatureFlaw: new Label(\u0027type\u0027, \u0027FeatureFlaw\u0027, COLOR_PURPLE_LIGHT, FEATURE_FLAW_DEFINITION),"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    FunctionalityBug: new Label(\u0027type\u0027, \u0027FunctionalityBug\u0027, COLOR_PURPLE, FUNCTIONALITY_BUG_DEFINITION)"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  response: {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    Accepted: new Label(\u0027response\u0027, \u0027Accepted\u0027, COLOR_GREEN, ACCEPTED_DEFINITION),"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    CannotReproduce: new Label(\u0027response\u0027, \u0027CannotReproduce\u0027, COLOR_ORANGE_PALE, CANNOT_REPRODUCE_DEFINITION),"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    IssueUnclear: new Label(\u0027response\u0027, \u0027IssueUnclear\u0027, COLOR_ORANGE_LIGHT, ISSUE_UNCLEAR_DEFINITION),"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    NotInScope: new Label(\u0027response\u0027, \u0027NotInScope\u0027, COLOR_ORANGE_LIGHT, NOT_IN_SCOPE_DEFINITION),"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    Rejected: new Label(\u0027response\u0027, \u0027Rejected\u0027, COLOR_ORANGE, REJECTED_DEFINITION)"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  status: {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    Done: new Label(\u0027status\u0027, \u0027Done\u0027, COLOR_SILVER),"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    Incomplete: new Label(\u0027status\u0027, \u0027Incomplete\u0027, COLOR_BLACK)"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  others: {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    duplicate: new Label(undefined, \u0027duplicate\u0027, COLOR_BLUE)"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":"};"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"export type LabelCategory \u003d keyof typeof REQUIRED_LABELS;"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":126,"author":{"gitId":"-"},"content":"})"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":129,"author":{"gitId":"-"},"content":" * Responsible for retrieval and parsing and syncing of label data"},{"lineNumber":130,"author":{"gitId":"-"},"content":" * from the GitHub repository for the CATcher application."},{"lineNumber":131,"author":{"gitId":"-"},"content":" */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"export class LabelService {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  private static severityLabels: Label[] \u003d Object.values(REQUIRED_LABELS.severity);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  private static typeLabels: Label[] \u003d Object.values(REQUIRED_LABELS.type);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  private static responseLabels: Label[] \u003d Object.values(REQUIRED_LABELS.response);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  private static statusLabels: Label[] \u003d Object.values(REQUIRED_LABELS.status);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  private static otherLabels: Label[] \u003d Object.values(REQUIRED_LABELS.others);"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"  private static allLabelArrays \u003d {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    severity: LabelService.severityLabels,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    type: LabelService.typeLabels,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    response: LabelService.responseLabels,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    status: LabelService.statusLabels,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    others: LabelService.otherLabels"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  private static testerLabelArrays \u003d {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    severity: LabelService.severityLabels,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    type: LabelService.typeLabels"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"Eclipse-Dominator"},"content":"  constructor(private githubService: GithubService, private logger: LoggingService) {}"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"  public static getRequiredLabelsAsArray(needAllLabels: boolean): Label[] {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    let requiredLabels: Label[] \u003d [];"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    const labels \u003d needAllLabels ? Object.values(this.allLabelArrays) : Object.values(this.testerLabelArrays);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    labels.map((label) \u003d\u003e (requiredLabels \u003d requiredLabels.concat(label)));"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    return requiredLabels;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":162,"author":{"gitId":"-"},"content":"   * Updates the required label to be in sync with the labels on the GitHub repository."},{"lineNumber":163,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  public static updateRequiredLabelColor(labelColor: string, label: Label) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    const labelArray \u003d LabelService.allLabelArrays[label.labelCategory];"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"    if (labelArray) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      const requiredLabel \u003d labelArray.find((requiredLabel: Label) \u003d\u003e requiredLabel.labelValue \u003d\u003d\u003d label.labelValue);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      requiredLabel.labelColor \u003d labelColor;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":174,"author":{"gitId":"-"},"content":"   * Returns an custom operator which helps to"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   * synchronise the labels in our application"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   * with the remote repository."},{"lineNumber":177,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  syncLabels(needAllLabels: boolean): UnaryFunction\u003cObservable\u003cboolean\u003e, Observable\u003cany\u003e\u003e {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    return pipe(mergeMap(() \u003d\u003e this.synchronizeRemoteLabels(needAllLabels)));"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":183,"author":{"gitId":"-"},"content":"   * Synchronizes the labels in github with those required by the application."},{"lineNumber":184,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  synchronizeRemoteLabels(needAllLabels: boolean): Observable\u003cany\u003e {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    return this.githubService.fetchAllLabels().pipe("},{"lineNumber":187,"author":{"gitId":"-"},"content":"      map((githubLabels) \u003d\u003e githubLabels.map(this.toLabel)),"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      map((response) \u003d\u003e {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        this.ensureRepoHasRequiredLabels(response, LabelService.getRequiredLabelsAsArray(needAllLabels));"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return response;"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   * Returns all the labels of a certain type (e.g severity)"},{"lineNumber":197,"author":{"gitId":"-"},"content":"   * @param attributeName: the type of the label"},{"lineNumber":198,"author":{"gitId":"-"},"content":"   * @return an array of label of that type"},{"lineNumber":199,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  getLabelList(attributeName: string): Label[] {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    switch (attributeName) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      case \u0027severity\u0027:"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return LabelService.severityLabels;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      case \u0027type\u0027:"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return LabelService.typeLabels;"},{"lineNumber":206,"author":{"gitId":"Eclipse-Dominator"},"content":"      // case \u0027responseTag\u0027:"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      case \u0027response\u0027:"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return LabelService.responseLabels;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.logger.info(`LabelService: Unfiltered Attribute ${attributeName} in getLabelList`);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":214,"author":{"gitId":"-"},"content":"   * Returns a title for the label type"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * @param attributeName: the type of the label"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  getLabelTitle(attributeName: string): string {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    switch (attributeName) {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      case \u0027severity\u0027:"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return DISPLAY_NAME_SEVERITY;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      case \u0027type\u0027:"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return DISPLAY_NAME_BUG_TYPE;"},{"lineNumber":223,"author":{"gitId":"Eclipse-Dominator"},"content":"      case \u0027response\u0027:"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return DISPLAY_NAME_RESPONSE;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":226,"author":{"gitId":"Eclipse-Dominator"},"content":"    this.logger.info(`LabelService: Unfiltered Attribute ${attributeName} in getLabelTitle`);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   * Returns the color of the label by searching a list of"},{"lineNumber":231,"author":{"gitId":"-"},"content":"   * all available labels."},{"lineNumber":232,"author":{"gitId":"-"},"content":"   * @param labelValue: the label\u0027s value (e.g Low / Medium / High / ...)"},{"lineNumber":233,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  getColorOfLabel(labelCategory: LabelCategory, labelValue: string): string {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    if (labelValue \u003d\u003d\u003d \u0027\u0027 || !LabelService.allLabelArrays[labelCategory]) {"},{"lineNumber":236,"author":{"gitId":"Eclipse-Dominator"},"content":"      this.logger.info(`LabelService: Unfiltered Attribute, ${labelValue}: ${labelCategory} in getColorOfLabel`);"},{"lineNumber":237,"author":{"gitId":"Eclipse-Dominator"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"      return COLOR_WHITE;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"    const existingLabel \u003d LabelService.allLabelArrays[labelCategory].find((label: Label) \u003d\u003e label.labelValue \u003d\u003d\u003d labelValue);"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"    if (existingLabel \u003d\u003d\u003d undefined || existingLabel.labelColor \u003d\u003d\u003d undefined) {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      return COLOR_WHITE;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      return existingLabel.labelColor;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":251,"author":{"gitId":"-"},"content":"   * Returns the definition of the label by searching a list of"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   * all available labels."},{"lineNumber":253,"author":{"gitId":"-"},"content":"   * @param labelValue: the label\u0027s value (e.g Low/ Medium/ High / ...)."},{"lineNumber":254,"author":{"gitId":"-"},"content":"   * @param labelCategory: the label\u0027s category (e.g Type/ Severity / ...)."},{"lineNumber":255,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  getLabelDefinition(labelValue: string, labelCategory: string): string {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    if (labelValue \u003d\u003d\u003d \u0027\u0027 || labelValue \u003d\u003d\u003d null || labelCategory \u003d\u003d\u003d \u0027\u0027 || labelCategory \u003d\u003d\u003d null) {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      return null;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    const existingLabel \u003d LabelService.getRequiredLabelsAsArray(true).find("},{"lineNumber":262,"author":{"gitId":"-"},"content":"      (label) \u003d\u003e label.labelValue \u003d\u003d\u003d labelValue \u0026\u0026 label.labelCategory \u003d\u003d\u003d labelCategory"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"    if (existingLabel \u003d\u003d\u003d undefined || existingLabel.labelDefinition \u003d\u003d\u003d undefined) {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      return null;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      return existingLabel.labelDefinition;"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":273,"author":{"gitId":"-"},"content":"   * Ensures that the repo has the required labels."},{"lineNumber":274,"author":{"gitId":"-"},"content":"   * Compares the actual labels in the repo with the required labels. If an required label is missing,"},{"lineNumber":275,"author":{"gitId":"-"},"content":"   * it is added to the repo. If the required label exists but the label color is not as expected,"},{"lineNumber":276,"author":{"gitId":"-"},"content":"   * the color is updated. Does not delete actual labels that do not match required labels."},{"lineNumber":277,"author":{"gitId":"-"},"content":"   * i.e., the repo might have more labels than the required labels after this operation."},{"lineNumber":278,"author":{"gitId":"-"},"content":"   * @param actualLabels: labels in the repo."},{"lineNumber":279,"author":{"gitId":"-"},"content":"   * @param requiredLabels: required labels."},{"lineNumber":280,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  private ensureRepoHasRequiredLabels(actualLabels: Label[], requiredLabels: Label[]): void {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    requiredLabels.forEach((label) \u003d\u003e {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      // Finds for a label that has the same name as a required label."},{"lineNumber":284,"author":{"gitId":"-"},"content":"      const nameMatchedLabels: Label[] \u003d actualLabels.filter((remoteLabel) \u003d\u003e remoteLabel.getFormattedName() \u003d\u003d\u003d label.getFormattedName());"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"      if (nameMatchedLabels.length \u003d\u003d\u003d 0) {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        // Create new Label (Could not find a label with the same name \u0026 category)"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        this.githubService.createLabel(label.getFormattedName(), label.labelColor);"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      } else if (nameMatchedLabels.length \u003d\u003d\u003d 1) {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        if (nameMatchedLabels[0].equals(label)) {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"          // the label exists exactly as expected -\u003e do nothing"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"          // the label exists but the color does not match -\u003e update the required label\u0027s color to the one in github"},{"lineNumber":294,"author":{"gitId":"-"},"content":"          LabelService.updateRequiredLabelColor(nameMatchedLabels[0].labelColor, label);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        throw new Error(\u0027Unexpected error: the repo has multiple labels with the same name \u0027 + label.getFormattedName());"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":303,"author":{"gitId":"-"},"content":"   * Converts a GithubLabel object to Label object."},{"lineNumber":304,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":305,"author":{"gitId":"-"},"content":"  toLabel(githubLabel: GithubLabel) {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    let labelCategory: string;"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    let labelValue: string;"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"    const containsDotRegex \u003d /\\./g;"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    const rawName: string \u003d String(githubLabel.name);"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    [labelCategory, labelValue] \u003d containsDotRegex.test(rawName) ? githubLabel.name.split(\u0027.\u0027) : [undefined, rawName];"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"    const labelColor \u003d githubLabel.color;"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    const labelDefinition: string \u003d String(githubLabel.description);"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"    return new Label(labelCategory, labelValue, labelColor, labelDefinition);"},{"lineNumber":317,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":320,"author":{"gitId":"-"},"content":"   * Returns true if the given color is considered \"dark\""},{"lineNumber":321,"author":{"gitId":"-"},"content":"   * The color is considered \"dark\" if its luminance is less than COLOR_DARKNESS_THRESHOLD"},{"lineNumber":322,"author":{"gitId":"-"},"content":"   * @param inputColor: the color"},{"lineNumber":323,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  isDarkColor(inputColor: string): boolean {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    const COLOR \u003d inputColor.charAt(0) \u003d\u003d\u003d \u0027#\u0027 ? inputColor.substring(1, 7) : inputColor;"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    const R \u003d parseInt(COLOR.substring(0, 2), 16);"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    const G \u003d parseInt(COLOR.substring(2, 4), 16);"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    const B \u003d parseInt(COLOR.substring(4, 6), 16);"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    const RGB \u003d [R / 255, G / 255, B / 255];"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    const LINEAR_RGB \u003d RGB.map((col) \u003d\u003e {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      if (col \u003c\u003d 0.03928) {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        return col / 12.92;"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      return Math.pow((col + 0.055) / 1.055, 2.4);"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    // Calculate the luminance of the color"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    const LUMINANCE \u003d 0.2126 * LINEAR_RGB[0] + 0.7152 * LINEAR_RGB[1] + 0.0722 * LINEAR_RGB[2];"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    // The color is \"dark\" if the luminance is lower than the threshold"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    return LUMINANCE \u003c COLOR_DARKNESS_THRESHOLD;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":341,"author":{"gitId":"-"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":343,"author":{"gitId":"-"},"content":"   * Returns a css style for the label to use"},{"lineNumber":344,"author":{"gitId":"-"},"content":"   * @param color: the color of the label"},{"lineNumber":345,"author":{"gitId":"-"},"content":"   * @return the style with background-color in rgb"},{"lineNumber":346,"author":{"gitId":"-"},"content":"   * @throws exception if input is an invalid color code"},{"lineNumber":347,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  setLabelStyle(color: string, display: string \u003d \u0027inline-flex\u0027) {"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    let textColor: string;"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"    textColor \u003d this.isDarkColor(color) ? COLOR_WHITE : COLOR_BLACK;"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"    const styles \u003d {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"      \u0027background-color\u0027: `#${color}`,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      \u0027border-radius\u0027: \u00273px\u0027,"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      cursor: \u0027default\u0027,"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      padding: \u00273px\u0027,"},{"lineNumber":358,"author":{"gitId":"-"},"content":"      color: `#${textColor}`,"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      \u0027font-weight\u0027: \u0027410\u0027,"},{"lineNumber":360,"author":{"gitId":"-"},"content":"      display: display"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"    return styles;"},{"lineNumber":364,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":8,"-":357}},{"path":"src/app/core/services/mocks/mock.issue.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { BehaviorSubject, forkJoin, Observable, of, Subscription } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { catchError, map, mergeMap } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { generateIssueWithRandomData } from \u0027../../../../../tests/constants/githubissue.constants\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../../models/comment.model\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027../../models/github/github-comment.model\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../../models/github/github-issue.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027../../models/github/github-label.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { HiddenData } from \u0027../../models/hidden-data.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { IssueDispute } from \u0027../../models/issue-dispute.model\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { Issue, Issues, STATUS } from \u0027../../models/issue.model\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { Phase } from \u0027../../models/phase.model\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { DataService } from \u0027../data.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { GithubService } from \u0027../github.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../phase.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027"},{"lineNumber":19,"author":{"gitId":"-"},"content":"})"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export class MockIssueService {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  static readonly POLL_INTERVAL \u003d 5000; // 5 seconds"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  issues: Issues;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  issues$: BehaviorSubject\u003cIssue[]\u003e;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  private sessionId: string;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  private issueTeamFilter \u003d \u0027All Teams\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  private issuesPollSubscription: Subscription;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  /** Whether the IssueService is downloading the data from Github*/"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  public isLoading \u003d new BehaviorSubject\u003cboolean\u003e(false);"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  constructor(private githubService: GithubService, private phaseService: PhaseService, private dataService: DataService) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.issues$ \u003d new BehaviorSubject(new Array\u003cIssue\u003e());"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * Loads Issues and Prevents polling during testing."},{"lineNumber":38,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  startPollIssues() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    if (this.issuesPollSubscription \u003d\u003d\u003d undefined) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      if (this.issues$.getValue().length \u003d\u003d\u003d 0) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.isLoading.next(true);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"      this.issuesPollSubscription \u003d of(this.reloadAllIssues()).subscribe((result) \u003d\u003e this.isLoading.next(false));"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  stopPollIssues() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    if (this.issuesPollSubscription) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      this.issuesPollSubscription.unsubscribe();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      this.issuesPollSubscription \u003d undefined;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * Simply returns the existing issue, to simulate polling."},{"lineNumber":58,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  pollIssue(issueId: number): Observable\u003cIssue\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    return of(this.issues[issueId]);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  reloadAllIssues() {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    return this.initializeData();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  getIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    if (this.issues \u003d\u003d\u003d undefined) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      return this.getLatestIssue(id);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      return of(this.issues[id]);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  getLatestIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    return this.githubService.fetchIssueGraphql(id).pipe("},{"lineNumber":77,"author":{"gitId":"-"},"content":"      map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.createAndSaveIssueModel(response);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this.issues[id];"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      }),"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      catchError((err) \u003d\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return of(this.issues[id]);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  createIssue(title: string, description: string, severity: string, type: string): Observable\u003cIssue\u003e {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    const labelsArray \u003d [this.createLabel(\u0027severity\u0027, severity), this.createLabel(\u0027type\u0027, type)];"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    const hiddenData \u003d new Map([[\u0027session\u0027, this.sessionId]]);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    const issueDescription \u003d HiddenData.embedDataIntoString(description, hiddenData);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    return this.githubService"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      .createIssue(title, issueDescription, labelsArray)"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      .pipe(map((response: GithubIssue) \u003d\u003e this.createIssueModel(response)));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  updateIssue(issue: Issue): Observable\u003cIssue\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    const assignees \u003d this.phaseService.currentPhase \u003d\u003d\u003d Phase.phaseModeration ? [] : issue.assignees;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    return this.githubService"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      .updateIssue(issue.id, issue.title, this.createGithubIssueDescription(issue), this.createLabelsForIssue(issue), assignees)"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":101,"author":{"gitId":"-"},"content":"        map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          response.comments \u003d issue.githubComments;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          return this.createIssueModel(response);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  updateIssueWithComment(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    return this.githubService.updateIssueComment(issueComment).pipe("},{"lineNumber":110,"author":{"gitId":"-"},"content":"      mergeMap((updatedComment: GithubComment) \u003d\u003e {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        issue.githubComments \u003d [updatedComment, ...issue.githubComments.filter((c) \u003d\u003e c.id !\u003d\u003d updatedComment.id)];"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this.updateIssue(issue);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"  updateTesterResponse(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    const isTesterResponseExist \u003d this.issues[issue.id].testerResponses;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    const commentApiToCall \u003d isTesterResponseExist"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      ? this.githubService.updateIssueComment(issueComment)"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      : this.githubService.createIssueComment(issue.id, issueComment.description);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    const issueClone \u003d issue.clone(this.phaseService.currentPhase);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    issueClone.status \u003d STATUS.Done;"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    return forkJoin([commentApiToCall, this.updateIssue(issueClone)]).pipe("},{"lineNumber":127,"author":{"gitId":"-"},"content":"      map((responses) \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        const [githubComment, issue] \u003d responses;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        issue.updateTesterResponse(githubComment);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return issue;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"  updateTutorResponse(issue: Issue, issueComment: IssueComment): Observable\u003cIssue\u003e {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    return forkJoin([this.githubService.updateIssueComment(issueComment), this.updateIssue(issue)]).pipe("},{"lineNumber":137,"author":{"gitId":"-"},"content":"      map((responses) \u003d\u003e {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        const [githubComment, issue] \u003d responses;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        issue.updateDispute(githubComment);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return issue;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"  createTeamResponse(issue: Issue): Observable\u003cIssue\u003e {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    const teamResponse \u003d issue.createGithubTeamResponse();"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    return this.githubService.createIssueComment(issue.id, teamResponse).pipe("},{"lineNumber":148,"author":{"gitId":"-"},"content":"      mergeMap((githubComment: GithubComment) \u003d\u003e {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        issue.githubComments \u003d [githubComment, ...issue.githubComments.filter((c) \u003d\u003e c.id !\u003d\u003d githubComment.id)];"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return this.updateIssue(issue);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"  createTutorResponse(issue: Issue, response: string): Observable\u003cIssue\u003e {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    return forkJoin([this.githubService.createIssueComment(issue.id, response), this.updateIssue(issue)]).pipe("},{"lineNumber":157,"author":{"gitId":"-"},"content":"      map((responses) \u003d\u003e {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        const [githubComment, issue] \u003d responses;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        issue.updateDispute(githubComment);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return issue;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":166,"author":{"gitId":"-"},"content":"   * This function will create a github representation of issue\u0027s description. Given the issue model, it will piece together the different"},{"lineNumber":167,"author":{"gitId":"-"},"content":"   * attributes to create the github\u0027s description."},{"lineNumber":168,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  private createGithubIssueDescription(issue: Issue): string {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    switch (this.phaseService.currentPhase) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      case Phase.phaseModeration:"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return ("},{"lineNumber":174,"author":{"gitId":"-"},"content":"          `# Issue Description\\n${issue.createGithubIssueDescription()}\\n# Team\\\u0027s Response\\n${issue.teamResponse}\\n ` +"},{"lineNumber":175,"author":{"gitId":"-"},"content":"          // `## State the duplicated issue here, if any\\n${issue.duplicateOf ? `Duplicate of #${issue.duplicateOf}` : `--`}\\n` +"},{"lineNumber":176,"author":{"gitId":"-"},"content":"          `# Disputes\\n\\n${this.getIssueDisputeString(issue.issueDisputes)}\\n`"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return issue.createGithubIssueDescription();"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"  private getIssueDisputeString(issueDisputes: IssueDispute[]): string {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    let issueDisputeString \u003d \u0027\u0027;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    for (const issueDispute of issueDisputes) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      issueDisputeString +\u003d issueDispute.toString();"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    return issueDisputeString;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"  deleteIssue(id: number): Observable\u003cIssue\u003e {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    return this.githubService.closeIssue(id).pipe("},{"lineNumber":193,"author":{"gitId":"-"},"content":"      map((response: GithubIssue) \u003d\u003e {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        const deletedIssue \u003d this.createIssueModel(response);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        this.deleteFromLocalStore(deletedIssue);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return deletedIssue;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":202,"author":{"gitId":"-"},"content":"   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is deleted."},{"lineNumber":203,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  deleteFromLocalStore(issueToDelete: Issue) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    const { [issueToDelete.id]: issueToRemove, ...withoutIssueToRemove } \u003d this.issues;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    this.issues \u003d withoutIssueToRemove;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    this.issues$.next(Object.values(this.issues));"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is added/updated."},{"lineNumber":212,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  updateLocalStore(issueToUpdate: Issue) {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    this.issues \u003d {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      ...this.issues,"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      [issueToUpdate.id]: issueToUpdate"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    this.issues$.next(Object.values(this.issues));"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":222,"author":{"gitId":"-"},"content":"   * Check whether the issue has been responded in the phase 2/3."},{"lineNumber":223,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  hasTeamResponse(issueId: number): boolean {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    return !!this.issues[issueId].teamResponse;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   * Obtain an observable containing an array of issues that are duplicates of the parentIssue."},{"lineNumber":230,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  getDuplicateIssuesFor(parentIssue: Issue): Observable\u003cIssue[]\u003e {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    return this.issues$.pipe("},{"lineNumber":233,"author":{"gitId":"-"},"content":"      map((issues) \u003d\u003e {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return issues.filter((issue) \u003d\u003e {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"          return issue.duplicateOf \u003d\u003d\u003d parentIssue.id;"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"  reset() {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    this.issues \u003d undefined;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    this.sessionId \u003d undefined;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    this.issues$.next(new Array\u003cIssue\u003e());"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    this.stopPollIssues();"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    this.isLoading.complete();"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    this.isLoading \u003d new BehaviorSubject\u003cboolean\u003e(false);"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   * Populates store with random issues depending on the current test phase."},{"lineNumber":253,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  private initializeData(): Observable\u003cIssue[]\u003e {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    if (this.issues !\u003d null) {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      return of(Object.values(this.issues));"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    const NUM_ISSUES \u003d 10;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    const generatedIssues: Array\u003cGithubIssue\u003e \u003d [];"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"    switch (this.phaseService.currentPhase) {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"      case Phase.phaseBugReporting:"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        for (let i \u003d 0; i \u003c NUM_ISSUES; i++) {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"          generatedIssues.push(generateIssueWithRandomData());"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"    for (const issue of generatedIssues) {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      this.createAndSaveIssueModel(issue);"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"    return of(Object.values(this.issues));"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"  private createAndSaveIssueModel(githubIssue: GithubIssue): boolean {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    const issue \u003d this.createIssueModel(githubIssue);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    this.updateLocalStore(issue);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    return true;"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":284,"author":{"gitId":"-"},"content":"   * Given an issue model, create the necessary labels for github."},{"lineNumber":285,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  private createLabelsForIssue(issue: Issue): string[] {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    const result \u003d [];"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"    if (this.phaseService.currentPhase !\u003d\u003d Phase.phaseBugReporting \u0026\u0026 this.phaseService.currentPhase !\u003d\u003d Phase.phaseTesterResponse) {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      const studentTeam \u003d issue.teamAssigned.id.split(\u0027-\u0027);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027tutorial\u0027, `${studentTeam[0]}-${studentTeam[1]}`), this.createLabel(\u0027team\u0027, studentTeam[2]));"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"    if (issue.severity) {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027severity\u0027, issue.severity));"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"    if (issue.type) {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027type\u0027, issue.type));"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"Eclipse-Dominator"},"content":"    if (issue.response) {"},{"lineNumber":303,"author":{"gitId":"Eclipse-Dominator"},"content":"      result.push(this.createLabel(\u0027response\u0027, issue.response));"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"    if (issue.duplicated) {"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      result.push(\u0027duplicate\u0027);"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"    if (issue.status) {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      result.push(this.createLabel(\u0027status\u0027, issue.status));"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"    if (issue.pending) {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      if (+issue.pending \u003e 0) {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        result.push(this.createLabel(\u0027pending\u0027, issue.pending));"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"    if (issue.unsure) {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      result.push(\u0027unsure\u0027);"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"    return result;"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"  private createLabel(prepend: string, value: string) {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    return `${prepend}.${value}`;"},{"lineNumber":329,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"  private extractTeamIdFromGithubIssue(githubIssue: GithubIssue): string {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    return githubIssue.findLabel(GithubLabel.LABELS.tutorial).concat(\u0027-\u0027).concat(githubIssue.findLabel(GithubLabel.LABELS.team));"},{"lineNumber":333,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"  private createIssueModel(githubIssue: GithubIssue): Issue {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    switch (this.phaseService.currentPhase) {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      case Phase.phaseBugReporting:"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        return Issue.createPhaseBugReportingIssue(githubIssue);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      case Phase.phaseTeamResponse:"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        return Issue.createPhaseTeamResponseIssue(githubIssue, this.dataService.getTeam(this.extractTeamIdFromGithubIssue(githubIssue)));"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      case Phase.phaseTesterResponse:"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        return Issue.createPhaseTesterResponseIssue(githubIssue);"},{"lineNumber":343,"author":{"gitId":"-"},"content":"      case Phase.phaseModeration:"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        return Issue.createPhaseModerationIssue(githubIssue, this.dataService.getTeam(this.extractTeamIdFromGithubIssue(githubIssue)));"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"  setIssueTeamFilter(filterValue: string) {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    if (filterValue) {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      this.issueTeamFilter \u003d filterValue;"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":354,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"  setSessionId(sessionId: string) {"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    this.sessionId \u003d sessionId;"},{"lineNumber":358,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"  getIssueTeamFilter(): string {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    return this.issueTeamFilter;"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":2,"-":361}},{"path":"src/app/shared/issue-tables/issue-tables-columns.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"export enum TABLE_COLUMNS {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  ID \u003d \u0027id\u0027,"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  TITLE \u003d \u0027title\u0027,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  TEAM_ASSIGNED \u003d \u0027teamAssigned\u0027,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  TYPE \u003d \u0027type\u0027,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  SEVERITY \u003d \u0027severity\u0027,"},{"lineNumber":7,"author":{"gitId":"Eclipse-Dominator"},"content":"  RESPONSE \u003d \u0027response\u0027,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  TESTER_DISAGREE \u003d \u0027testerDisagree\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  ASSIGNEE \u003d \u0027assignees\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  DUPLICATED_ISSUES \u003d \u0027duplicatedIssues\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  TODO \u003d \u0027Todo Remaining\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  ACTIONS \u003d \u0027actions\u0027"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":1,"-":12}},{"path":"src/app/shared/issue-tables/issue-tables.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cmat-table [dataSource]\u003d\"this.issues\" matSort class\u003d\"mat-elevation-z8\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003c!-- ID Column --\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"id\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e ID \u003c/mat-header-cell\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \u003cspan (click)\u003d\"$event.stopPropagation()\" style\u003d\"cursor: default\"\u003e{{ issue.id }}\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c!-- Title Column --\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"title\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Title \u003c/mat-header-cell\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{ this.fitTitleText(issue.title) }} \u003c/a\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c!-- Team Assigned Column --\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cng-container *ngIf\u003d\"userService.currentUser.role !\u003d\u003d \u0027Student\u0027\" matColumnDef\u003d\"teamAssigned\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Team \u003c/mat-header-cell\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e {{ (issue.teamAssigned \u0026\u0026 issue.teamAssigned.id) || \u0027-\u0027 }} \u003c/mat-cell\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003c!-- Type Column --\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"type\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Type \u003c/mat-header-cell\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cspan"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(\u0027type\u0027, issue.type))\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        {{ issue.type || \u0027-\u0027 }}"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cspan"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"issue.teamChosenType \u0026\u0026 issue.teamChosenType !\u003d issue.type\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        style\u003d\"display: inline; padding: 1px 2px\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cmat-icon class\u003d\"arrow-right\"\u003earrow_right_alt\u003c/mat-icon\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003cspan"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"issue.teamChosenType \u0026\u0026 issue.teamChosenType !\u003d issue.type\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(\u0027type\u0027, issue.teamChosenType))\""},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        {{ issue.teamChosenType }}"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003c!-- Severity Column --\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"severity\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Severity \u003c/mat-header-cell\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cspan"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(\u0027severity\u0027, issue.severity))\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        {{ issue.severity || \u0027-\u0027 }}"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003cspan"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"issue.teamChosenSeverity \u0026\u0026 issue.teamChosenSeverity !\u003d issue.severity\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        style\u003d\"display: inline; margin: 3px\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cmat-icon class\u003d\"arrow-right\"\u003earrow_right_alt\u003c/mat-icon\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003cspan"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"issue.teamChosenSeverity \u0026\u0026 issue.teamChosenSeverity !\u003d issue.severity\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(\u0027severity\u0027, issue.teamChosenSeverity))\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        {{ issue.teamChosenSeverity }}"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  \u003c!--Response Tag Column--\u003e"},{"lineNumber":79,"author":{"gitId":"Eclipse-Dominator"},"content":"  \u003cng-container matColumnDef\u003d\"response\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Response \u003c/mat-header-cell\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      \u003cspan"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":84,"author":{"gitId":"Eclipse-Dominator"},"content":"        *ngIf\u003d\"issue.response\""},{"lineNumber":85,"author":{"gitId":"Eclipse-Dominator"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(\u0027response\u0027, issue.response))\""},{"lineNumber":86,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":87,"author":{"gitId":"Eclipse-Dominator"},"content":"        {{ issue.response }}"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":89,"author":{"gitId":"Eclipse-Dominator"},"content":"      \u003cspan *ngIf\u003d\"!issue.response\" style\u003d\"margin-left: 10%\"\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003c!--Assignee Column--\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"assignees\"\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \u003cmat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header\u003e Assignees \u003c/mat-header-cell\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003cspan (click)\u003d\"$event.stopPropagation()\" style\u003d\"cursor: default\" *ngIf\u003d\"issue.assignees.length !\u003d\u003d 0\"\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        {{ issue.assignees.join(\u0027, \u0027) }}"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"issue.assignees.length \u003d\u003d\u003d 0\" style\u003d\"margin-left: 5%\"\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003cmat-icon matTooltip\u003d\"We strongly recommend assigning all issues to someone\" matTooltipPosition\u003d\"above\" style\u003d\"color: #ffab40\"\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"          warning"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        \u003c/mat-icon\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  \u003c!-- Duplicated Issues Column --\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"duplicatedIssues\"\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    \u003cmat-header-cell *matHeaderCellDef\u003e Duplicates \u003c/mat-header-cell\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\"\u003e-\u003c/div\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmat-chip-list"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        *ngFor\u003d\"let duplicateIssue of issueService.getDuplicateIssuesFor(issue) | async\""},{"lineNumber":117,"author":{"gitId":"-"},"content":"        style\u003d\"display: inline-block; margin-left: 5px\""},{"lineNumber":118,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        \u003cmat-chip"},{"lineNumber":120,"author":{"gitId":"-"},"content":"          [routerLink]\u003d\"[\u0027issues/\u0027 + duplicateIssue.id]\""},{"lineNumber":121,"author":{"gitId":"-"},"content":"          [matTooltip]\u003d\"duplicateIssue.title\""},{"lineNumber":122,"author":{"gitId":"-"},"content":"          matTooltipPosition\u003d\"above\""},{"lineNumber":123,"author":{"gitId":"-"},"content":"          style\u003d\"font-size: 12px; cursor: pointer\""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"          #{{ duplicateIssue.id }}"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        \u003c/mat-chip\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      \u003c/mat-chip-list\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  \u003c!-- To do Column --\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"Todo Remaining\"\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmat-header-cell *matHeaderCellDef mat-sort-header\u003e Todo Remaining \u003c/mat-header-cell\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"isTodoListChecked(issue) \u0026\u0026 issue.issueDisputes.length \u003e 0\"\u003e \u003cfont color\u003d\"green\"\u003eAll tasks are completed\u003c/font\u003e \u003c/span\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"!isTodoListChecked(issue)\"\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        \u003cfont color\u003d\"red\""},{"lineNumber":138,"author":{"gitId":"-"},"content":"          \u003e{{ issue.issueDisputes.length - todoFinished(issue) }}/{{ issue.issueDisputes.length }} tasks pending.\u003c/font"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        \u003e\u003c/span"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      \u003cprogress"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"issue.issueDisputes.length \u003e 0\""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        value\u003d\"{{ todoFinished(issue) }}\""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        max\u003d\"{{ issue.issueDisputes.length }}\""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        role\u003d\"progressbar\""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        style\u003d\"width: 100%\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        aria-valuenow\u003d\"100\""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        aria-valuemin\u003d\"0\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        aria-valuemax\u003d\"100\""},{"lineNumber":150,"author":{"gitId":"-"},"content":"      \u003e\u003c/progress\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      \u003cspan *ngIf\u003d\"issue.issueDisputes.length \u003d\u003d\u003d 0\"\u003e No Todo List for this issue \u003c/span\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"  \u003c!--Tester Disagree Column--\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"testerDisagree\"\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header\u003eResponse\u003c/mat-header-cell\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      \u003c!-- Response Agree/Disagree colours are the same as Response Agree/Rejected label colours for uniformity in the app --\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      \u003cspan"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"issue.testerDisagree\""},{"lineNumber":163,"author":{"gitId":"-"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(\u0027response\u0027, \u0027Rejected\u0027))\""},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Disagree"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      \u003cspan"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        (click)\u003d\"$event.stopPropagation()\""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"!issue.testerDisagree\""},{"lineNumber":170,"author":{"gitId":"-"},"content":"        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(\u0027response\u0027, \u0027Accepted\u0027))\""},{"lineNumber":171,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Agree"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      \u003c/span\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"  \u003c!-- Action Buttons Column --\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003cng-container matColumnDef\u003d\"actions\"\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    \u003cmat-header-cell *matHeaderCellDef\u003e Actions \u003c/mat-header-cell\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    \u003cmat-cell *matCellDef\u003d\"let issue\"\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      \u003cbutton"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        mat-button"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        matTooltip\u003d\"View this issue on GitHub\""},{"lineNumber":184,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"this.isActionVisible(action_buttons.VIEW_IN_WEB)\""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        (click)\u003d\"this.viewIssueInBrowser(issue.id, $event)\""},{"lineNumber":186,"author":{"gitId":"-"},"content":"        style\u003d\"transform: scale(0.8)\""},{"lineNumber":187,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        \u003cmat-icon\u003eopen_in_new\u003c/mat-icon\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      \u003cbutton"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"this.isResponseEditable() \u0026\u0026 !issue.status \u0026\u0026 this.isActionVisible(action_buttons.RESPOND_TO_ISSUE); else tryEditIssue\""},{"lineNumber":192,"author":{"gitId":"-"},"content":"        [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        mat-button"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        color\u003d\"accent\""},{"lineNumber":195,"author":{"gitId":"-"},"content":"        style\u003d\"transform: scale(0.8)\""},{"lineNumber":196,"author":{"gitId":"-"},"content":"        matTooltip\u003d\"Respond to this issue\""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        (click)\u003d\"this.logIssueRespondRouting(issue.id)\""},{"lineNumber":198,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        \u003cmat-icon\u003efeedback\u003c/mat-icon\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cng-template #tryEditIssue\u003e"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":203,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"permissions.isIssueEditable() \u0026\u0026 this.isActionVisible(action_buttons.FIX_ISSUE)\""},{"lineNumber":204,"author":{"gitId":"-"},"content":"          mat-button"},{"lineNumber":205,"author":{"gitId":"-"},"content":"          color\u003d\"accent\""},{"lineNumber":206,"author":{"gitId":"-"},"content":"          style\u003d\"transform: scale(0.8)\""},{"lineNumber":207,"author":{"gitId":"-"},"content":"          matTooltip\u003d\"Edit this issue\""},{"lineNumber":208,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":209,"author":{"gitId":"-"},"content":"          \u003cmat-icon\u003eedit\u003c/mat-icon\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      \u003c/ng-template\u003e"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      \u003cbutton"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"this.isResponseEditable() \u0026\u0026 issue.status \u0026\u0026 this.isActionVisible(action_buttons.MARK_AS_RESPONDED)\""},{"lineNumber":214,"author":{"gitId":"-"},"content":"        mat-button"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        color\u003d\"primary\""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        (click)\u003d\"markAsResponded(issue, $event)\""},{"lineNumber":217,"author":{"gitId":"-"},"content":"        style\u003d\"transform: scale(0.8)\""},{"lineNumber":218,"author":{"gitId":"-"},"content":"        matTooltip\u003d\"Mark this issue as Responded\""},{"lineNumber":219,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        \u003cmat-icon\u003echeck_circle\u003c/mat-icon\u003e"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      \u003cbutton"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        color\u003d\"primary\""},{"lineNumber":224,"author":{"gitId":"-"},"content":"        matTooltip\u003d\"Mark this issue as Pending\""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        mat-button"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        (click)\u003d\"markAsPending(issue, $event)\""},{"lineNumber":227,"author":{"gitId":"-"},"content":"        style\u003d\"transform: scale(0.8)\""},{"lineNumber":228,"author":{"gitId":"-"},"content":"        *ngIf\u003d\""},{"lineNumber":229,"author":{"gitId":"-"},"content":"          (userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 || userService.currentUser.role \u003d\u003d\u003d \u0027Admin\u0027) \u0026\u0026"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          this.isActionVisible(action_buttons.MARK_AS_PENDING)"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \""},{"lineNumber":232,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        \u003cmat-icon\u003ecancel\u003c/mat-icon\u003e"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      \u003cbutton"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        mat-button"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        color\u003d\"warn\""},{"lineNumber":238,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"permissions.isIssueDeletable() \u0026\u0026 !issuesPendingDeletion[issue.id] \u0026\u0026 this.isActionVisible(action_buttons.DELETE_ISSUE)\""},{"lineNumber":239,"author":{"gitId":"-"},"content":"        (click)\u003d\"openDeleteDialog(issue.id, $event); $event.stopPropagation()\""},{"lineNumber":240,"author":{"gitId":"-"},"content":"        matTooltip\u003d\"Delete this issue\""},{"lineNumber":241,"author":{"gitId":"-"},"content":"        style\u003d\"transform: scale(0.8)\""},{"lineNumber":242,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        \u003cmat-icon\u003edelete_outline\u003c/mat-icon\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      \u003c/button\u003e"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      \u003cmat-spinner"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        color\u003d\"warn\""},{"lineNumber":247,"author":{"gitId":"-"},"content":"        [diameter]\u003d\"25\""},{"lineNumber":248,"author":{"gitId":"-"},"content":"        style\u003d\"display: inline; padding-right: 30px; margin-left: 5px\""},{"lineNumber":249,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"issuesPendingDeletion[issue.id] \u0026\u0026 this.isActionVisible(action_buttons.DELETE_ISSUE)\""},{"lineNumber":250,"author":{"gitId":"-"},"content":"      \u003e\u003c/mat-spinner\u003e"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003c/mat-cell\u003e"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"  \u003cmat-header-row *matHeaderRowDef\u003d\"this.headers\"\u003e\u003c/mat-header-row\u003e\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  \u003cmat-row"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    *matRowDef\u003d\"let issue; columns: this.headers\""},{"lineNumber":257,"author":{"gitId":"-"},"content":"    (click)\u003d\"this.logIssueEditRouting(issue.id)\""},{"lineNumber":258,"author":{"gitId":"-"},"content":"    [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    style\u003d\"cursor: pointer\""},{"lineNumber":260,"author":{"gitId":"-"},"content":"  \u003e\u003c/mat-row\u003e"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003c/mat-table\u003e"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cmat-card *ngIf\u003d\"this.issues.isLoading$ | async\" style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003c/mat-card\u003e"},{"lineNumber":265,"author":{"gitId":"-"},"content":"\u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"}],"authorContributionMap":{"Eclipse-Dominator":5,"-":260}},{"path":"src/app/shared/issue/duplicateOf/duplicate-of.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, ViewEncapsulation } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FormControl } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MatCheckbox } from \u0027@angular/material/checkbox\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { MatSelect, MatSelectChange } from \u0027@angular/material/select\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Observable, ReplaySubject, Subject } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { first, map, takeUntil } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../../issue-tables/issue-tables-columns\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { applySearchFilter } from \u0027../../issue-tables/search-filter\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  selector: \u0027app-duplicate-of-component\u0027,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./duplicate-of.component.html\u0027,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./duplicate-of.component.css\u0027],"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  encapsulation: ViewEncapsulation.None"},{"lineNumber":20,"author":{"gitId":"-"},"content":"})"},{"lineNumber":21,"author":{"gitId":"-"},"content":"export class DuplicateOfComponent implements OnInit, OnDestroy {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  isEditing \u003d false;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  duplicatedIssueList: Observable\u003cIssue[]\u003e;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  searchFilterCtrl: FormControl \u003d new FormControl();"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  filteredDuplicateIssueList: ReplaySubject\u003cIssue[]\u003e \u003d new ReplaySubject\u003cIssue[]\u003e(1);"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  @ViewChild(MatSelect, { static: true }) duplicateOfSelection: MatSelect;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  @ViewChild(MatCheckbox, { static: true }) duplicatedCheckbox: MatCheckbox;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  // A subject that will emit a signal when this component is being destroyed"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  private _onDestroy \u003d new Subject\u003cvoid\u003e();"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  // Max chars visible for a duplicate entry in duplicates dropdown list."},{"lineNumber":38,"author":{"gitId":"-"},"content":"  readonly MAX_TITLE_LENGTH_FOR_DUPLICATE_ISSUE \u003d 17;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  // Max chars visible for a non-duplicate entry in duplicates dropdown list."},{"lineNumber":40,"author":{"gitId":"-"},"content":"  readonly MAX_TITLE_LENGTH_FOR_NON_DUPLICATE_ISSUE \u003d 37;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public issueService: IssueService,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public permissions: PermissionService,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   * Checks if the supplied issue requires a tooltip"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   * in the UI as some information may be hidden due to truncation."},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * @param issue - Displayed issue that may need a tooltip."},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * @return - true (to enable tooltip) / false (to disable tooltip)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  isTooltipNecessary(issue: Issue): boolean {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Maximum Possible Title length varies based on whether the issue"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // is a duplicate. (Whether the Duplicate Issue Tag is visible)"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    let maxTitleLength: number;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    maxTitleLength \u003d issue.duplicated ? this.MAX_TITLE_LENGTH_FOR_DUPLICATE_ISSUE : this.MAX_TITLE_LENGTH_FOR_NON_DUPLICATE_ISSUE;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    return issue.title.length \u003e maxTitleLength;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  ngOnDestroy(): void {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    this._onDestroy.next(); // Emits the destroy signal"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    this._onDestroy.complete();"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    this.duplicatedIssueList \u003d this.getDupIssueList();"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Populate the filtered list with all the issues first"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    this.duplicatedIssueList.pipe(first()).subscribe((issues) \u003d\u003e this.filteredDuplicateIssueList.next(issues));"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    this.searchFilterCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe((_) \u003d\u003e this.filterIssues());"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  private filterIssues(): void {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    this.changeFilter(this.duplicatedIssueList, this.searchFilterCtrl.value).subscribe((issues) \u003d\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      this.filteredDuplicateIssueList.next(issues)"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  updateDuplicateStatus(event: MatSelectChange) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    const latestIssue \u003d this.getUpdatedIssue(event);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    this.issueService.updateIssueWithComment(latestIssue, latestIssue.issueComment).subscribe("},{"lineNumber":85,"author":{"gitId":"-"},"content":"      (issue) \u003d\u003e this.issueUpdated.emit(issue),"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      (error) \u003d\u003e this.errorHandlingService.handleError(error)"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"  dupIssueOptionIsDisabled(issue: Issue): boolean {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    return issue.duplicated || !!issue.duplicateOf;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  getDisabledDupOptionErrorText(issue: Issue): string {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    return this.dupIssueOptionIsDisabled(issue) ? \u0027Duplicate of #\u0027 + issue.duplicateOf : \u0027\u0027;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  handleCheckboxChange(event) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    if (event.checked) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      this.openSelection();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      this.isEditing \u003d false;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      this.duplicateOfSelection.close();"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      this.duplicateOfSelection.value \u003d null;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      this.updateDuplicateStatus(null);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"  openSelection() {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    this.isEditing \u003d true;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    this.duplicateOfSelection.open();"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  handleSelectionOpenChange(isOpen) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    if (!isOpen) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      this.isEditing \u003d false;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      this.duplicatedCheckbox.checked \u003d this.duplicateOfSelection.value;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"  getUpdatedIssue(duplicateCheckboxEvent: MatSelectChange): Issue {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    const clone \u003d this.issue.clone(this.phaseService.currentPhase);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    clone.duplicated \u003d !!duplicateCheckboxEvent;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    clone.duplicateOf \u003d duplicateCheckboxEvent ? duplicateCheckboxEvent.value : null;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    if (duplicateCheckboxEvent) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      const duplicatedIssue \u003d this.issueService.issues[clone.duplicateOf];"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      clone.severity \u003d duplicatedIssue.severity;"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      clone.type \u003d duplicatedIssue.type;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      clone.assignees \u003d duplicatedIssue.assignees;"},{"lineNumber":130,"author":{"gitId":"Eclipse-Dominator"},"content":"      clone.response \u003d duplicatedIssue.response;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    clone.issueComment.description \u003d clone.createGithubTeamResponse();"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    return clone;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  private changeFilter(issuesObservable: Observable\u003cIssue[]\u003e, searchInputString): Observable\u003cIssue[]\u003e {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    return issuesObservable.pipe("},{"lineNumber":138,"author":{"gitId":"-"},"content":"      first(),"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      map((issues) \u003d\u003e {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return applySearchFilter(searchInputString, [TABLE_COLUMNS.ID, TABLE_COLUMNS.TITLE], this.issueService, issues);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"  private getDupIssueList(): Observable\u003cIssue[]\u003e {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    return this.issueService.issues$.pipe("},{"lineNumber":147,"author":{"gitId":"-"},"content":"      map((issues) \u003d\u003e {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return issues.filter((issue) \u003d\u003e {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"          return this.issue.id !\u003d\u003d issue.id \u0026\u0026 this.issue.teamAssigned.id \u003d\u003d\u003d issue.teamAssigned.id;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":1,"-":153}},{"path":"src/app/shared/view-issue/new-team-response/conflict-dialog/conflict-dialog.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"display: flex; margin-bottom: 20px; align-items: center\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch1 mat-dialog-title style\u003d\"margin: 0\"\u003e{{ \u0027A new response was submitted by another user\u0027 }}\u003c/h1\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cbutton mat-icon-button color\u003d\"default\" style\u003d\"margin: 0 0 0 auto\" (click)\u003d\"close()\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cmat-icon\u003eclose\u003c/mat-icon\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cdiv mat-dialog-content style\u003d\"display: flex\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"column left\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cmat-tab-group class\u003d\"mat-elevation-z1\" animationDuration\u003d\"0ms\" (selectedTabChange)\u003d\"handleTabChange($event)\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cmat-tab label\u003d\"Updated Markdown Text\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"tab-content\" *ngIf\u003d\"isReady\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003cdiv [innerHTML]\u003d\"updatedHtml\"\u003e\u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003c/mat-tab\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cmat-tab label\u003d\"Preview\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"tab-content\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003cmarkdown\u003e{{ data.teamResponse }}\u003c/markdown\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/mat-tab\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c/mat-tab-group\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"column right\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"data.type\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"mat-title\"\u003e Type \u003c/span\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c!-- This component isn\u0027t used, but when it is we need to fix this method --\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cp [ngStyle]\u003d\"labelService.setLabelStyle(labelService.getColorOfLabel(data.type))\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        {{ data.type || \u0027-\u0027 }}"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"data.severity\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"mat-title\"\u003e Severity \u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cp [ngStyle]\u003d\"labelService.setLabelStyle(labelService.getColorOfLabel(data.severity))\"\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        {{ data.severity || \u0027-\u0027 }}"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"Eclipse-Dominator"},"content":"    \u003cdiv *ngIf\u003d\"data.response\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"mat-title\"\u003e Response \u003c/span\u003e"},{"lineNumber":45,"author":{"gitId":"Eclipse-Dominator"},"content":"      \u003cp [ngStyle]\u003d\"labelService.setLabelStyle(labelService.getColorOfLabel(data.response))\"\u003e"},{"lineNumber":46,"author":{"gitId":"Eclipse-Dominator"},"content":"        {{ data.response || \u0027-\u0027 }}"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"data.assignees\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      \u003capp-assignee-component [issue]\u003d\"data\" [team]\u003d\"data.teamAssigned\" [isEditable]\u003d\"false\"\u003e \u003c/app-assignee-component\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"data.duplicateOf\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003cdiv\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cspan class\u003d\"mat-title\"\u003eA Duplicate Of:\u003c/span\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cp style\u003d\"margin-top: 5px\"\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          {{ \u0027#\u0027 + data.duplicateOf + \u0027: \u0027 + (issueService.getIssue(data.duplicateOf) | async).title }}"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/p\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"Eclipse-Dominator":3,"-":62}},{"path":"src/app/shared/view-issue/new-team-response/new-team-response.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cform [formGroup]\u003d\"newTeamResponseForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"submitNewTeamResponse(myForm)\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"timeline-comment\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"timeline-header\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cspan style\u003d\"vertical-align: middle; margin-left: 5px\"\u003e Post your team\u0027s response here. \u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003cdiv\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(this.issue) | async).length \u003d\u003d\u003d 0; else displayDuplicates\" class\u003d\"container\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        \u003cdiv\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"          \u003cmat-checkbox"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            style\u003d\"display: inline-block; width: 20%\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"            formControlName\u003d\"duplicated\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"            (change)\u003d\"handleChangeOfDuplicateCheckbox($event)\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"          \u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            A Duplicate Of:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003c/mat-checkbox\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003cmat-form-field [style.visibility]\u003d\"!duplicated.value ? \u0027hidden\u0027 : \u0027visible\u0027\" style\u003d\"display: inline-block; width: 50%\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cmat-select formControlName\u003d\"duplicateOf\" placeholder\u003d\"Duplicate of\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"              \u003cmat-option\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cngx-mat-select-search"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                  placeholderLabel\u003d\"Search issues\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"                  noEntriesFoundLabel\u003d\"No issues found\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"                  [formControl]\u003d\"searchFilterCtrl\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003e\u003c/ngx-mat-select-search\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003c/mat-option\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cmat-option"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                *ngFor\u003d\"let issue of filteredDuplicateIssueList | async\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"                [disabled]\u003d\"dupIssueOptionIsDisabled(issue)\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"                [value]\u003d\"issue.id\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u003cspan class\u003d\"mat-body-strong\"\u003e #{{ issue.id }}: \u003c/span\u003e \u003cspan class\u003d\"mat-body\"\u003e{{ issue.title }}\u003c/span\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003cspan *ngIf\u003d\"dupIssueOptionIsDisabled(issue)\" class\u003d\"mat-caption\" style\u003d\"color: #f44336\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                  ({{ getDisabledDupOptionErrorText(issue) }})"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003c/span\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003c/mat-option\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003c/mat-select\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cmat-error *ngIf\u003d\"duplicateOf.errors \u0026\u0026 duplicateOf.errors[\u0027required\u0027] \u0026\u0026 duplicateOf.touched\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              Need to specify the duplicated issue."},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003c/mat-error\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/mat-form-field\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003cng-template #displayDuplicates\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"container\"\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003capp-duplicated-issues-component [issue]\u003d\"this.issue\"\u003e\u003c/app-duplicated-issues-component\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003c/ng-template\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"container\" [style.display]\u003d\"duplicated.value ? \u0027none\u0027 : \u0027grid\u0027\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"left-half\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003capp-label-dropdown"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            [initialValue]\u003d\"this.issue.severity\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"            attributeName\u003d\"severity\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"            [dropdownForm]\u003d\"newTeamResponseForm\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003e\u003c/app-label-dropdown\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"right-half\"\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003capp-label-dropdown"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            [initialValue]\u003d\"this.issue.type\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"            attributeName\u003d\"type\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"            [dropdownForm]\u003d\"newTeamResponseForm\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"          \u003e\u003c/app-label-dropdown\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"container\" [style.display]\u003d\"duplicated.value ? \u0027none\u0027 : \u0027grid\u0027\"\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003cmat-form-field class\u003d\"left-half\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          \u003cmat-select placeholder\u003d\"Assignees\" formControlName\u003d\"assignees\" multiple\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            \u003cmat-option *ngFor\u003d\"let member of teamMembers\" [value]\u003d\"member\"\u003e{{ member }}\u003c/mat-option\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          \u003c/mat-select\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          \u003cmat-error *ngIf\u003d\"assignees.errors \u0026\u0026 assignees.errors[\u0027required\u0027] \u0026\u0026 assignees.touched\"\u003e Assignee(s) required. \u003c/mat-error\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003c/mat-form-field\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"right-half\"\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"          \u003capp-label-dropdown"},{"lineNumber":79,"author":{"gitId":"Eclipse-Dominator"},"content":"            [initialValue]\u003d\"this.issue.response\""},{"lineNumber":80,"author":{"gitId":"Eclipse-Dominator"},"content":"            attributeName\u003d\"response\""},{"lineNumber":81,"author":{"gitId":"-"},"content":"            [dropdownForm]\u003d\"newTeamResponseForm\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"          \u003e\u003c/app-label-dropdown\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"      \u003capp-comment-editor"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        [id]\u003d\"\u0027description\u0027\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        [commentField]\u003d\"this.newTeamResponseForm.get(\u0027description\u0027)\""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        [commentForm]\u003d\"this.newTeamResponseForm\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        [(isFormPending)]\u003d\"this.isFormPending\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        [(submitButtonText)]\u003d\"this.submitButtonText\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c/app-comment-editor\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"editor-actions\"\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":97,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":99,"author":{"gitId":"-"},"content":"          type\u003d\"button\""},{"lineNumber":100,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isFormPending\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"          mat-raised-button"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          color\u003d\"primary\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"          (click)\u003d\"viewUpdatedResponse()\""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          View Updated Response"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":108,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":109,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":110,"author":{"gitId":"-"},"content":"          type\u003d\"submit\""},{"lineNumber":111,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"newTeamResponseForm.invalid || isFormPending\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"          mat-raised-button"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          color\u003d\"warn\""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          type\u003d\"submit\""},{"lineNumber":119,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":120,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"!conflict\""},{"lineNumber":121,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"newTeamResponseForm.invalid || isFormPending\""},{"lineNumber":122,"author":{"gitId":"-"},"content":"          mat-stroked-button"},{"lineNumber":123,"author":{"gitId":"-"},"content":"          color\u003d\"primary\""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"          {{ submitButtonText }}"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        \u003cbutton"},{"lineNumber":128,"author":{"gitId":"-"},"content":"          class\u003d\"editor-action\""},{"lineNumber":129,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"conflict\""},{"lineNumber":130,"author":{"gitId":"-"},"content":"          type\u003d\"button\""},{"lineNumber":131,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isFormPending\""},{"lineNumber":132,"author":{"gitId":"-"},"content":"          mat-stroked-button"},{"lineNumber":133,"author":{"gitId":"-"},"content":"          color\u003d\"warn\""},{"lineNumber":134,"author":{"gitId":"-"},"content":"          (click)\u003d\"refresh()\""},{"lineNumber":135,"author":{"gitId":"-"},"content":"          matTooltip\u003d\"Updated response will overwrite your changes\""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"          Cancel"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003c/form\u003e"}],"authorContributionMap":{"Eclipse-Dominator":2,"-":140}},{"path":"src/app/shared/view-issue/new-team-response/new-team-response.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FormBuilder, FormControl, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { MatCheckboxChange } from \u0027@angular/material/checkbox\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { MatDialog } from \u0027@angular/material/dialog\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { Observable, ReplaySubject, Subject, throwError } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { finalize, first, map, mergeMap, takeUntil } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { IssueComment } from \u0027../../../core/models/comment.model\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { Conflict } from \u0027../../../core/models/conflict/conflict.model\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { Issue, STATUS } from \u0027../../../core/models/issue.model\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../core/services/issue.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { LabelService } from \u0027../../../core/services/label.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { PhaseService } from \u0027../../../core/services/phase.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../../issue-tables/issue-tables-columns\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { applySearchFilter } from \u0027../../issue-tables/search-filter\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { SUBMIT_BUTTON_TEXT } from \u0027../view-issue.component\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { ConflictDialogComponent } from \u0027./conflict-dialog/conflict-dialog.component\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  selector: \u0027app-new-team-response\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./new-team-response.component.html\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./new-team-response.component.css\u0027]"},{"lineNumber":23,"author":{"gitId":"-"},"content":"})"},{"lineNumber":24,"author":{"gitId":"-"},"content":"export class NewTeamResponseComponent implements OnInit, OnDestroy {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  newTeamResponseForm: FormGroup;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  teamMembers: string[];"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  duplicatedIssueList: Observable\u003cIssue[]\u003e;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  conflict: Conflict;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  searchFilterCtrl: FormControl \u003d new FormControl();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  filteredDuplicateIssueList: ReplaySubject\u003cIssue[]\u003e \u003d new ReplaySubject\u003cIssue[]\u003e(1);"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  isFormPending \u003d false;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  submitButtonText: string;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  @Input() issue: Issue;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  // A subject that will emit a signal when this component is being destroyed"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  private _onDestroy \u003d new Subject\u003cvoid\u003e();"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  constructor("},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public issueService: IssueService,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private formBuilder: FormBuilder,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public labelService: LabelService,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private errorHandlingService: ErrorHandlingService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private dialog: MatDialog,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private phaseService: PhaseService"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  ) {}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  ngOnInit() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    this.teamMembers \u003d this.issue.teamAssigned.teamMembers.map((member) \u003d\u003e {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      return member.loginId;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    this.duplicatedIssueList \u003d this.getDupIssueList();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Populate the filtered list with all the issues first"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    this.duplicatedIssueList.pipe(first()).subscribe((issues) \u003d\u003e this.filteredDuplicateIssueList.next(issues));"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    this.searchFilterCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe((_) \u003d\u003e this.filterIssues());"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    this.newTeamResponseForm \u003d this.formBuilder.group({"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      description: [\u0027\u0027],"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      severity: [this.issue.severity, Validators.required],"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      type: [this.issue.type, Validators.required],"},{"lineNumber":63,"author":{"gitId":"Eclipse-Dominator"},"content":"      response: [this.issue.response, Validators.required],"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      assignees: [this.issue.assignees.map((a) \u003d\u003e a.toLowerCase())],"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      duplicated: [false],"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      duplicateOf: [\u0027\u0027]"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    this.duplicated.valueChanges.subscribe((checked) \u003d\u003e {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      if (checked) {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.duplicateOf.setValidators(Validators.required);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.responseTag.setValidators(null);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.duplicateOf.setValidators(null);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.responseTag.setValidators(Validators.required);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      this.duplicateOf.updateValueAndValidity();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      this.responseTag.updateValueAndValidity();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.SUBMIT;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  private filterIssues(): void {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    this.changeFilter(this.duplicatedIssueList, this.searchFilterCtrl.value).subscribe((issues) \u003d\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      this.filteredDuplicateIssueList.next(issues)"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  private changeFilter(issuesObservable: Observable\u003cIssue[]\u003e, searchInputString): Observable\u003cIssue[]\u003e {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    return issuesObservable.pipe("},{"lineNumber":90,"author":{"gitId":"-"},"content":"      first(),"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      map((issues) \u003d\u003e {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return applySearchFilter(searchInputString, [TABLE_COLUMNS.ID, TABLE_COLUMNS.TITLE], this.issueService, issues);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  ngOnDestroy(): void {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    this._onDestroy.next(); // Emits the destroy signal"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    this._onDestroy.complete();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  submitNewTeamResponse(form: NgForm) {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    if (this.newTeamResponseForm.invalid) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    this.isFormPending \u003d true;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    const latestIssue \u003d this.getUpdatedIssue();"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    this.isSafeToSubmit()"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      .pipe("},{"lineNumber":111,"author":{"gitId":"-"},"content":"        mergeMap((isSaveToSubmit: boolean) \u003d\u003e {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"          const newCommentDescription \u003d latestIssue.createGithubTeamResponse();"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          if (isSaveToSubmit) {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return this.issueService.createTeamResponse(latestIssue);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"          } else if (this.submitButtonText \u003d\u003d\u003d SUBMIT_BUTTON_TEXT.OVERWRITE) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            const issueCommentId \u003d this.issueService.issues[this.issue.id].issueComment.id;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return this.issueService.updateIssueWithComment(latestIssue, \u003cIssueComment\u003e{"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              id: issueCommentId,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"              description: newCommentDescription"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":121,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            this.conflict \u003d new Conflict(\u0027 \u0027, this.issueService.issues[this.issue.id].teamResponse);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            this.submitButtonText \u003d SUBMIT_BUTTON_TEXT.OVERWRITE;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            this.viewUpdatedResponse();"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return throwError(\u0027A response has been submitted. Please verify the changes and try again.\u0027);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e (this.isFormPending \u003d false))"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      .subscribe("},{"lineNumber":131,"author":{"gitId":"-"},"content":"        (updatedIssue: Issue) \u003d\u003e {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"          // updatedIssue.issueComment \u003d updatedComment;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"          this.issueUpdated.emit(updatedIssue);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"          form.resetForm();"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        (error) \u003d\u003e {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"          this.errorHandlingService.handleError(error);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":143,"author":{"gitId":"-"},"content":"   * @return - Determines whether it is safe to submit a tester response."},{"lineNumber":144,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  isSafeToSubmit(): Observable\u003cboolean\u003e {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    return this.issueService.getLatestIssue(this.issue.id).pipe("},{"lineNumber":147,"author":{"gitId":"-"},"content":"      map((issue: Issue) \u003d\u003e {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return !issue.teamResponse;"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":154,"author":{"gitId":"-"},"content":"   * @return - an updated copy of issue with its updated value from the form."},{"lineNumber":155,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  getUpdatedIssue(): Issue {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    const clone \u003d this.issue.clone(this.phaseService.currentPhase);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    clone.duplicated \u003d this.duplicated.value;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    clone.duplicateOf \u003d this.duplicateOf.value;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    if (clone.duplicated) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      const duplicatedIssue \u003d this.issueService.issues[clone.duplicateOf];"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      clone.severity \u003d duplicatedIssue.severity;"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      clone.type \u003d duplicatedIssue.type;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      clone.assignees \u003d duplicatedIssue.assignees;"},{"lineNumber":165,"author":{"gitId":"Eclipse-Dominator"},"content":"      clone.response \u003d duplicatedIssue.response;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      clone.severity \u003d this.severity.value;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      clone.type \u003d this.type.value;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      clone.assignees \u003d this.assignees.value;"},{"lineNumber":170,"author":{"gitId":"Eclipse-Dominator"},"content":"      clone.response \u003d this.responseTag.value;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    clone.status \u003d STATUS.Done;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    clone.teamResponse \u003d Issue.updateTeamResponse(this.description.value);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return clone;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"  dupIssueOptionIsDisabled(issue: Issue): boolean {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return issue.duplicated || !!issue.duplicateOf;"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"  getDisabledDupOptionErrorText(issue: Issue): string {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    return this.dupIssueOptionIsDisabled(issue) ? \u0027Duplicate of #\u0027 + issue.duplicateOf : \u0027\u0027;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"  handleChangeOfDuplicateCheckbox(event: MatCheckboxChange) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    if (event.checked) {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      this.responseTag.setValue(\u0027\u0027);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      this.assignees.setValue([]);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      this.responseTag.markAsUntouched();"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      this.duplicateOf.setValue(\u0027\u0027);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      this.duplicateOf.markAsUntouched();"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":197,"author":{"gitId":"-"},"content":"   * Pops up a dialog that shows the updated team response that was submitted."},{"lineNumber":198,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  viewUpdatedResponse(): void {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    this.dialog.open(ConflictDialogComponent, {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      data: this.issueService.issues[this.issue.id],"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      autoFocus: false"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"  refresh(): void {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    const updatedIssue \u003d this.issueService.issues[this.issue.id];"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    this.issueUpdated.emit(updatedIssue);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"  private getDupIssueList(): Observable\u003cIssue[]\u003e {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    return this.issueService.issues$.pipe("},{"lineNumber":213,"author":{"gitId":"-"},"content":"      map((issues) \u003d\u003e {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        return issues.filter((issue) \u003d\u003e {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          return this.issue.id !\u003d\u003d issue.id;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"  get description() {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027description\u0027);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"  get severity() {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027severity\u0027);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"  get type() {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027type\u0027);"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"  get assignees() {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027assignees\u0027);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"  get responseTag() {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027responseTag\u0027);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"  get duplicated() {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027duplicated\u0027);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"  get duplicateOf() {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    return this.newTeamResponseForm.get(\u0027duplicateOf\u0027);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":3,"-":245}},{"path":"src/app/shared/view-issue/view-issue.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv *ngIf\u003d\"isIssueLoading\" class\u003d\"centralize\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cmat-spinner [diameter]\u003d\"47\"\u003e\u003c/mat-spinner\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cdiv *ngIf\u003d\"!isIssueLoading\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003capp-issue-title [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-title\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"column left\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003c!-- Tester\u0027s Post --\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003capp-issue-description"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        [isEditing]\u003d\"isIssueDescriptionEditing\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"        (changeEditState)\u003d\"updateDescriptionEditState($event)\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TESTER_POST)\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"        [issue]\u003d\"issue\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"        title\u003d\"Description of Issue\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"        (issueUpdated)\u003d\"updateIssue($event)\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/app-issue-description\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c!-- Team\u0027s Response --\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003capp-team-response"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TEAM_RESPONSE) \u0026\u0026 issue.teamResponse\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"        [issue]\u003d\"issue\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        [isEditing]\u003d\"isTeamResponseEditing\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"        (updateEditState)\u003d\"updateTeamResponseEditState($event)\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        (issueUpdated)\u003d\"updateIssue($event)\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/app-team-response\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c!-- New Team\u0027s Response --\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003capp-new-team-response *ngIf\u003d\"hasNoTeamResponse()\" [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e \u003c/app-new-team-response\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003c!-- Team Response Parsing Error --\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003capp-parse-error *ngIf\u003d\"hasTeamResponseParseError()\" [phase]\u003d\"\u0027Team Response\u0027\"\u003e \u003c/app-parse-error\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003c!-- Tester\u0027s Response --\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003capp-tester-response"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TESTER_RESPONSE) \u0026\u0026 issue.testerResponses \u0026\u0026 issue.testerResponses.length !\u003d\u003d 0\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        [issue]\u003d\"issue\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        [isEditing]\u003d\"isTesterResponseEditing\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        (updateEditState)\u003d\"updateTesterResponseEditState($event)\""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        (issueUpdated)\u003d\"updateIssue($event)\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/app-tester-response\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003c!-- Tester Response Parsing Error --\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      \u003capp-parse-error"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TESTER_RESPONSE) \u0026\u0026 issue.testerResponseError\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        [phase]\u003d\"\u0027Tester Response\u0027\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      \u003c/app-parse-error\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003c!-- Team Accepted --\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003capp-team-accepted *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TESTER_RESPONSE) \u0026\u0026 issue.teamAccepted\"\u003e \u003c/app-team-accepted\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"      \u003c!-- Issue Disputes For Tutor\u0027s Response --\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003capp-issue-dispute"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.ISSUE_DISPUTE)\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        [issue]\u003d\"issue\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        (issueUpdated)\u003d\"updateIssue($event)\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        [isEditing]\u003d\"isTutorResponseEditing\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        (updateEditState)\u003d\"updateTutorResponseEditState($event)\""},{"lineNumber":66,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/app-issue-dispute\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"column right\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      \u003cdiv"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        *ngIf\u003d\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"          (this.isComponentVisible(issueComponentsEnum.NEW_TEAM_RESPONSE) \u0026\u0026 issue.teamResponse) ||"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          (this.isComponentVisible(issueComponentsEnum.TESTER_RESPONSE) \u0026\u0026 this.userService.currentUser.role \u003d\u003d\u003d userRole.Student) ||"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          this.isComponentVisible(issueComponentsEnum.ISSUE_DISPUTE) ||"},{"lineNumber":76,"author":{"gitId":"-"},"content":"          !this.isComponentVisible(issueComponentsEnum.TEAM_RESPONSE)"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \""},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        \u003c!-- Severity Label --\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        \u003capp-issue-label"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.SEVERITY_LABEL)\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"          [issue]\u003d\"issue\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"          attributeName\u003d\"severity\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"          (issueUpdated)\u003d\"updateIssue($event)\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003e\u003c/app-issue-label\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003c!-- Bug Type Label --\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TYPE_LABEL)\"\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"          \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"          \u003capp-issue-label [issue]\u003d\"issue\" attributeName\u003d\"type\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        \u003c!-- Response Label --\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.RESPONSE_LABEL)\"\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"          \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":96,"author":{"gitId":"Eclipse-Dominator"},"content":"          \u003capp-issue-label [issue]\u003d\"issue\" attributeName\u003d\"response\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003c!-- Assignee to this Issue --\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.ASSIGNEE)\"\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"          \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          \u003capp-assignee-component [issue]\u003d\"issue\" [team]\u003d\"issue.teamAssigned\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-assignee-component\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        \u003c!-- Duplicate information --\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        \u003cdiv"},{"lineNumber":107,"author":{"gitId":"-"},"content":"          *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.DUPLICATE) \u0026\u0026 (issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0\""},{"lineNumber":108,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"          \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          \u003capp-duplicated-issues-component [issue]\u003d\"issue\"\u003e\u003c/app-duplicated-issues-component\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          \u003cbr /\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        \u003cdiv"},{"lineNumber":114,"author":{"gitId":"-"},"content":"          *ngIf\u003d\""},{"lineNumber":115,"author":{"gitId":"-"},"content":"            this.isComponentVisible(issueComponentsEnum.DUPLICATE) \u0026\u0026"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            (issue.duplicateOf || (issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0)"},{"lineNumber":117,"author":{"gitId":"-"},"content":"          \""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"          \u003capp-duplicate-of-component [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-duplicate-of-component\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        \u003c!-- Faulty issue warning --\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        \u003cdiv"},{"lineNumber":125,"author":{"gitId":"-"},"content":"          style\u003d\"margin-top: 15px; color: red\""},{"lineNumber":126,"author":{"gitId":"-"},"content":"          *ngIf\u003d\""},{"lineNumber":127,"author":{"gitId":"-"},"content":"            this.isComponentVisible(issueComponentsEnum.DUPLICATE) \u0026\u0026"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            (issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0 \u0026\u0026"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            (issue.duplicateOf || (issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0)"},{"lineNumber":130,"author":{"gitId":"-"},"content":"          \""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        \u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"          * Need your resolution. An issue cannot have both duplicated issues and duplicated status."},{"lineNumber":133,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        \u003c!-- Unsure checkbox --\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.UNSURE_CHECKBOX)\"\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"          \u003cmat-divider\u003e\u003c/mat-divider\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"          \u003capp-unsure-checkbox [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-unsure-checkbox\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"Eclipse-Dominator":1,"-":142}},{"path":"tests/app/shared/issue-tables/search-filter.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Issue } from \u0027../../../../src/app/core/models/issue.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Team } from \u0027../../../../src/app/core/models/team.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { IssueService } from \u0027../../../../src/app/core/services/issue.service\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { TABLE_COLUMNS } from \u0027../../../../src/app/shared/issue-tables/issue-tables-columns\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { applySearchFilter } from \u0027../../../../src/app/shared/issue-tables/search-filter\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { USER_SHUMING } from \u0027../../../constants/data.constants\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  DUPLICATED_ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  ISSUE_WITH_ASSIGNEES,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  ISSUE_WITH_EMPTY_DESCRIPTION_LOW_SEVERITY"},{"lineNumber":13,"author":{"gitId":"-"},"content":"} from \u0027../../../constants/githubissue.constants\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"describe(\u0027search-filter\u0027, () \u003d\u003e {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  describe(\u0027applySearchFilter()\u0027, () \u003d\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    const dummyTeam: Team \u003d new Team({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      id: \u0027dummyId\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      teamMembers: []"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    let searchKey: string;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    const mediumSeverityIssueWithResponse: Issue \u003d Issue.createPhaseTeamResponseIssue(ISSUE_WITH_EMPTY_DESCRIPTION, dummyTeam);"},{"lineNumber":23,"author":{"gitId":"Eclipse-Dominator"},"content":"    mediumSeverityIssueWithResponse.response \u003d \u0027Accepted\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    const mediumSeverityIssueWithAssigneee: Issue \u003d Issue.createPhaseTeamResponseIssue(ISSUE_WITH_ASSIGNEES, dummyTeam);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    const lowSeverityFeatureFlawIssue: Issue \u003d Issue.createPhaseTeamResponseIssue(ISSUE_WITH_EMPTY_DESCRIPTION_LOW_SEVERITY, dummyTeam);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    const highSeverityDocumentationBugIssue: Issue \u003d Issue.createPhaseTeamResponseIssue("},{"lineNumber":27,"author":{"gitId":"-"},"content":"      ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      dummyTeam"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    const duplicatedIssue: Issue \u003d Issue.createPhaseTeamResponseIssue(DUPLICATED_ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY, dummyTeam);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    duplicatedIssue.duplicateOf \u003d highSeverityDocumentationBugIssue.id;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    const issuesList: Issue[] \u003d ["},{"lineNumber":34,"author":{"gitId":"-"},"content":"      mediumSeverityIssueWithResponse,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      mediumSeverityIssueWithAssigneee,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      lowSeverityFeatureFlawIssue,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      highSeverityDocumentationBugIssue"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    const displayedColumns: string[] \u003d ["},{"lineNumber":40,"author":{"gitId":"-"},"content":"      TABLE_COLUMNS.ID,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      TABLE_COLUMNS.TITLE,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      TABLE_COLUMNS.TYPE,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      TABLE_COLUMNS.SEVERITY,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      TABLE_COLUMNS.RESPONSE,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      TABLE_COLUMNS.ASSIGNEE,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      TABLE_COLUMNS.DUPLICATED_ISSUES"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    const issueService: IssueService \u003d new IssueService(null, null, null, null, null, null);"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    beforeEach(() \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      issueService.updateLocalStore(mediumSeverityIssueWithResponse);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      issueService.updateLocalStore(mediumSeverityIssueWithAssigneee);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      issueService.updateLocalStore(lowSeverityFeatureFlawIssue);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      issueService.updateLocalStore(highSeverityDocumentationBugIssue);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      issueService.updateLocalStore(duplicatedIssue);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    it(\u0027can filter for issues which are assigned to a specific user\u0027, () \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      searchKey \u003d USER_SHUMING.loginId;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      expect(applySearchFilter(searchKey, displayedColumns, issueService, issuesList)).toEqual([mediumSeverityIssueWithAssigneee]);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    it(\u0027can filter for an issue by the id of its duplicate issues\u0027, () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      searchKey \u003d duplicatedIssue.id.toString();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      expect(applySearchFilter(searchKey, displayedColumns, issueService, issuesList)).toEqual([highSeverityDocumentationBugIssue]);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    it(\u0027can filter for issues that contain the search key in any other column\u0027, () \u003d\u003e {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      // Search by id of issue"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      searchKey \u003d mediumSeverityIssueWithResponse.id.toString();"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      expect(applySearchFilter(searchKey, displayedColumns, issueService, issuesList)).toEqual([mediumSeverityIssueWithResponse]);"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"      // Search by title of issue"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      searchKey \u003d mediumSeverityIssueWithAssigneee.title;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      expect(applySearchFilter(searchKey, displayedColumns, issueService, issuesList)).toEqual([mediumSeverityIssueWithAssigneee]);"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"      // Search by type of issue"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      searchKey \u003d highSeverityDocumentationBugIssue.type;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      expect(applySearchFilter(searchKey, displayedColumns, issueService, issuesList)).toEqual([highSeverityDocumentationBugIssue]);"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"      // Search by severity of issue"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      searchKey \u003d lowSeverityFeatureFlawIssue.severity;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      expect(applySearchFilter(searchKey, displayedColumns, issueService, issuesList)).toEqual([lowSeverityFeatureFlawIssue]);"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"      // Search by response of issue"},{"lineNumber":86,"author":{"gitId":"Eclipse-Dominator"},"content":"      searchKey \u003d mediumSeverityIssueWithResponse.response;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      expect(applySearchFilter(searchKey, displayedColumns, issueService, issuesList)).toEqual([mediumSeverityIssueWithResponse]);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":90,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"Eclipse-Dominator":2,"-":88}},{"path":"tests/constants/githubcomment.constants.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { GithubComment } from \u0027../../src/app/core/models/github/github-comment.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"export const EMPTY_TEAM_RESPONSE: GithubComment \u003d {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  body: \"# Team\u0027s Response\\n\" + \u0027\\n\u0027 + \u0027 ## Duplicate status (if any):\\n\u0027 + \u0027--\u0027,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  created_at: \u00272020-02-16T18:31:38Z\u0027,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  id: 586737495,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  issue_url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/91\u0027,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  updated_at: \u00272020-03-02T12:50:02Z\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/comments/586737495\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  user: {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    login: \u0027testathorStudent\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    id: 46639862,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    avatar_url: \u0027https://avatars3.githubusercontent.com/u/46639862?v\u003d4\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    url: \u0027https://api.github.com/users/testathorStudent\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":16,"author":{"gitId":"-"},"content":"};"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"// Type and severity disagreeement"},{"lineNumber":19,"author":{"gitId":"-"},"content":"export const TEAM_RESPONSE_MULTIPLE_DISAGREEMENT \u003d {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  body:"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u0027[IMPORTANT!: Please do not edit or reply to this comment using the GitHub UI. You can respond to it using CATcher during the next phase of the PE]\\n\\n\u0027 +"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"# Team\u0027s Response\\n\" +"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u0027This is a dummy team response comment: \u0027 +"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u0027Thanks for the feedback\\n\\n\u0027 +"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u0027# Items for the Tester to Verify\\n\\n\u0027 +"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u0027## :question: Issue severity\\n\\n\u0027 +"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u0027Team chose [`severity.Low`]\\n\u0027 +"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u0027Originally [`severity.High`]\\n\\n\u0027 +"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u0027- [ ] I disagree\\n\\n\u0027 +"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u0027**Reason for disagreement:** [replace this with your reason]\\n\\n\u0027 +"},{"lineNumber":31,"author":{"gitId":"cheehongw"},"content":"    \u0027\u003ccatcher-end-of-segment\u003e\u003chr\u003e\\n\\n\u0027 +"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u0027## :question: Issue type\\n\\n\u0027 +"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u0027Team chose [`type.DocumentationBug`]\\n\u0027 +"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u0027Originally [`type.FunctionalityBug`]\\n\\n\u0027 +"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u0027- [ ] I disagree\\n\\n\u0027 +"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u0027**Reason for disagreement:** [replace this with your reason]\\n\\n\u0027 +"},{"lineNumber":37,"author":{"gitId":"cheehongw"},"content":"    \u0027\u003ccatcher-end-of-segment\u003e\u003chr\u003e\u0027,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  created_at: \u00272021-06-29T17:15:11Z\u0027,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  id: 870774171,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  updated_at: \u00272021-06-29T17:15:11Z\u0027"},{"lineNumber":41,"author":{"gitId":"-"},"content":"} as GithubComment;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"export const PENDING_TUTOR_MODERATION: GithubComment \u003d {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  body:"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u0027# Tutor Moderation\\n\\n\u0027 +"},{"lineNumber":46,"author":{"gitId":"cheehongw"},"content":"    \u0027## :question: Issue Type\\n\\n- [x] Done\\n\\ntest\\n\\n\u003ccatcher-end-of-segment\u003e\u003chr\u003e\\n\u0027 +"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u0027## :question: Issue Severity\\n\\n- [ ] Done\\n\\n\u0027 +"},{"lineNumber":48,"author":{"gitId":"cheehongw"},"content":"    \u0027[replace this with your explanation]\\n\\n\u003ccatcher-end-of-segment\u003e\u003chr\u003e\\n\u0027 +"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u0027## :question: Not Related Question\\n\\n- [ ] Done\\n\\n\u0027 +"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"    \u0027[replace this with your explanation]\\n\\n\u003ccatcher-end-of-segment\u003e\u003chr\u003e\\n\u0027,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  created_at: \u00272020-08-15T06:39:24Z\u0027,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  id: 674357972,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  issue_url: \u0027https://api.github.com/repos/CATcher-org/pe-evaluation/issues/26\u0027,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  updated_at: \u00272020-08-15T06:39:40Z\u0027,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-evaluation/issues/comments/674357972\u0027,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  user: {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    login: \u0027testathorTutor\u0027,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    id: 46640218,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    avatar_url: \u0027https://avatars2.githubusercontent.com/u/46640218?v\u003d4\u0027,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    url: \u0027https://api.github.com/users/testathorTutor\u0027"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"-":57,"cheehongw":5}},{"path":"tests/constants/githubissue.constants.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { IssueState } from \u0027../../graphql/graphql-types\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { GithubIssue } from \u0027../../src/app/core/models/github/github-issue.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027../../src/app/core/models/github/github-label.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { USER_ANUBHAV, USER_SHUMING } from \u0027./data.constants\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { EMPTY_TEAM_RESPONSE, PENDING_TUTOR_MODERATION } from \u0027./githubcomment.constants\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_DOCUMENTATION_BUG,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_FEATURE_FLAW,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_FUNCTIONALITY_BUG,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_HIGH_SEVERITY,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_LOW_SEVERITY,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_MEDIUM_SEVERITY,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_TEAM_LABEL,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  GITHUB_LABEL_TUTORIAL_LABEL"},{"lineNumber":15,"author":{"gitId":"-"},"content":"} from \u0027./githublabel.constants\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"const randomId: () \u003d\u003e string \u003d () \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  return Math.floor(Math.random() * 1000000000).toString();"},{"lineNumber":19,"author":{"gitId":"-"},"content":"};"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"const randomIssueNumber: () \u003d\u003e number \u003d () \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  return Math.round(Math.random() * 1000);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"};"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"const randomISODate: (startDate?: Date, endDate?: Date) \u003d\u003e string \u003d ("},{"lineNumber":26,"author":{"gitId":"-"},"content":"  startDate: Date \u003d new Date(2020, 1, 1),"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  endDate: Date \u003d new Date()"},{"lineNumber":28,"author":{"gitId":"-"},"content":") \u003d\u003e {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  return new Date(startDate.getTime() + Math.random() * (startDate.getTime() - endDate.getTime())).toISOString();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"};"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"const USER_ANUBHAV_DETAILS \u003d {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  login: USER_ANUBHAV.loginId,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  avatar_url: \u0027https://avatars1.githubusercontent.com/u/35621759?v\u003d4\u0027,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/users/anubh-v\u0027"},{"lineNumber":36,"author":{"gitId":"-"},"content":"};"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"const USER_ANUBHAV_ASSIGNEE_DETAILS \u003d {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  login: USER_ANUBHAV.loginId,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  id: 35621759,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/users/anubh-v\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"};"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"const USER_SHUMING_DETAILS \u003d {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  login: USER_SHUMING.loginId,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  avatar_url: \u0027https://avatars0.githubusercontent.com/u/43642522?v\u003d4\u0027,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/users/geshuming\u0027"},{"lineNumber":48,"author":{"gitId":"-"},"content":"};"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"const USER_SHUMING_ASSIGNEE_DETAILS \u003d {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  login: \u0027geshuming\u0027,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  id: 43642522,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/users/geshuming\u0027"},{"lineNumber":54,"author":{"gitId":"-"},"content":"};"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"const ISSUE_BODY \u003d"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u0027# Issue Description\\n{original issue description}\\n\u0027 +"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \"# Team\u0027s Response\\n{team\u0027s response}\\n # Disputes\\n\\n\" +"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \"## :question: Issue Type\\n\\n### Team says:\\r\\n{the team\u0027s action that is being disputed}\\r\\n\\r\\n\" +"},{"lineNumber":60,"author":{"gitId":"cheehongw"},"content":"  \"### Tester says:\\r\\n{tester\u0027s objection}\\n\\n\u003ccatcher-end-of-segment\u003e\u003chr\u003e\\n## :question: Issue Severity\\n\\n\" +"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \"### Team says:\\r\\n{the team\u0027s action that is being disputed}\\r\\n\\r\\n\" +"},{"lineNumber":62,"author":{"gitId":"cheehongw"},"content":"  \"### Tester says:\\r\\n{tester\u0027s objection}\\n\\n\u003ccatcher-end-of-segment\u003e\u003chr\u003e\\n## :question: Not Related Question\\n\\n\" +"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \"### Team says:\\r\\n{the team\u0027s action that is being disputed}\\r\\n\\r\\n\" +"},{"lineNumber":64,"author":{"gitId":"cheehongw"},"content":"  \"### Tester says:\\r\\n{tester\u0027s objection}\\n\\n\u003ccatcher-end-of-segment\u003e\u003chr\u003e\\n\\n\";"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"export const ISSUE_WITH_EMPTY_DESCRIPTION \u003d new GithubIssue({"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  id: \u0027574085971\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  number: 92,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  assignees: [],"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  comments: [],"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  body: \u0027\u0027,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  created_at: \u00272020-03-02T16:19:02Z\u0027,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_FUNCTIONALITY_BUG, GITHUB_LABEL_MEDIUM_SEVERITY],"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  title: \u0027App starts to lag when given large amount of input\u0027,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  updated_at: \u00272020-03-13T13:37:32Z\u0027,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/92\u0027,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  user: USER_ANUBHAV_DETAILS"},{"lineNumber":79,"author":{"gitId":"-"},"content":"});"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"export const ISSUE_WITH_EMPTY_DESCRIPTION_LOW_SEVERITY \u003d new GithubIssue({"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  id: \u0027384830567\u0027,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  number: 130,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  assignees: [],"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  comments: [],"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  body: \u0027\u0027,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  created_at: \u00272020-03-02T16:19:02Z\u0027,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_FEATURE_FLAW, GITHUB_LABEL_LOW_SEVERITY],"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  title: \u0027App is sometimes slow\u0027,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  updated_at: \u00272020-03-13T13:37:32Z\u0027,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/130\u0027,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  user: USER_ANUBHAV_DETAILS"},{"lineNumber":94,"author":{"gitId":"-"},"content":"});"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"export const ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY \u003d new GithubIssue({"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  id: \u0027573957398\u0027,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  number: 32,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  assignees: [],"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  comments: [],"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  body: \u0027\u0027,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  created_at: \u00272010-03-12T19:12:02Z\u0027,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_DOCUMENTATION_BUG, GITHUB_LABEL_HIGH_SEVERITY],"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  title: \u0027Too many typos\u0027,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  updated_at: \u00272012-03-12T19:12:02Z\u0027,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/130\u0027,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  user: USER_ANUBHAV_DETAILS"},{"lineNumber":109,"author":{"gitId":"-"},"content":"});"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"export const DUPLICATED_ISSUE_WITH_EMPTY_DESCRIPTION_HIGH_SEVERITY \u003d new GithubIssue({"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  id: \u0027573957399\u0027,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  number: 33,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  assignees: [],"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  comments: [],"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  body: \u0027\u0027,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  created_at: \u00272010-04-12T19:12:02Z\u0027,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_DOCUMENTATION_BUG, GITHUB_LABEL_HIGH_SEVERITY],"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  title: \u0027Too many typos 2\u0027,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  updated_at: \u00272012-04-12T19:12:02Z\u0027,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/130\u0027,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  user: USER_ANUBHAV_DETAILS"},{"lineNumber":124,"author":{"gitId":"-"},"content":"});"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"export const ISSUE_WITH_ASSIGNEES \u003d new GithubIssue({"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  id: \u0027551732011\u0027,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  number: 91,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  assignees: [USER_ANUBHAV_ASSIGNEE_DETAILS, USER_SHUMING_ASSIGNEE_DETAILS],"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  body: \u0027Screen freezes every few minutes\u0027,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  created_at: \u00272020-01-18T07:01:45Z\u0027,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_FUNCTIONALITY_BUG, GITHUB_LABEL_MEDIUM_SEVERITY],"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  title: \u0027Screen freezes\u0027,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  updated_at: \u00272020-03-02T12:50:02Z\u0027,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/91\u0027,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  user: USER_ANUBHAV_DETAILS,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  comments: [EMPTY_TEAM_RESPONSE]"},{"lineNumber":139,"author":{"gitId":"-"},"content":"});"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"export const generateIssueWithRandomData: () \u003d\u003e GithubIssue \u003d () \u003d\u003e {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  const created_and_updated_date: string \u003d randomISODate();"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  const issueNumber: number \u003d randomIssueNumber();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  const severityLabels: GithubLabel[] \u003d [GITHUB_LABEL_LOW_SEVERITY, GITHUB_LABEL_MEDIUM_SEVERITY, GITHUB_LABEL_HIGH_SEVERITY];"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  const typeLabels: GithubLabel[] \u003d [GITHUB_LABEL_FUNCTIONALITY_BUG, GITHUB_LABEL_FEATURE_FLAW, GITHUB_LABEL_DOCUMENTATION_BUG];"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  return new GithubIssue({"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    id: randomId(),"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    number: issueNumber,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    assignees: [],"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    comments: [],"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    body: `Issue No.: ${issueNumber}\\nSample Content.`,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    created_at: created_and_updated_date,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, typeLabels[issueNumber % 3], severityLabels[issueNumber % 3]],"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    state: IssueState.Open,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    title: `Random Issue: ${issueNumber}`,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    updated_at: created_and_updated_date,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    url: `https://api.github.com/repos/CATcher-org/pe-results/issues/${issueNumber}`,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    user: USER_ANUBHAV_DETAILS"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":160,"author":{"gitId":"-"},"content":"};"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"export const ISSUE_PENDING_MODERATION \u003d new GithubIssue({"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  id: \u0027574674360\u0027,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  number: 26,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  assignees: [USER_SHUMING_ASSIGNEE_DETAILS],"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  body: ISSUE_BODY,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  created_at: \u00272020-03-03T13:38:32Z\u0027,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_FUNCTIONALITY_BUG, GITHUB_LABEL_MEDIUM_SEVERITY],"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  title: \u0027Basic Issue, Three Disputes, Unsure\u0027,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  updated_at: \u00272020-08-15T06:39:40Z\u0027,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/26\u0027,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  user: USER_SHUMING_DETAILS,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  comments: [PENDING_TUTOR_MODERATION]"},{"lineNumber":175,"author":{"gitId":"-"},"content":"});"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"export const ISSUE_PENDING_MODERATION_HIGH_SEVERITY_FEATURE_FLAW \u003d new GithubIssue({"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  id: \u0027239538360\u0027,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  number: 93,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  assignees: [USER_SHUMING_ASSIGNEE_DETAILS],"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  body: ISSUE_BODY,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  created_at: \u00272020-10-14T10:28:32Z\u0027,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_FEATURE_FLAW, GITHUB_LABEL_HIGH_SEVERITY],"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  title: \u0027Redundant buggy feature\u0027,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  updated_at: \u00272020-11-25T13:19:40Z\u0027,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/26\u0027,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  user: USER_SHUMING_DETAILS,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  comments: [PENDING_TUTOR_MODERATION]"},{"lineNumber":190,"author":{"gitId":"-"},"content":"});"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"export const ISSUE_PENDING_MODERATION_LOW_SEVERITY_DOCUMENTATION_BUG \u003d new GithubIssue({"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  id: \u0027384756360\u0027,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  number: 6,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  assignees: [USER_SHUMING_ASSIGNEE_DETAILS],"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  body: ISSUE_BODY,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  created_at: \u00272020-03-26T09:08:12Z\u0027,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  labels: [GITHUB_LABEL_TEAM_LABEL, GITHUB_LABEL_TUTORIAL_LABEL, GITHUB_LABEL_DOCUMENTATION_BUG, GITHUB_LABEL_LOW_SEVERITY],"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  state: IssueState.Open,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  title: \u0027Documentation bug, too many typos\u0027,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  updated_at: \u00272020-11-10T16:59:40Z\u0027,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  url: \u0027https://api.github.com/repos/CATcher-org/pe-results/issues/26\u0027,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  user: USER_SHUMING_DETAILS,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  comments: [PENDING_TUTOR_MODERATION]"},{"lineNumber":205,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":202,"cheehongw":3}},{"path":"tests/model/templates/sections/issue-dispute-section-parser.model.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { IssueDisputeSectionParser } from \u0027../../../../src/app/core/models/templates/section-parsers/issue-dispute-section-parser.model\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"const TYPE_DISPUTE \u003d"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u0027## :question: Issue Type\\n\\n\u0027 +"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u0027### Team says:\\n\\n\u0027 +"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \"{the team\u0027s action that is being disputed}\\n\\n\" +"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u0027### Tester says:\\n\\n\u0027 +"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \"{tester\u0027s objection}\\n\\n\" +"},{"lineNumber":9,"author":{"gitId":"cheehongw"},"content":"  \u0027\u003ccatcher-end-of-segment\u003e\u003chr\u003e\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"const EXPECTED_TITLE \u003d \u0027Issue Type\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"const EXPECTED_DESCRIPTION \u003d"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u0027### Team says:\\n\\n\u0027 + \"{the team\u0027s action that is being disputed}\\n\\n\" + \u0027### Tester says:\\n\\n\u0027 + \"{tester\u0027s objection}\";"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"describe(\u0027IssueDisputeSectionParser\u0027, () \u003d\u003e {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  it(\u0027parses type dispute correctly\u0027, () \u003d\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    const result \u003d IssueDisputeSectionParser.run(TYPE_DISPUTE).result;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    expect(result.title).toBe(EXPECTED_TITLE);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    expect(result.description).toBe(EXPECTED_DESCRIPTION);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":22,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":21,"cheehongw":1}},{"path":"tests/model/templates/sections/moderation-section-parser.model.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  DoneCheckboxParser,"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  ModerationSectionParser"},{"lineNumber":4,"author":{"gitId":"-"},"content":"} from \u0027../../../../src/app/core/models/templates/section-parsers/moderation-section-parser.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"cheehongw"},"content":"const TYPE_DISPUTE \u003d"},{"lineNumber":7,"author":{"gitId":"cheehongw"},"content":"  \u0027## :question: Issue Type\\n\\n\u0027 + \u0027- [ ] Done\\n\\n\u0027 + \u0027[replace this with your explanation]\\n\\n\u0027 + \u0027\u003ccatcher-end-of-segment\u003e\u003chr\u003e\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"const EMPTY_DONE_CHECKBOX \u003d \u0027- [ ] Done\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"const FILLED_DONE_CHECKBOX \u003d \u0027- [x] Done\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"const EXPECTED_TITLE \u003d \u0027Issue Type\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"const EXPECTED_DESCRIPTION \u003d \u0027- [ ] Done\\n\\n[replace this with your explanation]\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"const EXPECTED_TUTOR_RESPONSE \u003d \u0027[replace this with your explanation]\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"describe(\u0027DoneCheckboxParser\u0027, () \u003d\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  it(\u0027parses empty checkbox correctly\u0027, () \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    const result \u003d DoneCheckboxParser.run(EMPTY_DONE_CHECKBOX).result;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    expect(result).toBe(false);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  it(\u0027parses filled checkbox correctly\u0027, () \u003d\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    const result \u003d DoneCheckboxParser.run(FILLED_DONE_CHECKBOX).result;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    expect(result).toBe(true);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":27,"author":{"gitId":"-"},"content":"});"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"describe(\u0027ModerationSectionParser\u0027, () \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  it(\u0027parses type dispute correctly\u0027, () \u003d\u003e {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    const result \u003d ModerationSectionParser.run(TYPE_DISPUTE).result;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    expect(result.title).toBe(EXPECTED_TITLE);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    expect(result.description).toBe(EXPECTED_DESCRIPTION);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    expect(result.todo.isChecked).toBe(false);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    expect(result.tutorResponse).toBe(EXPECTED_TUTOR_RESPONSE);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":38,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":36,"cheehongw":2}},{"path":"tests/model/templates/sections/tester-response-section-parser.model.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  DisagreeCheckboxParser,"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  TesterResponseSectionParser"},{"lineNumber":4,"author":{"gitId":"-"},"content":"} from \u0027../../../../src/app/core/models/templates/section-parsers/tester-response-section-parser.model\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"const EMPTY_DISAGREE_CHECKBOX \u003d \u0027- [ ] I disagree\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"const FILLED_DISAGREE_CHECKBOX \u003d \u0027- [x] I disagree\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"const DEFAULT_DISAGREEMENT_REASON \u003d \u0027[replace this with your reason]\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"const USER_DISAGREEMENT_REASON \u003d \u0027I disagree!\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"const RESPONSE_TITLE \u003d \u0027response\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"const RESPONSE_DESCRIPTION \u003d \u0027Team chose [`response.Rejected`]\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"const RESPONSE_TEAM_CHOSE \u003d \u0027Rejected\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"const SEVERITY_TITLE \u003d \u0027severity\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"const SEVERITY_DESCRIPTION \u003d \u0027Team chose [`severity.Low`]\\nOriginally [`severity.High`]\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"const SEVERITY_TEAM_CHOSE \u003d \u0027Low\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"const SEVERITY_TESTER_CHOSE \u003d \u0027High\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"const TYPE_TITLE \u003d \u0027type\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"const TYPE_DESCRIPTION \u003d \u0027Team chose [`type.DocumentationBug`]\\nOriginally [`type.FunctionalityBug`]\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"const TYPE_TEAM_CHOSE \u003d \u0027DocumentationBug\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"const TYPE_TESTER_CHOSE \u003d \u0027FunctionalityBug\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"const DUPLICATE_TITLE \u003d \u0027duplicate status\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"const DUPLICATE_DESCRIPTION \u003d"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  \"Team chose to mark this issue as a duplicate of another issue (as explained in the _**Team\u0027s response**_ above)\";"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"export const RESPONSE_DISAGREEMENT \u003d"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u0027## :question: Issue response\\n\\n\u0027 +"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  \u0027Team chose [`response.Rejected`]\\n\\n\u0027 +"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u0027- [ ] I disagree\\n\\n\u0027 +"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u0027**Reason for disagreement:** [replace this with your reason]\\n\\n\u0027 +"},{"lineNumber":34,"author":{"gitId":"cheehongw"},"content":"  \u0027\u003ccatcher-end-of-segment\u003e\u003chr\u003e\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"export const SEVERITY_DISAGREEMENT \u003d"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u0027## :question: Issue severity\\n\\n\u0027 +"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u0027Team chose [`severity.Low`]\\n\u0027 +"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u0027Originally [`severity.High`]\\n\\n\u0027 +"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u0027- [x] I disagree\\n\\n\u0027 +"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u0027**Reason for disagreement:** I disagree!\\n\\n\u0027 +"},{"lineNumber":42,"author":{"gitId":"cheehongw"},"content":"  \u0027\u003ccatcher-end-of-segment\u003e\u003chr\u003e\u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"export const TYPE_DISAGREEMENT \u003d"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u0027## :question: Issue type\\n\\n\u0027 +"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \u0027Team chose [`type.DocumentationBug`]\\n\u0027 +"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u0027Originally [`type.FunctionalityBug`]\\n\\n\u0027 +"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u0027- [ ] I disagree\\n\\n\u0027 +"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u0027**Reason for disagreement:** [replace this with your reason]\\n\\n\u0027 +"},{"lineNumber":50,"author":{"gitId":"cheehongw"},"content":"  \u0027\u003ccatcher-end-of-segment\u003e\u003chr\u003e\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"export const DUPLICATE_DISAGREEMENT \u003d"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u0027## :question: Issue duplicate status\\n\\n\u0027 +"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \"Team chose to mark this issue as a duplicate of another issue (as explained in the _**Team\u0027s response**_ above)\\n\\n\" +"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u0027- [ ] I disagree\\n\\n\u0027 +"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u0027**Reason for disagreement:** [replace this with your reason]\\n\\n\u0027 +"},{"lineNumber":57,"author":{"gitId":"cheehongw"},"content":"  \u0027\u003ccatcher-end-of-segment\u003e\u003chr\u003e\u0027;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"describe(\u0027DisagreeCheckboxParser\u0027, () \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  it(\u0027parses empty checkbox correctly\u0027, () \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    const result \u003d DisagreeCheckboxParser.run(EMPTY_DISAGREE_CHECKBOX).result;"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    expect(result).toBe(false);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  it(\u0027parses filled checkbox correctly\u0027, () \u003d\u003e {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    const result \u003d DisagreeCheckboxParser.run(FILLED_DISAGREE_CHECKBOX).result;"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    expect(result).toBe(true);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":70,"author":{"gitId":"-"},"content":"});"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"describe(\u0027TesterResponseSectionParser\u0027, () \u003d\u003e {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  it(\u0027parses response disagreement correctly\u0027, () \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    const result \u003d TesterResponseSectionParser.run(RESPONSE_DISAGREEMENT).result;"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    expect(result.title).toBe(RESPONSE_TITLE);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    expect(result.description).toBe(RESPONSE_DESCRIPTION);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    expect(result.teamChose).toBe(RESPONSE_TEAM_CHOSE);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    expect(result.testerChose).toBe(null);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    expect(result.disagreeCheckboxValue).toBe(false);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    expect(result.reasonForDisagreement).toBe(DEFAULT_DISAGREEMENT_REASON);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  it(\u0027parses severity disagreement correctly\u0027, () \u003d\u003e {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    const result \u003d TesterResponseSectionParser.run(SEVERITY_DISAGREEMENT).result;"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    expect(result.title).toBe(SEVERITY_TITLE);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    expect(result.description).toBe(SEVERITY_DESCRIPTION);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    expect(result.teamChose).toBe(SEVERITY_TEAM_CHOSE);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    expect(result.testerChose).toBe(SEVERITY_TESTER_CHOSE);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    expect(result.disagreeCheckboxValue).toBe(true);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    expect(result.reasonForDisagreement).toBe(USER_DISAGREEMENT_REASON);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  it(\u0027parses type disagreement correctly\u0027, () \u003d\u003e {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    const result \u003d TesterResponseSectionParser.run(TYPE_DISAGREEMENT).result;"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    expect(result.title).toBe(TYPE_TITLE);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    expect(result.description).toBe(TYPE_DESCRIPTION);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    expect(result.teamChose).toBe(TYPE_TEAM_CHOSE);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    expect(result.testerChose).toBe(TYPE_TESTER_CHOSE);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    expect(result.disagreeCheckboxValue).toBe(false);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    expect(result.reasonForDisagreement).toBe(DEFAULT_DISAGREEMENT_REASON);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  it(\u0027parses duplicate status disagreement correctly\u0027, () \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    const result \u003d TesterResponseSectionParser.run(DUPLICATE_DISAGREEMENT).result;"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    expect(result.title).toBe(DUPLICATE_TITLE);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    expect(result.description).toBe(DUPLICATE_DESCRIPTION);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    expect(result.teamChose).toBe(null);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    expect(result.testerChose).toBe(null);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    expect(result.disagreeCheckboxValue).toBe(false);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    expect(result.reasonForDisagreement).toBe(DEFAULT_DISAGREEMENT_REASON);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":113,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"-":109,"cheehongw":4}},{"path":"tests/services/label.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { GithubLabel } from \u0027../../src/app/core/models/github/github-label.model\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { Label } from \u0027../../src/app/core/models/label.model\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { LabelService, LABEL_DEFINITIONS } from \u0027../../src/app/core/services/label.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import * as GithubLabelConstant from \u0027../constants/githublabel.constants\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import * as LabelConstant from \u0027../constants/label.constants\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"let labelService: LabelService;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"let githubService: any;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"describe(\u0027LabelService\u0027, () \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    githubService \u003d jasmine.createSpyObj(\u0027GithubService\u0027, [\u0027fetchAllLabels\u0027, \u0027createLabel\u0027]);"},{"lineNumber":14,"author":{"gitId":"Eclipse-Dominator"},"content":"    labelService \u003d new LabelService(githubService, null);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  describe(\u0027.syncLabels()\u0027, () \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    it(\u0027should create all required labels for team response phase if no required labels are fetched\u0027, () \u003d\u003e {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      githubService.fetchAllLabels.and.callFake(() \u003d\u003e of([]));"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      of(true).pipe(labelService.syncLabels(true)).subscribe();"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.SEVERITY_LOW_LABEL);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.RESPONSE_REJECTED_LABEL);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.STATUS_DONE_LABEL);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.TYPE_DOCUMENTATION_BUG_LABEL);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      expect(githubService.createLabel).toHaveBeenCalledTimes(LabelService.getRequiredLabelsAsArray(true).length);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    it(\u0027should create all required labels for tester phase if no required labels are fetched\u0027, () \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      githubService.fetchAllLabels.and.callFake(() \u003d\u003e of([]));"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      of(true).pipe(labelService.syncLabels(false)).subscribe();"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.SEVERITY_LOW_LABEL);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.TYPE_DOCUMENTATION_BUG_LABEL);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      expect(githubService.createLabel).toHaveBeenCalledTimes(LabelService.getRequiredLabelsAsArray(false).length);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    it(\u0027should create missing required labels for team response phase if some required labels are fetched\u0027, () \u003d\u003e {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      githubService.fetchAllLabels.and.callFake(() \u003d\u003e of(LabelConstant.SOME_TEAM_RESPONSE_PHASE_LABELS));"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      of(true).pipe(labelService.syncLabels(true)).subscribe();"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"      assertLabelNotCreated(githubService, LabelConstant.SEVERITY_LOW_LABEL);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.RESPONSE_REJECTED_LABEL);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.STATUS_DONE_LABEL);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.TYPE_DOCUMENTATION_BUG_LABEL);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      expect(githubService.createLabel).toHaveBeenCalledTimes("},{"lineNumber":47,"author":{"gitId":"-"},"content":"        LabelService.getRequiredLabelsAsArray(true).length - LabelConstant.SOME_TEAM_RESPONSE_PHASE_LABELS.length"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    it(\u0027should create missing required labels for tester phase if some required labels are fetched\u0027, () \u003d\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      githubService.fetchAllLabels.and.callFake(() \u003d\u003e of(LabelConstant.SOME_TESTER_PHASE_LABELS));"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      of(true).pipe(labelService.syncLabels(false)).subscribe();"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"      assertLabelNotCreated(githubService, LabelConstant.SEVERITY_HIGH_LABEL);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      assertLabelCreated(githubService, LabelConstant.TYPE_FUNCTIONALITY_BUG_LABEL);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      expect(githubService.createLabel).toHaveBeenCalledTimes("},{"lineNumber":58,"author":{"gitId":"-"},"content":"        LabelService.getRequiredLabelsAsArray(false).length - LabelConstant.SOME_TESTER_PHASE_LABELS.length"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    it(\u0027should not need to create any required labels if all required labels are fetched\u0027, () \u003d\u003e {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      githubService.fetchAllLabels.and.callFake(() \u003d\u003e of(LabelConstant.ALL_REQUIRED_LABELS_ARRAY));"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      of(true).pipe(labelService.syncLabels(true)).subscribe();"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"      expect(githubService.createLabel).toHaveBeenCalledTimes(0);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":69,"author":{"gitId":"-"},"content":"});"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: toLabel()\u0027, () \u003d\u003e {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  beforeAll(() \u003d\u003e {"},{"lineNumber":73,"author":{"gitId":"Eclipse-Dominator"},"content":"    labelService \u003d new LabelService(null, null);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  afterAll(() \u003d\u003e {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  it(\u0027should convert a GithubLabel object to a corresponding Label object\u0027, () \u003d\u003e {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    const lowSeverityLabel \u003d labelService.toLabel(GithubLabelConstant.GITHUB_LABEL_LOW_SEVERITY);"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    expect(lowSeverityLabel.labelCategory).toBe(LabelConstant.SEVERITY);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    expect(lowSeverityLabel.labelValue).toBe(LabelConstant.SEVERITY_LOW);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    expect(lowSeverityLabel.labelColor).toBe(LabelConstant.COLOR_SEVERITY_LOW);"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    const functionalityBugLabel \u003d labelService.toLabel(GithubLabelConstant.GITHUB_LABEL_FUNCTIONALITY_BUG);"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    expect(functionalityBugLabel.labelCategory).toBe(LabelConstant.TYPE);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    expect(functionalityBugLabel.labelValue).toBe(LabelConstant.TYPE_FUNCTIONALITY_BUG);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    expect(functionalityBugLabel.labelColor).toBe(LabelConstant.COLOR_TYPE_FUNCTIONALITY_BUG);"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    const tutoriallabel \u003d labelService.toLabel(GithubLabelConstant.GITHUB_LABEL_TUTORIAL_LABEL);"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    expect(tutoriallabel.labelCategory).toBe(\u0027tutorial\u0027);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    expect(tutoriallabel.labelValue).toBe(\u0027CS2103T-W12\u0027);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    expect(tutoriallabel.labelColor).toBe(\u0027c2e0c6\u0027);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":99,"author":{"gitId":"-"},"content":"});"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: isDarkColor()\u0027, () \u003d\u003e {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":103,"author":{"gitId":"Eclipse-Dominator"},"content":"    labelService \u003d new LabelService(null, null);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"  afterEach(() \u003d\u003e {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  it(\u0027should be true for dark color\u0027, () \u003d\u003e {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    expect(labelService.isDarkColor(LabelConstant.COLOR_BLACK)).toBeTruthy();"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  it(\u0027should be false for light color\u0027, () \u003d\u003e {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    expect(labelService.isDarkColor(LabelConstant.COLOR_WHITE)).toBeFalsy();"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":117,"author":{"gitId":"-"},"content":"});"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: setLabelStyle()\u0027, () \u003d\u003e {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"Eclipse-Dominator"},"content":"    labelService \u003d new LabelService(null, null);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"  afterEach(() \u003d\u003e {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  it(\u0027should be dark color background with light color text\u0027, () \u003d\u003e {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    expect(labelService.setLabelStyle(LabelConstant.COLOR_BLACK)).toEqual(LabelConstant.DARK_BG_LIGHT_TEXT);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  it(\u0027should be light color background with dark color text\u0027, () \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    expect(labelService.setLabelStyle(LabelConstant.COLOR_WHITE)).toEqual(LabelConstant.LIGHT_BG_DARK_TEXT);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  it(\u0027should be light color background with dark color text\u0027, () \u003d\u003e {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    expect(labelService.setLabelStyle(LabelConstant.COLOR_WHITE, \u0027inline-block\u0027)).toEqual(LabelConstant.INLINE_BLOCK_TEXT);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":139,"author":{"gitId":"-"},"content":"});"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: getColorOfLabel()\u0027, () \u003d\u003e {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":143,"author":{"gitId":"Eclipse-Dominator"},"content":"    labelService \u003d new LabelService(null, null);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"  afterEach(() \u003d\u003e {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"  it(\u0027should be correct label color for Severity.Low\u0027, () \u003d\u003e {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    expect(labelService.getColorOfLabel(\u0027severity\u0027, LabelConstant.SEVERITY_LOW)).toEqual(LabelConstant.COLOR_SEVERITY_LOW);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"  it(\u0027should be white color for invalid inputs\u0027, () \u003d\u003e {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    expect(labelService.getColorOfLabel(\u0027others\u0027, null)).toEqual(LabelConstant.COLOR_WHITE.toLowerCase());"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":157,"author":{"gitId":"-"},"content":"});"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"describe(\u0027LabelService: getLabelDefinition()\u0027, () \u003d\u003e {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":161,"author":{"gitId":"Eclipse-Dominator"},"content":"    labelService \u003d new LabelService(null, null);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"  afterEach(() \u003d\u003e {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    labelService \u003d null;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"  it(\u0027should return the correct label definition for type.FunctionalityBug\u0027, () \u003d\u003e {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(LabelConstant.TYPE_FUNCTIONALITY_BUG, LabelConstant.TYPE)).toEqual("},{"lineNumber":170,"author":{"gitId":"-"},"content":"      LABEL_DEFINITIONS.typeFunctionalityBug"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"  it(\u0027should return the correct label definition for severity.Medium\u0027, () \u003d\u003e {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(LabelConstant.SEVERITY_MEDIUM, LabelConstant.SEVERITY)).toEqual("},{"lineNumber":176,"author":{"gitId":"-"},"content":"      LABEL_DEFINITIONS.severityMedium"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"  it(\u0027should return the correct label definition for response.Rejected\u0027, () \u003d\u003e {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(LabelConstant.RESPONSE_REJECTED, LabelConstant.RESPONSE)).toEqual("},{"lineNumber":182,"author":{"gitId":"-"},"content":"      LABEL_DEFINITIONS.responseRejected"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"  it(\u0027should return null for label with no definition\u0027, () \u003d\u003e {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(LabelConstant.STATUS_DONE, LabelConstant.STATUS)).toEqual(LABEL_DEFINITIONS.undefined);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"  it(\u0027should return null for invalid inputs\u0027, () \u003d\u003e {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(null, null)).toEqual(LABEL_DEFINITIONS.undefined);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(null, LabelConstant.SEVERITY)).toEqual(LABEL_DEFINITIONS.undefined);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    expect(labelService.getLabelDefinition(LabelConstant.SEVERITY_MEDIUM, null)).toEqual(LABEL_DEFINITIONS.undefined);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":195,"author":{"gitId":"-"},"content":"});"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"function assertLabelCreated(githubService: any, label: Label) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  expect(githubService.createLabel).toHaveBeenCalledWith(label.getFormattedName(), label.labelColor);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"function assertLabelNotCreated(githubService: any, label: Label) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  expect(githubService.createLabel).not.toHaveBeenCalledWith(label.getFormattedName(), label.labelColor);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Eclipse-Dominator":6,"-":197}}]
