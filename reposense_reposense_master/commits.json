{"authorDailyContributionsMap":{"Echomo-Xinyu":[],"cedricongjh":[],"vigneshsankariyer1234567890":[],"weiquu":[],"Eclipse-Dominator":[],"vvidday":[{"date":"2023-01-31","commitResults":[{"hash":"c162ff20d9c055bddb66ad2f57b3a62906b541d2","isMergeCommit":false,"messageTitle":"[#968] Enforce Vue option order (#1867)","messageBody":"Currently, the order of component options is not enforced, resulting in\r\ninconsistent ordering across files. Although there is a rule in the\r\nESLint Vue plugin that enforces this, it is currently being omitted.\r\n\r\nLet\u0027s enable the order-in-components rule to enforce a consistent order\r\nof component options according to the recommended order in the Vue style\r\nguide.\r\n\r\nThis will improve the consistency and readability of the code.","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":0},"vue":{"insertions":176,"deletions":176},"json":{"insertions":0,"deletions":1}}}]},{"date":"2023-02-05","commitResults":[{"hash":"1dd4ab44a1981023169f65ead4b24588c6344052","isMergeCommit":false,"messageTitle":"[#1340] Deprecate use of window.toggleNext in zoom panel (#1866)","messageBody":"Currently, the zoom panel uses the window.toggleNext function to toggle\r\nthe display of commit message bodies. The window.toggleNext function\r\ndirectly modifies the DOM instead of using Vue directives, which may\r\ninterfere with the functionality provided by Vue.\r\n\r\nLet\u0027s deprecate the use of window.toggleNext by refactoring c-zoom.vue\r\nto use the v-show directive to show/hide the body of commit messages.\r\nThis will make the code more consistent, and eliminates the need to\r\ndirectly mutate the DOM.","fileTypesAndContributionMap":{"vue":{"insertions":36,"deletions":53},"js":{"insertions":255,"deletions":17}}}]},{"date":"2023-02-19","commitResults":[{"hash":"dd6e0e972921018a14de8c26a1614225cab78ecf","isMergeCommit":false,"messageTitle":"[#1904] Add ESLint support for TypeScript imports (#1905)","messageBody":"ESLint is currently not configured to properly support TypeScript\r\nimports. This results in an error when importing local TypeScript files\r\nwith the file extension omitted, which is the default way to import\r\nTypeScript files.\r\n\r\nLet\u0027s configure ESLint to support TypeScript imports and enforce the\r\nomission of file extensions for .ts and .js files. This will allow us to\r\npass the lint check while using the default import method, and enforce\r\nconsistency throughout the codebase.","fileTypesAndContributionMap":{"vue":{"insertions":8,"deletions":8},"json":{"insertions":10,"deletions":2},"js":{"insertions":1,"deletions":1}}}]},{"date":"2023-02-21","commitResults":[{"hash":"ebd6f81596dc8a41b75c088092c514e2561e83c7","isMergeCommit":false,"messageTitle":"[#1756] Add JSON validation and migrate api.js to TypeScript (#1903)","messageBody":"Currently, the objects produced by reading from summary.json,\r\nauthorship.json and commits.json are not validated against any schema.\r\nThis results in these objects having an implicit any type, which might\r\nlead to type errors during runtime.\r\n\r\nLet\u0027s add support for JSON validation with the zod library and migrate\r\nthe file where the JSON files are parsed, api.js, to TypeScript. This\r\nwill increase type safety and enable the migration of other files.","fileTypesAndContributionMap":{"json":{"insertions":7,"deletions":1},"ts":{"insertions":277,"deletions":34}}}]},{"date":"2023-03-09","commitResults":[{"hash":"a308a8572fb6e499b6e872fbb5d892ed64e54cc7","isMergeCommit":false,"messageTitle":"[#1912] Refactor frontend code to minimize explicit any types (#1914)","messageBody":"Currently, there exists some explicit any types within the frontend\r\ncode. This functions as a dangerous escape hatch from the type system,\r\nand it could lead to type errors not being caught at compile time.\r\n\r\nLet\u0027s refactor the existing code to remove as many explicit any\r\ndeclarations as possible, which will increase type safety of the\r\ncodebase.","fileTypesAndContributionMap":{"vue":{"insertions":5,"deletions":1},"ts":{"insertions":34,"deletions":32}}}]},{"date":"2023-03-14","commitResults":[{"hash":"f9fe14cd1d528bfae28d50eb8850578a7a1560d0","isMergeCommit":false,"messageTitle":"[#1891] Update Cypress to v10 (#1922)","messageBody":"Currently, we are using Cypress 9, which is 3 major versions behind \r\nthe latest release. Older versions are less likely to be supported and\r\nmaintained.\r\n\r\nLet’s update Cypress to version 10.","fileTypesAndContributionMap":{"md":{"insertions":7,"deletions":6},"js":{"insertions":14,"deletions":0},"json":{"insertions":14,"deletions":24}}}]},{"date":"2023-03-15","commitResults":[{"hash":"8c189f58503735405fe874c36ac0f98a179cae4f","isMergeCommit":false,"messageTitle":"[#1912] Add TypeScript rules to ESLint (#1913)","messageBody":"Currently, ESLint is not configured to lint TypeScript specific code.\r\nThis may result in errors not being detected by the linter, which could\r\nlead to bugs and a decrease in code quality and consistency.\r\n\r\nLet\u0027s add the airbnb-typescript config to enforce style rules, and add\r\nthe typescript-eslint recommended rules to enforce greater type safety\r\nwithin TypeScript code.","fileTypesAndContributionMap":{"json":{"insertions":36,"deletions":1}}}]},{"date":"2023-03-19","commitResults":[{"hash":"46f423f60cea2f4f25ecf173aec1b9c8218bc711","isMergeCommit":false,"messageTitle":"[#1936] Migrate store.js to TypeScript (#1937)","messageBody":"Currently, despite the addition of TypeScript support, the frontend is\r\nstill largely written in JavaScript. This results in a lack of type\r\nsafety and many complex objects being passed around as unknown types,\r\nwhich may in turn lead to errors.\r\n\r\nLet\u0027s migrate the store.js file to TypeScript, to get types for the all\r\nthe states that are stored within the Vuex store. This will provide a\r\ngood starting point to migrate the Vue files that access and mutate the\r\nstate of the store.","fileTypesAndContributionMap":{"ts":{"insertions":105,"deletions":20}}}]},{"date":"2023-03-21","commitResults":[{"hash":"d6a9c204d5256c7bde5d3769900339d135f854d0","isMergeCommit":false,"messageTitle":"[#1891] Update Cypress to v11 (#1923)","messageBody":"Currently, we are using Cypress 9, which is 3 major versions behind the\r\nlatest release. Older versions are less likely to be supported and\r\nmaintained.\r\n\r\nLet’s update Cypress to version 11.","fileTypesAndContributionMap":{"json":{"insertions":4,"deletions":4}}},{"hash":"32d49ad159776e013d4a12a43ea948ca8f116020","isMergeCommit":false,"messageTitle":"[#1936] Migrate app.vue to TypeScript (#1938)","messageBody":"Currently, despite the addition of TypeScript support, the frontend is\r\nstill largely written in JavaScript. This results in a lack of type\r\nsafety and many complex objects being passed around as unknown types,\r\nwhich may in turn lead to errors.\r\n\r\nLet\u0027s migrate the root component, app.vue, to TypeScript. As this is the\r\nentry point of the app, converting this file to TypeScript will enable\r\nthe conversion of other Vue components.","fileTypesAndContributionMap":{"vue":{"insertions":45,"deletions":39},"ts":{"insertions":8,"deletions":4}}}]},{"date":"2023-03-25","commitResults":[{"hash":"34c2898d53bba01537dc3773b2239f6445078fc3","isMergeCommit":false,"messageTitle":"[#1945] Enforce stricter formatting rules for TypeScript files (#1957)","messageBody":"Currently, our ESLint ruleset does not enforce certain formatting rules\r\nfor TypeScript code, such as delimiters in TypeScript interfaces and\r\nspacing in type annotations.\r\n\r\nLet\u0027s update the ESLint ruleset to check for proper delimiters and\r\nspacing in type annotations. This will enforce consistency throughout\r\nthe codebase and improve code readability.","fileTypesAndContributionMap":{"md":{"insertions":60,"deletions":0},"json":{"insertions":3,"deletions":1},"ts":{"insertions":5,"deletions":5}}}]},{"date":"2023-03-30","commitResults":[{"hash":"0d89c64a38127efe51d36e281eb2e73a1c7ade16","isMergeCommit":false,"messageTitle":"[#1891] Update Cypress to v12 (#1924)","messageBody":"Currently, we are using Cypress 9, which is 3 major versions behind the\r\nlatest release. Older versions are less likely to be supported and\r\nmaintained.\r\n\r\nLet\u0027s update Cypress to the latest version.","fileTypesAndContributionMap":{"json":{"insertions":1922,"deletions":6}}}]},{"date":"2023-04-04","commitResults":[{"hash":"42761165e7a6a071b109848ee146040b48c11630","isMergeCommit":false,"messageTitle":"[#1936] Migrate c-summary.vue to TypeScript (#1953)","messageBody":"Currently, despite the addition of TypeScript support, the frontend is\r\nstill largely written in JavaScript. This results in a lack of type\r\nsafety and many complex objects being passed around as unknown types,\r\nwhich may in turn lead to errors.\r\n\r\nLet\u0027s migrate one of the main components, c-summary.vue, to TypeScript.\r\nIn addition to providing greater type safety, the migration of this\r\ncomponent will also allow the migration of its child components, such\r\nas c-summary-charts.vue.","fileTypesAndContributionMap":{"vue":{"insertions":131,"deletions":88},"ts":{"insertions":44,"deletions":5}}}]},{"date":"2023-04-10","commitResults":[{"hash":"000bc289b98ee53a09b60dba933734881d213bfb","isMergeCommit":false,"messageTitle":"[#1936] Migrate c-authorship.vue to TypeScript (#1969)","messageBody":"Currently, despite the addition of TypeScript support, the frontend is\r\nstill largely written in JavaScript. This results in a lack of type\r\nsafety and many complex objects being passed around as unknown types,\r\nwhich may in turn lead to errors.\r\n\r\nLet\u0027s migrate one of the main components, c-authorship.vue, to\r\nTypeScript. This will provide better type safety and reduce runtime\r\nerrors.","fileTypesAndContributionMap":{"vue":{"insertions":106,"deletions":114},"js":{"insertions":2,"deletions":2},"json":{"insertions":12,"deletions":0},"ts":{"insertions":17,"deletions":6}}}]},{"date":"2023-04-11","commitResults":[{"hash":"95c0141c88288c320f93a2cea11b9a3662c209bf","isMergeCommit":false,"messageTitle":"[#1936] Migrate c-summary-charts.vue to TypeScript (#1976)","messageBody":"Currently, despite the addition of TypeScript support, the frontend is\r\nstill largely written in JavaScript. This results in a lack of type\r\nsafety and many complex objects being passed around as unknown types,\r\nwhich may in turn lead to errors.\r\n\r\nLet\u0027s migrate one of the main components, c-summary-charts.vue, to\r\nTypeScript. This will provide better type safety and reduce runtime\r\nerrors.","fileTypesAndContributionMap":{"vue":{"insertions":82,"deletions":62},"ts":{"insertions":3,"deletions":3}}}]}],"ckcherry23":[{"date":"2023-01-20","commitResults":[{"hash":"af7a05d7153e57660ac86dd90b86f9a4b4f81fd3","isMergeCommit":false,"messageTitle":"[#1499] Declare vue prop types explicitly (#1852)","messageBody":"In the current version of RepoSense, props are declared explicitly for\r\nVue components as an array of strings. \r\n\r\nLet\u0027s declare props using the object syntax so that we can document the\r\nprop types.\r\n\r\nThis will also show a warning in the browser console if props of the\r\nwrong type are passed to the component. \r\n\r\nLet\u0027s also define classes for `Segment` and `User` for stricter type \r\nvalidation.","fileTypesAndContributionMap":{"vue":{"insertions":135,"deletions":13},"js":{"insertions":4,"deletions":1},"ts":{"insertions":50,"deletions":0}}}]},{"date":"2023-02-13","commitResults":[{"hash":"bae660c0c237bb52644bd3cb30b5ff8c40fda42a","isMergeCommit":false,"messageTitle":"[#1042] Include deletions in contributions (#1883)","messageBody":"Currently, the ramp chart only reflects number of insertions. Hence, \r\ncommits that only delete code are omitted from the ramp chart.\r\n\r\nLet us modify the ramp chart to include thin ramps to represent commits\r\nthat only delete code. Let us also include the number of lines deleted\r\nwhen displaying lines changed on the Ramp Chart tooltip and on the\r\nCommits Panel.","fileTypesAndContributionMap":{"vue":{"insertions":33,"deletions":11}}}]},{"date":"2023-02-28","commitResults":[{"hash":"af6ebc91057005583ce0cabecfae725c6fe7a9ad","isMergeCommit":false,"messageTitle":"[#1865] Frontend: pin file title on scroll in the Code Panel (#1860)","messageBody":"Currently, users cannot hide/collapse a file after they finish reading\r\nthrough it, without scrolling back to the top again.\r\n\r\nLet us pin the title of the file (which includes the collapse button) so\r\nthat the user can collapse a file when/after reading through it instead\r\nof only on the top. Let us also position the tooltips to show/hide a\r\nfile dynamically based on whether they are out of the viewport.","fileTypesAndContributionMap":{"scss":{"insertions":36,"deletions":7},"vue":{"insertions":46,"deletions":6},"js":{"insertions":51,"deletions":0},"ts":{"insertions":1,"deletions":0}}}]},{"date":"2023-03-07","commitResults":[{"hash":"d9b1f7b4204e309971b50203b44872bfe6ed65d0","isMergeCommit":false,"messageTitle":"[#1877] Show merge commits in the report (#1882)","messageBody":"Currently, merge commits are completely ignored during report generation\r\nand analysis. This misrepresents the number of commits the user has made\r\nand misses out on important information included in the merge commits,\r\nsuch as tags.\r\n\r\nLet\u0027s include merge commits in the report so that important information\r\nin such commits is not missed out.","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":32},"md":{"insertions":46,"deletions":46},"vue":{"insertions":32,"deletions":8},"js":{"insertions":75,"deletions":9},"ts":{"insertions":1,"deletions":0}}}]},{"date":"2023-03-12","commitResults":[{"hash":"f4429b9e8da69fb9184df4381eab5c87010eafff","isMergeCommit":false,"messageTitle":"[#1934] Fix wrong author name for merged groups in Commits Panel (#1935)","messageBody":"Currently, the Commits Panel shows the wrong author name for merged\r\ngroups, as it just picks the first author in the group. This is\r\nmisrepresentative of the work of all authors who have contributed to\r\nthe commits shown.\r\n\r\nThis bug has occurred due to a typo in the code, where one of the\r\ninstances of \u0027zIsMerge\u0027 was not renamed to `zIsMerged` as required.\r\n\r\nLet us fix this typo so that the dashboard works as expected.","fileTypesAndContributionMap":{"vue":{"insertions":1,"deletions":1}}}]},{"date":"2023-03-19","commitResults":[{"hash":"086664cf208bff9ebb0b3595220649e18c8bdae6","isMergeCommit":false,"messageTitle":"[#1220] Cypress: test ramp chart in zoom view (#1930)","messageBody":"Currently, there are very few tests for the ramp chart component of \r\nRepoSense. One aspect that is not tested is whether the ramps shown in \r\nthe ramp chart are correct for the timeframe provided.\r\n\r\nLet us make our front-end tests more robust by adding cypress tests to \r\ncheck whether the ramps shown in the ramp chart of the zoom view \r\ncorrespond with the commits from the selected time period. Let us also\r\ntest other aspects of the ramp chart like ramp properties, relative \r\ndistances between ramps and links.","fileTypesAndContributionMap":{"js":{"insertions":293,"deletions":0}}}]},{"date":"2023-03-27","commitResults":[{"hash":"450ec45625c28a156774497d054eba215e51dd7d","isMergeCommit":false,"messageTitle":"[#1872] Update Node version to 16 (#1956)","messageBody":"Node.js 14 will be reaching its end-of-life on 30 April 2023.\r\n\r\nLet us update Node.js to use Node 16 in the GitHub workflows.","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1},"yml":{"insertions":3,"deletions":3},"json":{"insertions":16798,"deletions":37}}}]},{"date":"2023-03-30","commitResults":[{"hash":"8f2241733ae9f254baf50c34f88b71c55171aca4","isMergeCommit":false,"messageTitle":"[#1537] Show authors for merged groups in Code Panel (#1939)","messageBody":"Currently, when the \"merge group\" option is used for repos with multiple\r\nauthors, the Code Panel does not show which line of code was written by\r\nwhich author.\r\n\r\nLet us use different colors for the code segment backgrounds to indicate\r\nwho the author of the segment is. Let us also add an author legend for\r\neach file to easily see who edited that particular file, and identify\r\nwhich lines of code were written by whom.","fileTypesAndContributionMap":{"md":{"insertions":3,"deletions":2},"vue":{"insertions":78,"deletions":12},"js":{"insertions":235,"deletions":0},"ts":{"insertions":8,"deletions":3}}}]},{"date":"2023-04-10","commitResults":[{"hash":"0abc0d2e109bcf9ee4051537838a7f0141cce1c1","isMergeCommit":false,"messageTitle":"[#1963] Migrate c-zoom.vue to TypeScript (#1965)","messageBody":"Currently, despite the addition of TypeScript support, the frontend is\r\nstill largely written in JavaScript. This results in a lack of type\r\nsafety and many complex objects being passed around as unknown types,\r\nwhich may in turn lead to errors.\r\n\r\nLet\u0027s migrate one of the main components, c-zoom.vue, to TypeScript.\r\nIn addition to providing greater type safety, the migration of this\r\ncomponent will also allow the migration of its child components, such\r\nas c-ramp.vue.","fileTypesAndContributionMap":{"vue":{"insertions":57,"deletions":37},"js":{"insertions":4,"deletions":4},"ts":{"insertions":16,"deletions":4}}}]},{"date":"2023-04-16","commitResults":[{"hash":"7a58117a78c2432cea116871a7ce5c37abe6409c","isMergeCommit":false,"messageTitle":"[#1004] Standardize fonts for consistency across panels (#1979)","messageBody":"There are inconsistencies in the design between the different panels. \r\nOne aspect that varies is the fonts used in terms of the font sizes and \r\nfamilies. \r\n\r\nLet us standardize the font sizes across the Vue front-end using mixins.\r\nLet us also set the font family for sans-serif to be Titillium Web and\r\nmonospace to be GitHub\u0027s default font.","fileTypesAndContributionMap":{"scss":{"insertions":30,"deletions":7},"vue":{"insertions":23,"deletions":14}}}]},{"date":"2023-05-05","commitResults":[{"hash":"50dd4ab4a0e58cc0365b069b9f2a8e2f2106bcdd","isMergeCommit":false,"messageTitle":"[#1996] Update frontend documentation (#1999)","messageBody":"The HTML report documentation is outdated after changes introduced in\r\nrecent PRs. This will make it difficult for new contributors to\r\nunderstand the frontend codebase.\r\n\r\nLet us update the documentation and puml diagrams to match the new files\r\nand architecture. Let us also comment out the links used as examples to\r\navoid broken links. ","fileTypesAndContributionMap":{"md":{"insertions":40,"deletions":39}}}]}],"domlimm":[],"jasonqiu212":[],"MarcusTXK":[{"date":"2023-01-20","commitResults":[{"hash":"dfe890bb5236f2aa2a72ce017bdb9ffa6b81df20","isMergeCommit":false,"messageTitle":"[#452] Add date range validation to sinceDate and untilDate (#1850)","messageBody":"Output from git log is unexpected when dates earlier than the epoch is\r\nprovided, or when the date is on or beyond 2100.\r\n\r\nLet\u0027s modify the getSinceDate and getUntilDate methods in TimeUtil to\r\ncheck if the date is valid first, and only operate on the valid date.\r\nThis helps to prevent the bug while having minimal impact on any of the\r\nexisting code utilizing the util.","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":6}}}]},{"date":"2023-01-30","commitResults":[{"hash":"a462b143125b3d07c503d8f9fae78514270b88e1","isMergeCommit":false,"messageTitle":"[#1791] Switch to package-lock.json and npm ci (#1863)","messageBody":"Issue 1784 demonstrates how changes to upstream technologies and\r\ndependencies can break CI.  Although it was more likely to be due to\r\nChrome updating to version 102, there is also a possibility that\r\nupdating a dependency during a CI run might cause a breaking change. \r\n\r\nLet\u0027s consider switching to using package-lock.json and npm ci to ensure\r\nthat dependency versions are fixed when running CI. This allows for CI\r\nbuilds to be repeatable and consistent.","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"json":{"insertions":24941,"deletions":0}}}]},{"date":"2023-02-28","commitResults":[{"hash":"ff64510b5d55d5c0616c13c52532ce51f5de2514","isMergeCommit":false,"messageTitle":"[#1887] Convert run-checks.sh into a Gradle task (#1907)","messageBody":"Developers are more likely to forget about the existence of \r\nenvironmental checks (even though they are important for passing CI) due\r\nto the different abstraction levels compared to the other linters. They\r\nare also unable to test these checks locally easily and have to rely on\r\nGitHub Actions. \r\n\r\nLet\u0027s use Gradle as an abstraction for run-checks.sh. Bash scripts can \r\nbe run for Linux and macOS, while batch scripts can be run for Windows.","fileTypesAndContributionMap":{"gradle":{"insertions":10,"deletions":0},"sh":{"insertions":12,"deletions":11},"md":{"insertions":1,"deletions":0},"yml":{"insertions":1,"deletions":1}}}]},{"date":"2023-03-15","commitResults":[{"hash":"3db0b33c47047af4757904eab0cea029ff1cf004","isMergeCommit":false,"messageTitle":"[#1788] Additonal options to merge/map git-users (#1920)","messageBody":"Users are looking for alternative/complementary ways of specifying \r\nmultiple author names. Currently, git has a nifty feature called \r\nmailmap. By specifying a .mailmap file in the top level of the \r\nrepository, it allows a user to map author/commiter names and/or e-mail \r\naddresses. After some investigation, it seems this feature already \r\ninnately works, and no modification of RepoSense backend is required. \r\nIt also seems to have priority over any mappings done by author-\r\nconfig.csv. \r\n\r\nLet\u0027s add some documentation about the option to use git\u0027s mailmap \r\nfeature for mapping of users to provide them with more options they can \r\nchoose from to customise their reports.","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":0}}}]},{"date":"2023-04-05","commitResults":[{"hash":"bfb648b1e0562e8a7a243c89dfab5cd5d6c69569","isMergeCommit":false,"messageTitle":"[#1959] Missing contribution bar for merged groups after refresh (#1960)","messageBody":"Currently, upon refreshing the page, the contribution bar disappears \r\ndue to getContributionBars returning NaN instead of the expected array. \r\nThis was caused by division by 0, due to the user\u0027s \r\ncheckedFileTypeContribution not being initialized properly. \r\n\r\nLet\u0027s fix this checkedFileTypeContribution not being initialized \r\nproperly and add guard clauses against division by 0.","fileTypesAndContributionMap":{"vue":{"insertions":14,"deletions":5},"ts":{"insertions":4,"deletions":4}}}]},{"date":"2023-04-10","commitResults":[{"hash":"7610f3f88adb586e8cb5ef69893ded42bcf3c4fc","isMergeCommit":false,"messageTitle":"[#1909] Refactor CliArguments and subclasses for polymorphism (#1942)","messageBody":"Currently, ArgsParser::parse does the following (1) sanitizes and \r\nformats the inputs (2) decides whether the reposense run should be a \r\nsimple view, a CLI run or a config file run. After returning an instance\r\nof CliArguments, RepoSense main class decides based on the class type\r\nhow to construct the corresponding repoConfigurations and \r\ngroupConfigurations. Once the repoConfigurations and groupConfigurations\r\nare setup, it no longer matters whether it is a CLI run or config file\r\nrun. \r\n\r\nRefactoring the code will allow us to reduce the complexity of the \r\nArgsParser::parse method and allow for a slightly more extensible \r\napproach to implementing possible new run configurations. For example, a\r\nclass can be added to decide the appropriate run configuration for the\r\nCliArguments which then generates the appropriate Config files. \r\n\r\nUsing the builder pattern for the construction of CliArguments will also\r\nhelp to avoid a bloated constructor and optionally initialize fields. \r\n\r\nLet\u0027s encapsulate specific run configuration behavior (CLI or config) to\r\na specific class which makes it easier to maintain as well as adopt the\r\nbuilder pattern for CliArguments.","fileTypesAndContributionMap":{"java":{"insertions":763,"deletions":454},"md":{"insertions":1,"deletions":1}}},{"hash":"53d5197d841fb1b801541b8f8414c04878d04913","isMergeCommit":false,"messageTitle":"[#1966] Add cypress test for merged groups contribution bars (#1970)","messageBody":"Currently, there are no tests to ensure that the length and the number \r\nof contribution bars for merged groups are correct. This resulted in \r\nissue #1959, where the contribution bar went missing, being undetected. \r\n\r\nLet\u0027s add a cypress test to check that the length and the number of \r\ncontribution bars for merged groups are correct, even after refresh.","fileTypesAndContributionMap":{"js":{"insertions":53,"deletions":0}}}]},{"date":"2023-04-11","commitResults":[{"hash":"d1f977c92bec764b3e80c8acbcf282cf746e5d46","isMergeCommit":false,"messageTitle":"[#1971] Add Vue router (#1974)","messageBody":"Currently, the RepoSense frontend does not have a router as everything \r\nis in the root page. In the future, we might add other pages or other \r\nfunctionalities, such as widgets, which might require routing. Adding a \r\nrouter also allows for easier backward navigation, which can allow a \r\nuser to click back to navigate to a previous view after changing \r\nsomething on the frontend. \r\n\r\nLet\u0027s add a Vue Router to enable routing and history management in the \r\nRepoSense frontend.","fileTypesAndContributionMap":{"vue":{"insertions":340,"deletions":327},"js":{"insertions":2,"deletions":0},"json":{"insertions":24,"deletions":0},"ts":{"insertions":21,"deletions":0}}},{"hash":"537196cc3364071c0fbe7cd0e8c2f6d3e879407f","isMergeCommit":false,"messageTitle":"[#1982] Use correct \"sort within groups by\" when visiting by url (#1983)","messageBody":"Currently, if the URL contains anything for \"sort within groups by\" for \r\nany value other than \"↑ title\", it will get replaced by \"↑ title\" when \r\nthe url is visited. \r\n\r\nLet\u0027s fix it so the sort remains as configured by the user in the URL.","fileTypesAndContributionMap":{"vue":{"insertions":2,"deletions":1}}}]},{"date":"2023-04-19","commitResults":[{"hash":"079d24a8f60d93836c4806316208dc69c3051fb4","isMergeCommit":false,"messageTitle":"[#1984] Frontend: fix CheckedFileTypes unable to be set as empty (#1985)","messageBody":"Currently, if \"breakdown by file type\" is selected and no file type is \r\nselected, if the page is refreshed/the URL is visited, all file types \r\nwill be selected again. \r\n\r\nLet\u0027s fix it so the selected file types remain as configured by the user\r\nin the URL, for both summary and code commit panels.","fileTypesAndContributionMap":{"vue":{"insertions":3,"deletions":3}}}]},{"date":"2023-04-21","commitResults":[{"hash":"e7b139c5de4911f24560abce10ff182dead55534","isMergeCommit":false,"messageTitle":"[#1908] Update how logger output is recorded (#1978)","messageBody":"Currently, setLogFolderLocation is called in ArgsParser which sets the\r\noutput folder location for all loggers. However, any logs before the\r\noutput folder is set do not get recorded in the final log file and only\r\nshow up in the standard output. This also potentially causes concurrency\r\nissues, since the current structure causes ArgsParser::parse to have\r\nside effects that affect LogsManager.\r\n\r\nLet\u0027s output logging messages to a file reposense.log in the directory\r\nwhere RepoSense is run and only move the reposense.log file to the\r\noutput directory at the end of the RepoSense run.","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":14}}}]},{"date":"2023-04-30","commitResults":[{"hash":"1cc3e67923ba34a6dc5d01a501d492c27e2374c1","isMergeCommit":false,"messageTitle":"[#1894] Add embeddable ramp widget (#1988)","messageBody":"The ability to copy a link for an embeddable ramp widget with the click \r\nof a button and embed the ramp widget into any existing website will be \r\na useful feature. This allows users who intend to feature any \r\ncontributions made to a repository/projects in their portfolio/any \r\nwebsite, especially as I feel it is both eye-catching and provides a \r\nlot of useful information. The embedded ramps should follow any filters \r\nconfigured by the users above so that the information displayed by the \r\nramps can be customized. \r\n\r\nLet\u0027s add a button to allow users to copy and embed widgets.","fileTypesAndContributionMap":{"scss":{"insertions":232,"deletions":0},"md":{"insertions":33,"deletions":4},"vue":{"insertions":532,"deletions":468},"js":{"insertions":5,"deletions":1},"ts":{"insertions":7,"deletions":0}}}]}],"sikai00":[{"date":"2023-01-22","commitResults":[{"hash":"c6a116b54d6d234cf33093c73183e7ae04be8054","isMergeCommit":false,"messageTitle":"[#1118] Remove authorship tag validation regex (#1857)","messageBody":"GitHub\u0027s IDs have certain requirements to be valid, but Git does not\r\nhave such requirements. This is evident in .gitconfig files, where \r\nthe username can be set to anything the user may like.\r\n\r\nThe current validation regex is based off GitHub\u0027s ID requirement. \r\nHowever, we are currently relying on Git author names found in \r\n.gitconfig files to attribute code authorship. This may result in \r\nmissing code authorship attribution, when the Git author names do \r\nnot match GitHub\u0027s ID requirements.\r\n\r\nLet\u0027s remove this restriction to allow any valid author names to be\r\naccepted and properly attributed.","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":44},"md":{"insertions":6,"deletions":7}}}]},{"date":"2023-01-27","commitResults":[{"hash":"61c401c5e878a1133994c9c438cd2a43b9c23d2f","isMergeCommit":false,"messageTitle":"[#1862] Docs: fix badges with correct class names (#1864)","messageBody":"Due to a migration from Bootstrap 4 to Bootstrap 5 in MarkBind, the \r\nclass names used for coloring certain tags were outdated. This resulted\r\nin said tags turning barely visible in our documentations, causing\r\nreadability issues.\r\n\r\nLet\u0027s update the offending class names for tags with the new and valid\r\nclass names introduced by Bootstrap 5.","fileTypesAndContributionMap":{"md":{"insertions":8,"deletions":8}}}]},{"date":"2023-02-02","commitResults":[{"hash":"2c16643800fab5101334ac337f7216117011fc06","isMergeCommit":false,"messageTitle":"[#1874] Use clearer author names in test template (#1875)","messageBody":"The names used for unconventional author and white space author do not\r\nreflect its meaning correctly and may cause confusion for developers\r\nwhen reading through the code.\r\n\r\nLet\u0027s update the names in GitTestTemplate to accurately and better\r\nreflect the meaning of unconventional author and whitespace author.","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":11}}}]},{"date":"2023-02-27","commitResults":[{"hash":"4fae36ac2aaf529603273952a1897b0febd5e854","isMergeCommit":false,"messageTitle":"[#1880] Change hasAuthorConfigFile to become a local variable (#1910)","messageBody":"AuthorConfiguration.hasAuthorConfigFile is currently a static variable \r\nthat determines whether during the analysis of repo files, a new author\r\nshould be added and tracked. If an author config file is provided, an\r\nunrecognized author is ignored, otherwise it is added and tracked.\r\n\r\nThis might cause parallel runs of test cases at the method level, \r\nespecially system test cases, to have issues.\r\n\r\nLet\u0027s make AuthorConfiguration.hasAuthorConfigFile a local variable to\r\nthe AuthorConfiguration found within each RepoConfiguration.","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":10}}}]},{"date":"2023-03-12","commitResults":[{"hash":"e329eec6813f0f989e031693170d36bd4f719910","isMergeCommit":false,"messageTitle":"[#1915] Make ReportGenerator and its Reporters non-static (#1916)","messageBody":"Currently, ReportGenerator, as well as its corresponding Reporters \r\n(CommitsReporter and AuthorshipReporter) are static utility classes. \r\nFrom a simple lookthrough of git blame, I believe it is made static \r\nonly for legacy reasons (when RepoSense was a smaller project).\r\n\r\nThese classes have to be made non-static if we want to parallelize/have\r\nconcurrent runs of RepoSense. For example, in ConfigSystemTest, each\r\nRepoSense instance is run through the RepoSense.main method. In order \r\nto parallelize ConfigSystemTest, we would have to make these classes \r\nnon-static so that there will not be any thread interference.\r\n\r\nLet\u0027s make ReportGenerator and its corresponding Reporters non-static.","fileTypesAndContributionMap":{"java":{"insertions":237,"deletions":204}}}]},{"date":"2023-03-13","commitResults":[{"hash":"985be23ea6ba2d7f666d851884ce062145323be7","isMergeCommit":false,"messageTitle":"[#1879] Remove unnecessary test mode logic in ConfigSystemTest (#1911)","messageBody":"Due to legacy reasons, the test mode flag was added in order to allow \r\nsystemtest to pass. However, systemtest was previously failing because \r\nthe json file were incorrect and should not have included the addition \r\nof authors not listed in author config files.\r\n\r\nIn reality, RepoSense\u0027s behavior is correct and thus do not require \r\nhasAuthorConfiguration to be set to false for all the systemtest.\r\n\r\nLet\u0027s update the json files to more accurately match the actual \r\nbehavior of RepoSense. Let\u0027s also remove the setting of \r\nhasAuthorConfiguration to false if test mode is enabled.","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":6},"md":{"insertions":0,"deletions":3}}}]},{"date":"2023-04-11","commitResults":[{"hash":"c3071aa72c49d7e5c61e50d414808ac2cceb7bc8","isMergeCommit":false,"messageTitle":"[#528] Allow multiple repos in one row for author-config.csv (#1961)","messageBody":"The same author may be working on several repositories to be analyzed.\r\nIn order to specify author information through author-config.csv, each\r\nrow has to be duplicated for each repository. This may be tedious for\r\nthe person generating the RepoSense report.\r\n\r\nThis change allows the repository location column in author-config.csv\r\nto accept multiple repositories through the separator delimiter \";\". It\r\nalso allows users to specify branches for each repository by using \"~\"\r\nafter the repository and separate multiple branches with \"|\", This\r\nremoves the need to duplicate the remaining columns\u0027 information in\r\nmultiple rows and reduce likelihood of errors in maintenance.\r\n\r\nLet\u0027s allow each row in author_config.csv to contain multiple repos and\r\nmultiple branches for each repo to reduce row duplication.","fileTypesAndContributionMap":{"java":{"insertions":492,"deletions":4},"md":{"insertions":93,"deletions":1}}}]},{"date":"2023-04-21","commitResults":[{"hash":"96ba7570852298efbb2442e6fd3337f6a4fc3bd3","isMergeCommit":false,"messageTitle":"[#1967] Use GitHub environmental files instead of set-output (#1992)","messageBody":"surge.yml currently uses set-output to extract and save the PR number\r\nfor use as part of the surge.sh preview domain. However, GitHub will be\r\ndeprecating set-output for security reasons.\r\n\r\nLet\u0027s update surge.yml to use the new GITHUB_OUTPUT environment files\r\ninstead.","fileTypesAndContributionMap":{"yml":{"insertions":1,"deletions":1}}}]}],"EuniceSim142":[],"yucheng11122017":[],"hhdqirui":[],"EltonGohJH":[],"lhw-1":[],"kevin9foong":[],"cheehongw":[]},"authorFileTypeContributionMap":{"Echomo-Xinyu":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"cedricongjh":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"vigneshsankariyer1234567890":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"weiquu":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"Eclipse-Dominator":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"vvidday":{"java":0,"js":240,"ts":472,"vue":514,"scss":0,"json":1998,"md":66,"py":0,"gradle":0,"sh":0,"yml":0},"ckcherry23":{"java":60,"js":658,"ts":69,"vue":356,"scss":66,"json":16798,"md":39,"py":0,"gradle":0,"sh":0,"yml":3},"domlimm":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"jasonqiu212":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"MarcusTXK":{"java":858,"js":59,"ts":32,"vue":505,"scss":232,"json":9535,"md":30,"py":0,"gradle":12,"sh":12,"yml":1},"sikai00":{"java":825,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":94,"py":0,"gradle":0,"sh":0,"yml":1},"EuniceSim142":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"yucheng11122017":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"hhdqirui":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"EltonGohJH":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"lhw-1":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"kevin9foong":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"cheehongw":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0}},"authorContributionVariance":{"Echomo-Xinyu":0.0,"cedricongjh":0.0,"vigneshsankariyer1234567890":0.0,"weiquu":0.0,"Eclipse-Dominator":0.0,"vvidday":26726.871,"ckcherry23":1807007.4,"domlimm":0.0,"jasonqiu212":0.0,"MarcusTXK":3979894.2,"sikai00":3532.845,"EuniceSim142":0.0,"yucheng11122017":0.0,"hhdqirui":0.0,"EltonGohJH":0.0,"lhw-1":0.0,"kevin9foong":0.0,"cheehongw":0.0},"authorDisplayNameMap":{"Echomo-Xinyu":"SUN ..INYU","cedricongjh":"ONG ..DRIC","vigneshsankariyer1234567890":"VIGN..IYER","weiquu":"NEO ..QING","Eclipse-Dominator":"LI Z..AOQI","vvidday":"DAVI.. ONG","ckcherry23":"CHAR..USAR","domlimm":"DOMI.. JUN","jasonqiu212":"QIU ..ASON","MarcusTXK":"MARC.. KYE","sikai00":"CHAN.. KAI","EuniceSim142":"SIM ..NICE","yucheng11122017":"CHAN..HENG","hhdqirui":"WU Q..IRUI","EltonGohJH":"ELTO.. HAO","lhw-1":"LEE ..WOON","kevin9foong":"KEVI..TONG","cheehongw":"WONG..HONG"}}
