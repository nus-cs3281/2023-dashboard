{"authorDailyContributionsMap":{"Echomo-Xinyu":[],"cedricongjh":[],"vigneshsankariyer1234567890":[],"weiquu":[],"itsyme":[],"Eclipse-Dominator":[],"vvidday":[{"date":"2023-01-31","commitResults":[{"hash":"c162ff20d9c055bddb66ad2f57b3a62906b541d2","messageTitle":"[#968] Enforce Vue option order (#1867)","messageBody":"Currently, the order of component options is not enforced, resulting in\r\ninconsistent ordering across files. Although there is a rule in the\r\nESLint Vue plugin that enforces this, it is currently being omitted.\r\n\r\nLet\u0027s enable the order-in-components rule to enforce a consistent order\r\nof component options according to the recommended order in the Vue style\r\nguide.\r\n\r\nThis will improve the consistency and readability of the code.","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":0},"vue":{"insertions":176,"deletions":176},"json":{"insertions":0,"deletions":1}}}]},{"date":"2023-02-05","commitResults":[{"hash":"1dd4ab44a1981023169f65ead4b24588c6344052","messageTitle":"[#1340] Deprecate use of window.toggleNext in zoom panel (#1866)","messageBody":"Currently, the zoom panel uses the window.toggleNext function to toggle\r\nthe display of commit message bodies. The window.toggleNext function\r\ndirectly modifies the DOM instead of using Vue directives, which may\r\ninterfere with the functionality provided by Vue.\r\n\r\nLet\u0027s deprecate the use of window.toggleNext by refactoring c-zoom.vue\r\nto use the v-show directive to show/hide the body of commit messages.\r\nThis will make the code more consistent, and eliminates the need to\r\ndirectly mutate the DOM.","fileTypesAndContributionMap":{"vue":{"insertions":36,"deletions":53},"js":{"insertions":255,"deletions":17}}}]},{"date":"2023-02-19","commitResults":[{"hash":"dd6e0e972921018a14de8c26a1614225cab78ecf","messageTitle":"[#1904] Add ESLint support for TypeScript imports (#1905)","messageBody":"ESLint is currently not configured to properly support TypeScript\r\nimports. This results in an error when importing local TypeScript files\r\nwith the file extension omitted, which is the default way to import\r\nTypeScript files.\r\n\r\nLet\u0027s configure ESLint to support TypeScript imports and enforce the\r\nomission of file extensions for .ts and .js files. This will allow us to\r\npass the lint check while using the default import method, and enforce\r\nconsistency throughout the codebase.","fileTypesAndContributionMap":{"vue":{"insertions":8,"deletions":8},"json":{"insertions":10,"deletions":2},"js":{"insertions":1,"deletions":1}}}]},{"date":"2023-02-21","commitResults":[{"hash":"ebd6f81596dc8a41b75c088092c514e2561e83c7","messageTitle":"[#1756] Add JSON validation and migrate api.js to TypeScript (#1903)","messageBody":"Currently, the objects produced by reading from summary.json,\r\nauthorship.json and commits.json are not validated against any schema.\r\nThis results in these objects having an implicit any type, which might\r\nlead to type errors during runtime.\r\n\r\nLet\u0027s add support for JSON validation with the zod library and migrate\r\nthe file where the JSON files are parsed, api.js, to TypeScript. This\r\nwill increase type safety and enable the migration of other files.","fileTypesAndContributionMap":{"json":{"insertions":7,"deletions":1},"ts":{"insertions":277,"deletions":34}}}]}],"ckcherry23":[{"date":"2023-01-20","commitResults":[{"hash":"af7a05d7153e57660ac86dd90b86f9a4b4f81fd3","messageTitle":"[#1499] Declare vue prop types explicitly (#1852)","messageBody":"In the current version of RepoSense, props are declared explicitly for\r\nVue components as an array of strings. \r\n\r\nLet\u0027s declare props using the object syntax so that we can document the\r\nprop types.\r\n\r\nThis will also show a warning in the browser console if props of the\r\nwrong type are passed to the component. \r\n\r\nLet\u0027s also define classes for `Segment` and `User` for stricter type \r\nvalidation.","fileTypesAndContributionMap":{"vue":{"insertions":135,"deletions":13},"js":{"insertions":4,"deletions":1},"ts":{"insertions":50,"deletions":0}}}]},{"date":"2023-02-13","commitResults":[{"hash":"bae660c0c237bb52644bd3cb30b5ff8c40fda42a","messageTitle":"[#1042] Include deletions in contributions (#1883)","messageBody":"Currently, the ramp chart only reflects number of insertions. Hence, \r\ncommits that only delete code are omitted from the ramp chart.\r\n\r\nLet us modify the ramp chart to include thin ramps to represent commits\r\nthat only delete code. Let us also include the number of lines deleted\r\nwhen displaying lines changed on the Ramp Chart tooltip and on the\r\nCommits Panel.","fileTypesAndContributionMap":{"vue":{"insertions":33,"deletions":11}}}]},{"date":"2023-02-28","commitResults":[{"hash":"af6ebc91057005583ce0cabecfae725c6fe7a9ad","messageTitle":"[#1865] Frontend: pin file title on scroll in the Code Panel (#1860)","messageBody":"Currently, users cannot hide/collapse a file after they finish reading\r\nthrough it, without scrolling back to the top again.\r\n\r\nLet us pin the title of the file (which includes the collapse button) so\r\nthat the user can collapse a file when/after reading through it instead\r\nof only on the top. Let us also position the tooltips to show/hide a\r\nfile dynamically based on whether they are out of the viewport.","fileTypesAndContributionMap":{"scss":{"insertions":36,"deletions":7},"vue":{"insertions":46,"deletions":6},"js":{"insertions":51,"deletions":0},"ts":{"insertions":1,"deletions":0}}}]}],"domlimm":[],"jasonqiu212":[],"MarcusTXK":[{"date":"2023-01-20","commitResults":[{"hash":"dfe890bb5236f2aa2a72ce017bdb9ffa6b81df20","messageTitle":"[#452] Add date range validation to sinceDate and untilDate (#1850)","messageBody":"Output from git log is unexpected when dates earlier than the epoch is\r\nprovided, or when the date is on or beyond 2100.\r\n\r\nLet\u0027s modify the getSinceDate and getUntilDate methods in TimeUtil to\r\ncheck if the date is valid first, and only operate on the valid date.\r\nThis helps to prevent the bug while having minimal impact on any of the\r\nexisting code utilizing the util.","fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":6}}}]},{"date":"2023-01-30","commitResults":[{"hash":"a462b143125b3d07c503d8f9fae78514270b88e1","messageTitle":"[#1791] Switch to package-lock.json and npm ci (#1863)","messageBody":"Issue 1784 demonstrates how changes to upstream technologies and\r\ndependencies can break CI.  Although it was more likely to be due to\r\nChrome updating to version 102, there is also a possibility that\r\nupdating a dependency during a CI run might cause a breaking change. \r\n\r\nLet\u0027s consider switching to using package-lock.json and npm ci to ensure\r\nthat dependency versions are fixed when running CI. This allows for CI\r\nbuilds to be repeatable and consistent.","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"json":{"insertions":24941,"deletions":0}}}]},{"date":"2023-02-28","commitResults":[{"hash":"ff64510b5d55d5c0616c13c52532ce51f5de2514","messageTitle":"[#1887] Convert run-checks.sh into a Gradle task (#1907)","messageBody":"Developers are more likely to forget about the existence of \r\nenvironmental checks (even though they are important for passing CI) due\r\nto the different abstraction levels compared to the other linters. They\r\nare also unable to test these checks locally easily and have to rely on\r\nGitHub Actions. \r\n\r\nLet\u0027s use Gradle as an abstraction for run-checks.sh. Bash scripts can \r\nbe run for Linux and macOS, while batch scripts can be run for Windows.","fileTypesAndContributionMap":{"gradle":{"insertions":10,"deletions":0},"sh":{"insertions":12,"deletions":11},"md":{"insertions":1,"deletions":0},"yml":{"insertions":1,"deletions":1}}}]}],"sikai00":[{"date":"2023-01-22","commitResults":[{"hash":"c6a116b54d6d234cf33093c73183e7ae04be8054","messageTitle":"[#1118] Remove authorship tag validation regex (#1857)","messageBody":"GitHub\u0027s IDs have certain requirements to be valid, but Git does not\r\nhave such requirements. This is evident in .gitconfig files, where \r\nthe username can be set to anything the user may like.\r\n\r\nThe current validation regex is based off GitHub\u0027s ID requirement. \r\nHowever, we are currently relying on Git author names found in \r\n.gitconfig files to attribute code authorship. This may result in \r\nmissing code authorship attribution, when the Git author names do \r\nnot match GitHub\u0027s ID requirements.\r\n\r\nLet\u0027s remove this restriction to allow any valid author names to be\r\naccepted and properly attributed.","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":44},"md":{"insertions":6,"deletions":7}}}]},{"date":"2023-01-27","commitResults":[{"hash":"61c401c5e878a1133994c9c438cd2a43b9c23d2f","messageTitle":"[#1862] Docs: fix badges with correct class names (#1864)","messageBody":"Due to a migration from Bootstrap 4 to Bootstrap 5 in MarkBind, the \r\nclass names used for coloring certain tags were outdated. This resulted\r\nin said tags turning barely visible in our documentations, causing\r\nreadability issues.\r\n\r\nLet\u0027s update the offending class names for tags with the new and valid\r\nclass names introduced by Bootstrap 5.","fileTypesAndContributionMap":{"md":{"insertions":8,"deletions":8}}}]},{"date":"2023-02-02","commitResults":[{"hash":"2c16643800fab5101334ac337f7216117011fc06","messageTitle":"[#1874] Use clearer author names in test template (#1875)","messageBody":"The names used for unconventional author and white space author do not\r\nreflect its meaning correctly and may cause confusion for developers\r\nwhen reading through the code.\r\n\r\nLet\u0027s update the names in GitTestTemplate to accurately and better\r\nreflect the meaning of unconventional author and whitespace author.","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":11}}}]},{"date":"2023-02-27","commitResults":[{"hash":"4fae36ac2aaf529603273952a1897b0febd5e854","messageTitle":"[#1880] Change hasAuthorConfigFile to become a local variable (#1910)","messageBody":"AuthorConfiguration.hasAuthorConfigFile is currently a static variable \r\nthat determines whether during the analysis of repo files, a new author\r\nshould be added and tracked. If an author config file is provided, an\r\nunrecognized author is ignored, otherwise it is added and tracked.\r\n\r\nThis might cause parallel runs of test cases at the method level, \r\nespecially system test cases, to have issues.\r\n\r\nLet\u0027s make AuthorConfiguration.hasAuthorConfigFile a local variable to\r\nthe AuthorConfiguration found within each RepoConfiguration.","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":10}}}]}],"EuniceSim142":[],"yucheng11122017":[],"hhdqirui":[],"EltonGohJH":[],"lhw-1":[],"kevin9foong":[],"cheehongw":[]},"authorFileTypeContributionMap":{"Echomo-Xinyu":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"cedricongjh":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"vigneshsankariyer1234567890":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"weiquu":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"itsyme":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"Eclipse-Dominator":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"vvidday":{"java":0,"js":251,"ts":273,"vue":218,"scss":0,"json":17,"md":1,"py":0,"gradle":0,"sh":0,"yml":0},"ckcherry23":{"java":0,"js":49,"ts":49,"vue":203,"scss":36,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"domlimm":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"jasonqiu212":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"MarcusTXK":{"java":58,"js":0,"ts":0,"vue":0,"scss":0,"json":9512,"md":1,"py":0,"gradle":12,"sh":12,"yml":1},"sikai00":{"java":98,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":14,"py":0,"gradle":0,"sh":0,"yml":0},"EuniceSim142":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"yucheng11122017":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"hhdqirui":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"EltonGohJH":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"lhw-1":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"kevin9foong":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0},"cheehongw":{"java":0,"js":0,"ts":0,"vue":0,"scss":0,"json":0,"md":0,"py":0,"gradle":0,"sh":0,"yml":0}},"authorContributionVariance":{"Echomo-Xinyu":0.0,"cedricongjh":0.0,"vigneshsankariyer1234567890":0.0,"weiquu":0.0,"itsyme":0.0,"Eclipse-Dominator":0.0,"vvidday":3841.323,"ckcherry23":700.3236,"domlimm":0.0,"jasonqiu212":0.0,"MarcusTXK":6836544.5,"sikai00":198.64885,"EuniceSim142":0.0,"yucheng11122017":0.0,"hhdqirui":0.0,"EltonGohJH":0.0,"lhw-1":0.0,"kevin9foong":0.0,"cheehongw":0.0},"authorDisplayNameMap":{"Echomo-Xinyu":"SUN ..INYU","cedricongjh":"ONG ..DRIC","vigneshsankariyer1234567890":"VIGN..IYER","weiquu":"NEO ..QING","itsyme":"LEE ..AVID","Eclipse-Dominator":"LI Z..AOQI","vvidday":"DAVI.. ONG","ckcherry23":"CHAR..USAR","domlimm":"DOMI.. JUN","jasonqiu212":"QIU ..ASON","MarcusTXK":"MARC.. KYE","sikai00":"CHAN.. KAI","EuniceSim142":"SIM ..NICE","yucheng11122017":"CHAN..HENG","hhdqirui":"WU Q..IRUI","EltonGohJH":"ELTO.. HAO","lhw-1":"LEE ..WOON","kevin9foong":"KEVI..TONG","cheehongw":"WONG..HONG"}}
