[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027idea\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    id \u0027com.liferay.node\u0027 version \u00277.2.18\u0027"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    id \u0027com.github.psxpaul.execfork\u0027 version \u00270.2.0\u0027"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    id \u0027com.palantir.git-version\u0027 version \u00270.13.0\u0027"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"OperatingSystem os \u003d DefaultNativePlatform.currentOperatingSystem;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027reposense.RepoSense\u0027"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"node.nodeVersion \u003d \u002714.20.1\u0027"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_1_8"},{"lineNumber":22,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_1_8"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"configurations {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    systemtestImplementation.extendsFrom testImplementation"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    systemtestRuntime.extendsFrom testRuntime"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.8.2\u0027"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    implementation  group: \u0027com.google.code.gson\u0027 ,name: \u0027gson\u0027, version:\u00272.9.0\u0027"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    implementation  group: \u0027net.freeutils\u0027, name: \u0027jlhttp\u0027, version: \u00272.6\u0027"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    implementation  group: \u0027net.sourceforge.argparse4j\u0027, name: \u0027argparse4j\u0027, version: \u00270.9.0\u0027"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.apache.ant\u0027, name: \u0027ant\u0027, version: \u00271.10.12\u0027"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.apache.commons\u0027, name: \u0027commons-csv\u0027, version: \u00271.9.0\u0027"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.apache.commons\u0027, name: \u0027commons-text\u0027, version: \u00271.9\u0027"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.fusesource.jansi\u0027, name: \u0027jansi\u0027, version: \u00272.4.0\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"sourceSets {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    systemtest {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        compileClasspath +\u003d main.output + test.output"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        runtimeClasspath +\u003d main.output + test.output"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        java.srcDir file(\u0027src/systemtest/java\u0027)"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        resources.srcDir file(\u0027src/systemtest/resources\u0027)"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"wrapper {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    gradleVersion \u003d \u00277.4.2\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"def installFrontend \u003d tasks.register(\u0027installFrontend\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    args \u003d [\u0027ci\u0027]"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"def buildFrontend \u003d tasks.register(\u0027buildFrontend\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    dependsOn installFrontend"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    args \u003d [\u0027run\u0027, \u0027devbuild\u0027]"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"def zipReport \u003d tasks.register(\u0027zipReport\u0027, Zip) {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    dependsOn buildFrontend"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    from \u0027frontend/build/\u0027"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \u0027templateZip\u0027"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    destinationDirectory \u003d file(\u0027src/main/resources\u0027)"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"def compileJava \u003d tasks.compileJava"},{"lineNumber":79,"author":{"gitId":"-"},"content":"def classes \u003d tasks.classes"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"tasks.named(\"processSystemtestResources\").configure {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    duplicatesStrategy \u003d DuplicatesStrategy.INCLUDE"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"tasks.run.dependsOn(zipReport);"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    //the second arguments indicates the default value associated with the property."},{"lineNumber":89,"author":{"gitId":"-"},"content":"    tasks.compileJava.mustRunAfter(zipReport)"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    args System.getProperty(\u0027args\u0027, \u0027\u0027).split()"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    systemProperty \"version\", getRepoSenseVersion()"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00279.3\u0027"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    getConfigDirectory().set(file(\"$rootProject.projectDir/config/checkstyle\"))"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"idea {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    module {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        sourceSets.systemtest.allSource.srcDirs.each { srcDir -\u003e module.testSourceDirs +\u003d srcDir }"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    environment(\"REPOSENSE_ENVIRONMENT\", \"TEST\")"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        events \u0027passed\u0027, \u0027skipped\u0027, \u0027failed\u0027"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d true"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    doFirst {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        deleteReposAddressDirectory()"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    doLast {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        deleteReposAddressDirectory()"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"tasks.shadowJar.dependsOn(zipReport);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    tasks.compileJava.mustRunAfter(zipReport)"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    tasks.processResources.mustRunAfter(zipReport)"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027RepoSense.jar\u0027"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    destinationDirectory \u003d file(\"${buildDir}/jar/\")"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    manifest {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        attributes \u0027Implementation-Version\u0027: getRepoSenseVersion()"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"tasks.register(\u0027lintFrontend\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    dependsOn installFrontend"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    args \u003d [\u0027run\u0027, \u0027lint\u0027]"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"def checkstyleMain \u003d tasks.checkstyleMain"},{"lineNumber":144,"author":{"gitId":"-"},"content":"def checkstyleTest \u003d tasks.checkstyleTest"},{"lineNumber":145,"author":{"gitId":"-"},"content":"def checkstyleSystemtest \u003d tasks.checkstyleSystemtest"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"tasks.register(\u0027checkstyleAll\u0027, Checkstyle) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    dependsOn checkstyleMain, checkstyleTest, checkstyleSystemtest"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    tasks.checkstyleTest.mustRunAfter(\u0027checkstyleMain\u0027)"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    tasks.checkstyleSystemtest.mustRunAfter(\u0027checkstyleTest\u0027)"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"tasks.register(\u0027systemtest\u0027, Test) {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    testClassesDirs \u003d sourceSets.systemtest.output.classesDirs"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    classpath \u003d sourceSets.systemtest.runtimeClasspath"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    environment(\"REPOSENSE_ENVIRONMENT\", \"TEST\")"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        events \u0027passed\u0027, \u0027skipped\u0027, \u0027failed\u0027"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d true"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    doFirst {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        deleteReposAddressDirectory()"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"    doLast {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        deleteReposAddressDirectory()"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"def serveTestReportInBackground \u003d tasks.register(\u0027serveTestReportInBackground\u0027, com.github.psxpaul.task.JavaExecFork) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    dependsOn zipReport, compileJava, processResources, classes"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    tasks.compileJava.mustRunAfter(zipReport)"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    tasks.processResources.mustRunAfter(zipReport)"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    main \u003d mainClassName"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    classpath \u003d sourceSets.main.runtimeClasspath"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    args \u003d [\u0027--config\u0027, \u0027./frontend/cypress/config\u0027, \u0027--since\u0027, \u0027d1\u0027, \u0027--view\u0027]"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    String versionJvmArgs \u003d \u0027-Dversion\u003d\u0027 + getRepoSenseVersion()"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    jvmArgs \u003d [ versionJvmArgs ]"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    killDescendants \u003d false // Kills descendants of started process using methods only found in Java 9 and beyond."},{"lineNumber":184,"author":{"gitId":"-"},"content":"    // Above flag is set to true by default but is incompatible with Java 8. It should be removed from this file if we fully migrate to Java 11."},{"lineNumber":185,"author":{"gitId":"-"},"content":"    waitForPort \u003d 9000"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"def installCypress \u003d tasks.register(\u0027installCypress\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/cypress/\u0027"},{"lineNumber":190,"author":{"gitId":"MarcusTXK"},"content":"    args \u003d [\u0027ci\u0027]"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"tasks.register(\u0027cypress\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    dependsOn installCypress, serveTestReportInBackground"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    tasks.serveTestReportInBackground.mustRunAfter(installCypress)"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"    workingDir \u003d file(\u0027frontend/cypress/\u0027)"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    args \u003d [\"run-script\", \"debug\"]"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"tasks.register(\u0027frontendTest\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    dependsOn installCypress, serveTestReportInBackground"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    tasks.serveTestReportInBackground.mustRunAfter(installCypress)"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"    workingDir \u003d file(\u0027frontend/cypress/\u0027)"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    args \u003d [\"run-script\", \"tests\"]"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"    // Run tests in CI without slow motion"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    if (project.hasProperty(\u0027ci\u0027)) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        args \u003d [\"run-script\", \"ci\"]"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"tasks.withType(Copy) {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    includeEmptyDirs \u003d true"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"jacoco {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    toolVersion \u003d \"0.8.7\""},{"lineNumber":220,"author":{"gitId":"-"},"content":"}"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"jacocoTestReport {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    reports {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        html.required \u003d true"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        xml.required \u003d true"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        csv.required \u003d false"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        html.destination file(\"${buildDir}/jacocoHtml\")"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"    executionData systemtest, frontendTest"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"tasks.register(\u0027coverage\u0027, JacocoReport)"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"coverage.configure {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"    afterEvaluate {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    reports {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        html.required \u003d true"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        xml.required \u003d true"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"String getRepoSenseVersion() {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    String repoSenseVersion \u003d project.property(\"version\")"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    if (repoSenseVersion.equals(\"unspecified\")) {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        repoSenseVersion \u003d versionDetails().commitDistance \u003d\u003d 0 ? versionDetails().lastTag : versionDetails().gitHash"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    return repoSenseVersion"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"def syncFrontendPublic \u003d tasks.register(\u0027syncFrontendPublic\u0027, Sync) {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    from \u0027reposense-report\u0027"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    into \u0027frontend/public/\u0027"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    include \u0027**/*.json\u0027"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    includeEmptyDirs \u003d false"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    preserve {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        include \u0027index.html\u0027"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        include \u0027favicon.ico\u0027"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"def macHotReloadFrontend \u003d tasks.register(\u0027macHotReloadFrontend\u0027, Exec) {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    dependsOn installFrontend"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    onlyIf {os.isMacOsX()}"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    commandLine \u0027npm\u0027, \u0027run\u0027, \u0027serveOpen\u0027"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"def windowsHotReloadFrontend \u003d tasks.register(\u0027windowsHotReloadFrontend\u0027, Exec) {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    dependsOn installFrontend"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    onlyIf {os.isWindows()}"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    commandLine \u0027cmd\u0027,\u0027/c\u0027, \u0027START\u0027, \u0027\"hotreload RepoSense frontend\"\u0027, \u0027npm\u0027, \u0027run\u0027, \u0027serveOpen\u0027"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"def linuxHotReloadFrontend \u003d tasks.register(\u0027linuxHotReloadFrontend\u0027, Exec) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    dependsOn installFrontend"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    onlyIf {os.isLinux()}"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    commandLine \u0027npm\u0027, \u0027run\u0027, \u0027serveOpen\u0027"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"tasks.register(\u0027hotReloadFrontend\u0027) {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    dependsOn syncFrontendPublic"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    finalizedBy windowsHotReloadFrontend"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    finalizedBy macHotReloadFrontend"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    finalizedBy linuxHotReloadFrontend"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}"},{"lineNumber":298,"author":{"gitId":"-"},"content":"// End of hot reload Tasks"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"void deleteReposAddressDirectory() {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    final String REPOS_ADDRESS \u003d \"repos\""},{"lineNumber":302,"author":{"gitId":"-"},"content":"    def reposDirectory \u003d new File(REPOS_ADDRESS)"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    reposDirectory.deleteDir()"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027build\u0027, \u0027systemtest\u0027, \u0027frontendTest\u0027, \u0027coverage\u0027"}],"authorContributionMap":{"MarcusTXK":2,"-":304}},{"path":"docs/_markbind/variables.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_announcement\"\u003e\u003cmd\u003e:fas-bell:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_book\"\u003e\u003cmd\u003e:fas-book:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_calendar\"\u003e\u003cmd\u003e:fas-calendar-alt:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_dislike\"\u003e\u003cmd\u003e:fas-thumbs-down:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_example\"\u003e\u003cmd\u003e:fas-cube:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_embedding\"\u003e\u003cmd\u003e:glyphicon-log-in:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_exercise\"\u003e\u003cmd\u003e:fas-dumbbell:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_extra\"\u003e\u003cspan class\u003d\u0027badge rounded-pill bg-secondary\u0027\u003e\u003cmd\u003e:fas-plus: extra\u003c/md\u003e\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_info\"\u003e\u003cmd\u003e:fas-info-circle:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_like\"\u003e\u003cmd\u003e:fas-thumbs-up:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_linux\"\u003e\u003cmd\u003e:fab-linux:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_level_basic\"\u003e\u003cmd\u003e\u003cspan class\u003d\"badge rounded-pill bg-danger\"\u003e:far-star:\u003c/span\u003e\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_level_intermediate\"\u003e\u003cmd\u003e\u003cspan class\u003d\"badge rounded-pill bg-warning text-white\"\u003e:far-star::far-star:\u003c/span\u003e\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_level_advanced\"\u003e\u003cmd\u003e\u003cspan class\u003d\"badge rounded-pill bg-success\"\u003e:far-star::far-star::far-star:\u003c/span\u003e\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_important_big_red\"\u003e\u003cfont color\u003d\"red\"\u003e\u003cbig\u003e:glyphicon-exclamation-sign:\u003c/big\u003e\u003c/font\u003e\u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_important\"\u003e\u003cmd\u003e:glyphicon-exclamation-sign:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_new_window\"\u003e\u003cmd\u003e:glyphicon-new-window:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_outcome\"\u003e\u003cmd\u003e:fas-trophy:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_output\"\u003e\u003cmd\u003e:fas-arrow-down:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_output_right\"\u003e\u003cmd\u003e:fas-arrow-right:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_print\"\u003e\u003cmd\u003e:glyphicon-print:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_prereq\"\u003e\u003cmd\u003e:glyphicon-education:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_preview\"\u003e\u003cmd\u003e:glyphicon-eye-open:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_pro_tip\"\u003e\u003cspan class\u003d\"badge rounded-pill bg-warning\"\u003e:fas-lightbulb: PRO TIP\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_Q\"\u003e\u003cmd\u003e:glyphicon-question-sign:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_Q_A\"\u003e{{ icon_Q | safe }}:glyphicon-ok-sign:\u003c/span\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_resource\"\u003e\u003cmd\u003e:fas-paperclip:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_terminal\"\u003e\u003csmal\u003e\u003cspan class\u003d\"badge bg-secondary\"\u003e\u0026gt;_\u003c/span\u003e\u003c/smal\u003e\u003c/span\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_text\"\u003e\u003cmd\u003e:far-file-alt:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_tick\"\u003e\u003cmd\u003e:fas-check:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_tip\"\u003e\u003cspan class\u003d\"badge rounded-pill bg-warning\"\u003e:fas-lightbulb:\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_tick_green\"\u003e\u003cspan style\u003d\"color:green\"\u003e{{ icon_tick | safe }}\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_todo\"\u003e\u003cmd\u003e:glyphicon-check:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_slides\"\u003e\u003cmd\u003e:far-images:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_video\"\u003e\u003cmd\u003e:glyphicon-facetime-video:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_windows\"\u003e\u003cmd\u003e:fab-windows:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_x\"\u003e\u003cmd\u003e:fas-times:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_x_red\"\u003e\u003cspan style\u003d\"color:red\"\u003e{{ icon_x | safe }}\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"bad\"\u003e\u003cfont color\u003d\"red\"\u003e\u003cmd\u003e**{{ icon_dislike | safe }} Bad**\u003c/md\u003e\u003c/font\u003e\u003c/span\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"good\"\u003e\u003cfont color\u003d\"green\"\u003e\u003cmd\u003e**{{ icon_like | safe }} Good**\u003c/md\u003e\u003c/font\u003e\u003c/span\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cvariable from\u003d\"variables.json\" /\u003e"}],"authorContributionMap":{"sikai00":7,"-":35}},{"path":"docs/dg/styleGuides.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Appendix: Style guides\" %}"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"Our coding standards are mostly based on those at [se-education.org/guides](https://se-education.org/guides)."},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"* [**CSS** coding standard](https://se-education.org/guides/conventions/css.html)"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* [**Files/folders** naming conventions](https://se-education.org/guides/conventions/files.html)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* [**HTML** coding standard](https://se-education.org/guides/conventions/html.html)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* [**Markdown/MarkBind** coding standard](https://se-education.org/guides/conventions/markdown.html)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* [**Java** coding standard](https://se-education.org/guides/conventions/java/index.html)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* [**JavaScript** coding standard](https://se-education.org/guides/conventions/javascript.html)"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"* **Vue Components**: Follow the [**Vue style guide**](https://vuejs.org/style-guide/), up to the **Recommended** section."},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Documentation**: Follow the [**Google developer documentation style guide**](https://developers.google.com/style)."},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Note on Ternary Operators:"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Ternary operators can be used to shorten if-else blocks such as this:"},{"lineNumber":24,"author":{"gitId":"-"},"content":"```"},{"lineNumber":25,"author":{"gitId":"-"},"content":"LocalDateTime min \u003d ARBITRARY_FIRST_COMMIT_DATE_UTC.withZoneSameInstant(zoneId).toLocalDateTime();"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if (!commitInfos.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    min \u003d commitInfos.get(0).getTime();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":"return min;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"```"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"The result would look something like this:"},{"lineNumber":33,"author":{"gitId":"-"},"content":"```"},{"lineNumber":34,"author":{"gitId":"-"},"content":"return (commitInfos.isEmpty())"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ? ARBITRARY_FIRST_COMMIT_DATE_UTC.withZoneSameInstant(zoneId).toLocalDateTime()"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        : commitInfos.get(0).getTime();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"```"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"To preserve readability, it is recommended that if-else blocks should only be "},{"lineNumber":40,"author":{"gitId":"-"},"content":"converted to ternary operators if the resultant code can be kept at most 3 lines long"},{"lineNumber":41,"author":{"gitId":"-"},"content":"(in accordance to the coding standard)."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Additional Javadoc requirements:"},{"lineNumber":44,"author":{"gitId":"-"},"content":"In addition to what has been mentioned in the [**Java** coding standard (SE-EDU)](https://se-education.org/guides/conventions/java/index.html) and [**Google Java Style Guide**](https://google.github.io/styleguide/javaguide.html), we also stipulate the following standards for Javadoc:"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* If Javadoc is written for a method, all input parameters should be described in the Javadoc, either in the description with `@code tags` or through `@param` block tags."},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * If `@param` block tags are used, they must be used for all parameters."},{"lineNumber":47,"author":{"gitId":"-"},"content":"  * This is not necessary (although still recommended) for methods with `@Override` annotations if Javadoc is used. However, if the method that is being overriden is part of your code and has Javadoc, all parameters must be described."},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"Negative Examples:"},{"lineNumber":50,"author":{"gitId":"-"},"content":"```"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Not okay (Only mentions zoneId parameter):"},{"lineNumber":52,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":53,"author":{"gitId":"-"},"content":" * Returns a {@link LocalDateTime} object adjusted for timezone given by {@code zoneId}."},{"lineNumber":54,"author":{"gitId":"-"},"content":" */"},{"lineNumber":55,"author":{"gitId":"-"},"content":"public LocalDateTime adjustTimeZone(LocalDateTime sinceDate, ZoneId zoneId) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //Code here"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"Not okay (@param tag used only for zoneId)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":61,"author":{"gitId":"-"},"content":" * Returns a {@link LocalDateTime} object by adjusting {@code sinceDate}"},{"lineNumber":62,"author":{"gitId":"-"},"content":" * to the timezone given by {@code zoneId}."},{"lineNumber":63,"author":{"gitId":"-"},"content":" *"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * @param zoneId The timezone ID to adjust the sinceDate to."},{"lineNumber":65,"author":{"gitId":"-"},"content":" */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"public LocalDateTime adjustTimeZone(LocalDateTime sinceDate, ZoneId zoneId) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    //Code here"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Positive Example #1:"},{"lineNumber":71,"author":{"gitId":"-"},"content":"```"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Okay (No @param tags):"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Returns a {@link LocalDateTime} object by adjusting {@code sinceDate}"},{"lineNumber":75,"author":{"gitId":"-"},"content":" * to the timezone given by {@code zoneId}."},{"lineNumber":76,"author":{"gitId":"-"},"content":" */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"public LocalDateTime adjustTimeZone(LocalDateTime sinceDate, ZoneId zoneId) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //Code here"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Positive Example #2:"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Okay (@param tags used for all inputs):"},{"lineNumber":84,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":85,"author":{"gitId":"-"},"content":" * Returns a {@link LocalDateTime} object by adjusting {@code sinceDate}"},{"lineNumber":86,"author":{"gitId":"-"},"content":" * to the timezone given by {@code zoneId}."},{"lineNumber":87,"author":{"gitId":"-"},"content":" * "},{"lineNumber":88,"author":{"gitId":"-"},"content":" * @param sinceDate The date prior to the timezone conversion."},{"lineNumber":89,"author":{"gitId":"-"},"content":" * @param zoneId The timezone ID to adjust the sinceDate to."},{"lineNumber":90,"author":{"gitId":"-"},"content":" */"},{"lineNumber":91,"author":{"gitId":"-"},"content":"public LocalDateTime adjustTimeZone(LocalDateTime sinceDate, ZoneId zoneId) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    //Code here"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}"},{"lineNumber":94,"author":{"gitId":"-"},"content":"```"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"* Within the main code, if an exception is thrown in a method (both header and body) for which Javadoc is written, a `@throws` tag must be used to describe how the exception is likely to arise."},{"lineNumber":97,"author":{"gitId":"-"},"content":"  * This requirement does not apply to test code."},{"lineNumber":98,"author":{"gitId":"-"},"content":"  * One `@throws` tag per unique exception."},{"lineNumber":99,"author":{"gitId":"-"},"content":"  * The order of exceptions in the `@throws` tag block should match that of the method\u0027s `throws` statement."},{"lineNumber":100,"author":{"gitId":"-"},"content":"```"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Not okay (order of exceptions in tag block and method signature do not match):"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Returns a {@link LocalDateTime} object from {@code dateString}."},{"lineNumber":104,"author":{"gitId":"-"},"content":" * "},{"lineNumber":105,"author":{"gitId":"-"},"content":" * @throws ParseException if {@code dateString} cannot be parsed."},{"lineNumber":106,"author":{"gitId":"-"},"content":" * @throws NullPointerException if {@code dateString} is null."},{"lineNumber":107,"author":{"gitId":"-"},"content":" */"},{"lineNumber":108,"author":{"gitId":"-"},"content":"public LocalDateTime parseDate(String dateString) throws NullPointerException, ParseException {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    String trimmedString \u003d dateString.toUpperCase(); // NullPointerException may happen here."},{"lineNumber":110,"author":{"gitId":"-"},"content":"    // Code here"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"Should be:"},{"lineNumber":114,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":115,"author":{"gitId":"-"},"content":" * Returns a {@link LocalDateTime} object from {@code dateString}."},{"lineNumber":116,"author":{"gitId":"-"},"content":" * "},{"lineNumber":117,"author":{"gitId":"-"},"content":" * @throws NullPointerException if {@code dateString} is null."},{"lineNumber":118,"author":{"gitId":"-"},"content":" * @throws ParseException if {@code dateString} cannot be parsed."},{"lineNumber":119,"author":{"gitId":"-"},"content":" */"},{"lineNumber":120,"author":{"gitId":"-"},"content":"public LocalDateTime parseDate(String dateString) throws NullPointerException, ParseException {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    String trimmedString \u003d dateString.toUpperCase(); // NullPointerException may happen here."},{"lineNumber":122,"author":{"gitId":"-"},"content":"    // Code here"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}"},{"lineNumber":124,"author":{"gitId":"-"},"content":"```"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"vvidday":1,"-":125}},{"path":"docs/ug/configFiles.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Appendix: Config files format\" %}"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"{% set mandatory %}\u003cspan class\u003d\"badge bg-danger\"\u003emandatory\u003c/span\u003e{% endset %}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"Given below are the details of the various config files used by RepoSense."},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"**RepoSense ignores the order of column headers in the CSV config files. However, the spelling of the column headers must match the specified headers exactly, or the column would be ignored by RepoSense.**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"**A value in a config file is optional to provide unless it is specified as {{ mandatory }}**."},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"## `repo-config.csv`"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"**`repo-config.csv` file contains repo-level config data.** Each row represents a repository\u0027s configuration ([example](repo-config.csv))."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"| Column Name | Explanation |"},{"lineNumber":33,"author":{"gitId":"-"},"content":"|-------------|-------------|"},{"lineNumber":34,"author":{"gitId":"-"},"content":"| Repository\u0027s Location {{ mandatory }} | The `Remote Repo URL` or `Disk Path` to the git repository e.g., `https://github.com/foo/bar.git` or `C:\\Users\\user\\Desktop\\GitHub\\foo\\bar` |"},{"lineNumber":35,"author":{"gitId":"-"},"content":"| Branch | The branch to analyze in the target repository e.g., `master`. Default: the default branch of the repo |"},{"lineNumber":36,"author":{"gitId":"-"},"content":"| File formats\u003csup\u003e*+\u003c/sup\u003e | The file extensions to analyze. Binary file formats, such as `png` and `jpg`, will be automatically labelled as the file type `binary` in the generated report. Default: all file formats |"},{"lineNumber":37,"author":{"gitId":"-"},"content":"| Find Previous Authors | Enter **`yes`** to utilize Git blame\u0027s ignore revisions functionality, RepoSense will attempt to blame the line changes caused by commits in the ignore commit list to the previous authors who altered those lines (if available). |"},{"lineNumber":38,"author":{"gitId":"-"},"content":"| Ignore Glob List\u003csup\u003e*+\u003c/sup\u003e | The list of file path globs to ignore during analysis for each author e.g., `test/**;temp/**`. Refer to the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob) for the path glob syntax. |"},{"lineNumber":39,"author":{"gitId":"-"},"content":"| Ignore standalone config | To ignore the standalone config file (if any) in target repository, enter **`yes`**. If the cell is empty, the standalone config file in the repo (if any) will take precedence over configurations provided in the csv files. |"},{"lineNumber":40,"author":{"gitId":"-"},"content":"| Ignore Commits List\u003csup\u003e*+\u003c/sup\u003e | The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash. Additionally, a range of commits can be specified using the `..` notation e.g. `abc123..def456` (both inclusive). |"},{"lineNumber":41,"author":{"gitId":"-"},"content":"| Ignore Authors List\u003csup\u003e*+\u003c/sup\u003e | The list of authors to ignore during analysis. Authors should be specified by their [Git Author Name](#a-note-about-git-author-name). |"},{"lineNumber":42,"author":{"gitId":"-"},"content":"| Shallow Cloning | Enter **`yes`** to clone the repository using Git\u0027s shallow cloning functionality. This option can significantly reduce the time taken to clone large repositories. However, the option should ideally be disabled for smaller repositories where the `.git` file is smaller than 500 MB, as it would create overhead. |"},{"lineNumber":43,"author":{"gitId":"-"},"content":"| File Size Limit\u003csup\u003e+\u003c/sup\u003e | Enter a file size limit for the repository in bytes as a single number without units (for a size limit of 1MB for example, enter 1000000). This file size limit will override the default file size limit (500KB). Files exceeding the file size limit will be marked as ignored and only the file name and line count will be reflected in the report. |"},{"lineNumber":44,"author":{"gitId":"-"},"content":"| Ignore File Size Limit | Enter **`yes`** to ignore both the default file size limit and the file size limit possibly set by the user in `repo-config.csv`. |"},{"lineNumber":45,"author":{"gitId":"-"},"content":"| Skip Ignored File Analysis | Enter **`yes`** to ignore analysis of files exceeding the file size limit entirely. If file analysis is skipped, all information about the file will be omitted from the generated report. This option can significantly improve report generation time. |"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The Shallow Cloning option is incompatible with the \"--last-modified-date\" CLI flag."},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"If Ignore File Size Limit is yes, the File Size Limit and Skip Ignored File Analysis columns are ignored."},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e\u003c/br\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003csup\u003e+ **Overrideable column**: prepend with `override:` to use entered value(s) instead of value(s) from standalone config.\u003c/sup\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"When using [standalone config](#config-json-standalone-config-file) (if it is not ignored), it is possible to override specific values from the standalone config by prepending the entered value with `override:`."},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"## `author-config.csv`"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"Optionally, you can use an `author-config.csv` (which should be in the same directory as the `repo-config.csv` file) to provide more details about the authors to analyze ([example](author-config.csv)). It should contain the following columns:"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"| Column Name | Explanation |"},{"lineNumber":70,"author":{"gitId":"-"},"content":"|-------------|-------------|"},{"lineNumber":71,"author":{"gitId":"-"},"content":"| Repository\u0027s Location | Same as `repo-config.csv`. Default: all the repos in `repo-config.csv` |"},{"lineNumber":72,"author":{"gitId":"-"},"content":"| Branch | The branch to analyze for this author, e.g., `master`. Default: the author will be bound to all the repos in `repo-config.csv` that has the same repo\u0027s location, regardless of branch. |"},{"lineNumber":73,"author":{"gitId":"-"},"content":"| Author\u0027s Git Host ID\u003csup\u003e#\u003c/sup\u003e {{ mandatory }} | Username of the target author\u0027s profile on GitHub, GitLab or Bitbucket, e.g.`JohnDoe`. |  "},{"lineNumber":74,"author":{"gitId":"-"},"content":"| Author\u0027s Emails\u003csup\u003e*\u003c/sup\u003e | Associated emails of the author. For GitHub users, this can be found in your [GitHub settings](https://github.com/settings/emails). |"},{"lineNumber":75,"author":{"gitId":"-"},"content":"| Author\u0027s Display Name | The name to display for the author. Default: author\u0027s username. |"},{"lineNumber":76,"author":{"gitId":"-"},"content":"| Author\u0027s Git Author Name\u003csup\u003e*\u003c/sup\u003e | The meaning of _Git Author Name_ is explained in [_A note about git author name_](#a-note-about-git-author-name). |"},{"lineNumber":77,"author":{"gitId":"-"},"content":"| Ignore Glob List\u003csup\u003e*\u003c/sup\u003e | Files to ignore for this author, in addition to files ignored by the patterns specified in `repo-config.csv`. The path glob syntax is the same as that of Ignore Glob List in `repo-config.csv`. |"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003c/br\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003csup\u003e# For backward compatibility, `Author\u0027s GitHub ID` is still accepted as the header in place of `Author\u0027s Git Host ID`.\u003c/sup\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"If `author-config.csv` is not given and the repo has not provided author details in a standalone config file, all the authors of the repositories within the date range specified (if any) will be analyzed."},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"## `group-config.csv`"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Optionally, you can provide a `group-config.csv`(which should be in the same directory as `repo-config.csv` file) to provide details on any custom groupings for files in specified repositories ([example](group-config.csv)). It should contain the following columns:"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"| Column Name | Explanation |"},{"lineNumber":92,"author":{"gitId":"-"},"content":"|-------------|-------------|"},{"lineNumber":93,"author":{"gitId":"-"},"content":"| Repository\u0027s Location | Same as `repo-config.csv`. Default: all the repos in `repo-config.csv` |"},{"lineNumber":94,"author":{"gitId":"-"},"content":"| Group Name {{ mandatory }} | Name of the group, e.g.,`test`. |"},{"lineNumber":95,"author":{"gitId":"-"},"content":"| Globs * {{ mandatory }} | The list of file path globs to include for specified group, e.g.,`**/test/*;**.java`. |"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"Note that a file in a given repository should only be tagged to one group. \u003cbr\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"e.g.: `example.java` in `example-repo` can either be in the `test` group or the `code` group, but not in both `test` and `code` group. If multiple groups are specified for a given file, the latter group (i.e., `code` group) is set for the file."},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"## `report-config.json`"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"You can optionally use `report-config.json` to customize report generation by providing the following information. ([example](report-config.json))"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"**Fields to provide**:"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* `title`: Title of the generated report, which is also the title of the deployed dashboard. Default: \"RepoSense Report\""},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"section-standalone\"\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"## `config.json` (standalone config file)"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"Repo owners can provide the following additional information to RepoSense using a config file that we call the **_standalone config file_**:"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* which files/authors/commits to analyze/omit"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* which git and git host usernames belong to which authors"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* the display of an author"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"To use this feature, add a `_reposense/config.json` to the root of your repo using the format in the example below ([another example](https://github.com/reposense/RepoSense/blob/master/_reposense/config.json)) and **commit it** (reason: RepoSense can see committed code only):"},{"lineNumber":123,"author":{"gitId":"-"},"content":"```json {.no-line-numbers}"},{"lineNumber":124,"author":{"gitId":"-"},"content":"{"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  \"ignoreGlobList\": [\"about-us/**\", \"**index.html\"],"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  \"formats\": [\"html\", \"css\"],"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  \"ignoreCommitList\": [\"90018e49f129ce7e0abdc8b18e91c9813588c601\", \"67890def\", \"abc123..def456\"],"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  \"ignoreAuthorList\": [\"charlie\"],"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  \"authors\":"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  ["},{"lineNumber":131,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      \"githubId\": \"alice\","},{"lineNumber":133,"author":{"gitId":"-"},"content":"      \"emails\": [\"alice@example.com\", \"alicet@example.com\"],"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \"displayName\": \"Alice T.\","},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \"authorNames\": [\"AT\", \"A\"],"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      \"ignoreGlobList\": [\"**.css\"]"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \"githubId\": \"bob\""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}"},{"lineNumber":143,"author":{"gitId":"-"},"content":"```"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Note: all fields are optional unless specified otherwise."},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"**Fields to provide _repository-level_ info**:"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"* `ignoreGlobList`: Folders/files to ignore, specified using the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob)."},{"lineNumber":149,"author":{"gitId":"-"},"content":"* `formats`: File formats to analyze. Binary file formats, such as `png` and `jpg`, will be automatically labelled as the file type `binary` in the generated report. Default: all file formats"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* `ignoreCommitList`: The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash. Additionally, a range of commits can be specified using the `..` notation e.g. `abc123..def456` (both inclusive)."},{"lineNumber":151,"author":{"gitId":"-"},"content":"* `ignoreAuthorList`: The list of authors to ignore during analysis. Authors specified in `authors` field or `author-config.csv` will be also be omitted if they are in this list. Authors should be specified by their [Git Author Name](#a-note-about-git-author-name)."},{"lineNumber":152,"author":{"gitId":"-"},"content":"* `fileSizeLimit`: A file size limit for the repository in bytes as a single number without units, that will override the default file size limit. If not specified, the default file size limit will continue to be used."},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"**Fields to provide _author-level_ info**:\u003cbr\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Note: `authors` field should contain _all_ authors that should be captured in the analysis."},{"lineNumber":156,"author":{"gitId":"-"},"content":"* `githubId`: Username of the author. {{ mandatory }} field."},{"lineNumber":157,"author":{"gitId":"-"},"content":"* `emails`: Associated git emails of the author. For GitHub, this can be found in your [GitHub settings](https://github.com/settings/emails)."},{"lineNumber":158,"author":{"gitId":"-"},"content":"* `displayName`: Name to display on the report for this author."},{"lineNumber":159,"author":{"gitId":"-"},"content":"* `authorNames`: Git Author Name(s) used in the author\u0027s commits. By default, RepoSense assumes an author would use her GitHub username as the Git username too. The meaning of _Git Author Name_ is explained in [_A note about git author name_](#a-note-about-git-author-name)."},{"lineNumber":160,"author":{"gitId":"-"},"content":"* `ignoreGlobList`: _Additional_ (i.e. on top of the repo-level `ignoreGlobList`) folders/files to ignore for a specific author. The path glob syntax is specified by the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob). In the example above, the actual `ignoreGlobList` for `alice` would be `[\"about-us/**\", \"**index.html\", \"**.css\"]`."},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"To verify your standalone configuration is as intended, add the `_reposense/config.json` to your local copy of repo and run RepoSense against it as follows:\u003cbr\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* Format: `java -jar RepoSense.jar --repo LOCAL_REPO_LOCATION` \u003cbr\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* Example: `java -jar RepoSense.jar --repo c:/myRepose/foo/bar`\u003cbr\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"After that, view the report to see if the configuration you specified in the config file is being reflected correctly in the report."},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"## A note about git author name"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"`Git Author Name` refers to the customizable author\u0027s display name set in the local `.gitconfig` file. For example, in the Git Log\u0027s display:"},{"lineNumber":170,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}"},{"lineNumber":171,"author":{"gitId":"-"},"content":"..."},{"lineNumber":172,"author":{"gitId":"-"},"content":"commit cd7f610e0becbdf331d5231887d8010a689f87c7"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Author: ConfiguredAuthorName \u003cauthor@example.com\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Date:   Fri Feb 9 19:14:41 2018 +0800"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    Make some changes to show my new author\u0027s name"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"commit e3f699fd4ef128eebce98d5b4e5b3bb06a512f49"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Author: ActualGitHostId \u003cauthor@example.com\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Date:   Fri Feb 9 19:13:13 2018 +0800"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    Initial commit"},{"lineNumber":183,"author":{"gitId":"-"},"content":" ..."},{"lineNumber":184,"author":{"gitId":"-"},"content":"```"},{"lineNumber":185,"author":{"gitId":"-"},"content":"`ActualGitHostId` and `ConfiguredAuthorName` are both `Git Author Name` of the same author.\u003cbr\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"To find the author name that you are currently using for your current git repository, run the following command within your git repository:"},{"lineNumber":187,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}"},{"lineNumber":188,"author":{"gitId":"-"},"content":"git config user.name"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```"},{"lineNumber":190,"author":{"gitId":"-"},"content":"To set the author name to the value you want (e.g., to set it to your GitHub username) for your current git repository, you can use the following command ([more info](https://www.git-tower.com/learn/git/faq/change-author-name-email)):"},{"lineNumber":191,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}"},{"lineNumber":192,"author":{"gitId":"-"},"content":"git config user.name \"YOUR_AUTHOR_NAME”"},{"lineNumber":193,"author":{"gitId":"-"},"content":"```"},{"lineNumber":194,"author":{"gitId":"-"},"content":"To set the author name to use a default value you want for future git repositories, you can use the following command:"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}"},{"lineNumber":196,"author":{"gitId":"-"},"content":"git config --global user.name \"YOUR_AUTHOR_NAME”"},{"lineNumber":197,"author":{"gitId":"-"},"content":"```"},{"lineNumber":198,"author":{"gitId":"-"},"content":"RepoSense expects the Git Author Name to be the same as author\u0027s username on the Git hosting platform (GitHub, GitLab, BitBucket). If an author\u0027s `Git Author Name` is different from their username on the Git hosting platform, the `Git Author Name` needs to be specified in the standalone config file. If the author has more than one `Git Author Name`, multiple values can be entered too."},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"Note: Symbols such as `\"`, `!`, `/` etc. in your author name will be omitted, which may reduce the accuracy of the analysis if 2 names in the repository are approximately similar."},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"sikai00":1,"-":204}},{"path":"docs/ug/usingAuthorTags.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Appendix: Using `@@author` tags\" %}"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"{% from \u0027scripts/macros.njk\u0027 import embed, step with context %}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"`@@author` tags is a rather invasive but sometimes necessary way to provide more information to RepoSense, by annotating the code being analyzed."},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"If you want to override the code authorship deduced by RepoSense (which is based on Git blame/log data), you can use `@@author` tags to specify certain code segments that should be credited to a certain author irrespective of git history. An example scenario where this is useful is when a method was originally written by one author but a second author did some minor refactoring to it; in this case, RepoSense might attribute the code to the second author while you may want to attribute the code to the first author."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"There are 2 types of `@@author` tags:"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"- Start Tags (format: `@@author AUTHOR_GIT_AUTHOR_NAME`): A start tag indicates the start of a code segment written by the author identified by the `AUTHOR_GIT_AUTHOR_NAME`."},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"- End Tags (format: `@@author`): Optional. An end tag indicates the end of a code segment written by the author identified by the `AUTHOR_GIT_AUTHOR_NAME` of the start tag."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"If an end tag is not provided, the code till the next start tag (or the end of the file) will be attributed to the author specified in the start tag above. Use only when necessary to minimize polluting your code with these extra tags."},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"If an end tag is provided without a corresponding start tag, the code until the next start tag, the next end tag, or the end of the file, will not be attributed to any author. This should only be used if the code should not be attributed to any author."},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"The `@@author` tags should be enclosed within a single-line comment, using the comment syntax of the file in concern. Below are some examples:"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"![author tags](../images/add-author-tags.png)"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"Currently, the following comment formats are supported:"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cul\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003cli\u003e// @@author authorName\u003c/li\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cli\u003e/* @@author authorName */\u003c/li\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003cli\u003e/* @@author authorName\u003c/li\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003cli\u003e# @@author authorName\u003c/li\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cli\u003e% @@author authorName\u003c/li\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u0026lt!-- @@author authorName --\u0026gt\u003c/li\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u0026lt!--- @@author authorName ---\u0026gt\u003c/li\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003cli\u003e[//]: # (@@author authorName)\u003c/li\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/ul\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"RepoSense checks whether the line matches the supported comment formats. If the line does not match the formats,"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"RepoSense treats it as a normal line. "},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"The code until the next start tag, the end tag, or the end of file will be attributed to that author."},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"Note: Remember to **commit** the files after the changes. (reason: RepoSense can see committed code only)"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"Special thanks to [Collate project](https://github.com/se-edu/collate) for providing the inspiration for this functionality."}],"authorContributionMap":{"sikai00":6,"-":51}},{"path":"frontend/.eslintrc.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"env\": {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"browser\": true"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \"extends\": ["},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"airbnb-base\","},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"plugin:vue/recommended\","},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"    \"@vue/typescript\","},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"    \"plugin:import/typescript\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \"rules\": {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"vue/component-definition-name-casing\": ["},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \"error\","},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \"kebab-case\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"vue/require-prop-types\": 0,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"no-param-reassign\": 0,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"arrow-parens\": ["},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \"error\","},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \"always\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"indent\": ["},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \"error\","},{"lineNumber":24,"author":{"gitId":"-"},"content":"      2,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \"ignoredNodes\": ["},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \"ConditionalExpression\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ]"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"prefer-destructuring\": 0,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"func-names\": ["},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \"error\","},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \"as-needed\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"no-alert\": 0,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"linebreak-style\": 0,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"max-len\": ["},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \"error\","},{"lineNumber":40,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \"code\": 120"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"prefer-object-spread\": 0,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"function-call-argument-newline\": 0,"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"    \"vue/no-computed-properties-in-data\": 0,"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"    \"import/extensions\": ["},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"      \"error\","},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"      {"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"        \"js\": \"never\","},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"        \"ts\": \"never\""},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"    ]"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \"parserOptions\": {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"parser\": \"@typescript-eslint/parser\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vvidday":10,"-":48}},{"path":"frontend/cypress/tests/codeView/codeView_hideFileDetails.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027hide all file details\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027check hide all file details hides the content of all the files\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    // open the code panel"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    // the contents of all the files should be visible"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // hide the details of all the files"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .files\u0027)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // the contents of all the files should be hidden"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  it(\u0027check details of one file are shown, rest are hidden\u0027, () \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // should show \u0027show all file details\u0027 only"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline a\u0027)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      .should(\u0027not.contain.text\u0027, \u0027hide all file details\u0027)"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      .should(\u0027contain.text\u0027, \u0027show all file details\u0027);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // open contents of the first file"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .title .caret\u0027)"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // should show both \u0027show/hide all file details\u0027"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline a\u0027)"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      .should(\u0027contain.text\u0027, \u0027hide all file details\u0027)"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      .should(\u0027contain.text\u0027, \u0027show all file details\u0027);"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // contents of the first file should be visible"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // contents of the last file should be hidden"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      .last()"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  it(\u0027check show all file details shows the content of all the files\u0027, () \u003d\u003e {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    // hide the content of all the files"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    // show the content of all the files"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":"  it(\u0027check collapsed file persists after sort\u0027, () \u003d\u003e {"},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":107,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":108,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":109,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":110,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":111,"author":{"gitId":"vvidday"},"content":"    // hide contents of the first file"},{"lineNumber":112,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-authorship .title .caret\u0027)"},{"lineNumber":113,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":114,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":115,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":116,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":117,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":118,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":119,"author":{"gitId":"vvidday"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":120,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":121,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-authorship .title .path\u0027)"},{"lineNumber":122,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":123,"author":{"gitId":"vvidday"},"content":"      .invoke(\u0027text\u0027)"},{"lineNumber":124,"author":{"gitId":"vvidday"},"content":"    // keep track of first file by file path so test doesn\u0027t rely on correctness of sort"},{"lineNumber":125,"author":{"gitId":"vvidday"},"content":"      .then((filePath) \u003d\u003e {"},{"lineNumber":126,"author":{"gitId":"vvidday"},"content":"        // change sort by"},{"lineNumber":127,"author":{"gitId":"vvidday"},"content":"        cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-by \u003e select\u0027)"},{"lineNumber":128,"author":{"gitId":"vvidday"},"content":"          .select(\u0027Path\u0027)"},{"lineNumber":129,"author":{"gitId":"vvidday"},"content":"          .should(\u0027have.value\u0027, \u0027path\u0027);"},{"lineNumber":130,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":131,"author":{"gitId":"vvidday"},"content":"        // wait until loading is finished"},{"lineNumber":132,"author":{"gitId":"vvidday"},"content":"        cy.get(\u0027[aria-label\u003d\"Loading\"]\u0027)"},{"lineNumber":133,"author":{"gitId":"vvidday"},"content":"          .should(\u0027not.be.visible\u0027);"},{"lineNumber":134,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":135,"author":{"gitId":"vvidday"},"content":"        // contents of file should still be hidden"},{"lineNumber":136,"author":{"gitId":"vvidday"},"content":"        cy.contains(\u0027#tab-authorship .file\u0027, filePath.trim())"},{"lineNumber":137,"author":{"gitId":"vvidday"},"content":"          .children(\u0027.file-content\u0027)"},{"lineNumber":138,"author":{"gitId":"vvidday"},"content":"          .should(\u0027not.be.visible\u0027);"},{"lineNumber":139,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":140,"author":{"gitId":"vvidday"},"content":"        // change sort order"},{"lineNumber":141,"author":{"gitId":"vvidday"},"content":"        cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-order \u003e select\u0027)"},{"lineNumber":142,"author":{"gitId":"vvidday"},"content":"          .select(\u0027Ascending\u0027)"},{"lineNumber":143,"author":{"gitId":"vvidday"},"content":"          .should(\u0027have.value\u0027, \u0027false\u0027);"},{"lineNumber":144,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":145,"author":{"gitId":"vvidday"},"content":"        // wait until loading is finished"},{"lineNumber":146,"author":{"gitId":"vvidday"},"content":"        cy.get(\u0027[aria-label\u003d\"Loading\"]\u0027)"},{"lineNumber":147,"author":{"gitId":"vvidday"},"content":"          .should(\u0027not.be.visible\u0027);"},{"lineNumber":148,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":149,"author":{"gitId":"vvidday"},"content":"        // contents of file should still be hidden"},{"lineNumber":150,"author":{"gitId":"vvidday"},"content":"        cy.contains(\u0027#tab-authorship .file\u0027, filePath.trim())"},{"lineNumber":151,"author":{"gitId":"vvidday"},"content":"          .children(\u0027.file-content\u0027)"},{"lineNumber":152,"author":{"gitId":"vvidday"},"content":"          .should(\u0027not.be.visible\u0027);"},{"lineNumber":153,"author":{"gitId":"vvidday"},"content":"      });"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":155,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"vvidday":57,"-":98}},{"path":"frontend/cypress/tests/zoomView/zoomView_hideCommitMessages.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027hide all commit messages \u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027check hide all commit messages hides the commit messages\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    // open the commit panel"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    // the messages of all the commits should be visible"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // hides all the commit messages"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // the messages of all the commits should be hidden"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  it(\u0027check show all commit messages show the commit messages\u0027, () \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // open the commit panel"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // hides all the commit messages"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // the messages of all the commits should be hidden"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // show the messages of all the commits"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"  it(\u0027should only display hide all commit messages when none are hidden\u0027, () \u003d\u003e {"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"    // open the commit panel"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"    // should only display \u0027hide all commit messages\u0027"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"      .children()"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.length\u0027, 1);"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.text\u0027, \u0027hide all commit messages\u0027);"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"  });"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"  it(\u0027should only display show all commit messages when all are hidden\u0027, () \u003d\u003e {"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"    // open the commit panel"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":81,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":84,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":85,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":86,"author":{"gitId":"vvidday"},"content":"    // hides all the commit messages"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":89,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":90,"author":{"gitId":"vvidday"},"content":"    // should only display \u0027show all commit messages\u0027"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"      .children()"},{"lineNumber":93,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.length\u0027, 1);"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.text\u0027, \u0027show all commit messages\u0027);"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"  });"},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"  it(\u0027should display both show and hide all commit messages when some are hidden\u0027, () \u003d\u003e {"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":"    // open the commit panel"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":107,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":108,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":109,"author":{"gitId":"vvidday"},"content":"    // hide the message body of the first commit"},{"lineNumber":110,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message \u003e a .tooltip\u0027)"},{"lineNumber":111,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":112,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":113,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":114,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":115,"author":{"gitId":"vvidday"},"content":"    // should now display both \u0027hide all \u0026 show all commit messages\u0027"},{"lineNumber":116,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":117,"author":{"gitId":"vvidday"},"content":"      .children()"},{"lineNumber":118,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.length\u0027, 2);"},{"lineNumber":119,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":120,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":121,"author":{"gitId":"vvidday"},"content":"      .eq(0)"},{"lineNumber":122,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.text\u0027, \u0027show all commit messages\u0027);"},{"lineNumber":123,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":124,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":125,"author":{"gitId":"vvidday"},"content":"      .eq(1)"},{"lineNumber":126,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.text\u0027, \u0027hide all commit messages\u0027);"},{"lineNumber":127,"author":{"gitId":"vvidday"},"content":"  });"},{"lineNumber":128,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":129,"author":{"gitId":"vvidday"},"content":"  it(\u0027check show all and hide all commit messages only toggle current commits\u0027, () \u003d\u003e {"},{"lineNumber":130,"author":{"gitId":"vvidday"},"content":"    // Assumptions: the third commit (19e3294) of the first author of the first repo"},{"lineNumber":131,"author":{"gitId":"vvidday"},"content":"    // contains changes in only .java files."},{"lineNumber":132,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":133,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":134,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":135,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":136,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":137,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":138,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":139,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":140,"author":{"gitId":"vvidday"},"content":"    // uncheck java file type"},{"lineNumber":141,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .fileTypes input[value\u003d\"java\"]\u0027)"},{"lineNumber":142,"author":{"gitId":"vvidday"},"content":"      .uncheck()"},{"lineNumber":143,"author":{"gitId":"vvidday"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":144,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":145,"author":{"gitId":"vvidday"},"content":"    // hides all the commit messages"},{"lineNumber":146,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":147,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":148,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":149,"author":{"gitId":"vvidday"},"content":"    // should only display \u0027show all commit messages\u0027"},{"lineNumber":150,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":151,"author":{"gitId":"vvidday"},"content":"      .children()"},{"lineNumber":152,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.length\u0027, 1);"},{"lineNumber":153,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":154,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":155,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.text\u0027, \u0027show all commit messages\u0027);"},{"lineNumber":156,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":157,"author":{"gitId":"vvidday"},"content":"    // check java file type"},{"lineNumber":158,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .fileTypes input[value\u003d\"java\"]\u0027)"},{"lineNumber":159,"author":{"gitId":"vvidday"},"content":"      .check()"},{"lineNumber":160,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":161,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":162,"author":{"gitId":"vvidday"},"content":"    // commit body of the third commit should be visible"},{"lineNumber":163,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":164,"author":{"gitId":"vvidday"},"content":"      .eq(2)"},{"lineNumber":165,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":166,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":167,"author":{"gitId":"vvidday"},"content":"    // should now display both \u0027hide all \u0026 show all commit messages\u0027"},{"lineNumber":168,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":169,"author":{"gitId":"vvidday"},"content":"      .children()"},{"lineNumber":170,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.length\u0027, 2);"},{"lineNumber":171,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":172,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":173,"author":{"gitId":"vvidday"},"content":"      .eq(0)"},{"lineNumber":174,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.text\u0027, \u0027show all commit messages\u0027);"},{"lineNumber":175,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":176,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":177,"author":{"gitId":"vvidday"},"content":"      .eq(1)"},{"lineNumber":178,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.text\u0027, \u0027hide all commit messages\u0027);"},{"lineNumber":179,"author":{"gitId":"vvidday"},"content":"  });"},{"lineNumber":180,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":181,"author":{"gitId":"vvidday"},"content":"  it(\u0027check hidden commit message persists after sort\u0027, () \u003d\u003e {"},{"lineNumber":182,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":183,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":184,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":185,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":186,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":187,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":188,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":189,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":190,"author":{"gitId":"vvidday"},"content":"    // hide the message body of the first commit"},{"lineNumber":191,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message \u003e a .tooltip\u0027)"},{"lineNumber":192,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":193,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":194,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":195,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":196,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":197,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":198,"author":{"gitId":"vvidday"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":199,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":200,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message .hash\u0027)"},{"lineNumber":201,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":202,"author":{"gitId":"vvidday"},"content":"      .invoke(\u0027text\u0027)"},{"lineNumber":203,"author":{"gitId":"vvidday"},"content":"    // keep track of first commit by hash so test doesn\u0027t rely on correctness of sort"},{"lineNumber":204,"author":{"gitId":"vvidday"},"content":"      .then((hash) \u003d\u003e {"},{"lineNumber":205,"author":{"gitId":"vvidday"},"content":"        // change sort by"},{"lineNumber":206,"author":{"gitId":"vvidday"},"content":"        cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-by \u003e select\u0027)"},{"lineNumber":207,"author":{"gitId":"vvidday"},"content":"          .select(\u0027LoC\u0027)"},{"lineNumber":208,"author":{"gitId":"vvidday"},"content":"          .should(\u0027have.value\u0027, \u0027lineOfCode\u0027);"},{"lineNumber":209,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":210,"author":{"gitId":"vvidday"},"content":"        // message body should still be hidden"},{"lineNumber":211,"author":{"gitId":"vvidday"},"content":"        cy.contains(\u0027#tab-zoom .commit-message\u0027, hash)"},{"lineNumber":212,"author":{"gitId":"vvidday"},"content":"          .children(\u0027.body\u0027)"},{"lineNumber":213,"author":{"gitId":"vvidday"},"content":"          .should(\u0027not.be.visible\u0027);"},{"lineNumber":214,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":215,"author":{"gitId":"vvidday"},"content":"        // change sort order"},{"lineNumber":216,"author":{"gitId":"vvidday"},"content":"        cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-order \u003e select:visible\u0027)"},{"lineNumber":217,"author":{"gitId":"vvidday"},"content":"          .select(\u0027Ascending\u0027)"},{"lineNumber":218,"author":{"gitId":"vvidday"},"content":"          .should(\u0027have.value\u0027, \u0027false\u0027);"},{"lineNumber":219,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":220,"author":{"gitId":"vvidday"},"content":"        // message body should still be hidden"},{"lineNumber":221,"author":{"gitId":"vvidday"},"content":"        cy.contains(\u0027#tab-zoom .commit-message\u0027, hash)"},{"lineNumber":222,"author":{"gitId":"vvidday"},"content":"          .children(\u0027.body\u0027)"},{"lineNumber":223,"author":{"gitId":"vvidday"},"content":"          .should(\u0027not.be.visible\u0027);"},{"lineNumber":224,"author":{"gitId":"vvidday"},"content":"      });"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":226,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"vvidday":169,"-":57}},{"path":"frontend/package-lock.json","fileType":"json","isIgnored":true,"lines":[],"authorContributionMap":{"vvidday":5,"MarcusTXK":9512,"-":2933}},{"path":"frontend/package.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"name\": \"reposense\","},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"version\": \"1.0.0\","},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \"description\": \"[![Build Status](https://travis-ci.org/reposense/RepoSense.svg?branch\u003dmaster)](https://travis-ci.org/reposense/RepoSense) [![Build status](https://ci.appveyor.com/api/projects/status/gsbkj5qby3pjd6nw/branch/master?svg\u003dtrue)](https://ci.appveyor.com/project/eugenepeh/reposense/branch/master)\","},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \"author\": \"\","},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \"scripts\": {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"serve\": \"vue-cli-service serve\","},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"build\": \"vue-cli-service build\","},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"lint\": \"eslint src/**/*.{ts,js,vue} cypress/tests/**/*.js cypress/support.js \u0026\u0026 stylelint ./src/**/*.{vue,scss} \u0026\u0026 npm run puglint\","},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"devbuild\": \"vue-cli-service build --mode development\","},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"lintfix\": \"eslint --fix src/**/*.{ts,js,vue} cypress/tests/**/*.js cypress/support.js \u0026\u0026 stylelint --fix ./src/**/*.{vue,scss}\","},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"puglint\": \"pug-lint-vue src\","},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"serveOpen\": \"vue-cli-service serve --open\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \"main\": \"index.js\","},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \"dependencies\": {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"@fontsource/titillium-web\": \"^4.5.3\","},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"@fortawesome/fontawesome-svg-core\": \"^6.0.0\","},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"@fortawesome/free-brands-svg-icons\": \"^6.0.0\","},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"@fortawesome/free-solid-svg-icons\": \"^6.0.0\","},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"@fortawesome/vue-fontawesome\": \"^3.0.3\","},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"core-js\": \"^3.6.5\","},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"highlight.js\": \"^10.5.0\","},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"jszip\": \"^3.5.0\","},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"minimatch\": \"^5.0.1\","},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"muicss\": \"^0.10.3\","},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"normalize.css\": \"^8.0.1\","},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"pug-lint-vue\": \"^0.4.0\","},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"seedrandom\": \"^3.0.5\","},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"vue\": \"^3.2.47\","},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"vue-loading-overlay\": \"^5.0.3\","},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"vue-observe-visibility\": \"^1.0.0\","},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"    \"vuex\": \"^4.0.2\","},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"    \"zod\": \"^3.20.6\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \"devDependencies\": {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"@babel/eslint-parser\": \"^7.17.0\","},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"@typescript-eslint/eslint-plugin\": \"^5.50.0\","},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"@typescript-eslint/parser\": \"^5.50.0\","},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"@vue/cli-plugin-babel\": \"^5.0.4\","},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"@vue/cli-plugin-eslint\": \"^5.0.4\","},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"@vue/cli-plugin-typescript\": \"^5.0.4\","},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"@vue/cli-service\": \"^5.0.4\","},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"@vue/compiler-sfc\": \"^3.2.47\","},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"@vue/eslint-config-typescript\": \"^10.0.0\","},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"eslint\": \"^8.33.0\","},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"eslint-config-airbnb-base\": \"^15.0.0\","},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \"eslint-plugin-import\": \"^2.26.0\","},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"eslint-plugin-vue\": \"^8.4.1\","},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"node-sass\": \"^7.0.3\","},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"postcss-html\": \"^1.4.1\","},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"pug\": \"^3.0.2\","},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \"pug-plain-loader\": \"^1.1.0\","},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"sass\": \"^1.58.0\","},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \"sass-loader\": \"^12.6.0\","},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"stylelint\": \"^14.7.1\","},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \"stylelint-config-recommended-scss\": \"^6.0.0\","},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"stylelint-config-recommended-vue\": \"^1.4.0\","},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"stylelint-order\": \"^5.0.0\","},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"stylelint-scss\": \"^4.2.0\","},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \"stylelint-webpack-plugin\": \"^3.2.0\","},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \"typescript\": \"^4.9.5\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \"bugs\": {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \"url\": \"https://github.com/reposense/RepoSense/issues\""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \"directories\": {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \"doc\": \"docs\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \"homepage\": \"https://github.com/reposense/RepoSense#readme\","},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \"license\": \"ISC\","},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \"repository\": {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \"type\": \"git\","},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \"url\": \"git+https://github.com/reposense/RepoSense.git\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vvidday":2,"-":74}},{"path":"frontend/src/app.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"#app"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  loading-overlay.overlay-loader("},{"lineNumber":4,"author":{"gitId":"-"},"content":"    v-bind:active\u003d\u0027loadingOverlayCount \u003e 0\u0027,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    v-bind:opacity\u003d\u0027loadingOverlayOpacity\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  )"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    template(v-slot:default)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      i.overlay-loading-icon.fa.fa-spinner.fa-spin()"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    template(v-slot:after)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      h3 {{ loadingOverlayMessage }}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  template(v-if\u003d\"userUpdated\")"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    c-resizer"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      template(v-slot:left)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        #summary-wrapper"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          c-summary.tab-padding("},{"lineNumber":17,"author":{"gitId":"-"},"content":"            ref\u003d\"summary\","},{"lineNumber":18,"author":{"gitId":"-"},"content":"            v-bind:repos\u003d\"users\","},{"lineNumber":19,"author":{"gitId":"-"},"content":"            v-bind:error-messages\u003d\"errorMessages\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          .timestamp-footer"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            span Generated by\u0026nbsp;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            a("},{"lineNumber":24,"author":{"gitId":"-"},"content":"              v-bind:href\u003d\"getSpecificCommitLink()\", target\u003d\"_blank\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              strong this version"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            span \u0026nbsp;of\u0026nbsp;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            a("},{"lineNumber":29,"author":{"gitId":"-"},"content":"              v-bind:href\u003d\"getRepoSenseHomeLink()\", target\u003d\"_blank\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              strong RepoSense"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            span \u0026nbsp;("},{"lineNumber":33,"author":{"gitId":"-"},"content":"            a("},{"lineNumber":34,"author":{"gitId":"-"},"content":"              v-bind:href\u003d\"getUserGuideLink()\", target \u003d\"_blank\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              strong User Guide"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            span ) on {{ creationDate }}"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          .report-generation-time(style\u003d\"display: none;\")"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            span {{ reportGenerationTime }}"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"      template(v-slot:right)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        #tabs-wrapper(ref\u003d\"tabWrapper\")"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          .tab-content.panel-padding"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .tab-pane"},{"lineNumber":45,"author":{"gitId":"-"},"content":"              c-authorship#tab-authorship(v-if\u003d\"tabType \u003d\u003d\u003d \u0027authorship\u0027\")"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              c-zoom#tab-zoom(v-else-if\u003d\"tabType \u003d\u003d\u003d \u0027zoom\u0027\")"},{"lineNumber":47,"author":{"gitId":"-"},"content":"              #tab-empty(v-else)"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .title"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                  h2 Welcome to this RepoSense report!"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                  p The charts on the left show the contribution activities, grouped by repository and author."},{"lineNumber":51,"author":{"gitId":"-"},"content":"                  p"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    | To view the code attributed to a specific author, click the \u0026nbsp;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    font-awesome-icon(icon\u003d\"code\")"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    | \u0026nbsp; icon next to that author\u0027s name."},{"lineNumber":55,"author":{"gitId":"-"},"content":"                    br"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    | To view the breakdown of commits made by a specific author, click the \u0026nbsp;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    font-awesome-icon(icon\u003d\"list-ul\")"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    | \u0026nbsp; icon next to that author\u0027s name."},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    br"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    | To hide the code view and show only the activity charts, click the \u0026nbsp;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    font-awesome-icon(icon\u003d\"caret-right\")"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    | \u0026nbsp; icon on the centre divider."},{"lineNumber":63,"author":{"gitId":"-"},"content":"                  p"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    | See the \u0026nbsp;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                    a("},{"lineNumber":66,"author":{"gitId":"-"},"content":"                      v-bind:href\u003d\"getUsingReportsUserGuideLink()\", target\u003d\"_blank\""},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    )"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                      strong User Guide"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                    | \u0026nbsp; to get a better understanding of how to interpret the report."},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  template(v-else)"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    .empty Please upload a .zip file generated by RepoSense."},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    form#file-upload(onsubmit\u003d\"return false;\")"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      input(type\u003d\"file\", accept\u003d\".zip\", v-on:change\u003d\"updateReportZip\")"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cscript\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"import JSZip from \u0027jszip\u0027;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"import LoadingOverlay from \u0027vue-loading-overlay\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"import cResizer from \u0027./components/c-resizer.vue\u0027;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"import cZoom from \u0027./views/c-zoom.vue\u0027;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"import cSummary from \u0027./views/c-summary.vue\u0027;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"import cAuthorship from \u0027./views/c-authorship.vue\u0027;"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"const loadingResourcesMessage \u003d \u0027Loading resources...\u0027;"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"const app \u003d {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  name: \u0027app\u0027,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      repos: {},"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      users: [],"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      userUpdated: false,"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"      loadingOverlayOpacity: 1,"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"      tabType: \u0027empty\u0027,"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      creationDate: \u0027\u0027,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      reportGenerationTime: \u0027\u0027,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      errorMessages: {},"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  watch: {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \u0027$store.state.tabZoomInfo\u0027: function () {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      if (this.$store.state.tabZoomInfo.isRefreshing) {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      this.activateTab(\u0027zoom\u0027);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u0027$store.state.tabAuthorshipInfo\u0027: function () {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      this.activateTab(\u0027authorship\u0027);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    // model functions //"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    updateReportZip(evt) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      this.users \u003d [];"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"      JSZip.loadAsync(evt.target.files[0])"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        .then((zip) \u003d\u003e {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"          window.REPORT_ZIP \u003d zip;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"          window.alert(\u0027Either the .zip file is corrupted, or you uploaded a .zip file that is not generated \u0027"},{"lineNumber":127,"author":{"gitId":"-"},"content":"              + \u0027by RepoSense.\u0027);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        .then(() \u003d\u003e this.updateReportView());"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    updateReportDir() {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      window.REPORT_ZIP \u003d null;"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"      this.users \u003d [];"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      this.updateReportView();"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    async updateReportView() {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateLoadingOverlayMessage\u0027, loadingResourcesMessage);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      this.userUpdated \u003d false;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      await this.$store.dispatch(\u0027incrementLoadingOverlayCountForceReload\u0027, 1);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      try {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        const {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"          creationDate,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"          reportGenerationTime,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"          errorMessages,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"          names,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } \u003d await window.api.loadSummary();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (names \u003d\u003d\u003d null) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"          return;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        this.creationDate \u003d creationDate;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        this.reportGenerationTime \u003d reportGenerationTime;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        this.errorMessages \u003d errorMessages;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        this.repos \u003d window.REPOS;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        await Promise.all(names.map((name) \u003d\u003e ("},{"lineNumber":158,"author":{"gitId":"-"},"content":"          window.api.loadCommits(name)"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        )));"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        this.loadingOverlayOpacity \u003d 0.5;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        this.getUsers();"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        this.renderTabHash();"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        this.userUpdated \u003d true;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      } catch (error) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        window.alert(error);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      } finally {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, -1);"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    getUsers() {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      const full \u003d [];"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      Object.keys(this.repos).forEach((repo) \u003d\u003e {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (this.repos[repo].users) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          full.push(this.repos[repo]);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      this.users \u003d full;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    // handle opening of sidebar //"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    activateTab(tabName) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      if (this.$refs.tabWrapper) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        this.$refs.tabWrapper.scrollTop \u003d 0;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"      this.tabType \u003d tabName;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabState\u0027, true);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      window.addHash(\u0027tabType\u0027, this.tabType);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"    renderAuthorShipTabHash(minDate, maxDate) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      const info \u003d {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        author: hash.tabAuthor,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        repo: hash.tabRepo,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        isMergeGroup: hash.authorshipIsMergeGroup \u003d\u003d\u003d \u0027true\u0027,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        isRefresh: true,"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        minDate,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        maxDate,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        location: this.getRepoLink(),"},{"lineNumber":202,"author":{"gitId":"vvidday"},"content":"        files: [],"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      const tabInfoLength \u003d Object.values(info).filter((x) \u003d\u003e x !\u003d\u003d null).length;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      if (Object.keys(info).length \u003d\u003d\u003d tabInfoLength) {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateTabAuthorshipInfo\u0027, info);"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      } else if (hash.tabOpen \u003d\u003d\u003d \u0027false\u0027 || tabInfoLength \u003e 2) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateTabState\u0027, false);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"    renderZoomTabHash() {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      const zoomInfo \u003d {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        isRefreshing: true,"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        zAuthor: hash.zA,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        zRepo: hash.zR,"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        zAvgCommitSize: hash.zACS,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        zSince: hash.zS,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        zUntil: hash.zU,"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        zFilterGroup: hash.zFGS,"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        zFilterSearch: hash.zFS,"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        zTimeFrame: hash.zFTF,"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        zIsMerged: hash.zMG \u003d\u003d\u003d \u0027true\u0027,"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        zFromRamp: hash.zFR \u003d\u003d\u003d \u0027true\u0027,"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      const tabInfoLength \u003d Object.values(zoomInfo).filter((x) \u003d\u003e x !\u003d\u003d null).length;"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      if (Object.keys(zoomInfo).length \u003d\u003d\u003d tabInfoLength) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateTabZoomInfo\u0027, zoomInfo);"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      } else if (hash.tabOpen \u003d\u003d\u003d \u0027false\u0027 || tabInfoLength \u003e 2) {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateTabState\u0027, false);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"    renderTabHash() {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      if (!hash.tabOpen) {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabState\u0027, hash.tabOpen \u003d\u003d\u003d \u0027true\u0027);"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"      if (this.isTabActive) {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        if (hash.tabType \u003d\u003d\u003d \u0027authorship\u0027) {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"          let { since, until } \u003d hash;"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"          // get since and until dates from window if not found in hash"},{"lineNumber":247,"author":{"gitId":"-"},"content":"          since \u003d since || window.sinceDate;"},{"lineNumber":248,"author":{"gitId":"-"},"content":"          until \u003d until || window.untilDate;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"          this.renderAuthorShipTabHash(since, until);"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"          this.renderZoomTabHash();"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"    getRepoSenseHomeLink() {"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      const version \u003d window.repoSenseVersion;"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      if (!version) {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        return `${window.HOME_PAGE_URL}/RepoSense/`;"},{"lineNumber":260,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":261,"author":{"gitId":"-"},"content":"      return `${window.HOME_PAGE_URL}`;"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"    getSpecificCommitLink() {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"      const version \u003d window.repoSenseVersion;"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      if (!version) {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        return `${window.REPOSENSE_REPO_URL}`;"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      if (version.startsWith(\u0027v\u0027)) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        return `${window.REPOSENSE_REPO_URL}/releases/tag/${version}`;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      return `${window.REPOSENSE_REPO_URL}/commit/${version}`;"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    getUserGuideLink() {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"      const version \u003d window.repoSenseVersion;"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      if (!version) {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        return `${window.HOME_PAGE_URL}/RepoSense/ug/index.html`;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      return `${window.HOME_PAGE_URL}/ug/index.html`;"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"    getUsingReportsUserGuideLink() {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      const version \u003d window.repoSenseVersion;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      if (!version) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        return `${window.HOME_PAGE_URL}/RepoSense/ug/usingReports.html`;"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      return `${window.HOME_PAGE_URL}/ug/usingReports.html`;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"    getRepoLink() {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"      const { REPOS, hashParams } \u003d window;"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      const { location, branch } \u003d REPOS[hashParams.tabRepo];"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"      if (Object.prototype.hasOwnProperty.call(location, \u0027organization\u0027)) {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        return window.getBranchLink(hashParams.tabRepo, branch);"},{"lineNumber":297,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      return REPOS[hashParams.tabRepo].location.location;"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    ...mapState([\u0027loadingOverlayCount\u0027, \u0027loadingOverlayMessage\u0027, \u0027isTabActive\u0027]),"},{"lineNumber":304,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    LoadingOverlay,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    cResizer,"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    cZoom,"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    cSummary,"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    cAuthorship,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":313,"author":{"gitId":"-"},"content":"  created() {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    window.decodeHash();"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    this.updateReportDir();"},{"lineNumber":316,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":317,"author":{"gitId":"-"},"content":"};"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"window.app \u003d app;"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"export default app;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"\u003c/script\u003e"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"\u003cstyle lang\u003d\"scss\"\u003e"},{"lineNumber":325,"author":{"gitId":"-"},"content":"@import \u0027./styles/style.scss\u0027;"},{"lineNumber":326,"author":{"gitId":"-"},"content":"@import \u0027./styles/panels.scss\u0027;"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"vvidday":1,"-":326}},{"path":"frontend/src/components/c-ramp.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":".ramp"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  template(v-if\u003d\"tframe \u003d\u003d\u003d \u0027commit\u0027\")"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    template(v-for\u003d\"(slice, j) in user.commits\")"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"      template(v-for\u003d\"(commit, k) in slice.commitResults.filter(commitResult \u003d\u003e getContributions(commitResult) \u003e 0)\")"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        a.ramp__slice("},{"lineNumber":7,"author":{"gitId":"-"},"content":"          draggable\u003d\"false\","},{"lineNumber":8,"author":{"gitId":"-"},"content":"          v-on:click\u003d\"rampClick\","},{"lineNumber":9,"author":{"gitId":"-"},"content":"          v-bind:href\u003d\"getLink(commit)\", target\u003d\"_blank\","},{"lineNumber":10,"author":{"gitId":"-"},"content":"          v-bind:title\u003d\"getContributionMessage(slice, commit)\","},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"          v-bind:class\u003d\"`ramp__slice--color${getRampColor(commit, slice)}`,\\"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            !isBrokenLink(getLink(commit)) ? \u0027\u0027 : \u0027broken-link\u0027\","},{"lineNumber":13,"author":{"gitId":"-"},"content":"          v-bind:style\u003d\"{\\"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            zIndex: user.commits.length - j,\\"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            borderLeftWidth: `${getWidth(commit)}em`,\\"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            right: `${((getSlicePos(slice.date)\\"},{"lineNumber":17,"author":{"gitId":"-"},"content":"              + (getCommitPos(k, slice.commitResults.length))) * 100)}%`\\"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            }\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  template(v-else)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    a.ramp__slice("},{"lineNumber":23,"author":{"gitId":"-"},"content":"      draggable\u003d\"false\","},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"      v-for\u003d\"(slice, j) in user.commits.filter(commit \u003d\u003e getContributions(commit) \u003e 0)\","},{"lineNumber":25,"author":{"gitId":"-"},"content":"      v-bind:title\u003d\"getContributionMessage(slice)\","},{"lineNumber":26,"author":{"gitId":"-"},"content":"      v-on:click\u003d\"openTabZoom(user, slice, $event)\","},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"      v-bind:class\u003d\"`ramp__slice--color${getSliceColor(slice)}`\","},{"lineNumber":28,"author":{"gitId":"-"},"content":"      v-bind:style\u003d\"{\\"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        zIndex: user.commits.length - j,\\"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        borderLeftWidth: `${getWidth(slice)}em`,\\"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        right: `${(getSlicePos(tframe \u003d\u003d\u003d \u0027day\u0027 ? slice.date : slice.endDate) * 100)}%` \\"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cscript\u003e"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"import brokenLinkDisabler from \u0027../mixin/brokenLinkMixin\u0027;"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"import User from \u0027../utils/user\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"export default {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  name: \u0027c-ramp\u0027,"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"  mixins: [brokenLinkDisabler],"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"  props: {"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"    groupby: {"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"      default: \u0027groupByRepos\u0027,"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"    user: {"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"      type: User,"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"    tframe: {"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"      default: \u0027commit\u0027,"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"    avgsize: {"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"      type: [Number, String],"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"    sdate: {"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"    udate: {"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"    mergegroup: {"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"      type: Boolean,"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"      default: false,"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"    fromramp: {"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"      type: Boolean,"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"      default: false,"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"    filtersearch: {"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"      default: \u0027\u0027,"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"  },"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      rampSize: 0.01,"},{"lineNumber":84,"author":{"gitId":"ckcherry23"},"content":"      deletesContributionRampSize: this.rampSize * 20,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    getLink(commit) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      return window.getCommitLink(commit.repoId, commit.hash);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"    getContributions(commit) {"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"      return commit.insertions + commit.deletions;"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"    isDeletesContribution(commit) {"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"      return commit.insertions \u003d\u003d\u003d 0 \u0026\u0026 commit.deletions \u003e 0;"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    getWidth(slice) {"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"      if (this.getContributions(slice) \u003d\u003d\u003d 0) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return 0;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"      if (this.isDeletesContribution(slice)) {"},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":"        return this.deletesContributionRampSize;"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"      const newSize \u003d 100 * (slice.insertions / this.avgsize);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      return Math.max(newSize * this.rampSize, 0.5);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    getContributionMessage(slice, commit) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      let title \u003d \u0027\u0027;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      if (this.tframe \u003d\u003d\u003d \u0027commit\u0027) {"},{"lineNumber":112,"author":{"gitId":"ckcherry23"},"content":"        return `[${slice.date}] ${commit.messageTitle}: +${commit.insertions} -${commit.deletions} lines `;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"      title \u003d this.tframe \u003d\u003d\u003d \u0027day\u0027"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            ? `[${slice.date}] Daily `"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            : `[${slice.date} till ${slice.endDate}] Weekly `;"},{"lineNumber":118,"author":{"gitId":"ckcherry23"},"content":"      title +\u003d `contribution: +${slice.insertions} -${slice.deletions} lines`;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      return title;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    openTabZoom(user, slice, evt) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      // prevent opening of zoom tab when cmd/ctrl click"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      if (window.isMacintosh ? evt.metaKey : evt.ctrlKey) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"      const zoomUser \u003d { ...user };"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      zoomUser.commits \u003d user.dailyCommits;"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"      const info \u003d {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        zRepo: user.repoName,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        zAuthor: user.name,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        zFilterGroup: this.groupby,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        zTimeFrame: \u0027commit\u0027,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        zAvgCommitSize: slice.insertions,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        zUser: zoomUser,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        zLocation: window.getRepoLink(user.repoId),"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        zSince: slice.date,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        zUntil: this.tframe \u003d\u003d\u003d \u0027day\u0027 ? slice.date : slice.endDate,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        zIsMerged: this.mergegroup,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        zFromRamp: true,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        zFilterSearch: this.filtersearch,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabZoomInfo\u0027, info);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    // position for commit granularity"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    getCommitPos(i, total) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      return (((total - i - 1) * window.DAY_IN_MS) / total)"},{"lineNumber":152,"author":{"gitId":"-"},"content":"          / (this.getTotalForPos(this.sdate, this.udate) + window.DAY_IN_MS);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    // position for day granularity"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    getSlicePos(date) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      const total \u003d this.getTotalForPos(this.sdate, this.udate);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      return (new Date(this.udate) - new Date(date)) / (total + window.DAY_IN_MS);"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    // get duration in miliseconds between 2 date"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    getTotalForPos(sinceDate, untilDate) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      return new Date(untilDate) - new Date(sinceDate);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":164,"author":{"gitId":"ckcherry23"},"content":"    getRampColor(commit, slice) {"},{"lineNumber":165,"author":{"gitId":"ckcherry23"},"content":"      if (this.isDeletesContribution(commit)) {"},{"lineNumber":166,"author":{"gitId":"ckcherry23"},"content":"        return \u0027-deletes\u0027;"},{"lineNumber":167,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":168,"author":{"gitId":"ckcherry23"},"content":"      return this.getSliceColor(slice);"},{"lineNumber":169,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":170,"author":{"gitId":"ckcherry23"},"content":"    getSliceColor(slice) {"},{"lineNumber":171,"author":{"gitId":"ckcherry23"},"content":"      if (this.isDeletesContribution(slice)) {"},{"lineNumber":172,"author":{"gitId":"ckcherry23"},"content":"        return \u0027-deletes\u0027;"},{"lineNumber":173,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      const timeMs \u003d this.fromramp"},{"lineNumber":175,"author":{"gitId":"-"},"content":"          ? (new Date(this.sdate)).getTime()"},{"lineNumber":176,"author":{"gitId":"ckcherry23"},"content":"          : (new Date(slice.date)).getTime();"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"      return (timeMs / window.DAY_IN_MS) % 5;"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    // Prevent browser from switching to new tab when clicking ramp"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    rampClick(evt) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      const isKeyPressed \u003d window.isMacintosh ? evt.metaKey : evt.ctrlKey;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      if (isKeyPressed) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        evt.preventDefault();"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":189,"author":{"gitId":"-"},"content":"};"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/script\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003c!-- Add \"scoped\" attribute to limit CSS to this component only --\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003cstyle scoped lang\u003d\"scss\"\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"@import \u0027../styles/_colors.scss\u0027;"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"/* Ramp */"},{"lineNumber":197,"author":{"gitId":"-"},"content":".ramp {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  $height: 3rem;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  background-color: mui-color(\u0027blue\u0027, \u002750\u0027);"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  font-size: 100%;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  height: $height;"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  overflow: hidden;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  position: relative;"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"  \u0026__slice {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    border-left-color: rgba(0, 0, 0, 0);"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    border-left-style: solid;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    display: block;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    height: 0;"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    position: absolute;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    width: 0;"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    \u0026--color0 {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      border-bottom: $height rgba(mui-color(\u0027orange\u0027), .5) solid;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u0026--color1 {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      border-bottom: $height rgba(mui-color(\u0027light-blue\u0027), .5) solid;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u0026--color2 {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      border-bottom: $height rgba(mui-color(\u0027green\u0027), .5) solid;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u0026--color3 {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      border-bottom: $height rgba(mui-color(\u0027indigo\u0027), .5) solid;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u0026--color4 {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      border-bottom: $height rgba(mui-color(\u0027pink\u0027), .5) solid;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":233,"author":{"gitId":"ckcherry23"},"content":"    \u0026--color-deletes {"},{"lineNumber":234,"author":{"gitId":"ckcherry23"},"content":"      border-bottom: $height rgba(mui-color(\u0027red\u0027), .7) solid;"},{"lineNumber":235,"author":{"gitId":"ckcherry23"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"vvidday":3,"ckcherry23":70,"-":165}},{"path":"frontend/src/components/c-resizer.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"#app-wrapper("},{"lineNumber":3,"author":{"gitId":"-"},"content":"  v-bind:style\u003d\"appStyles\","},{"lineNumber":4,"author":{"gitId":"-"},"content":"  @mousemove\u003d\"mouseMove\","},{"lineNumber":5,"author":{"gitId":"-"},"content":"  @mouseup\u003d\"deregisterMouseMove\","},{"lineNumber":6,"author":{"gitId":"-"},"content":"  @mouseleave\u003d\"deregisterMouseMove\""},{"lineNumber":7,"author":{"gitId":"-"},"content":")"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  #tab-resize-guide(v-bind:style\u003d\"guideStyles\")"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  .left-resize-container"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    slot(name\u003d\"left\")"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  #tab-resize("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @mousedown.left\u003d\"registerMouseMove\","},{"lineNumber":13,"author":{"gitId":"-"},"content":"    v-show\u003d\"isTabActive\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  )"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    .tab-close(v-on:click\u003d\"closeTab\")"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      i.fas.fa-caret-right"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  .right-resize-container("},{"lineNumber":18,"author":{"gitId":"-"},"content":"    v-bind:style\u003d\"rightContainerStyles\","},{"lineNumber":19,"author":{"gitId":"-"},"content":"    v-if\u003d\"isTabActive\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  )"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    slot(name\u003d\"right\")"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cscript\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"const DRAG_BAR_WIDTH \u003d 13.25;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"const SCROLL_BAR_WIDTH \u003d 17;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"const GUIDE_BAR_WIDTH \u003d 2;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"const throttledEvent \u003d (delay, handler) \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  let lastCalled \u003d 0;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  return (...args) \u003d\u003e {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    if (Date.now() - lastCalled \u003e delay) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      lastCalled \u003d Date.now();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      handler(...args);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":39,"author":{"gitId":"-"},"content":"};"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"export default {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  name: \u0027c-resizer\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      guideWidth: (0.5 * window.innerWidth - (GUIDE_BAR_WIDTH / 2)) / window.innerWidth,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      flexWidth: 0.5,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      isResizing: false,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    appStyles() {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      return this.isResizing"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ? \u0027user-select: none; cursor: col-resize;\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        : \u0027\u0027;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    guideStyles() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      return this.isResizing"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ? `display: block; right: ${this.guideWidth * 100}%;`"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        : \u0027\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    rightContainerStyles() {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      return `flex: 0 0 ${this.flexWidth * 100}%;`;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    mouseMove() {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      if (this.isResizing) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return throttledEvent(25, (event) \u003d\u003e {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          this.guideWidth \u003d ("},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Math.min("},{"lineNumber":74,"author":{"gitId":"-"},"content":"              Math.max("},{"lineNumber":75,"author":{"gitId":"-"},"content":"                window.innerWidth - event.clientX,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                SCROLL_BAR_WIDTH + DRAG_BAR_WIDTH,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"              ),"},{"lineNumber":78,"author":{"gitId":"-"},"content":"              window.innerWidth - SCROLL_BAR_WIDTH,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            - (GUIDE_BAR_WIDTH / 2)"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          ) / window.innerWidth;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      return () \u003d\u003e {};"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ...mapState([\u0027isTabActive\u0027]),"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":89,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":90,"author":{"gitId":"vvidday"},"content":"  methods: {"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"    registerMouseMove() {"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"      this.isResizing \u003d true;"},{"lineNumber":93,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":"    deregisterMouseMove() {"},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"      this.isResizing \u003d false;"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"      this.flexWidth \u003d (this.guideWidth * window.innerWidth + (GUIDE_BAR_WIDTH / 2))"},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":"        / window.innerWidth;"},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"    closeTab() {"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"      this.$store.commit(\u0027updateTabState\u0027, false);"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":105,"author":{"gitId":"-"},"content":"};"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/script\u003e"}],"authorContributionMap":{"vvidday":16,"-":90}},{"path":"frontend/src/components/c-segment-collection.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":".segment-collection(v-observe-visibility\u003d\"{ callback: visibilityChanged }\")"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  template(v-if\u003d\"isRendered\", v-for\u003d\"segment in segments\")"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    c-segment(v-bind:segment\u003d\"segment\", v-bind:path\u003d\"path\")"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cscript\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import cSegment from \u0027./c-segment.vue\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"export default {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  name: \u0027c-segment-collection\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    cSegment,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"  props: {"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    segments: {"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"      type: Array,"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"    path: {"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"  },"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      isRendered: false,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    visibilityChanged(isVisible) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      if (isVisible) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.isRendered \u003d true;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":37,"author":{"gitId":"-"},"content":"};"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/script\u003e"}],"authorContributionMap":{"ckcherry23":10,"-":28}},{"path":"frontend/src/components/c-segment.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":".segment(v-bind:class\u003d\"{ untouched: !segment.authored, active: isOpen }\")"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  .closer(v-if\u003d\"canOpen\","},{"lineNumber":4,"author":{"gitId":"-"},"content":"    v-on:click\u003d\"toggleCode\", ref\u003d\"topButton\")"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    font-awesome-icon.icon("},{"lineNumber":6,"author":{"gitId":"-"},"content":"      v-show\u003d\"!isOpen\","},{"lineNumber":7,"author":{"gitId":"-"},"content":"      icon\u003d\"plus-circle\","},{"lineNumber":8,"author":{"gitId":"-"},"content":"      v-bind:title\u003d\"\u0027Click to open code\u0027\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    font-awesome-icon.icon("},{"lineNumber":11,"author":{"gitId":"-"},"content":"      v-show\u003d\"isOpen\","},{"lineNumber":12,"author":{"gitId":"-"},"content":"      icon\u003d\"chevron-circle-down\","},{"lineNumber":13,"author":{"gitId":"-"},"content":"      v-bind:title\u003d\"\u0027Click to hide code\u0027\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  div(v-if\u003d\"isOpen\", v-hljs\u003d\"path\")"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    .code(v-for\u003d\"(line, index) in segment.lines\", v-bind:key\u003d\"index\")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      .line-number {{ `${segment.lineNumbers[index]}\\n` }}"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      .line-content {{ `${line}\\n` }}"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  .closer.bottom(v-if\u003d\"canOpen\", v-on:click\u003d\"toggleCode\")"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    font-awesome-icon.icon("},{"lineNumber":21,"author":{"gitId":"-"},"content":"      v-show\u003d\"isOpen\","},{"lineNumber":22,"author":{"gitId":"-"},"content":"      icon\u003d\"chevron-circle-up\","},{"lineNumber":23,"author":{"gitId":"-"},"content":"      v-bind:title\u003d\"\u0027Click to hide code\u0027\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cscript\u003e"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"import Segment from \u0027../utils/segment\u0027;"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"export default {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  name: \u0027c-segment\u0027,"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"  props: {"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"    segment: {"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"      type: Segment,"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"    path: {"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"  },"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      isOpen: this.segment.authored || this.segment.lines.length \u003c 5,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      canOpen: !this.segment.authored \u0026\u0026 this.segment.lines.length \u003e 4,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    toggleCode() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      this.isOpen \u003d !this.isOpen;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":53,"author":{"gitId":"-"},"content":"};"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003c/script\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cstyle lang\u003d\"css\"\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@import \u0027../styles/hightlight-js-style.css\u0027;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"vvidday":1,"ckcherry23":11,"-":46}},{"path":"frontend/src/components/c-summary-charts.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"#summary-charts"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  .summary-charts(v-for\u003d\"(repo, i) in filteredRepos\")"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    .summary-charts__title("},{"lineNumber":5,"author":{"gitId":"-"},"content":"      v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByNone\u0027\","},{"lineNumber":6,"author":{"gitId":"-"},"content":"      v-bind:class\u003d\"{ \u0027active-background\u0027: \\"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        isSelectedGroup(repo[0].name, repo[0].repoName) }\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      .summary-charts__title--index {{ i+1 }}"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      .summary-charts__title--groupname"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        template(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027\") {{ repo[0].repoName }}"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        template("},{"lineNumber":13,"author":{"gitId":"-"},"content":"          v-else-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":14,"author":{"gitId":"-"},"content":"          v-bind:class\u003d\" { warn: repo[0].name \u003d\u003d\u003d \u0027-\u0027 }\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"        ) {{ getAuthorDisplayName(repo) }} ({{ repo[0].name }})"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      .summary-charts__title--contribution"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        .tooltip"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          | [{{ getGroupTotalContribution(repo) }} lines]"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          span.tooltip-text("},{"lineNumber":20,"author":{"gitId":"-"},"content":"            v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"          ) Total contribution of group"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          span.tooltip-text("},{"lineNumber":23,"author":{"gitId":"-"},"content":"            v-else-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"          ) Total contribution of author"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      a("},{"lineNumber":26,"author":{"gitId":"-"},"content":"        v-if\u003d\"!isGroupMerged(getGroupName(repo))\","},{"lineNumber":27,"author":{"gitId":"-"},"content":"        v-on:click\u003d\"handleMergeGroup(getGroupName(repo))\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        .tooltip"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          font-awesome-icon.icon-button(:icon\u003d\"[\u0027fas\u0027, \u0027chevron-up\u0027]\")"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          span.tooltip-text Click to merge group"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      a("},{"lineNumber":33,"author":{"gitId":"-"},"content":"        v-if\u003d\"isGroupMerged(getGroupName(repo))\","},{"lineNumber":34,"author":{"gitId":"-"},"content":"        v-on:click\u003d\"handleExpandGroup(getGroupName(repo))\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        .tooltip"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          font-awesome-icon.icon-button(:icon\u003d\"[\u0027fas\u0027, \u0027chevron-down\u0027]\")"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          span.tooltip-text Click to expand group"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      a("},{"lineNumber":40,"author":{"gitId":"-"},"content":"        v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027\","},{"lineNumber":41,"author":{"gitId":"-"},"content":"        v-bind:class\u003d\"!isBrokenLink(getRepoLink(repo[0])) ? \u0027\u0027 : \u0027broken-link\u0027\","},{"lineNumber":42,"author":{"gitId":"-"},"content":"        v-bind:href\u003d\"getRepoLink(repo[0])\", target\u003d\"_blank\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        .tooltip"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          font-awesome-icon.icon-button(:icon\u003d\"getRepoIcon(repo[0])\")"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          span.tooltip-text {{getGroupRepoLinkMessage(repo[0])}}"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      a("},{"lineNumber":48,"author":{"gitId":"-"},"content":"        v-else-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":49,"author":{"gitId":"-"},"content":"        v-bind:class\u003d\"!isBrokenLink(getAuthorProfileLink(repo[0], repo[0].name)) ? \u0027\u0027 : \u0027broken-link\u0027\","},{"lineNumber":50,"author":{"gitId":"-"},"content":"        v-bind:href\u003d\"getAuthorProfileLink(repo[0], repo[0].name)\", target\u003d\"_blank\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        .tooltip"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          font-awesome-icon.icon-button(icon\u003d\"user\")"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          span.tooltip-text {{getAuthorProfileLinkMessage(repo[0])}}"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      template(v-if\u003d\"isGroupMerged(getGroupName(repo))\")"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":57,"author":{"gitId":"-"},"content":"          v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":58,"author":{"gitId":"-"},"content":"          onclick\u003d\"deactivateAllOverlays()\","},{"lineNumber":59,"author":{"gitId":"-"},"content":"          v-on:click\u003d\"openTabAuthorship(repo[0], repo, 0, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":63,"author":{"gitId":"-"},"content":"              icon\u003d\"code\","},{"lineNumber":64,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{ \u0027active-icon\u0027: isSelectedTab(repo[0].name, repo[0].repoName, \u0027authorship\u0027, true) }\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            span.tooltip-text Click to view group\u0027s code"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":68,"author":{"gitId":"-"},"content":"          onclick\u003d\"deactivateAllOverlays()\","},{"lineNumber":69,"author":{"gitId":"-"},"content":"          v-on:click\u003d\"openTabZoom(repo[0], filterSinceDate, filterUntilDate, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":73,"author":{"gitId":"-"},"content":"              icon\u003d\"list-ul\","},{"lineNumber":74,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{ \u0027active-icon\u0027: isSelectedTab(repo[0].name, repo[0].repoName, \u0027zoom\u0027, true) }\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            span.tooltip-text Click to view breakdown of commits"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      .tooltip.summary-chart__title--percentile("},{"lineNumber":78,"author":{"gitId":"-"},"content":"          v-if\u003d\"sortGroupSelection.includes(\u0027totalCommits\u0027)\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ) {{ getPercentile(i) }} %\u0026nbsp"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        span.tooltip-text.right-aligned {{ getPercentileExplanation(i) }}"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    .summary-charts__fileType--breakdown(v-if\u003d\"filterBreakdown\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      template(v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByNone\u0027\")"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        .summary-charts__fileType--breakdown__legend("},{"lineNumber":84,"author":{"gitId":"-"},"content":"          v-for\u003d\"fileType in getFileTypes(repo)\","},{"lineNumber":85,"author":{"gitId":"-"},"content":"          v-bind:key\u003d\"fileType\""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":87,"author":{"gitId":"-"},"content":"          font-awesome-icon("},{"lineNumber":88,"author":{"gitId":"-"},"content":"            icon\u003d\"circle\","},{"lineNumber":89,"author":{"gitId":"-"},"content":"            v-bind:style\u003d\"{ \u0027color\u0027: fileTypeColors[fileType] }\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          span \u0026nbsp; {{ fileType }} \u0026nbsp;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    .summary-chart(v-for\u003d\"(user, j) in repo\")"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      .summary-chart__title("},{"lineNumber":94,"author":{"gitId":"-"},"content":"        v-if\u003d\"!isGroupMerged(getGroupName(repo))\","},{"lineNumber":95,"author":{"gitId":"-"},"content":"        v-bind:class\u003d\"{ \u0027active-background\u0027: user.name \u003d\u003d\u003d activeUser \u0026\u0026 user.repoName \u003d\u003d\u003d activeRepo }\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        .summary-chart__title--index {{ j+1 }}"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        .summary-chart__title--repo(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027\") {{ user.repoName }}"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        .summary-chart__title--author-repo(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\") {{ user.repoName }}"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        .summary-chart__title--name("},{"lineNumber":101,"author":{"gitId":"-"},"content":"          v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":102,"author":{"gitId":"-"},"content":"          v-bind:class\u003d\"{ warn: user.name \u003d\u003d\u003d \u0027-\u0027 }\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ) {{ user.displayName }} ({{ user.name }})"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        .summary-chart__title--contribution.mini-font [{{ user.checkedFileTypeContribution }} lines]"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":106,"author":{"gitId":"-"},"content":"          v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByRepos\u0027\","},{"lineNumber":107,"author":{"gitId":"-"},"content":"          v-bind:class\u003d\"!isBrokenLink(getRepoLink(repo[j])) ? \u0027\u0027 : \u0027broken-link\u0027\","},{"lineNumber":108,"author":{"gitId":"-"},"content":"          v-bind:href\u003d\"getRepoLink(repo[j])\", target\u003d\"_blank\""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button(:icon\u003d\"getRepoIcon(repo[0])\")"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            span.tooltip-text {{getRepoLinkMessage(repo[j])}}"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":114,"author":{"gitId":"-"},"content":"          v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":115,"author":{"gitId":"-"},"content":"          v-bind:class\u003d\"!isBrokenLink(getAuthorProfileLink(repo[j], repo[j].name)) ? \u0027\u0027 : \u0027broken-link\u0027\","},{"lineNumber":116,"author":{"gitId":"-"},"content":"          v-bind:href\u003d\"getAuthorProfileLink(repo[j], repo[j].name)\", target\u003d\"_blank\""},{"lineNumber":117,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button(icon\u003d\"user\")"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            span.tooltip-text {{getAuthorProfileLinkMessage(repo[j])}}"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":122,"author":{"gitId":"-"},"content":"          onclick\u003d\"deactivateAllOverlays()\","},{"lineNumber":123,"author":{"gitId":"-"},"content":"          v-on:click\u003d\"openTabAuthorship(user, repo, j, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":125,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":127,"author":{"gitId":"-"},"content":"              icon\u003d\"code\","},{"lineNumber":128,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{ \u0027active-icon\u0027: isSelectedTab(user.name, user.repoName, \u0027authorship\u0027, false) }\""},{"lineNumber":129,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            span.tooltip-text Click to view author\u0027s contribution."},{"lineNumber":131,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":132,"author":{"gitId":"-"},"content":"          onclick\u003d\"deactivateAllOverlays()\","},{"lineNumber":133,"author":{"gitId":"-"},"content":"          v-on:click\u003d\"openTabZoom(user, filterSinceDate, filterUntilDate, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":135,"author":{"gitId":"-"},"content":"          .tooltip"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":137,"author":{"gitId":"-"},"content":"              icon\u003d\"list-ul\","},{"lineNumber":138,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{ \u0027active-icon\u0027: isSelectedTab(user.name, user.repoName, \u0027zoom\u0027, false) }\""},{"lineNumber":139,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            span.tooltip-text Click to view breakdown of commits"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        .tooltip.summary-chart__title--percentile("},{"lineNumber":142,"author":{"gitId":"-"},"content":"          v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 \u0026\u0026 sortGroupSelection.includes(\u0027totalCommits\u0027)\""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        ) {{ getPercentile(j) }} %\u0026nbsp"},{"lineNumber":144,"author":{"gitId":"-"},"content":"          span.tooltip-text.right-aligned {{ getPercentileExplanation(j) }}"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"      .summary-chart__ramp("},{"lineNumber":147,"author":{"gitId":"-"},"content":"        v-on:click\u003d\"openTabZoomSubrange(user, $event, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":148,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        c-ramp("},{"lineNumber":150,"author":{"gitId":"-"},"content":"          v-bind:groupby\u003d\"filterGroupSelection\","},{"lineNumber":151,"author":{"gitId":"-"},"content":"          v-bind:user\u003d\"user\","},{"lineNumber":152,"author":{"gitId":"-"},"content":"          v-bind:tframe\u003d\"filterTimeFrame\","},{"lineNumber":153,"author":{"gitId":"-"},"content":"          v-bind:sdate\u003d\"filterSinceDate\","},{"lineNumber":154,"author":{"gitId":"-"},"content":"          v-bind:udate\u003d\"filterUntilDate\","},{"lineNumber":155,"author":{"gitId":"-"},"content":"          v-bind:avgsize\u003d\"avgCommitSize\","},{"lineNumber":156,"author":{"gitId":"-"},"content":"          v-bind:mergegroup\u003d\"isGroupMerged(getGroupName(repo))\","},{"lineNumber":157,"author":{"gitId":"-"},"content":"          v-bind:filtersearch\u003d\"filterSearch\")"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        .overlay"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"      .summary-chart__contribution"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        template(v-if\u003d\"filterBreakdown\")"},{"lineNumber":162,"author":{"gitId":"-"},"content":"          .summary-chart__contrib("},{"lineNumber":163,"author":{"gitId":"-"},"content":"            v-for\u003d\"(widths, fileType) in getFileTypeContributionBars(user.fileTypeContribution)\""},{"lineNumber":164,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            .summary-chart__contrib--bar("},{"lineNumber":166,"author":{"gitId":"-"},"content":"              v-for\u003d\"width in widths\","},{"lineNumber":167,"author":{"gitId":"-"},"content":"              v-bind:style\u003d\"{ width: `${width}%`,\\"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                \u0027background-color\u0027: fileTypeColors[fileType] }\","},{"lineNumber":169,"author":{"gitId":"-"},"content":"              v-bind:title\u003d\"`${fileType}: ${user.fileTypeContribution[fileType]} lines, \\"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                total: ${user.checkedFileTypeContribution} lines (contribution from ${minDate} to \\"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                ${maxDate})`\""},{"lineNumber":172,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        template(v-else)"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          .summary-chart__contrib("},{"lineNumber":175,"author":{"gitId":"-"},"content":"            v-bind:title\u003d\"`Total contribution from ${minDate} to ${maxDate}: \\"},{"lineNumber":176,"author":{"gitId":"-"},"content":"              ${user.checkedFileTypeContribution} lines`\""},{"lineNumber":177,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            .summary-chart__contrib--bar("},{"lineNumber":179,"author":{"gitId":"-"},"content":"              v-for\u003d\"width in getContributionBars(user.checkedFileTypeContribution)\","},{"lineNumber":180,"author":{"gitId":"-"},"content":"              v-bind:style\u003d\"{ width: `${width}%` }\""},{"lineNumber":181,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cscript\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"vvidday"},"content":"import brokenLinkDisabler from \u0027../mixin/brokenLinkMixin\u0027;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"import cRamp from \u0027./c-ramp.vue\u0027;"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"export default {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  name: \u0027c-summary-charts\u0027,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    cRamp,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":195,"author":{"gitId":"vvidday"},"content":"  mixins: [brokenLinkDisabler],"},{"lineNumber":196,"author":{"gitId":"ckcherry23"},"content":"  props: {"},{"lineNumber":197,"author":{"gitId":"ckcherry23"},"content":"    checkedFileTypes: {"},{"lineNumber":198,"author":{"gitId":"ckcherry23"},"content":"      type: Array,"},{"lineNumber":199,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":200,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":201,"author":{"gitId":"ckcherry23"},"content":"    filtered: {"},{"lineNumber":202,"author":{"gitId":"ckcherry23"},"content":"      type: Array,"},{"lineNumber":203,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":204,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":205,"author":{"gitId":"ckcherry23"},"content":"    avgContributionSize: {"},{"lineNumber":206,"author":{"gitId":"ckcherry23"},"content":"      type: Number,"},{"lineNumber":207,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":208,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":209,"author":{"gitId":"ckcherry23"},"content":"    filterBreakdown: {"},{"lineNumber":210,"author":{"gitId":"ckcherry23"},"content":"      type: Boolean,"},{"lineNumber":211,"author":{"gitId":"ckcherry23"},"content":"      default: false,"},{"lineNumber":212,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":213,"author":{"gitId":"ckcherry23"},"content":"    filterGroupSelection: {"},{"lineNumber":214,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":215,"author":{"gitId":"ckcherry23"},"content":"      default: \u0027groupByRepos\u0027,"},{"lineNumber":216,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":217,"author":{"gitId":"ckcherry23"},"content":"    filterTimeFrame: {"},{"lineNumber":218,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":219,"author":{"gitId":"ckcherry23"},"content":"      default: \u0027commit\u0027,"},{"lineNumber":220,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":221,"author":{"gitId":"ckcherry23"},"content":"    filterSinceDate: {"},{"lineNumber":222,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":223,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":224,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":225,"author":{"gitId":"ckcherry23"},"content":"    filterUntilDate: {"},{"lineNumber":226,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":227,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":228,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":229,"author":{"gitId":"ckcherry23"},"content":"    isMergeGroup: {"},{"lineNumber":230,"author":{"gitId":"ckcherry23"},"content":"      type: Boolean,"},{"lineNumber":231,"author":{"gitId":"ckcherry23"},"content":"      default: false,"},{"lineNumber":232,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":233,"author":{"gitId":"ckcherry23"},"content":"    minDate: {"},{"lineNumber":234,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":235,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":236,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":237,"author":{"gitId":"ckcherry23"},"content":"    maxDate: {"},{"lineNumber":238,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":239,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":240,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":241,"author":{"gitId":"ckcherry23"},"content":"    filterSearch: {"},{"lineNumber":242,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":243,"author":{"gitId":"ckcherry23"},"content":"      default: \u0027\u0027,"},{"lineNumber":244,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":245,"author":{"gitId":"ckcherry23"},"content":"    sortGroupSelection: {"},{"lineNumber":246,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":247,"author":{"gitId":"ckcherry23"},"content":"      default: \u0027groupTitle\u0027,"},{"lineNumber":248,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":249,"author":{"gitId":"ckcherry23"},"content":"  },"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      drags: [],"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      activeRepo: null,"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      activeUser: null,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      activeTabType: null,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      isTabOnMergedGroup: false,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    avgCommitSize() {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      let totalCommits \u003d 0;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"      let totalCount \u003d 0;"},{"lineNumber":264,"author":{"gitId":"-"},"content":"      this.filteredRepos.forEach((repo) \u003d\u003e {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        repo.forEach((user) \u003d\u003e {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"          user.commits.forEach((slice) \u003d\u003e {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (slice.insertions \u003e 0) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"              totalCount +\u003d 1;"},{"lineNumber":269,"author":{"gitId":"-"},"content":"              totalCommits +\u003d slice.insertions;"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":271,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      return totalCommits / totalCount;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"    filteredRepos() {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      return this.filtered.filter((repo) \u003d\u003e repo.length \u003e 0);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"    ...mapState([\u0027mergedGroups\u0027, \u0027fileTypeColors\u0027]),"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  watch: {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    \u0027$store.state.isTabActive\u0027: function () {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      if (!this.$store.state.isTabActive) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        this.removeSelectedTab();"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":290,"author":{"gitId":"vvidday"},"content":"  created() {"},{"lineNumber":291,"author":{"gitId":"vvidday"},"content":"    this.retrieveSelectedTabHash();"},{"lineNumber":292,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    getFileTypeContributionBars(fileTypeContribution) {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      let currentBarWidth \u003d 0;"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      const fullBarWidth \u003d 100;"},{"lineNumber":297,"author":{"gitId":"-"},"content":"      const contributionPerFullBar \u003d (this.avgContributionSize * 2);"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      const allFileTypesContributionBars \u003d {};"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"      Object.keys(fileTypeContribution)"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        .filter((fileType) \u003d\u003e this.checkedFileTypes.includes(fileType))"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        .forEach((fileType) \u003d\u003e {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"          const contribution \u003d fileTypeContribution[fileType];"},{"lineNumber":304,"author":{"gitId":"-"},"content":"          let barWidth \u003d (contribution / contributionPerFullBar) * fullBarWidth;"},{"lineNumber":305,"author":{"gitId":"-"},"content":"          const contributionBars \u003d [];"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"          // if contribution bar for file type is able to fit on the current line"},{"lineNumber":308,"author":{"gitId":"-"},"content":"          if (currentBarWidth + barWidth \u003c fullBarWidth) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            contributionBars.push(barWidth);"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            currentBarWidth +\u003d barWidth;"},{"lineNumber":311,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            // take up all the space left on the current line"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            contributionBars.push(fullBarWidth - currentBarWidth);"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            barWidth -\u003d fullBarWidth - currentBarWidth;"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            // additional bar width will start on a new line"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            const numOfFullBars \u003d Math.floor(barWidth / fullBarWidth);"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            for (let i \u003d 0; i \u003c numOfFullBars; i +\u003d 1) {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"              contributionBars.push(fullBarWidth);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            const remainingBarWidth \u003d barWidth % fullBarWidth;"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            if (remainingBarWidth !\u003d\u003d 0) {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"              contributionBars.push(remainingBarWidth);"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":324,"author":{"gitId":"-"},"content":"            currentBarWidth \u003d remainingBarWidth;"},{"lineNumber":325,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"          allFileTypesContributionBars[fileType] \u003d contributionBars;"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"      return allFileTypesContributionBars;"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"    getFileTypes(repo) {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      const fileTypes \u003d [];"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      repo.forEach((user) \u003d\u003e {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        Object.keys(user.fileTypeContribution).forEach((fileType) \u003d\u003e {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"          if (this.checkedFileTypes.includes(fileType) \u0026\u0026 !fileTypes.includes(fileType)) {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            fileTypes.push(fileType);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      return fileTypes;"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"    getGroupTotalContribution(group) {"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      return group.reduce((acc, ele) \u003d\u003e acc + ele.checkedFileTypeContribution, 0);"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"    getContributionBars(totalContribution) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      const res \u003d [];"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      const contributionLimit \u003d (this.avgContributionSize * 2);"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"      const cnt \u003d Math.floor(totalContribution / contributionLimit);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"      for (let cntId \u003d 0; cntId \u003c cnt; cntId +\u003d 1) {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        res.push(100);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"      const last \u003d (totalContribution % contributionLimit) / contributionLimit;"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      if (last !\u003d\u003d 0) {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        res.push(last * 100);"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"      return res;"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"    getAuthorProfileLink(repo, userName) {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"      return window.getAuthorLink(repo.repoId, userName);"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"    getGroupRepoLinkMessage(repo) {"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      return this.getLinkMessage(this.getRepoLink(repo), \u0027Click to view group\\\u0027s repo\u0027);"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"    getAuthorProfileLinkMessage(repo) {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"      return this.getLinkMessage(this.getAuthorProfileLink(repo, repo.name), \u0027Click to view author\\\u0027s profile\u0027);"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"    getRepoLinkMessage(repo) {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"      return this.getLinkMessage(this.getRepoLink(repo), \u0027Click to view repo\u0027);"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"    getRepoLink(repo) {"},{"lineNumber":383,"author":{"gitId":"-"},"content":"      const { REPOS } \u003d window;"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      const { location, branch } \u003d REPOS[repo.repoId];"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"      if (Object.prototype.hasOwnProperty.call(location, \u0027organization\u0027)) {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        return window.getBranchLink(repo.repoId, branch);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      this.removeSelectedTab();"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      return repo.location;"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":392,"author":{"gitId":"-"},"content":""},{"lineNumber":393,"author":{"gitId":"-"},"content":"    getRepoIcon(repo) {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"      const domainName \u003d window.REPOS[repo.repoId].location.domainName;"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"      switch (domainName) {"},{"lineNumber":397,"author":{"gitId":"-"},"content":"      case \u0027github\u0027:"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        return [\u0027fab\u0027, \u0027github\u0027];"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      case \u0027gitlab\u0027:"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        return [\u0027fab\u0027, \u0027gitlab\u0027];"},{"lineNumber":401,"author":{"gitId":"-"},"content":"      case \u0027bitbucket\u0027:"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        return [\u0027fab\u0027, \u0027bitbucket\u0027];"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        return [\u0027fas\u0027, \u0027database\u0027];"},{"lineNumber":405,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"    // triggering opening of tabs //"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    openTabAuthorship(user, repo, index, isMerged) {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        minDate, maxDate, checkedFileTypes,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      } \u003d this;"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"      const info \u003d {"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        minDate,"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        maxDate,"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        checkedFileTypes,"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        author: user.name,"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        repo: user.repoName,"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        name: user.displayName,"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        isMergeGroup: isMerged,"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        location: this.getRepoLink(repo[index]),"},{"lineNumber":423,"author":{"gitId":"vvidday"},"content":"        files: [],"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      this.addSelectedTab(user.name, user.repoName, \u0027authorship\u0027, isMerged);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabAuthorshipInfo\u0027, info);"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"    openTabZoomSubrange(user, evt, isMerged) {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"      const isKeyPressed \u003d window.isMacintosh ? evt.metaKey : evt.ctrlKey;"},{"lineNumber":431,"author":{"gitId":"-"},"content":""},{"lineNumber":432,"author":{"gitId":"-"},"content":"      if (isKeyPressed) {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        if (this.drags.length \u003d\u003d\u003d 0) {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"          this.dragViewDown(evt);"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":436,"author":{"gitId":"-"},"content":"          this.dragViewUp(evt);"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"      // skip if accidentally clicked on ramp chart"},{"lineNumber":441,"author":{"gitId":"-"},"content":"      if (this.drags.length \u003d\u003d\u003d 2 \u0026\u0026 this.drags[1] - this.drags[0]) {"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        const tdiff \u003d new Date(this.filterUntilDate) - new Date(this.filterSinceDate);"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        const idxs \u003d this.drags.map((x) \u003d\u003e (x * tdiff) / 100);"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        const tsince \u003d window.getDateStr(new Date(this.filterSinceDate).getTime() + idxs[0]);"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        const tuntil \u003d window.getDateStr(new Date(this.filterSinceDate).getTime() + idxs[1]);"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        this.drags \u003d [];"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        this.openTabZoom(user, tsince, tuntil, isMerged);"},{"lineNumber":448,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"    openTabZoom(user, since, until, isMerged) {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        avgCommitSize, filterGroupSelection, filterTimeFrame, filterSearch,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"      } \u003d this;"},{"lineNumber":455,"author":{"gitId":"vvidday"},"content":"      // Deep copy to ensure changes in zoom (e.g. toggle state) won\u0027t affect summary, and vice versa"},{"lineNumber":456,"author":{"gitId":"vvidday"},"content":"      const clonedUser \u003d JSON.parse(JSON.stringify(user));"},{"lineNumber":457,"author":{"gitId":"-"},"content":"      const info \u003d {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        zRepo: user.repoName,"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        zAuthor: user.name,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        zFilterGroup: filterGroupSelection,"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        zTimeFrame: filterTimeFrame,"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        zAvgCommitSize: avgCommitSize,"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        zUser: clonedUser,"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        zLocation: this.getRepoLink(user),"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        zSince: since,"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        zUntil: until,"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        zIsMerged: isMerged,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        zFileTypeColors: this.fileTypeColors,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        zFromRamp: false,"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        zFilterSearch: filterSearch,"},{"lineNumber":471,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      this.addSelectedTab(user.name, user.repoName, \u0027zoom\u0027, isMerged);"},{"lineNumber":473,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabZoomInfo\u0027, info);"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"    getBaseTarget(target) {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"      return target.className \u003d\u003d\u003d \u0027summary-chart__ramp\u0027"},{"lineNumber":478,"author":{"gitId":"-"},"content":"          ? target"},{"lineNumber":479,"author":{"gitId":"-"},"content":"          : this.getBaseTarget(target.parentElement);"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":481,"author":{"gitId":"-"},"content":""},{"lineNumber":482,"author":{"gitId":"-"},"content":"    dragViewDown(evt) {"},{"lineNumber":483,"author":{"gitId":"-"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"      const pos \u003d evt.clientX;"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      const ramp \u003d this.getBaseTarget(evt.target);"},{"lineNumber":487,"author":{"gitId":"-"},"content":"      this.drags \u003d [pos];"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"      const base \u003d ramp.offsetWidth;"},{"lineNumber":490,"author":{"gitId":"-"},"content":"      const offset \u003d ramp.parentElement.offsetLeft;"},{"lineNumber":491,"author":{"gitId":"-"},"content":""},{"lineNumber":492,"author":{"gitId":"-"},"content":"      const overlay \u003d ramp.getElementsByClassName(\u0027overlay\u0027)[0];"},{"lineNumber":493,"author":{"gitId":"-"},"content":"      overlay.style.marginLeft \u003d \u00270\u0027;"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      overlay.style.width \u003d `${((pos - offset) * 100) / base}%`;"},{"lineNumber":495,"author":{"gitId":"-"},"content":"      overlay.className +\u003d \u0027 edge\u0027;"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"    dragViewUp(evt) {"},{"lineNumber":499,"author":{"gitId":"-"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":500,"author":{"gitId":"-"},"content":"      const ramp \u003d this.getBaseTarget(evt.target);"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"      const base \u003d ramp.offsetWidth;"},{"lineNumber":503,"author":{"gitId":"-"},"content":"      this.drags.push(evt.clientX);"},{"lineNumber":504,"author":{"gitId":"-"},"content":"      this.drags.sort((a, b) \u003d\u003e a - b);"},{"lineNumber":505,"author":{"gitId":"-"},"content":""},{"lineNumber":506,"author":{"gitId":"-"},"content":"      const offset \u003d ramp.parentElement.offsetLeft;"},{"lineNumber":507,"author":{"gitId":"-"},"content":"      this.drags \u003d this.drags.map((x) \u003d\u003e ((x - offset) * 100) / base);"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"      const overlay \u003d ramp.getElementsByClassName(\u0027overlay\u0027)[0];"},{"lineNumber":510,"author":{"gitId":"-"},"content":"      overlay.style.marginLeft \u003d `${this.drags[0]}%`;"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      overlay.style.width \u003d `${this.drags[1] - this.drags[0]}%`;"},{"lineNumber":512,"author":{"gitId":"-"},"content":"      overlay.className +\u003d \u0027 show\u0027;"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"    getPercentile(index) {"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027) {"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        return (Math.round(((index + 1) * 1000) / this.filtered[0].length) / 10).toFixed(1);"},{"lineNumber":518,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":519,"author":{"gitId":"-"},"content":"      return (Math.round(((index + 1) * 1000) / this.filtered.length) / 10).toFixed(1);"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"    getGroupName(group) {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"      return window.getGroupName(group, this.filterGroupSelection);"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"    isGroupMerged(groupName) {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"      return this.mergedGroups.includes(groupName);"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":529,"author":{"gitId":"-"},"content":""},{"lineNumber":530,"author":{"gitId":"-"},"content":"    handleMergeGroup(groupName) {"},{"lineNumber":531,"author":{"gitId":"-"},"content":"      const info \u003d this.mergedGroups;"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      info.push(groupName);"},{"lineNumber":533,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateMergedGroup\u0027, info);"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":535,"author":{"gitId":"-"},"content":""},{"lineNumber":536,"author":{"gitId":"-"},"content":"    handleExpandGroup(groupName) {"},{"lineNumber":537,"author":{"gitId":"-"},"content":"      const info \u003d this.mergedGroups.filter((x) \u003d\u003e x !\u003d\u003d groupName);"},{"lineNumber":538,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateMergedGroup\u0027, info);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"-"},"content":"    getAuthorDisplayName(repo) {"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      return window.getAuthorDisplayName(repo);"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":544,"author":{"gitId":"-"},"content":""},{"lineNumber":545,"author":{"gitId":"-"},"content":"    retrieveSelectedTabHash() {"},{"lineNumber":546,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"      if (hash.tabAuthor) {"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        this.activeUser \u003d hash.tabAuthor;"},{"lineNumber":550,"author":{"gitId":"-"},"content":"      } else if (hash.zA) {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        this.activeUser \u003d hash.zA;"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":553,"author":{"gitId":"-"},"content":""},{"lineNumber":554,"author":{"gitId":"-"},"content":"      if (hash.tabRepo) {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        this.activeRepo \u003d hash.tabRepo;"},{"lineNumber":556,"author":{"gitId":"-"},"content":"      } else if (hash.zR) {"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        this.activeRepo \u003d hash.zR;"},{"lineNumber":558,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":559,"author":{"gitId":"-"},"content":""},{"lineNumber":560,"author":{"gitId":"-"},"content":"      if (hash.isTabOnMergedGroup) {"},{"lineNumber":561,"author":{"gitId":"-"},"content":"        if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027) {"},{"lineNumber":562,"author":{"gitId":"-"},"content":"          this.activeRepo \u003d null;"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        } else if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027) {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"          this.activeUser \u003d null;"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        this.isTabOnMergedGroup \u003d true;"},{"lineNumber":567,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":568,"author":{"gitId":"-"},"content":""},{"lineNumber":569,"author":{"gitId":"-"},"content":"      if (hash.tabType) {"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        this.activeTabType \u003d hash.tabType;"},{"lineNumber":571,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"-"},"content":"    addSelectedTab(userName, repo, tabType, isMerged) {"},{"lineNumber":575,"author":{"gitId":"-"},"content":"      if (!isMerged || this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027) {"},{"lineNumber":576,"author":{"gitId":"-"},"content":"        this.activeUser \u003d userName;"},{"lineNumber":577,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        this.activeUser \u003d null;"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"      if (isMerged \u0026\u0026 this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027) {"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        this.activeRepo \u003d null;"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        this.activeRepo \u003d repo;"},{"lineNumber":585,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":586,"author":{"gitId":"-"},"content":""},{"lineNumber":587,"author":{"gitId":"-"},"content":"      if (isMerged) {"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        window.addHash(\u0027isTabOnMergedGroup\u0027, \u0027true\u0027);"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        this.isTabOnMergedGroup \u003d true;"},{"lineNumber":590,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        window.removeHash(\u0027isTabOnMergedGroup\u0027);"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        this.isTabOnMergedGroup \u003d false;"},{"lineNumber":593,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":594,"author":{"gitId":"-"},"content":""},{"lineNumber":595,"author":{"gitId":"-"},"content":"      this.activeTabType \u003d tabType;"},{"lineNumber":596,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":598,"author":{"gitId":"-"},"content":""},{"lineNumber":599,"author":{"gitId":"-"},"content":"    removeSelectedTab() {"},{"lineNumber":600,"author":{"gitId":"-"},"content":"      this.activeUser \u003d null;"},{"lineNumber":601,"author":{"gitId":"-"},"content":"      this.activeRepo \u003d null;"},{"lineNumber":602,"author":{"gitId":"-"},"content":"      this.activeTabType \u003d null;"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027isTabOnMergedGroup\u0027);"},{"lineNumber":605,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":606,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":607,"author":{"gitId":"-"},"content":""},{"lineNumber":608,"author":{"gitId":"-"},"content":"    isSelectedTab(userName, repo, tabType, isMerged) {"},{"lineNumber":609,"author":{"gitId":"-"},"content":"      if (!isMerged) {"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        return this.activeUser \u003d\u003d\u003d userName \u0026\u0026 this.activeRepo \u003d\u003d\u003d repo"},{"lineNumber":611,"author":{"gitId":"-"},"content":"            \u0026\u0026 this.activeTabType \u003d\u003d\u003d tabType;"},{"lineNumber":612,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":613,"author":{"gitId":"-"},"content":""},{"lineNumber":614,"author":{"gitId":"-"},"content":"      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027) {"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        return this.isTabOnMergedGroup \u0026\u0026 this.activeUser \u003d\u003d\u003d userName"},{"lineNumber":616,"author":{"gitId":"-"},"content":"            \u0026\u0026 this.activeTabType \u003d\u003d\u003d tabType;"},{"lineNumber":617,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":"      return this.isTabOnMergedGroup \u0026\u0026 this.activeRepo \u003d\u003d\u003d repo"},{"lineNumber":620,"author":{"gitId":"-"},"content":"          \u0026\u0026 this.activeTabType \u003d\u003d\u003d tabType;"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":622,"author":{"gitId":"-"},"content":""},{"lineNumber":623,"author":{"gitId":"-"},"content":"    isSelectedGroup(userName, repo) {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      return this.isTabOnMergedGroup"},{"lineNumber":625,"author":{"gitId":"-"},"content":"          \u0026\u0026 ((this.filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027 \u0026\u0026 this.activeRepo \u003d\u003d\u003d repo)"},{"lineNumber":626,"author":{"gitId":"-"},"content":"          || (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027 \u0026\u0026 this.activeUser \u003d\u003d\u003d userName));"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"-"},"content":"    getPercentileExplanation(j) {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"      const explanation \u003d `Based on the current sorting order, this item is in the top ${this.getPercentile(j)}%`;"},{"lineNumber":631,"author":{"gitId":"-"},"content":"      return explanation;"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":635,"author":{"gitId":"-"},"content":"};"},{"lineNumber":636,"author":{"gitId":"-"},"content":"\u003c/script\u003e"}],"authorContributionMap":{"vvidday":8,"ckcherry23":54,"-":574}},{"path":"frontend/src/store/store.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { createStore } from \u0027vuex\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"export default createStore({"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  state: {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    tabAuthorshipInfo: {},"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    tabZoomInfo: {},"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    summaryDates: {},"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mergedGroups: [],"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    fileTypeColors: {},"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    loadingOverlayCount: 0,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    loadingOverlayMessage: \u0027\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    isTabActive: true,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  mutations: {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    updateTabZoomInfo(state, info) {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      state.tabZoomInfo \u003d info;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    updateTabAuthorshipInfo(state, info) {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      state.tabAuthorshipInfo \u003d info;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    updateSummaryDates(state, info) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      state.summaryDates \u003d info;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    updateFileTypeColors(state, info) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      state.fileTypeColors \u003d info;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    updateMergedGroup(state, info) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      state.mergedGroups \u003d info;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    incrementLoadingOverlayCount(state, increment) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      state.loadingOverlayCount +\u003d increment;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      if (state.loadingOverlayCount \u003d\u003d\u003d 0) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        state.loadingOverlayMessage \u003d \u0027Loading. Please wait...\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    updateLoadingOverlayMessage(state, message) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      state.loadingOverlayMessage \u003d message;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    updateTabState(state, isTabOpen) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      state.isTabActive \u003d isTabOpen;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      window.addHash(\u0027tabOpen\u0027, isTabOpen);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      if (!isTabOpen) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        window.removeHash(\u0027tabType\u0027);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"    toggleZoomCommitMessageBody(_, slice) {"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"      if (slice.isOpen !\u003d\u003d undefined) {"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"        slice.isOpen \u003d !slice.isOpen;"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"    setAllZoomCommitMessageBody(_, { isOpen, commits }) {"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"      commits.forEach((commit) \u003d\u003e {"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"        commit.commitResults.forEach((slice) \u003d\u003e {"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"          if (slice.isOpen !\u003d\u003d undefined) {"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"            slice.isOpen \u003d isOpen;"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"          }"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"        });"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"      });"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"    updateTabAuthorshipFiles(state, files) {"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"      state.tabAuthorshipInfo.files.splice(0, state.tabAuthorshipInfo.files.length, ...files);"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"    toggleAuthorshipFileActiveProperty(_, file) {"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"      file.active \u003d !file.active;"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"      file.wasCodeLoaded \u003d file.wasCodeLoaded || file.active;"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"    setAllAuthorshipFileActiveProperty(_, { isActive, files }) {"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"      files.forEach((file) \u003d\u003e {"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"        file.active \u003d isActive;"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"        file.wasCodeLoaded \u003d file.wasCodeLoaded || file.active;"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"      });"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  actions: {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    // Actions are called with dispatch"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    async incrementLoadingOverlayCountForceReload({ commit }, increment) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      commit(\u0027incrementLoadingOverlayCount\u0027, increment);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      await new Promise(window.requestAnimationFrame);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      await new Promise(window.requestAnimationFrame);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      // Needed as browsers render lazily by default"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      // https://stackoverflow.com/a/44146560"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":86,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"vvidday":27,"-":59}},{"path":"frontend/src/types/types.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import { FileResult } from \u0027./zod/authorship-type\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"  AuthorFileTypeContributions,"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  CommitResultRaw,"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"  Commits,"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"} from \u0027./zod/commits-type\u0027;"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import { RepoRaw } from \u0027./zod/summary-type\u0027;"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"// We add these three fields in setContributionOfCommitResultsAndInsertRepoId of utils/api.ts"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"export interface CommitResult extends CommitResultRaw {"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"  repoId: string;"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"  insertions: number;"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"  deletions: number;"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"// Similar to AuthorDailyContributions, but uses the updated CommitResult with the three new fields"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"export interface DailyCommit {"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"  commitResults: CommitResult[];"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"  date: string;"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"// Similar to DailyCommit, but contains the total insertions and deletions for all CommitResults"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"export interface Commit extends DailyCommit {"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"  deletions: number;"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"  insertions: number;"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"export interface User {"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"  checkedFileTypeContribution: number;"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"  commits?: Commit[];"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"  dailyCommits: DailyCommit[];"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"  displayName: string;"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"  fileTypeContribution: AuthorFileTypeContributions;"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"  location: string;"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"  name: string;"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"  repoId: string;"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"  repoName: string;"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"  searchPath: string;"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"  variance: number;"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"// We add these three fields in loadCommits and loadAuthorship of utils/api.ts"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"export interface Repo extends RepoRaw {"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"  commits?: Commits;"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"  files?: FileResult[];"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"  users?: User[];"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"}"}],"authorContributionMap":{"vvidday":47}},{"path":"frontend/src/types/window.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import JSZip from \u0027jszip\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"import User from \u0027../utils/user\u0027;"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import { Repo, User as UserType } from \u0027./types\u0027;"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import { AuthorshipSchema } from \u0027./zod/authorship-type\u0027;"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import { AuthorDailyContributions } from \u0027./zod/commits-type\u0027;"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import { DomainUrlMap, ErrorMessage } from \u0027./zod/summary-type\u0027;"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"// Declares the types for all the global variables under the window object"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"export {};"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"interface comparatorFunction {"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"  (a: any, b: any): -1 | 0 | 1;"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"interface sortingFunction {"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"  (item: any, sortingOption?: string): any;"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"interface api {"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"  loadJSON: (fname: string) \u003d\u003e Promise\u003cany\u003e;"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"  loadSummary: () \u003d\u003e Promise\u003c{"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"    creationDate: string,"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"    reportGenerationTime: string,"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"    errorMessages: { [key: string]: ErrorMessage },"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"    names: string[],"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"  } | null\u003e;"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"  loadCommits: (repoName: string) \u003d\u003e Promise\u003cUser[]\u003e;"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"  loadAuthorship: (repoName: string) \u003d\u003e Promise\u003cAuthorshipSchema\u003e;"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"  setContributionOfCommitResultsAndInsertRepoId: (dailyCommits: AuthorDailyContributions[], repoId: string) \u003d\u003e void;"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"declare global {"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"  interface Window {"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"    $: (id: string) \u003d\u003e HTMLElement | null;"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"    enquery: (key: string, val: string) \u003d\u003e string;"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"    REPOSENSE_REPO_URL: string;"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"    HOME_PAGE_URL: string;"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"    UNSUPPORTED_INDICATOR: string;"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"    DAY_IN_MS: number;"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"    HASH_DELIMITER: string;"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"    REPOS: { [key: string]: Repo };"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"    hashParams: { [key: string]: string };"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"    isMacintosh: boolean;"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"    REPORT_ZIP: JSZip | null;"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"    deactivateAllOverlays: () \u003d\u003e void;"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"    getDateStr: (date: Date) \u003d\u003e string;"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"    getHexToRGB: (color: string) \u003d\u003e number[];"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"    getFontColor: (color: string) \u003d\u003e string;"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"    addHash: (newKey: string, newVal: string) \u003d\u003e void;"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"    removeHash: (key: string) \u003d\u003e void;"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"    encodeHash: () \u003d\u003e void;"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"    decodeHash: () \u003d\u003e void;"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"    comparator: (fn: sortingFunction, sortingOption: string) \u003d\u003e comparatorFunction;"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"    filterUnsupported: (string: string) \u003d\u003e string | undefined;"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"    getAuthorLink: (repoId: string, author: string) \u003d\u003e string | undefined;"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"    getRepoLinkUnfiltered: (repoId: string) \u003d\u003e string;"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"    getRepoLink: (repoId: string) \u003d\u003e string | undefined;"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"    getBranchLink: (repoId: string, branch: string) \u003d\u003e string | undefined;"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"    getCommitLink: (repoId: string, commitHash: string) \u003d\u003e string | undefined;"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"    getBlameLink: (repoId: string, branch: string, filepath: string) \u003d\u003e string | undefined;"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"    getHistoryLink: (repoId: string, branch: string, filepath: string) \u003d\u003e string | undefined;"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"    getGroupName: (group: UserType[], filterGroupSelection: string) \u003d\u003e string;"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"    getAuthorDisplayName: (authorRepos: Repo[]) \u003d\u003e string;"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"    api: api;"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"    sinceDate: string;"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"    untilDate: string;"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"    repoSenseVersion: string;"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"    isSinceDateProvided: boolean;"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"    isUntilDateProvided: boolean;"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"    DOMAIN_URL_MAP: DomainUrlMap;"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"  }"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"}"}],"authorContributionMap":{"vvidday":72}},{"path":"frontend/src/types/zod/authorship-type.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import { z } from \u0027zod\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"const lineSchema \u003d z.object({"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  lineNumber: z.number(),"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"  author: z.object({ gitId: z.string() }),"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"  content: z.string(),"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"const fileResult \u003d z.object({"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"  path: z.string(),"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"  fileType: z.string(),"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"  lines: z.array(lineSchema),"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"  authorContributionMap: z.record(z.number()),"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"// Contains the zod validation schema for the authorship.json file"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"export const authorshipSchema \u003d z.array(fileResult);"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"// Export typescript types"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"export type AuthorshipSchema \u003d z.infer\u003ctypeof authorshipSchema\u003e;"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"export type FileResult \u003d z.infer\u003ctypeof fileResult\u003e;"}],"authorContributionMap":{"vvidday":22}},{"path":"frontend/src/types/zod/commits-type.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import { z } from \u0027zod\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"const fileTypesAndContributionSchema \u003d z.object({"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  insertions: z.number(),"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"  deletions: z.number(),"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"const commitResult \u003d z.object({"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"  hash: z.string(),"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"  messageTitle: z.string(),"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"  messageBody: z.string(),"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"  tags: z.array(z.string()).optional(),"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"  fileTypesAndContributionMap: z.record(fileTypesAndContributionSchema),"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"const authorDailyContributionsSchema \u003d z.object({"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"  date: z.string(),"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"  commitResults: z.array(commitResult),"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"const authorFileTypeContributionsSchema \u003d z.record(z.number());"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"// Contains the zod validation schema for the commits.json file"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"export const commitsSchema \u003d z.object({"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"  authorDailyContributionsMap: z.record(z.array(authorDailyContributionsSchema)),"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"  authorFileTypeContributionMap: z.record(authorFileTypeContributionsSchema),"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"  authorContributionVariance: z.record(z.number()),"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"  authorDisplayNameMap: z.record(z.string()),"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"// Export typescript types"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"export type Commits \u003d z.infer\u003ctypeof commitsSchema\u003e;"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"export type CommitResultRaw \u003d z.infer\u003ctypeof commitResult\u003e;"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"export type AuthorDailyContributions \u003d z.infer\u003ctypeof authorDailyContributionsSchema\u003e;"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"export type AuthorFileTypeContributions \u003d z.infer\u003ctypeof authorFileTypeContributionsSchema\u003e;"}],"authorContributionMap":{"vvidday":36}},{"path":"frontend/src/types/zod/summary-type.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import { z } from \u0027zod\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"const locationSchema \u003d z.object({"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  location: z.string(),"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"  repoName: z.string(),"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"  organization: z.string(),"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"  domainName: z.string(),"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"const repoSchema \u003d z.object({"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"  location: locationSchema,"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"  branch: z.string(),"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"  displayName: z.string(),"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"  outputFolderName: z.string(),"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"const errorSchema \u003d z.object({"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"  repoName: z.string(),"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"  errorMessage: z.string(),"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"const urlSchema \u003d z.object({"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"  BASE_URL: z.string(),"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"  BLAME_PATH: z.string(),"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"  BRANCH: z.string(),"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"  COMMIT_PATH: z.string(),"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"  HISTORY_PATH: z.string(),"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"  REPO_URL: z.string(),"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"const supportedDomainUrlMapSchema \u003d z.record(urlSchema);"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"// Contains the zod validation schema for the summary.json file"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"export const summarySchema \u003d z.object({"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"  repoSenseVersion: z.string(),"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"  reportGeneratedTime: z.string(),"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"  reportGenerationTime: z.string(),"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"  zoneId: z.string(),"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"  reportTitle: z.string(),"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"  repos: z.array(repoSchema),"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"  errorSet: z.array(errorSchema),"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"  sinceDate: z.string(),"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"  untilDate: z.string(),"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"  isSinceDateProvided: z.boolean(),"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"  isUntilDateProvided: z.boolean(),"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"  supportedDomainUrlMap: supportedDomainUrlMapSchema,"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"// Export typescript types"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"export type DomainUrlMap \u003d z.infer\u003ctypeof supportedDomainUrlMapSchema\u003e;"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"export type RepoRaw \u003d z.infer\u003ctypeof repoSchema\u003e;"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"export type ErrorMessage \u003d z.infer\u003ctypeof errorSchema\u003e;"}],"authorContributionMap":{"vvidday":53}},{"path":"frontend/src/utils/api.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import { DailyCommit, CommitResult } from \u0027../types/types\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"import { authorshipSchema } from \u0027../types/zod/authorship-type\u0027;"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import { commitsSchema } from \u0027../types/zod/commits-type\u0027;"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import { ErrorMessage, summarySchema } from \u0027../types/zod/summary-type\u0027;"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import User from \u0027./user\u0027;"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"// utility functions //"},{"lineNumber":8,"author":{"gitId":"-"},"content":"window.$ \u003d (id) \u003d\u003e document.getElementById(id);"},{"lineNumber":9,"author":{"gitId":"-"},"content":"window.enquery \u003d (key, val) \u003d\u003e `${key}\u003d${encodeURIComponent(val)}`;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"window.REPOSENSE_REPO_URL \u003d \u0027https://github.com/reposense/RepoSense\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"window.HOME_PAGE_URL \u003d \u0027https://reposense.org\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"window.UNSUPPORTED_INDICATOR \u003d \u0027UNSUPPORTED\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"window.DAY_IN_MS \u003d (1000 * 60 * 60 * 24);"},{"lineNumber":14,"author":{"gitId":"-"},"content":"window.HASH_DELIMITER \u003d \u0027~\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"window.REPOS \u003d {};"},{"lineNumber":16,"author":{"gitId":"-"},"content":"window.hashParams \u003d {};"},{"lineNumber":17,"author":{"gitId":"-"},"content":"window.isMacintosh \u003d navigator.platform.includes(\u0027Mac\u0027);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"window.REPORT_ZIP \u003d null;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"const HASH_ANCHOR \u003d \u0027?\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"const REPORT_DIR \u003d \u0027.\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"window.deactivateAllOverlays \u003d function deactivateAllOverlays() {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  document.querySelectorAll(\u0027.summary-chart__ramp .overlay\u0027)"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    .forEach((x) \u003d\u003e {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      x.className \u003d \u0027overlay\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":28,"author":{"gitId":"-"},"content":"};"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"window.getDateStr \u003d function getDateStr(date) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  return (new Date(date)).toISOString().split(\u0027T\u0027)[0];"},{"lineNumber":32,"author":{"gitId":"-"},"content":"};"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"window.getHexToRGB \u003d function getHexToRGB(color) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  // to convert color from hex code to rgb format"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  const arr \u003d /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"  return arr ? arr.slice(1).map((val) \u003d\u003e parseInt(val, 16)) : [];"},{"lineNumber":38,"author":{"gitId":"-"},"content":"};"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"window.getFontColor \u003d function getFontColor(color) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  const result \u003d window.getHexToRGB(color);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  const red \u003d result[0];"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  const green \u003d result[1];"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  const blue \u003d result[2];"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  const luminosity \u003d 0.2126 * red + 0.7152 * green + 0.0722 * blue; // per ITU-R BT.709"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  return luminosity \u003c 120 ? \u0027#ffffff\u0027 : \u0027#000000\u0027;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"};"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"window.addHash \u003d function addHash(newKey, newVal) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  window.hashParams[newKey] \u003d newVal;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"};"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"window.removeHash \u003d function removeHash(key) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  delete window.hashParams[key];"},{"lineNumber":57,"author":{"gitId":"-"},"content":"};"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"window.encodeHash \u003d function encodeHash() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  const { hashParams } \u003d window;"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  const hash \u003d Object.keys(hashParams)"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    .map((key) \u003d\u003e `${key}\u003d${encodeURIComponent(hashParams[key])}`)"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    .join(\u0027\u0026\u0027);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  const newUrl \u003d `${window.location.protocol}//${window.location.host}${window.location.pathname}${HASH_ANCHOR}${hash}`;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  window.history.replaceState(null, \u0027\u0027, newUrl);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"};"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"window.decodeHash \u003d function decodeHash() {"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"  const hashParams: { [key: string]: string } \u003d {};"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  const hashIndex \u003d window.location.href.indexOf(HASH_ANCHOR);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  const parameterString \u003d hashIndex \u003d\u003d\u003d -1 ? \u0027\u0027 : window.location.href.slice(hashIndex + 1);"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  parameterString.split(\u0027\u0026\u0027)"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    .forEach((param) \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      const [key, val] \u003d param.split(\u0027\u003d\u0027);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      if (key) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          hashParams[key] \u003d decodeURIComponent(val);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } catch (error) {"},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"          (this as any).userUpdated \u003d false;"},{"lineNumber":84,"author":{"gitId":"vvidday"},"content":"          (this as any).isLoading \u003d false;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  window.hashParams \u003d hashParams;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"};"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"window.comparator \u003d (fn, sortingOption \u003d \u0027\u0027) \u003d\u003e function compare(a, b) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  let a1;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  let b1;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  if (sortingOption) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    a1 \u003d fn(a, sortingOption).toLowerCase"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        ? fn(a, sortingOption).toLowerCase()"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        : fn(a, sortingOption);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    b1 \u003d fn(b, sortingOption).toLowerCase"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ? fn(b, sortingOption).toLowerCase()"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        : fn(b, sortingOption);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  } else {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    a1 \u003d fn(a).toLowerCase ? fn(a).toLowerCase() : fn(a);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    b1 \u003d fn(b).toLowerCase ? fn(b).toLowerCase() : fn(b);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  if (a1 \u003d\u003d\u003d b1) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    return 0;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  } if (a1 \u003c b1) {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    return -1;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  return 1;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"};"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"window.filterUnsupported \u003d function filterUnsupported(string) {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  // checks for a pre-defined unsupported tag"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  return string.includes(window.UNSUPPORTED_INDICATOR) ? undefined : string;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"};"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"window.getAuthorLink \u003d function getAuthorLink(repoId, author) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  const domainName \u003d window.REPOS[repoId].location.domainName;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  return window.filterUnsupported(`${window.DOMAIN_URL_MAP[domainName].BASE_URL}${author}`);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"};"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"window.getRepoLinkUnfiltered \u003d function getRepoLink(repoId) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  // abstraction for repo link construction. Not supposed to be used by other files"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  const domainName \u003d window.REPOS[repoId].location.domainName;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  return window.DOMAIN_URL_MAP[domainName].REPO_URL"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    .replace(\u0027$ORGANIZATION\u0027, window.REPOS[repoId].location.organization)"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    .replace(\u0027$REPO_NAME\u0027, window.REPOS[repoId].location.repoName);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"};"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"window.getRepoLink \u003d function getRepoLink(repoId) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  return window.filterUnsupported(window.getRepoLinkUnfiltered(repoId));"},{"lineNumber":133,"author":{"gitId":"-"},"content":"};"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"window.getBranchLink \u003d function getBranchLink(repoId, branch) {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  const domainName \u003d window.REPOS[repoId].location.domainName;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  return window.filterUnsupported(`${window.getRepoLinkUnfiltered(repoId)}${window.DOMAIN_URL_MAP[domainName].BRANCH}`"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    .replace(\u0027$BRANCH\u0027, branch));"},{"lineNumber":139,"author":{"gitId":"-"},"content":"};"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"window.getCommitLink \u003d function getCommitLink(repoId, commitHash) {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  const domainName \u003d window.REPOS[repoId].location.domainName;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  return window.filterUnsupported(`${window.getRepoLinkUnfiltered(repoId)}${window.DOMAIN_URL_MAP[domainName]"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    .COMMIT_PATH}`"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    .replace(\u0027$COMMIT_HASH\u0027, commitHash));"},{"lineNumber":146,"author":{"gitId":"-"},"content":"};"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"window.getBlameLink \u003d function getBlameLink(repoId, branch, filepath) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  const domainName \u003d window.REPOS[repoId].location.domainName;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  return window.filterUnsupported(`${window.getRepoLinkUnfiltered(repoId)}${window.DOMAIN_URL_MAP[domainName]"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    .BLAME_PATH}`"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    .replace(\u0027$BRANCH\u0027, branch)"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    .replace(\u0027$FILE_PATH\u0027, filepath));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"};"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"window.getHistoryLink \u003d function getHistoryLink(repoId, branch, filepath) {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  const domainName \u003d window.REPOS[repoId].location.domainName;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  return window.filterUnsupported(`${window.getRepoLinkUnfiltered(repoId)}${window.DOMAIN_URL_MAP[domainName]"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    .HISTORY_PATH}`"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    .replace(\u0027$BRANCH\u0027, branch)"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    .replace(\u0027$FILE_PATH\u0027, filepath));"},{"lineNumber":162,"author":{"gitId":"-"},"content":"};"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"window.getGroupName \u003d function getGroupName(group, filterGroupSelection) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  switch (filterGroupSelection) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  case \u0027groupByRepos\u0027:"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    return group[0].repoName;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  case \u0027groupByAuthors\u0027:"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    return group[0].name;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  default:"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    return \u0027\u0027;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":173,"author":{"gitId":"-"},"content":"};"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"window.getAuthorDisplayName \u003d function getAuthorDisplayName(authorRepos) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  return authorRepos.reduce((displayName, user) \u003d\u003e ("},{"lineNumber":177,"author":{"gitId":"-"},"content":"    user.displayName \u003e displayName ? user.displayName : displayName"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  ), authorRepos[0].displayName);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"};"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"window.api \u003d {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  async loadJSON(fname) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    if (window.REPORT_ZIP) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      const zipObject \u003d window.REPORT_ZIP.file(fname);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      if (zipObject) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"          return JSON.parse(await zipObject.async(\u0027text\u0027));"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        } catch (e) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"          throw new Error(\u0027Uploaded JSON is invalid.\u0027);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        throw new Error(\u0027Uploaded zip file is invalid.\u0027);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    try {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      const response \u003d await fetch(`${REPORT_DIR}/${fname}`);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      // Not directly returned in case response is not actually json."},{"lineNumber":198,"author":{"gitId":"-"},"content":"      const json \u003d await response.json();"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      return json;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    } catch (e) {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      throw new Error(`Unable to read ${fname}.`);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  async loadSummary() {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    window.REPOS \u003d {};"},{"lineNumber":206,"author":{"gitId":"vvidday"},"content":"    let data;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    try {"},{"lineNumber":208,"author":{"gitId":"vvidday"},"content":"      const json \u003d await this.loadJSON(\u0027summary.json\u0027);"},{"lineNumber":209,"author":{"gitId":"vvidday"},"content":"      data \u003d summarySchema.parse(json);"},{"lineNumber":210,"author":{"gitId":"vvidday"},"content":"    } catch (error: any) {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      if (error.message \u003d\u003d\u003d \u0027Unable to read summary.json.\u0027) {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      throw error;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    const { reportGeneratedTime, reportGenerationTime } \u003d data;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    window.sinceDate \u003d data.sinceDate;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    window.untilDate \u003d data.untilDate;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    window.repoSenseVersion \u003d data.repoSenseVersion;"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    window.isSinceDateProvided \u003d data.isSinceDateProvided;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    window.isUntilDateProvided \u003d data.isUntilDateProvided;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    document.title \u003d data.reportTitle || document.title;"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"vvidday"},"content":"    const errorMessages: { [key: string]: ErrorMessage } \u003d {};"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    Object.entries(data.errorSet).forEach(([repoName, message]) \u003d\u003e {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      errorMessages[repoName] \u003d message;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"    window.DOMAIN_URL_MAP \u003d data.supportedDomainUrlMap;"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"vvidday"},"content":"    const names: string[] \u003d [];"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    data.repos.forEach((repo) \u003d\u003e {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      const repoName \u003d `${repo.displayName}`;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      window.REPOS[repoName] \u003d repo;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      names.push(repoName);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      creationDate: reportGeneratedTime,"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      reportGenerationTime,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      errorMessages,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      names,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"  async loadCommits(repoName) {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    const folderName \u003d window.REPOS[repoName].outputFolderName;"},{"lineNumber":247,"author":{"gitId":"vvidday"},"content":"    const json \u003d await this.loadJSON(`${folderName}/commits.json`);"},{"lineNumber":248,"author":{"gitId":"vvidday"},"content":"    const commits \u003d commitsSchema.parse(json);"},{"lineNumber":249,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":250,"author":{"gitId":"vvidday"},"content":"    const res: User[] \u003d [];"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    const repo \u003d window.REPOS[repoName];"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"    Object.keys(commits.authorDisplayNameMap).forEach((author) \u003d\u003e {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      if (author) {"},{"lineNumber":255,"author":{"gitId":"vvidday"},"content":"        this.setContributionOfCommitResultsAndInsertRepoId(commits.authorDailyContributionsMap[author], repoName);"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"        const searchParams \u003d ["},{"lineNumber":258,"author":{"gitId":"-"},"content":"          repo.displayName,"},{"lineNumber":259,"author":{"gitId":"vvidday"},"content":"          commits.authorDisplayNameMap[author],"},{"lineNumber":260,"author":{"gitId":"vvidday"},"content":"          author,"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        ];"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"vvidday"},"content":"        // commits and checkedFileTypeContribution are set in c-summary"},{"lineNumber":264,"author":{"gitId":"vvidday"},"content":"        const user \u003d new User({"},{"lineNumber":265,"author":{"gitId":"-"},"content":"          name: author,"},{"lineNumber":266,"author":{"gitId":"-"},"content":"          repoId: repoName,"},{"lineNumber":267,"author":{"gitId":"-"},"content":"          variance: commits.authorContributionVariance[author],"},{"lineNumber":268,"author":{"gitId":"-"},"content":"          displayName: commits.authorDisplayNameMap[author],"},{"lineNumber":269,"author":{"gitId":"vvidday"},"content":"          commits: [],"},{"lineNumber":270,"author":{"gitId":"vvidday"},"content":"          dailyCommits: commits.authorDailyContributionsMap[author] as DailyCommit[],"},{"lineNumber":271,"author":{"gitId":"-"},"content":"          fileTypeContribution: commits.authorFileTypeContributionMap[author],"},{"lineNumber":272,"author":{"gitId":"vvidday"},"content":"          searchPath: searchParams.join(\u0027_\u0027).toLowerCase(),"},{"lineNumber":273,"author":{"gitId":"vvidday"},"content":"          repoName: `${repo.displayName}`,"},{"lineNumber":274,"author":{"gitId":"vvidday"},"content":"          location: `${repo.location.location}`,"},{"lineNumber":275,"author":{"gitId":"vvidday"},"content":"          checkedFileTypeContribution: 0,"},{"lineNumber":276,"author":{"gitId":"vvidday"},"content":"        });"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"ckcherry23"},"content":"        res.push(user);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"    repo.commits \u003d commits;"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    repo.users \u003d res;"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"    return res;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"  loadAuthorship(repoName) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    const folderName \u003d window.REPOS[repoName].outputFolderName;"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    return this.loadJSON(`${folderName}/authorship.json`)"},{"lineNumber":291,"author":{"gitId":"vvidday"},"content":"      .then((json) \u003d\u003e {"},{"lineNumber":292,"author":{"gitId":"vvidday"},"content":"        const files \u003d authorshipSchema.parse(json);"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        window.REPOS[repoName].files \u003d files;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        return files;"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"  // calculate and set the contribution of each commitResult and insert repoId into commitResult,"},{"lineNumber":299,"author":{"gitId":"-"},"content":"  // since not provided in json file"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  setContributionOfCommitResultsAndInsertRepoId(dailyCommits, repoId) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    dailyCommits.forEach((commit) \u003d\u003e {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      commit.commitResults.forEach((result) \u003d\u003e {"},{"lineNumber":303,"author":{"gitId":"vvidday"},"content":"        (result as CommitResult).repoId \u003d repoId;"},{"lineNumber":304,"author":{"gitId":"vvidday"},"content":"        (result as CommitResult).insertions \u003d Object.values(result.fileTypesAndContributionMap)"},{"lineNumber":305,"author":{"gitId":"-"},"content":"          .reduce((acc, fileType) \u003d\u003e acc + fileType.insertions, 0);"},{"lineNumber":306,"author":{"gitId":"vvidday"},"content":"        (result as CommitResult).deletions \u003d Object.values(result.fileTypesAndContributionMap)"},{"lineNumber":307,"author":{"gitId":"-"},"content":"          .reduce((acc, fileType) \u003d\u003e acc + fileType.deletions, 0);"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":310,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":311,"author":{"gitId":"-"},"content":"};"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"export default \u0027test\u0027;"}],"authorContributionMap":{"vvidday":36,"ckcherry23":2,"-":275}},{"path":"frontend/src/utils/segment.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"export default class Segment {"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"  authored: boolean;"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"  lineNumbers: Array\u003cnumber\u003e;"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"  lines: Array\u003cstring\u003e;"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"  constructor(isAuthored: boolean, lineNumbers: Array\u003cnumber\u003e, lines: Array\u003cstring\u003e) {"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"    this.authored \u003d isAuthored;"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"    this.lineNumbers \u003d lineNumbers;"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"    this.lines \u003d lines;"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"  }"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"}"}],"authorContributionMap":{"ckcherry23":13}},{"path":"frontend/src/utils/user.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import { Commit, DailyCommit, User as UserType } from \u0027../types/types\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"import { AuthorFileTypeContributions } from \u0027../types/zod/commits-type\u0027;"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"export default class User implements UserType {"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"  checkedFileTypeContribution : number;"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"  commits: Commit[];"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"  dailyCommits: DailyCommit[];"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"  displayName: string;"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"  fileTypeContribution: AuthorFileTypeContributions;"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"  location: string;"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"  name: string;"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"  repoId: string;"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"  repoName: string;"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"  searchPath: string;"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"  variance: number;"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"  constructor(userObj: User) {"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"    this.checkedFileTypeContribution \u003d userObj.checkedFileTypeContribution || 0;"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    this.commits \u003d userObj.commits || [];"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"    this.dailyCommits \u003d userObj.dailyCommits || [];"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    this.displayName \u003d userObj.displayName || \u0027\u0027;"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"    this.fileTypeContribution \u003d userObj.fileTypeContribution || {};"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"    this.location \u003d userObj.location || \u0027\u0027;"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"    this.name \u003d userObj.name || \u0027\u0027;"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"    this.repoId \u003d userObj.repoId || \u0027\u0027;"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"    this.repoName \u003d userObj.repoName || \u0027\u0027;"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"    this.searchPath \u003d userObj.searchPath || \u0027\u0027;"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"    this.variance \u003d userObj.variance || 0;"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"  }"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"}"}],"authorContributionMap":{"vvidday":7,"ckcherry23":33}},{"path":"frontend/src/views/c-authorship.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"#authorship"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  .panel-title"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    span Code Panel"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  .toolbar--multiline"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    a("},{"lineNumber":7,"author":{"gitId":"-"},"content":"      v-if\u003d\"activeFilesCount \u003c selectedFiles.length\","},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"      v-on:click\u003d\"toggleAllFileActiveProperty(true)\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    ) show all file details"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"    a(v-if\u003d\"activeFilesCount \u003e 0\", v-on:click\u003d\"toggleAllFileActiveProperty(false)\") hide all file details"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  .panel-heading"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    a.group-name("},{"lineNumber":13,"author":{"gitId":"-"},"content":"      v-bind:href\u003d\"info.location\", target\u003d\"_blank\","},{"lineNumber":14,"author":{"gitId":"-"},"content":"      v-bind:title\u003d\"\u0027Click to open the repo\u0027\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ) {{ info.repo }}"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    .author(v-if\u003d\"!info.isMergeGroup\")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      span \u0026#8627; \u0026nbsp;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      span {{ authorDisplayName }} ({{ info.author }})"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    .period"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      span \u0026#8627; \u0026nbsp;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      span {{ info.minDate }} to {{ info.maxDate }}"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        |\u0026nbsp;\u0026nbsp; ({{ selectedFiles.length }} files changed)"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  .title"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"    .contribution(v-if\u003d\"isLoaded \u0026\u0026 info.files.length!\u003d0\")"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      .sorting.mui-form--inline"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        .mui-select.sort-by"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          select(v-model\u003d\"filesSortType\")"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            option(value\u003d\"lineOfCode\") LoC"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            option(value\u003d\"path\") Path"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            option(value\u003d\"fileName\") File Name"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            option(value\u003d\"fileType\") File Type"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          label sort by"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .mui-select.sort-order"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          select(v-model\u003d\"toReverseSortFiles\")"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            option(v-bind:value\u003d\u0027true\u0027) Descending"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            option(v-bind:value\u003d\u0027false\u0027) Ascending"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          label order"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      .searchbox"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        input.radio-button--search("},{"lineNumber":40,"author":{"gitId":"-"},"content":"          type\u003d\"radio\","},{"lineNumber":41,"author":{"gitId":"-"},"content":"          value\u003d\"search\","},{"lineNumber":42,"author":{"gitId":"-"},"content":"          v-model\u003d\"filterType\","},{"lineNumber":43,"author":{"gitId":"-"},"content":"          v-on:change\u003d\"indicateSearchBar\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        .mui-form--inline"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          input#search("},{"lineNumber":47,"author":{"gitId":"-"},"content":"            type\u003d\"search\","},{"lineNumber":48,"author":{"gitId":"-"},"content":"            placeholder\u003d\"Filter by glob\","},{"lineNumber":49,"author":{"gitId":"-"},"content":"            ref\u003d\"searchBar\","},{"lineNumber":50,"author":{"gitId":"-"},"content":"            v-bind:value\u003d\"searchBarValue\","},{"lineNumber":51,"author":{"gitId":"-"},"content":"            v-on:keyup.enter\u003d\"indicateSearchBar(); updateSearchBarValue();\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          button#submit-button("},{"lineNumber":54,"author":{"gitId":"-"},"content":"            type\u003d\"button\","},{"lineNumber":55,"author":{"gitId":"-"},"content":"            v-on:click\u003d\"indicateSearchBar(); updateSearchBarValue();\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"          ) Filter"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      .fileTypes"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        input.radio-button--checkbox("},{"lineNumber":59,"author":{"gitId":"-"},"content":"          type\u003d\"radio\","},{"lineNumber":60,"author":{"gitId":"-"},"content":"          value\u003d\"checkboxes\","},{"lineNumber":61,"author":{"gitId":"-"},"content":"          v-model\u003d\"filterType\","},{"lineNumber":62,"author":{"gitId":"-"},"content":"          v-on:change\u003d\"indicateCheckBoxes\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"        .checkboxes.mui-form--inline(v-if\u003d\"info.files.length \u003e 0\")"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          label(style\u003d\u0027background-color: #000000; color: #ffffff\u0027)"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            input.mui-checkbox--fileType#all(type\u003d\"checkbox\", v-model\u003d\"isSelectAllChecked\")"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            span(v-bind:title\u003d\"getTotalFileBlankLineInfo()\")"},{"lineNumber":68,"author":{"gitId":"-"},"content":"              span All\u0026nbsp;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"              span {{ totalLineCount }}\u0026nbsp;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"              span ({{ totalLineCount - totalBlankLineCount }})\u0026nbsp;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          template(v-for\u003d\"fileType in Object.keys(fileTypeLinesObj)\", v-bind:key\u003d\"fileType\")"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            label("},{"lineNumber":73,"author":{"gitId":"-"},"content":"              v-bind:style\u003d\"{\\"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0027background-color\u0027: fileTypeColors[fileType],\\"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0027color\u0027: getFontColor(fileTypeColors[fileType])\\"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                }\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":78,"author":{"gitId":"-"},"content":"              input.mui-checkbox--fileType(type\u003d\"checkbox\","},{"lineNumber":79,"author":{"gitId":"-"},"content":"                v-bind:id\u003d\"fileType\", v-bind:value\u003d\"fileType\","},{"lineNumber":80,"author":{"gitId":"-"},"content":"                v-on:change\u003d\"indicateCheckBoxes\", v-model\u003d\"selectedFileTypes\")"},{"lineNumber":81,"author":{"gitId":"-"},"content":"              span(v-bind:title\u003d\"getFileTypeBlankLineInfo(fileType)\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                span {{ fileType }}\u0026nbsp;{{ fileTypeLinesObj[fileType] }}\u0026nbsp;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                span ({{ fileTypeLinesObj[fileType] - fileTypeBlankLinesObj[fileType] }})\u0026nbsp;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"          br"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          label.binary-fileType(v-if\u003d\"binaryFilesCount \u003e 0\")"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            input.mui-checkbox--fileType(type\u003d\"checkbox\", v-model\u003d\"isBinaryChecked\")"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            span("},{"lineNumber":88,"author":{"gitId":"-"},"content":"              v-bind:title\u003d\"`${binaryFilesCount} \\"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              binary files (not included in total line count)`\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":91,"author":{"gitId":"-"},"content":"              span {{ binaryFilesCount }} binary file(s)"},{"lineNumber":92,"author":{"gitId":"-"},"content":"          label.ignored-fileType(v-if\u003d\"ignoredFilesCount \u003e 0\")"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            input.mui-checkbox--fileType(type\u003d\"checkbox\", v-model\u003d\"isIgnoredChecked\")"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            span("},{"lineNumber":95,"author":{"gitId":"-"},"content":"              v-bind:title\u003d\"`${ignoredFilesCount} \\"},{"lineNumber":96,"author":{"gitId":"-"},"content":"              ignored files (included in total line count)`\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":98,"author":{"gitId":"-"},"content":"              span {{ ignoredFilesCount }} ignored file(s)"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  .files(v-if\u003d\"isLoaded\")"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"    .empty(v-if\u003d\"info.files.length \u003d\u003d\u003d 0\") nothing to see here :("},{"lineNumber":102,"author":{"gitId":"-"},"content":"    template(v-for\u003d\"(file, i) in selectedFiles\", v-bind:key\u003d\"file.path\")"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      .file"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        .title"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          span.caret(v-on:click\u003d\"toggleFileActiveProperty(file)\")"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            .tooltip(v-show\u003d\"file.active\")"},{"lineNumber":107,"author":{"gitId":"-"},"content":"              font-awesome-icon(icon\u003d\"caret-down\", fixed-width)"},{"lineNumber":108,"author":{"gitId":"-"},"content":"              span.tooltip-text Click to hide file details"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            .tooltip(v-show\u003d\"!file.active\")"},{"lineNumber":110,"author":{"gitId":"-"},"content":"              font-awesome-icon(icon\u003d\"caret-right\", fixed-width)"},{"lineNumber":111,"author":{"gitId":"-"},"content":"              span.tooltip-text Click to show file details"},{"lineNumber":112,"author":{"gitId":"-"},"content":"          span.index {{ i + 1 }}. \u0026nbsp;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          span.path"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            span("},{"lineNumber":115,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{\u0027selected-parameter\u0027:\\"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                  this.filesSortType \u003d\u003d\u003d \u0027path\u0027 || this.filesSortType \u003d\u003d\u003d \u0027fileName\u0027}\""},{"lineNumber":117,"author":{"gitId":"-"},"content":"            ) {{ getFirstPartOfPath(file) }}\u0026nbsp;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            span.in(v-if\u003d\"this.filesSortType \u003d\u003d\u003d \u0027fileName\u0027\") in\u0026nbsp;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            span(v-if\u003d\"this.filesSortType \u003d\u003d\u003d \u0027fileName\u0027\") {{ getSecondPartOfPath(file) }}\u0026nbsp;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"          span.fileTypeLabel("},{"lineNumber":121,"author":{"gitId":"-"},"content":"            v-if\u003d\"!file.isBinary \u0026\u0026 !file.isIgnored\","},{"lineNumber":122,"author":{"gitId":"-"},"content":"            v-bind:style\u003d\"{\\"},{"lineNumber":123,"author":{"gitId":"-"},"content":"              \u0027background-color\u0027: fileTypeColors[file.fileType],\\"},{"lineNumber":124,"author":{"gitId":"-"},"content":"              \u0027color\u0027: getFontColor(fileTypeColors[file.fileType])\\"},{"lineNumber":125,"author":{"gitId":"-"},"content":"              }\","},{"lineNumber":126,"author":{"gitId":"-"},"content":"            v-bind:class\u003d\"{\u0027selected-label\u0027:\\"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                this.filesSortType \u003d\u003d\u003d \u0027lineOfCode\u0027 || this.filesSortType \u003d\u003d\u003d \u0027fileType\u0027}\""},{"lineNumber":128,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            span("},{"lineNumber":130,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{\u0027selected-parameter\u0027:\\"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                  this.filesSortType \u003d\u003d\u003d \u0027lineOfCode\u0027 || this.filesSortType \u003d\u003d\u003d \u0027fileType\u0027}\""},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ) {{ getFirstPartOfLabel(file) }}\u0026nbsp;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            span {{ getSecondPartOfLabel(file) }}"},{"lineNumber":134,"author":{"gitId":"-"},"content":"          span.fileTypeLabel.binary(v-if\u003d\u0027file.isBinary\u0027) binary \u0026nbsp;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"          span.ignored-tag.fileTypeLabel("},{"lineNumber":136,"author":{"gitId":"-"},"content":"            v-if\u003d\u0027file.isIgnored\u0027"},{"lineNumber":137,"author":{"gitId":"-"},"content":"          ) ignored ({{ file.lineCount }}) \u0026nbsp;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"          span.icons"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            a("},{"lineNumber":140,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"!isBrokenLink(getHistoryLink(file)) ? \u0027\u0027 : \u0027broken-link\u0027\","},{"lineNumber":141,"author":{"gitId":"-"},"content":"              v-bind:href\u003d\"getHistoryLink(file)\", target\u003d\"_blank\""},{"lineNumber":142,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":143,"author":{"gitId":"-"},"content":"              .tooltip"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                font-awesome-icon.button(icon\u003d\"history\")"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                span.tooltip-text {{getLinkMessage(getHistoryLink(file), \u0027Click to view the history view of file\u0027)}}"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            a("},{"lineNumber":147,"author":{"gitId":"-"},"content":"              v-if\u003d\u0027!file.isBinary\u0027,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"!isBrokenLink(getBlameLink(file)) ? \u0027\u0027 : \u0027broken-link\u0027\","},{"lineNumber":149,"author":{"gitId":"-"},"content":"              v-bind:href\u003d\"getBlameLink(file)\", target\u003d\"_blank\","},{"lineNumber":150,"author":{"gitId":"-"},"content":"              title\u003d\"click to view the blame view of file\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":152,"author":{"gitId":"-"},"content":"              .tooltip"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                font-awesome-icon.button(icon\u003d\"user-edit\")"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                span.tooltip-text {{getLinkMessage(getBlameLink(file), \u0027Click to view the blame view of file\u0027)}}"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        pre.file-content(v-if\u003d\"file.isBinary\", v-show\u003d\"file.active\")"},{"lineNumber":156,"author":{"gitId":"-"},"content":"          .binary-segment"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            .indicator BIN"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            .bin-text Binary file not shown."},{"lineNumber":159,"author":{"gitId":"-"},"content":"        pre.file-content(v-else-if\u003d\"file.isIgnored\", v-show\u003d\"file.active\")"},{"lineNumber":160,"author":{"gitId":"-"},"content":"          .ignored-segment"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            .ignore-text File is ignored."},{"lineNumber":162,"author":{"gitId":"-"},"content":"        pre.hljs.file-content(v-else-if\u003d\"file.wasCodeLoaded\", v-show\u003d\"file.active\")"},{"lineNumber":163,"author":{"gitId":"-"},"content":"          c-segment-collection(v-bind:segments\u003d\"file.segments\", v-bind:path\u003d\"file.path\")"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003cscript\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"import minimatch from \u0027minimatch\u0027;"},{"lineNumber":169,"author":{"gitId":"vvidday"},"content":"import brokenLinkDisabler from \u0027../mixin/brokenLinkMixin\u0027;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"import cSegmentCollection from \u0027../components/c-segment-collection.vue\u0027;"},{"lineNumber":171,"author":{"gitId":"vvidday"},"content":"import Segment from \u0027../utils/segment\u0027;"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"const getFontColor \u003d window.getFontColor;"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"const filesSortDict \u003d {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  lineOfCode: (file) \u003d\u003e file.lineCount,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  path: (file) \u003d\u003e file.path,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  fileName: (file) \u003d\u003e file.path.split(/[/]+/).pop(),"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  fileType: (file) \u003d\u003e file.fileType,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"};"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"function authorshipInitialState() {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  return {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    isLoaded: false,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    selectedFiles: [],"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    filterType: \u0027checkboxes\u0027,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    selectedFileTypes: [],"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    fileTypes: [],"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    filesLinesObj: {},"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    fileTypeBlankLinesObj: {},"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    filesSortType: \u0027lineOfCode\u0027,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    toReverseSortFiles: true,"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    isBinaryFilesChecked: false,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    isIgnoredFilesChecked: false,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    searchBarValue: \u0027\u0027,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    authorDisplayName: \u0027\u0027,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"const repoCache \u003d [];"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"export default {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  name: \u0027c-authorship\u0027,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    cSegmentCollection,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":207,"author":{"gitId":"vvidday"},"content":"  mixins: [brokenLinkDisabler],"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  emits: ["},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u0027deactivate-tab\u0027,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    return authorshipInitialState();"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"vvidday"},"content":"  computed: {"},{"lineNumber":216,"author":{"gitId":"vvidday"},"content":"    sortingFunction() {"},{"lineNumber":217,"author":{"gitId":"vvidday"},"content":"      return (a, b) \u003d\u003e (this.toReverseSortFiles ? -1 : 1)"},{"lineNumber":218,"author":{"gitId":"vvidday"},"content":"        * window.comparator(filesSortDict[this.filesSortType])(a, b);"},{"lineNumber":219,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":220,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":221,"author":{"gitId":"vvidday"},"content":"    isSelectAllChecked: {"},{"lineNumber":222,"author":{"gitId":"vvidday"},"content":"      get() {"},{"lineNumber":223,"author":{"gitId":"vvidday"},"content":"        return this.selectedFileTypes.length \u003d\u003d\u003d this.fileTypes.length;"},{"lineNumber":224,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":225,"author":{"gitId":"vvidday"},"content":"      set(value) {"},{"lineNumber":226,"author":{"gitId":"vvidday"},"content":"        if (value) {"},{"lineNumber":227,"author":{"gitId":"vvidday"},"content":"          this.selectedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":228,"author":{"gitId":"vvidday"},"content":"        } else {"},{"lineNumber":229,"author":{"gitId":"vvidday"},"content":"          this.selectedFileTypes \u003d [];"},{"lineNumber":230,"author":{"gitId":"vvidday"},"content":"        }"},{"lineNumber":231,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":232,"author":{"gitId":"vvidday"},"content":"        this.indicateCheckBoxes();"},{"lineNumber":233,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":234,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":235,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":236,"author":{"gitId":"vvidday"},"content":"    isBinaryChecked: {"},{"lineNumber":237,"author":{"gitId":"vvidday"},"content":"      get() {"},{"lineNumber":238,"author":{"gitId":"vvidday"},"content":"        return this.isBinaryFilesChecked;"},{"lineNumber":239,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":240,"author":{"gitId":"vvidday"},"content":"      set(value) {"},{"lineNumber":241,"author":{"gitId":"vvidday"},"content":"        if (value) {"},{"lineNumber":242,"author":{"gitId":"vvidday"},"content":"          this.isBinaryFilesChecked \u003d true;"},{"lineNumber":243,"author":{"gitId":"vvidday"},"content":"        } else {"},{"lineNumber":244,"author":{"gitId":"vvidday"},"content":"          this.isBinaryFilesChecked \u003d false;"},{"lineNumber":245,"author":{"gitId":"vvidday"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":247,"author":{"gitId":"vvidday"},"content":"        this.updateSelectedFiles();"},{"lineNumber":248,"author":{"gitId":"vvidday"},"content":"        this.indicateCheckBoxes();"},{"lineNumber":249,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":250,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":251,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":252,"author":{"gitId":"vvidday"},"content":"    isIgnoredChecked: {"},{"lineNumber":253,"author":{"gitId":"vvidday"},"content":"      get() {"},{"lineNumber":254,"author":{"gitId":"vvidday"},"content":"        return this.isIgnoredFilesChecked;"},{"lineNumber":255,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":256,"author":{"gitId":"vvidday"},"content":"      set(value) {"},{"lineNumber":257,"author":{"gitId":"vvidday"},"content":"        if (value) {"},{"lineNumber":258,"author":{"gitId":"vvidday"},"content":"          this.isIgnoredFilesChecked \u003d true;"},{"lineNumber":259,"author":{"gitId":"vvidday"},"content":"        } else {"},{"lineNumber":260,"author":{"gitId":"vvidday"},"content":"          this.isIgnoredFilesChecked \u003d false;"},{"lineNumber":261,"author":{"gitId":"vvidday"},"content":"        }"},{"lineNumber":262,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":263,"author":{"gitId":"vvidday"},"content":"        this.updateSelectedFiles();"},{"lineNumber":264,"author":{"gitId":"vvidday"},"content":"        this.indicateCheckBoxes();"},{"lineNumber":265,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":266,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":267,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":268,"author":{"gitId":"vvidday"},"content":"    activeFilesCount() {"},{"lineNumber":269,"author":{"gitId":"vvidday"},"content":"      return this.selectedFiles.filter((file) \u003d\u003e file.active).length;"},{"lineNumber":270,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":271,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":272,"author":{"gitId":"vvidday"},"content":"    totalLineCount() {"},{"lineNumber":273,"author":{"gitId":"vvidday"},"content":"      return Object.values(this.fileTypeLinesObj).reduce((acc, val) \u003d\u003e acc + val, 0);"},{"lineNumber":274,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":275,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":276,"author":{"gitId":"vvidday"},"content":"    totalBlankLineCount() {"},{"lineNumber":277,"author":{"gitId":"vvidday"},"content":"      return Object.values(this.fileTypeBlankLinesObj).reduce((acc, val) \u003d\u003e acc + val, 0);"},{"lineNumber":278,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":279,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":280,"author":{"gitId":"vvidday"},"content":"    fileTypeLinesObj() {"},{"lineNumber":281,"author":{"gitId":"vvidday"},"content":"      const numLinesModified \u003d {};"},{"lineNumber":282,"author":{"gitId":"vvidday"},"content":"      Object.entries(this.filesLinesObj)"},{"lineNumber":283,"author":{"gitId":"vvidday"},"content":"        .filter(([, value]) \u003d\u003e value \u003e 0)"},{"lineNumber":284,"author":{"gitId":"vvidday"},"content":"        .forEach(([langType, value]) \u003d\u003e {"},{"lineNumber":285,"author":{"gitId":"vvidday"},"content":"          numLinesModified[langType] \u003d value;"},{"lineNumber":286,"author":{"gitId":"vvidday"},"content":"        });"},{"lineNumber":287,"author":{"gitId":"vvidday"},"content":"      return numLinesModified;"},{"lineNumber":288,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":289,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":290,"author":{"gitId":"vvidday"},"content":"    binaryFilesCount() {"},{"lineNumber":291,"author":{"gitId":"vvidday"},"content":"      return this.info.files.filter((file) \u003d\u003e file.isBinary).length;"},{"lineNumber":292,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":293,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":294,"author":{"gitId":"vvidday"},"content":"    ignoredFilesCount() {"},{"lineNumber":295,"author":{"gitId":"vvidday"},"content":"      return this.info.files.filter((file) \u003d\u003e file.isIgnored).length;"},{"lineNumber":296,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":297,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":298,"author":{"gitId":"vvidday"},"content":"    ...mapState({"},{"lineNumber":299,"author":{"gitId":"vvidday"},"content":"      fileTypeColors: \u0027fileTypeColors\u0027,"},{"lineNumber":300,"author":{"gitId":"vvidday"},"content":"      info: \u0027tabAuthorshipInfo\u0027,"},{"lineNumber":301,"author":{"gitId":"vvidday"},"content":"    }),"},{"lineNumber":302,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":303,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"  watch: {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    filesSortType() {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      window.addHash(\u0027authorshipSortBy\u0027, this.filesSortType);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles();"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"    searchBarValue() {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles();"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"    selectedFileTypes: {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      deep: true,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      handler() {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        this.updateSelectedFiles();"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"    toReverseSortFiles() {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      window.addHash(\u0027reverseAuthorshipOrder\u0027, this.toReverseSortFiles);"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles();"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"    info() {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"      Object.assign(this.$data, authorshipInitialState());"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      this.initiate();"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"vvidday"},"content":"  created() {"},{"lineNumber":335,"author":{"gitId":"vvidday"},"content":"    this.initiate();"},{"lineNumber":336,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":337,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":338,"author":{"gitId":"vvidday"},"content":"  beforeUnmount() {"},{"lineNumber":339,"author":{"gitId":"vvidday"},"content":"    this.removeAuthorshipHashes();"},{"lineNumber":340,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":341,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    retrieveHashes() {"},{"lineNumber":344,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"      switch (hash.authorshipSortBy) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      case \u0027path\u0027:"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      case \u0027fileName\u0027:"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      case \u0027fileType\u0027:"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        this.filesSortType \u003d hash.authorshipSortBy;"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        // Invalid value, use the default value of \u0027lineOfCode\u0027"},{"lineNumber":354,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"      this.toReverseSortFiles \u003d hash.reverseAuthorshipOrder !\u003d\u003d \u0027false\u0027;"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"      if (hash.authorshipFileTypes) {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        this.selectedFileTypes \u003d hash.authorshipFileTypes"},{"lineNumber":360,"author":{"gitId":"-"},"content":"          .split(window.HASH_DELIMITER)"},{"lineNumber":361,"author":{"gitId":"-"},"content":"          .filter((fileType) \u003d\u003e this.fileTypes.includes(fileType));"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        this.resetSelectedFileTypes();"},{"lineNumber":364,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"      if (hash.authorshipIsBinaryFileTypeChecked) {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        this.isBinaryFilesChecked \u003d hash.authorshipIsBinaryFileTypeChecked \u003d\u003d\u003d \u0027true\u0027;"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"      if (hash.authorshipIsIgnoredFilesChecked) {"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        this.isIgnoredFilesChecked \u003d hash.authorshipIsIgnoredFilesChecked \u003d\u003d\u003d \u0027true\u0027;"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"      if (\u0027authorshipFilesGlob\u0027 in hash) {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        this.indicateSearchBar();"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        this.searchBarValue \u003d hash.authorshipFilesGlob;"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    resetSelectedFileTypes() {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      this.selectedFileTypes \u003d this.info.checkedFileTypes"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        ? this.info.checkedFileTypes.filter((fileType) \u003d\u003e this.fileTypes.includes(fileType))"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        : [];"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"    setInfoHash() {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"      const { addHash } \u003d window;"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      // We only set these hashes as they are propagated from summary_charts"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      addHash(\u0027tabAuthor\u0027, this.info.author);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      addHash(\u0027tabRepo\u0027, this.info.repo);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      addHash(\u0027authorshipIsMergeGroup\u0027, this.info.isMergeGroup);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      this.updateFileTypeHash();"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"    removeAuthorshipHashes() {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipFileTypes\u0027);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipIsBinaryFileTypeChecked\u0027);"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipIsIgnoredFilesChecked\u0027);"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipFilesGlob\u0027);"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipSortBy\u0027);"},{"lineNumber":401,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027reverseAuthorshipOrder\u0027);"},{"lineNumber":402,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027tabAuthor\u0027);"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027tabRepo\u0027);"},{"lineNumber":404,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipIsMergeGroup\u0027);"},{"lineNumber":405,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"    async initiate() {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"      const repo \u003d window.REPOS[this.info.repo];"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"      if (!repo || !this.info.author) {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateTabState\u0027, false);"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      if (repoCache.length \u003d\u003d\u003d 2) {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        const toRemove \u003d repoCache.shift();"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        if (toRemove !\u003d\u003d this.info.repo) {"},{"lineNumber":418,"author":{"gitId":"-"},"content":"          delete window.REPOS[toRemove].files;"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":420,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      repoCache.push(this.info.repo);"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"      let { files } \u003d repo;"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      if (!files) {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        files \u003d await window.api.loadAuthorship(this.info.repo);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"      const author \u003d repo.users.find((user) \u003d\u003e user.name \u003d\u003d\u003d this.info.author);"},{"lineNumber":429,"author":{"gitId":"-"},"content":"      if (author) {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        this.authorDisplayName \u003d author.displayName;"},{"lineNumber":431,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"      this.processFiles(files);"},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"-"},"content":"      if (this.info.isRefresh) {"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        this.retrieveHashes();"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        this.resetSelectedFileTypes();"},{"lineNumber":439,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"      this.setInfoHash();"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"vvidday"},"content":"    toggleAllFileActiveProperty(isActive) {"},{"lineNumber":445,"author":{"gitId":"vvidday"},"content":"      this.$store.commit(\u0027setAllAuthorshipFileActiveProperty\u0027, { isActive, files: this.selectedFiles });"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":447,"author":{"gitId":"-"},"content":""},{"lineNumber":448,"author":{"gitId":"-"},"content":"    toggleFileActiveProperty(file) {"},{"lineNumber":449,"author":{"gitId":"vvidday"},"content":"      this.$store.commit(\u0027toggleAuthorshipFileActiveProperty\u0027, file);"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"    isUnknownAuthor(name) {"},{"lineNumber":453,"author":{"gitId":"-"},"content":"      return name \u003d\u003d\u003d \u0027-\u0027;"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":455,"author":{"gitId":"-"},"content":""},{"lineNumber":456,"author":{"gitId":"-"},"content":"    hasCommits(info) {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"      const { isMergeGroup, author } \u003d info;"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      const repo \u003d window.REPOS[info.repo];"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      if (repo) {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        return isMergeGroup"},{"lineNumber":461,"author":{"gitId":"-"},"content":"            ? Object.entries(repo.commits.authorFinalContributionMap).some(([name, cnt]) \u003d\u003e ("},{"lineNumber":462,"author":{"gitId":"-"},"content":"              !this.isUnknownAuthor(name) \u0026\u0026 cnt \u003e 0"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            ))"},{"lineNumber":464,"author":{"gitId":"-"},"content":"            : repo.commits.authorFinalContributionMap[author] \u003e 0;"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      return false;"},{"lineNumber":467,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":468,"author":{"gitId":"-"},"content":""},{"lineNumber":469,"author":{"gitId":"-"},"content":"    splitSegments(lines) {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"      // split into segments separated by authored"},{"lineNumber":471,"author":{"gitId":"-"},"content":"      let lastState;"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      let lastId \u003d -1;"},{"lineNumber":473,"author":{"gitId":"-"},"content":"      const segments \u003d [];"},{"lineNumber":474,"author":{"gitId":"-"},"content":"      let blankLineCount \u003d 0;"},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"      lines.forEach((line, lineCount) \u003d\u003e {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        const isAuthorMatched \u003d this.info.isMergeGroup"},{"lineNumber":478,"author":{"gitId":"-"},"content":"            ? !this.isUnknownAuthor(line.author.gitId)"},{"lineNumber":479,"author":{"gitId":"-"},"content":"            : line.author.gitId \u003d\u003d\u003d this.info.author;"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        const authored \u003d (line.author \u0026\u0026 isAuthorMatched);"},{"lineNumber":481,"author":{"gitId":"-"},"content":""},{"lineNumber":482,"author":{"gitId":"-"},"content":"        if (authored !\u003d\u003d lastState || lastId \u003d\u003d\u003d -1) {"},{"lineNumber":483,"author":{"gitId":"ckcherry23"},"content":"          segments.push(new Segment("},{"lineNumber":484,"author":{"gitId":"-"},"content":"            authored,"},{"lineNumber":485,"author":{"gitId":"ckcherry23"},"content":"            [],"},{"lineNumber":486,"author":{"gitId":"ckcherry23"},"content":"            [],"},{"lineNumber":487,"author":{"gitId":"ckcherry23"},"content":"          ));"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"          lastId +\u003d 1;"},{"lineNumber":490,"author":{"gitId":"-"},"content":"          lastState \u003d authored;"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"        const content \u003d line.content || \u0027 \u0027;"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        segments[lastId].lines.push(content);"},{"lineNumber":495,"author":{"gitId":"-"},"content":""},{"lineNumber":496,"author":{"gitId":"-"},"content":"        segments[lastId].lineNumbers.push(lineCount + 1);"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"        if (line.content \u003d\u003d\u003d \u0027\u0027 \u0026\u0026 authored) {"},{"lineNumber":499,"author":{"gitId":"-"},"content":"          blankLineCount +\u003d 1;"},{"lineNumber":500,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":501,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"      return {"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        segments,"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        blankLineCount,"},{"lineNumber":506,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"    processFiles(files) {"},{"lineNumber":510,"author":{"gitId":"-"},"content":"      const SINGLE_FILE_LINE_COUNT_THRESHOLD \u003d 2000;"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      const SINGLE_FILE_CHAR_COUNT_THRESHOLD \u003d 1000000;"},{"lineNumber":512,"author":{"gitId":"-"},"content":"      const res \u003d [];"},{"lineNumber":513,"author":{"gitId":"-"},"content":"      const fileTypeBlanksInfoObj \u003d {};"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"      files.filter((file) \u003d\u003e this.isValidFile(file)).forEach((file) \u003d\u003e {"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        const contributionMap \u003d file.authorContributionMap;"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"        const lineCnt \u003d this.info.isMergeGroup"},{"lineNumber":519,"author":{"gitId":"-"},"content":"            ? this.getContributionFromAllAuthors(contributionMap)"},{"lineNumber":520,"author":{"gitId":"-"},"content":"            : contributionMap[this.info.author];"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"        const out \u003d {};"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        out.path \u003d file.path;"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        out.lineCount \u003d lineCnt;"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        out.active \u003d lineCnt \u003c\u003d SINGLE_FILE_LINE_COUNT_THRESHOLD \u0026\u0026 !file.isBinary;"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        out.wasCodeLoaded \u003d lineCnt \u003c\u003d SINGLE_FILE_LINE_COUNT_THRESHOLD;"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        out.fileType \u003d file.fileType;"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        out.fileSize \u003d file.fileSize;"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        out.isIgnored \u003d !!file.isIgnored;"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        out.isBinary \u003d !!file.isBinary;"},{"lineNumber":531,"author":{"gitId":"-"},"content":""},{"lineNumber":532,"author":{"gitId":"-"},"content":"        if (this.filesLinesObj[out.fileType]) {"},{"lineNumber":533,"author":{"gitId":"-"},"content":"          this.filesLinesObj[out.fileType] +\u003d lineCnt;"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"          this.filesLinesObj[out.fileType] \u003d lineCnt;"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"        if (!out.isBinary \u0026\u0026 !out.isIgnored) {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"          out.charCount \u003d file.lines.reduce("},{"lineNumber":540,"author":{"gitId":"-"},"content":"            (count, line) \u003d\u003e count + (line ? line.content.length : 0),"},{"lineNumber":541,"author":{"gitId":"-"},"content":"            0,"},{"lineNumber":542,"author":{"gitId":"-"},"content":"          );"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":544,"author":{"gitId":"-"},"content":""},{"lineNumber":545,"author":{"gitId":"-"},"content":"        if (!file.isBinary) {"},{"lineNumber":546,"author":{"gitId":"-"},"content":"          const segmentInfo \u003d this.splitSegments(file.lines);"},{"lineNumber":547,"author":{"gitId":"-"},"content":"          out.segments \u003d segmentInfo.segments;"},{"lineNumber":548,"author":{"gitId":"-"},"content":"          out.blankLineCount \u003d segmentInfo.blankLineCount;"},{"lineNumber":549,"author":{"gitId":"-"},"content":""},{"lineNumber":550,"author":{"gitId":"-"},"content":"          this.addBlankLineCount(file.fileType, segmentInfo.blankLineCount, fileTypeBlanksInfoObj);"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":552,"author":{"gitId":"-"},"content":""},{"lineNumber":553,"author":{"gitId":"-"},"content":"        res.push(out);"},{"lineNumber":554,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":555,"author":{"gitId":"-"},"content":""},{"lineNumber":556,"author":{"gitId":"-"},"content":"      res.sort((a, b) \u003d\u003e b.lineCount - a.lineCount).forEach((file) \u003d\u003e {"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        // hide files over total char count limit"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        if (!file.isIgnored \u0026\u0026 !file.isBinary \u0026\u0026 file.active) {"},{"lineNumber":559,"author":{"gitId":"-"},"content":"          file.active \u003d file.charCount \u003c\u003d SINGLE_FILE_CHAR_COUNT_THRESHOLD;"},{"lineNumber":560,"author":{"gitId":"-"},"content":"          file.wasCodeLoaded \u003d file.active;"},{"lineNumber":561,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":562,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":563,"author":{"gitId":"-"},"content":""},{"lineNumber":564,"author":{"gitId":"-"},"content":"      Object.keys(this.filesLinesObj).forEach((file) \u003d\u003e {"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        if (this.filesLinesObj[file] !\u003d\u003d 0) {"},{"lineNumber":566,"author":{"gitId":"-"},"content":"          this.fileTypes.push(file);"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":568,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":569,"author":{"gitId":"-"},"content":""},{"lineNumber":570,"author":{"gitId":"-"},"content":"      this.fileTypeBlankLinesObj \u003d fileTypeBlanksInfoObj;"},{"lineNumber":571,"author":{"gitId":"vvidday"},"content":"      this.$store.commit(\u0027updateTabAuthorshipFiles\u0027, res);"},{"lineNumber":572,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles(true);"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"    isValidFile(file) {"},{"lineNumber":576,"author":{"gitId":"-"},"content":"      return this.info.isMergeGroup"},{"lineNumber":577,"author":{"gitId":"-"},"content":"          ? Object.entries(file.authorContributionMap)"},{"lineNumber":578,"author":{"gitId":"-"},"content":"            .some((authorCount) \u003d\u003e !this.isUnknownAuthor(authorCount[0]))"},{"lineNumber":579,"author":{"gitId":"-"},"content":"          : this.info.author in file.authorContributionMap;"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":581,"author":{"gitId":"-"},"content":""},{"lineNumber":582,"author":{"gitId":"-"},"content":"    getContributionFromAllAuthors(contributionMap) {"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      return Object.entries(contributionMap).reduce((acc, [author, cnt]) \u003d\u003e ("},{"lineNumber":584,"author":{"gitId":"-"},"content":"        (!this.isUnknownAuthor(author) ? acc + cnt : acc)"},{"lineNumber":585,"author":{"gitId":"-"},"content":"      ), 0);"},{"lineNumber":586,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":587,"author":{"gitId":"-"},"content":""},{"lineNumber":588,"author":{"gitId":"-"},"content":"    addBlankLineCount(fileType, lineCount, filesInfoObj) {"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      if (!filesInfoObj[fileType]) {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        filesInfoObj[fileType] \u003d 0;"},{"lineNumber":591,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"      filesInfoObj[fileType] +\u003d lineCount;"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":595,"author":{"gitId":"-"},"content":""},{"lineNumber":596,"author":{"gitId":"-"},"content":"    updateSearchBarValue() {"},{"lineNumber":597,"author":{"gitId":"-"},"content":"      this.searchBarValue \u003d this.$refs.searchBar.value;"},{"lineNumber":598,"author":{"gitId":"-"},"content":""},{"lineNumber":599,"author":{"gitId":"-"},"content":"      window.addHash(\u0027authorshipFilesGlob\u0027, this.searchBarValue);"},{"lineNumber":600,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipFileTypes\u0027);"},{"lineNumber":601,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipIsBinaryFileTypeChecked\u0027);"},{"lineNumber":602,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipIsIgnoredFilesChecked\u0027);"},{"lineNumber":603,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":605,"author":{"gitId":"-"},"content":""},{"lineNumber":606,"author":{"gitId":"-"},"content":"    updateFileTypeHash() {"},{"lineNumber":607,"author":{"gitId":"-"},"content":"      const fileTypeHash \u003d this.selectedFileTypes.length \u003e 0"},{"lineNumber":608,"author":{"gitId":"-"},"content":"          ? this.selectedFileTypes.reduce((a, b) \u003d\u003e `${a}~${b}`)"},{"lineNumber":609,"author":{"gitId":"-"},"content":"          : \u0027\u0027;"},{"lineNumber":610,"author":{"gitId":"-"},"content":""},{"lineNumber":611,"author":{"gitId":"-"},"content":"      window.addHash(\u0027authorshipFileTypes\u0027, fileTypeHash);"},{"lineNumber":612,"author":{"gitId":"-"},"content":"      window.addHash(\u0027authorshipIsBinaryFileTypeChecked\u0027, this.isBinaryFilesChecked);"},{"lineNumber":613,"author":{"gitId":"-"},"content":"      window.addHash(\u0027authorshipIsIgnoredFilesChecked\u0027, this.isIgnoredFilesChecked);"},{"lineNumber":614,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipFilesGlob\u0027);"},{"lineNumber":615,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":617,"author":{"gitId":"-"},"content":""},{"lineNumber":618,"author":{"gitId":"-"},"content":"    async updateSelectedFiles(setIsLoaded \u003d false) {"},{"lineNumber":619,"author":{"gitId":"-"},"content":"      await this.$store.dispatch(\u0027incrementLoadingOverlayCountForceReload\u0027, 1);"},{"lineNumber":620,"author":{"gitId":"vvidday"},"content":"      this.selectedFiles \u003d this.info.files.filter("},{"lineNumber":621,"author":{"gitId":"-"},"content":"        (file) \u003d\u003e ((this.selectedFileTypes.includes(file.fileType) \u0026\u0026 !file.isBinary \u0026\u0026 !file.isIgnored)"},{"lineNumber":622,"author":{"gitId":"-"},"content":"          || (file.isBinary \u0026\u0026 this.isBinaryFilesChecked) || (file.isIgnored \u0026\u0026 this.isIgnoredFilesChecked))"},{"lineNumber":623,"author":{"gitId":"-"},"content":"          \u0026\u0026 minimatch(file.path, this.searchBarValue || \u0027*\u0027, { matchBase: true, dot: true }),"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":625,"author":{"gitId":"-"},"content":"        .sort(this.sortingFunction);"},{"lineNumber":626,"author":{"gitId":"-"},"content":"      if (setIsLoaded) {"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        this.isLoaded \u003d true;"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":629,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, -1);"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":631,"author":{"gitId":"-"},"content":""},{"lineNumber":632,"author":{"gitId":"-"},"content":"    indicateSearchBar() {"},{"lineNumber":633,"author":{"gitId":"-"},"content":"      this.selectedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":634,"author":{"gitId":"-"},"content":"      this.isBinaryFilesChecked \u003d true;"},{"lineNumber":635,"author":{"gitId":"-"},"content":"      this.isIgnoredFilesChecked \u003d true;"},{"lineNumber":636,"author":{"gitId":"-"},"content":"      this.filterType \u003d \u0027search\u0027;"},{"lineNumber":637,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":638,"author":{"gitId":"-"},"content":""},{"lineNumber":639,"author":{"gitId":"-"},"content":"    indicateCheckBoxes() {"},{"lineNumber":640,"author":{"gitId":"-"},"content":"      this.searchBarValue \u003d \u0027\u0027;"},{"lineNumber":641,"author":{"gitId":"-"},"content":"      this.filterType \u003d \u0027checkboxes\u0027;"},{"lineNumber":642,"author":{"gitId":"-"},"content":"      this.updateFileTypeHash();"},{"lineNumber":643,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":644,"author":{"gitId":"-"},"content":""},{"lineNumber":645,"author":{"gitId":"-"},"content":"    getHistoryLink(file) {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"      const repo \u003d window.REPOS[this.info.repo];"},{"lineNumber":647,"author":{"gitId":"-"},"content":"      return window.getHistoryLink(this.info.repo, repo.branch, file.path);"},{"lineNumber":648,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":649,"author":{"gitId":"-"},"content":""},{"lineNumber":650,"author":{"gitId":"-"},"content":"    getBlameLink(file) {"},{"lineNumber":651,"author":{"gitId":"-"},"content":"      const repo \u003d window.REPOS[this.info.repo];"},{"lineNumber":652,"author":{"gitId":"-"},"content":"      return window.getBlameLink(this.info.repo, repo.branch, file.path);"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":654,"author":{"gitId":"-"},"content":""},{"lineNumber":655,"author":{"gitId":"-"},"content":"    getFileTypeBlankLineInfo(fileType) {"},{"lineNumber":656,"author":{"gitId":"-"},"content":"      return `${fileType}: Blank: ${"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        this.fileTypeBlankLinesObj[fileType]}, Non-Blank: ${"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        this.filesLinesObj[fileType] - this.fileTypeBlankLinesObj[fileType]}`;"},{"lineNumber":659,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":660,"author":{"gitId":"-"},"content":""},{"lineNumber":661,"author":{"gitId":"-"},"content":"    getTotalFileBlankLineInfo() {"},{"lineNumber":662,"author":{"gitId":"-"},"content":"      return `Total: Blank: ${this.totalBlankLineCount}, Non-Blank: ${"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        this.totalLineCount - this.totalBlankLineCount}`;"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":665,"author":{"gitId":"-"},"content":""},{"lineNumber":666,"author":{"gitId":"-"},"content":"    getFirstPartOfPath(file) {"},{"lineNumber":667,"author":{"gitId":"-"},"content":"      const fileSplitIndex \u003d file.path.lastIndexOf(\u0027/\u0027);"},{"lineNumber":668,"author":{"gitId":"-"},"content":"      const fileNameOnly \u003d file.path.slice(fileSplitIndex + 1);"},{"lineNumber":669,"author":{"gitId":"-"},"content":""},{"lineNumber":670,"author":{"gitId":"-"},"content":"      if (this.filesSortType \u003d\u003d\u003d \u0027fileName\u0027) {"},{"lineNumber":671,"author":{"gitId":"-"},"content":"        return `${fileNameOnly}`;"},{"lineNumber":672,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":673,"author":{"gitId":"-"},"content":"      return file.path;"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":675,"author":{"gitId":"-"},"content":""},{"lineNumber":676,"author":{"gitId":"-"},"content":"    getSecondPartOfPath(file) {"},{"lineNumber":677,"author":{"gitId":"-"},"content":"      const fileSplitIndex \u003d file.path.lastIndexOf(\u0027/\u0027);"},{"lineNumber":678,"author":{"gitId":"-"},"content":"      const filePathOnly \u003d file.path.slice(0, fileSplitIndex + 1);"},{"lineNumber":679,"author":{"gitId":"-"},"content":""},{"lineNumber":680,"author":{"gitId":"-"},"content":"      if (!filePathOnly) {"},{"lineNumber":681,"author":{"gitId":"-"},"content":"        return \u0027/\u0027;"},{"lineNumber":682,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":683,"author":{"gitId":"-"},"content":"      return filePathOnly;"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":685,"author":{"gitId":"-"},"content":""},{"lineNumber":686,"author":{"gitId":"-"},"content":"    getFirstPartOfLabel(file) {"},{"lineNumber":687,"author":{"gitId":"-"},"content":"      if (this.filesSortType \u003d\u003d\u003d \u0027lineOfCode\u0027) {"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        return `${file.lineCount} (${file.lineCount - file.blankLineCount})`;"},{"lineNumber":689,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":690,"author":{"gitId":"-"},"content":"      return `${file.fileType}`;"},{"lineNumber":691,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":692,"author":{"gitId":"-"},"content":""},{"lineNumber":693,"author":{"gitId":"-"},"content":"    getSecondPartOfLabel(file) {"},{"lineNumber":694,"author":{"gitId":"-"},"content":"      if (this.filesSortType \u003d\u003d\u003d \u0027lineOfCode\u0027) {"},{"lineNumber":695,"author":{"gitId":"-"},"content":"        return `${file.fileType}`;"},{"lineNumber":696,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":697,"author":{"gitId":"-"},"content":"      return `${file.lineCount} (${file.lineCount - file.blankLineCount})`;"},{"lineNumber":698,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":699,"author":{"gitId":"-"},"content":""},{"lineNumber":700,"author":{"gitId":"-"},"content":"    getFontColor,"},{"lineNumber":701,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":702,"author":{"gitId":"-"},"content":"};"},{"lineNumber":703,"author":{"gitId":"-"},"content":"\u003c/script\u003e"},{"lineNumber":704,"author":{"gitId":"-"},"content":""},{"lineNumber":705,"author":{"gitId":"-"},"content":"\u003cstyle lang\u003d\"scss\"\u003e"},{"lineNumber":706,"author":{"gitId":"-"},"content":"@import \u0027../styles/_colors.scss\u0027;"},{"lineNumber":707,"author":{"gitId":"-"},"content":""},{"lineNumber":708,"author":{"gitId":"-"},"content":"/* Authorship */"},{"lineNumber":709,"author":{"gitId":"-"},"content":"#tab-authorship {"},{"lineNumber":710,"author":{"gitId":"-"},"content":""},{"lineNumber":711,"author":{"gitId":"-"},"content":"  .file-content {"},{"lineNumber":712,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027github\u0027, \u0027title-background\u0027);"},{"lineNumber":713,"author":{"gitId":"-"},"content":"    border: solid mui-color(\u0027github\u0027, \u0027border\u0027);"},{"lineNumber":714,"author":{"gitId":"-"},"content":"    border-radius: 0 0 4px 4px;"},{"lineNumber":715,"author":{"gitId":"-"},"content":"    border-width: 0 1px 1px 1px;"},{"lineNumber":716,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":717,"author":{"gitId":"-"},"content":""},{"lineNumber":718,"author":{"gitId":"-"},"content":"  .title {"},{"lineNumber":719,"author":{"gitId":"-"},"content":"    .contribution {"},{"lineNumber":720,"author":{"gitId":"-"},"content":"      .radio-button--search {"},{"lineNumber":721,"author":{"gitId":"-"},"content":"        float: left;"},{"lineNumber":722,"author":{"gitId":"-"},"content":"        margin: 1.75rem 2.0rem 0 0;"},{"lineNumber":723,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":724,"author":{"gitId":"-"},"content":""},{"lineNumber":725,"author":{"gitId":"-"},"content":"      .radio-button--checkbox {"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        float: left;"},{"lineNumber":727,"author":{"gitId":"-"},"content":"        margin: 0 2.0rem 0 0;"},{"lineNumber":728,"author":{"gitId":"-"},"content":"        vertical-align: middle;"},{"lineNumber":729,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"-"},"content":"      .mui-form--inline {"},{"lineNumber":732,"author":{"gitId":"-"},"content":"        align-items: flex-end;"},{"lineNumber":733,"author":{"gitId":"-"},"content":"        display: flex;"},{"lineNumber":734,"author":{"gitId":"-"},"content":"        flex-wrap: wrap;"},{"lineNumber":735,"author":{"gitId":"-"},"content":""},{"lineNumber":736,"author":{"gitId":"-"},"content":"        #search {"},{"lineNumber":737,"author":{"gitId":"-"},"content":"          @include medium-font;"},{"lineNumber":738,"author":{"gitId":"-"},"content":"          margin-top: 1.25rem;"},{"lineNumber":739,"author":{"gitId":"-"},"content":"          min-width: 130px;"},{"lineNumber":740,"author":{"gitId":"-"},"content":"          padding: .5rem 1.0rem .25rem 1.0rem;"},{"lineNumber":741,"author":{"gitId":"-"},"content":"          width: 70%;"},{"lineNumber":742,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":743,"author":{"gitId":"-"},"content":""},{"lineNumber":744,"author":{"gitId":"-"},"content":"        #submit-button {"},{"lineNumber":745,"author":{"gitId":"-"},"content":"          @include medium-font;"},{"lineNumber":746,"author":{"gitId":"-"},"content":"          background-color: mui-color(\u0027blue\u0027);"},{"lineNumber":747,"author":{"gitId":"-"},"content":"          color: mui-color(\u0027white\u0027);"},{"lineNumber":748,"author":{"gitId":"-"},"content":"          margin: 1.0rem 0 0 .25rem;"},{"lineNumber":749,"author":{"gitId":"-"},"content":"          padding: .5rem 1.0rem .25rem 1.0rem;"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":751,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":752,"author":{"gitId":"-"},"content":""},{"lineNumber":753,"author":{"gitId":"-"},"content":"      .searchbox {"},{"lineNumber":754,"author":{"gitId":"-"},"content":"        margin-bottom: 1em;"},{"lineNumber":755,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":756,"author":{"gitId":"-"},"content":""},{"lineNumber":757,"author":{"gitId":"-"},"content":"      .select {"},{"lineNumber":758,"author":{"gitId":"-"},"content":"        font-weight: bold;"},{"lineNumber":759,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":760,"author":{"gitId":"-"},"content":""},{"lineNumber":761,"author":{"gitId":"-"},"content":"      .loc {"},{"lineNumber":762,"author":{"gitId":"-"},"content":"        font-weight: bolder;"},{"lineNumber":763,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"-"},"content":"      .mui-checkbox--fileType {"},{"lineNumber":766,"author":{"gitId":"-"},"content":"        vertical-align: middle;"},{"lineNumber":767,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":768,"author":{"gitId":"-"},"content":""},{"lineNumber":769,"author":{"gitId":"-"},"content":"      .binary-fileType {"},{"lineNumber":770,"author":{"gitId":"-"},"content":"        background-color: mui-color(\u0027white\u0027);"},{"lineNumber":771,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027, \u0027800\u0027);"},{"lineNumber":772,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":773,"author":{"gitId":"-"},"content":""},{"lineNumber":774,"author":{"gitId":"-"},"content":"      .ignored-fileType {"},{"lineNumber":775,"author":{"gitId":"-"},"content":"        background-color: mui-color(\u0027white\u0027);"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027, \u0027800\u0027);"},{"lineNumber":777,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":778,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":779,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":780,"author":{"gitId":"-"},"content":""},{"lineNumber":781,"author":{"gitId":"-"},"content":"  .files {"},{"lineNumber":782,"author":{"gitId":"-"},"content":"    clear: left;"},{"lineNumber":783,"author":{"gitId":"-"},"content":""},{"lineNumber":784,"author":{"gitId":"-"},"content":"    .file {"},{"lineNumber":785,"author":{"gitId":"-"},"content":"      pre {"},{"lineNumber":786,"author":{"gitId":"-"},"content":"        display: grid;"},{"lineNumber":787,"author":{"gitId":"-"},"content":"        // GitHub\u0027s font family and font size"},{"lineNumber":788,"author":{"gitId":"-"},"content":"        font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        font-size: 12px;"},{"lineNumber":790,"author":{"gitId":"-"},"content":"        margin-top: 0;"},{"lineNumber":791,"author":{"gitId":"-"},"content":""},{"lineNumber":792,"author":{"gitId":"-"},"content":"        .hljs {"},{"lineNumber":793,"author":{"gitId":"-"},"content":"          // overwrite hljs library"},{"lineNumber":794,"author":{"gitId":"-"},"content":"          display: inherit;"},{"lineNumber":795,"author":{"gitId":"-"},"content":"          padding: 0;"},{"lineNumber":796,"author":{"gitId":"-"},"content":"          white-space: pre-wrap;"},{"lineNumber":797,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":798,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":799,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":800,"author":{"gitId":"-"},"content":""},{"lineNumber":801,"author":{"gitId":"-"},"content":"    .ignored-tag {"},{"lineNumber":802,"author":{"gitId":"-"},"content":"      background-color: mui-color(\u0027black\u0027);"},{"lineNumber":803,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027white\u0027);"},{"lineNumber":804,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":805,"author":{"gitId":"-"},"content":""},{"lineNumber":806,"author":{"gitId":"-"},"content":"    .title {"},{"lineNumber":807,"author":{"gitId":"-"},"content":"      background-color: mui-color(\u0027github\u0027, \u0027title-background\u0027);"},{"lineNumber":808,"author":{"gitId":"-"},"content":"      border: 1px solid mui-color(\u0027github\u0027, \u0027border\u0027);"},{"lineNumber":809,"author":{"gitId":"-"},"content":"      border-radius: 4px 4px 0 0;"},{"lineNumber":810,"author":{"gitId":"-"},"content":"      display: flex;"},{"lineNumber":811,"author":{"gitId":"-"},"content":"      flex-wrap: wrap;"},{"lineNumber":812,"author":{"gitId":"-"},"content":"      font-size: medium;"},{"lineNumber":813,"author":{"gitId":"-"},"content":"      margin-top: 1rem;"},{"lineNumber":814,"author":{"gitId":"-"},"content":"      padding: .3em .5em;"},{"lineNumber":815,"author":{"gitId":"-"},"content":"      white-space: pre-wrap;"},{"lineNumber":816,"author":{"gitId":"-"},"content":"      word-break: break-all;"},{"lineNumber":817,"author":{"gitId":"-"},"content":""},{"lineNumber":818,"author":{"gitId":"-"},"content":"      .caret {"},{"lineNumber":819,"author":{"gitId":"-"},"content":"        cursor: pointer;"},{"lineNumber":820,"author":{"gitId":"-"},"content":"        order: -2;"},{"lineNumber":821,"author":{"gitId":"-"},"content":"        overflow-wrap: break-word;"},{"lineNumber":822,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":823,"author":{"gitId":"-"},"content":""},{"lineNumber":824,"author":{"gitId":"-"},"content":"      .index {"},{"lineNumber":825,"author":{"gitId":"-"},"content":"        order: -2;"},{"lineNumber":826,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":827,"author":{"gitId":"-"},"content":""},{"lineNumber":828,"author":{"gitId":"-"},"content":"      .path {"},{"lineNumber":829,"author":{"gitId":"-"},"content":"        .in {"},{"lineNumber":830,"author":{"gitId":"-"},"content":"          color: mui-color(\u0027grey\u0027, \u0027600\u0027);"},{"lineNumber":831,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":832,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":833,"author":{"gitId":"-"},"content":""},{"lineNumber":834,"author":{"gitId":"-"},"content":"      .loc {"},{"lineNumber":835,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":836,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":837,"author":{"gitId":"-"},"content":""},{"lineNumber":838,"author":{"gitId":"-"},"content":"      .button {"},{"lineNumber":839,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":840,"author":{"gitId":"-"},"content":"        margin-left: .5rem;"},{"lineNumber":841,"author":{"gitId":"-"},"content":"        text-decoration: none;"},{"lineNumber":842,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":843,"author":{"gitId":"-"},"content":""},{"lineNumber":844,"author":{"gitId":"-"},"content":"      .icons {"},{"lineNumber":845,"author":{"gitId":"-"},"content":"        margin-right: 8px;"},{"lineNumber":846,"author":{"gitId":"-"},"content":"        vertical-align: middle;"},{"lineNumber":847,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":848,"author":{"gitId":"-"},"content":""},{"lineNumber":849,"author":{"gitId":"-"},"content":"      .selected-parameter {"},{"lineNumber":850,"author":{"gitId":"-"},"content":"        font-weight: bold;"},{"lineNumber":851,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":852,"author":{"gitId":"-"},"content":""},{"lineNumber":853,"author":{"gitId":"-"},"content":"      .selected-label {"},{"lineNumber":854,"author":{"gitId":"-"},"content":"        order: -1;"},{"lineNumber":855,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":856,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":857,"author":{"gitId":"-"},"content":""},{"lineNumber":858,"author":{"gitId":"-"},"content":"    .binary-segment {"},{"lineNumber":859,"author":{"gitId":"-"},"content":"      background-color: mui-color(\u0027white\u0027);"},{"lineNumber":860,"author":{"gitId":"-"},"content":""},{"lineNumber":861,"author":{"gitId":"-"},"content":"      .indicator {"},{"lineNumber":862,"author":{"gitId":"-"},"content":"        float: left;"},{"lineNumber":863,"author":{"gitId":"-"},"content":"        font-weight: bold;"},{"lineNumber":864,"author":{"gitId":"-"},"content":"        padding-left: 1rem;"},{"lineNumber":865,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":866,"author":{"gitId":"-"},"content":""},{"lineNumber":867,"author":{"gitId":"-"},"content":"      .bin-text {"},{"lineNumber":868,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027, \u0027800\u0027);"},{"lineNumber":869,"author":{"gitId":"-"},"content":"        padding-left: 4rem;"},{"lineNumber":870,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":871,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":872,"author":{"gitId":"-"},"content":""},{"lineNumber":873,"author":{"gitId":"-"},"content":"    .ignored-segment {"},{"lineNumber":874,"author":{"gitId":"-"},"content":"      background-color: mui-color(\u0027white\u0027);"},{"lineNumber":875,"author":{"gitId":"-"},"content":""},{"lineNumber":876,"author":{"gitId":"-"},"content":"      .ignore-text {"},{"lineNumber":877,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027, \u0027800\u0027);"},{"lineNumber":878,"author":{"gitId":"-"},"content":"        padding-left: 4rem;"},{"lineNumber":879,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":880,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":881,"author":{"gitId":"-"},"content":""},{"lineNumber":882,"author":{"gitId":"-"},"content":"    .segment {"},{"lineNumber":883,"author":{"gitId":"-"},"content":"      border-left: .25rem solid mui-color(\u0027green\u0027);"},{"lineNumber":884,"author":{"gitId":"-"},"content":"      .code {"},{"lineNumber":885,"author":{"gitId":"-"},"content":"        background-color: mui-color(\u0027github\u0027, \u0027authored-code-background\u0027);"},{"lineNumber":886,"author":{"gitId":"-"},"content":"        padding-left: 1rem;"},{"lineNumber":887,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":888,"author":{"gitId":"-"},"content":"      .line-number {"},{"lineNumber":889,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":890,"author":{"gitId":"-"},"content":"        float: left;"},{"lineNumber":891,"author":{"gitId":"-"},"content":"        // Not allowing user to select text"},{"lineNumber":892,"author":{"gitId":"-"},"content":"        -webkit-touch-callout: none; /* iOS Safari */"},{"lineNumber":893,"author":{"gitId":"-"},"content":"        -webkit-user-select: none; /* Safari */"},{"lineNumber":894,"author":{"gitId":"-"},"content":"        -khtml-user-select: none; /* Konqueror HTML */"},{"lineNumber":895,"author":{"gitId":"-"},"content":"        -moz-user-select: none; /* Firefox */"},{"lineNumber":896,"author":{"gitId":"-"},"content":"        -ms-user-select: none; /* Internet Explorer/Edge */"},{"lineNumber":897,"author":{"gitId":"-"},"content":"        user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */"},{"lineNumber":898,"author":{"gitId":"-"},"content":"        width: 2rem;"},{"lineNumber":899,"author":{"gitId":"-"},"content":"        // overwrite all hljs colours"},{"lineNumber":900,"author":{"gitId":"-"},"content":"        [class^\u003d\u0027hljs\u0027] {"},{"lineNumber":901,"author":{"gitId":"-"},"content":"          color: mui-color(\u0027grey\u0027);"},{"lineNumber":902,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":903,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":904,"author":{"gitId":"-"},"content":"      .line-content {"},{"lineNumber":905,"author":{"gitId":"-"},"content":"        padding-left: 2rem;"},{"lineNumber":906,"author":{"gitId":"-"},"content":"        word-break: break-word;"},{"lineNumber":907,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":908,"author":{"gitId":"-"},"content":"      \u0026.untouched {"},{"lineNumber":909,"author":{"gitId":"-"},"content":"        $grey: mui-color(\u0027grey\u0027, \u0027400\u0027);"},{"lineNumber":910,"author":{"gitId":"-"},"content":"        border-left: .25rem solid $grey;"},{"lineNumber":911,"author":{"gitId":"-"},"content":"        height: 20px; /* height of a single line of code */"},{"lineNumber":912,"author":{"gitId":"-"},"content":"        position: relative;"},{"lineNumber":913,"author":{"gitId":"-"},"content":"        \u0026.active {"},{"lineNumber":914,"author":{"gitId":"-"},"content":"          height: auto;"},{"lineNumber":915,"author":{"gitId":"-"},"content":"          .code {"},{"lineNumber":916,"author":{"gitId":"-"},"content":"            background-color: mui-color(\u0027white\u0027);"},{"lineNumber":917,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":918,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":919,"author":{"gitId":"-"},"content":"        .closer {"},{"lineNumber":920,"author":{"gitId":"-"},"content":"          cursor: pointer;"},{"lineNumber":921,"author":{"gitId":"-"},"content":"          // custom margin for position of toggle icon"},{"lineNumber":922,"author":{"gitId":"-"},"content":"          margin: .2rem 0 0 -.45rem;"},{"lineNumber":923,"author":{"gitId":"-"},"content":"          position: absolute;"},{"lineNumber":924,"author":{"gitId":"-"},"content":"          \u0026.bottom {"},{"lineNumber":925,"author":{"gitId":"-"},"content":"            //custom margin for position of toggle icon at the bottom of segment"},{"lineNumber":926,"author":{"gitId":"-"},"content":"            margin: -1.05rem 0 0 -.45rem;"},{"lineNumber":927,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":928,"author":{"gitId":"-"},"content":"          .icon {"},{"lineNumber":929,"author":{"gitId":"-"},"content":"            background-color: mui-color(\u0027white\u0027);"},{"lineNumber":930,"author":{"gitId":"-"},"content":"            color: mui-color(\u0027grey\u0027);"},{"lineNumber":931,"author":{"gitId":"-"},"content":"            width: .75em;"},{"lineNumber":932,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":933,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":934,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":935,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":936,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":937,"author":{"gitId":"-"},"content":""},{"lineNumber":938,"author":{"gitId":"-"},"content":"  .empty {"},{"lineNumber":939,"author":{"gitId":"-"},"content":"    text-align: center;"},{"lineNumber":940,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":941,"author":{"gitId":"-"},"content":"}"},{"lineNumber":942,"author":{"gitId":"-"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"vvidday":110,"ckcherry23":4,"-":828}},{"path":"frontend/src/views/c-summary.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"#summary"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  form.summary-picker.mui-form--inline(onsubmit\u003d\"return false;\")"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    .summary-picker__section"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .mui-textfield.search_box"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        input(type\u003d\"text\", v-on:change\u003d\"updateFilterSearch\", v-model\u003d\"filterSearch\")"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        label search"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        button.mui-btn.mui-btn--raised(type\u003d\"button\", v-on:click.prevent\u003d\"resetFilterSearch\") x"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      .mui-select.grouping"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        select(v-model\u003d\"filterGroupSelection\")"},{"lineNumber":11,"author":{"gitId":"-"},"content":"          option(value\u003d\"groupByNone\") None"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          option(value\u003d\"groupByRepos\") Repo/Branch"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          option(value\u003d\"groupByAuthors\") Author"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        label group by"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      .mui-select.sort-group"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        select(v-model\u003d\"sortGroupSelection\", v-on:change\u003d\"getFiltered\")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          option(value\u003d\"groupTitle\") \u0026uarr; group title"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          option(value\u003d\"groupTitle dsc\") \u0026darr; group title"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          option(value\u003d\"totalCommits\") \u0026uarr; contribution"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          option(value\u003d\"totalCommits dsc\") \u0026darr; contribution"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          option(value\u003d\"variance\") \u0026uarr; variance"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          option(value\u003d\"variance dsc\") \u0026darr; variance"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        label sort groups by"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      .mui-select.sort-within-group"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        select("},{"lineNumber":26,"author":{"gitId":"-"},"content":"          v-model\u003d\"sortWithinGroupSelection\","},{"lineNumber":27,"author":{"gitId":"-"},"content":"          v-bind:disabled\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 || allGroupsMerged\","},{"lineNumber":28,"author":{"gitId":"-"},"content":"          v-on:change\u003d\"getFiltered\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          option(value\u003d\"title\") \u0026uarr; title"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          option(value\u003d\"title dsc\") \u0026darr; title"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          option(value\u003d\"totalCommits\") \u0026uarr; contribution"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          option(value\u003d\"totalCommits dsc\") \u0026darr; contribution"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          option(value\u003d\"variance\") \u0026uarr; variance"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          option(value\u003d\"variance dsc\") \u0026darr; variance"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        label sort within groups by"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      .mui-select.granularity"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        select(v-model\u003d\"filterTimeFrame\", v-on:change\u003d\"getFiltered\")"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          option(value\u003d\"commit\") Commit"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          option(value\u003d\"day\") Day"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          option(value\u003d\"week\") Week"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        label granularity"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      .mui-textfield"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        input(v-if\u003d\"isSafariBrowser\", type\u003d\"text\", placeholder\u003d\"yyyy-mm-dd\","},{"lineNumber":45,"author":{"gitId":"-"},"content":"          v-bind:value\u003d\"filterSinceDate\", v-on:keyup.enter\u003d\"updateTmpFilterSinceDate\","},{"lineNumber":46,"author":{"gitId":"-"},"content":"          onkeydown\u003d\"formatInputDateOnKeyDown(event)\", oninput\u003d\"appendDashInputDate(event)\", maxlength\u003d10)"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        input(v-else, type\u003d\"date\", name\u003d\"since\", v-bind:value\u003d\"filterSinceDate\", v-on:input\u003d\"updateTmpFilterSinceDate\","},{"lineNumber":48,"author":{"gitId":"-"},"content":"          v-bind:min\u003d\"minDate\", v-bind:max\u003d\"filterUntilDate\")"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        label since"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      .mui-textfield"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        input(v-if\u003d\"isSafariBrowser\", type\u003d\"text\", placeholder\u003d\"yyyy-mm-dd\","},{"lineNumber":52,"author":{"gitId":"-"},"content":"          v-bind:value\u003d\"filterUntilDate\", v-on:keyup.enter\u003d\"updateTmpFilterUntilDate\","},{"lineNumber":53,"author":{"gitId":"-"},"content":"          onkeydown\u003d\"formatInputDateOnKeyDown(event)\", oninput\u003d\"appendDashInputDate(event)\", maxlength\u003d10)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        input(v-else, type\u003d\"date\", name\u003d\"until\", v-bind:value\u003d\"filterUntilDate\", v-on:input\u003d\"updateTmpFilterUntilDate\","},{"lineNumber":55,"author":{"gitId":"-"},"content":"          v-bind:min\u003d\"filterSinceDate\", v-bind:max\u003d\"maxDate\")"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        label until"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      .mui-textfield"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        a(v-on:click\u003d\"resetDateRange\") Reset date range"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      .summary-picker__checkboxes.summary-picker__section"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        label.filter-breakdown"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          input.mui-checkbox("},{"lineNumber":62,"author":{"gitId":"-"},"content":"            type\u003d\"checkbox\","},{"lineNumber":63,"author":{"gitId":"-"},"content":"            v-model\u003d\"filterBreakdown\","},{"lineNumber":64,"author":{"gitId":"-"},"content":"            v-on:change\u003d\"toggleBreakdown\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          span breakdown by file type"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        label.merge-group("},{"lineNumber":68,"author":{"gitId":"-"},"content":"          v-bind:style\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 ? { opacity:0.5 } : { opacity:1.0 }\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          input.mui-checkbox("},{"lineNumber":71,"author":{"gitId":"-"},"content":"            type\u003d\"checkbox\","},{"lineNumber":72,"author":{"gitId":"-"},"content":"            v-model\u003d\"allGroupsMerged\","},{"lineNumber":73,"author":{"gitId":"-"},"content":"            v-bind:disabled\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          span merge all groups"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .error-message-box(v-if\u003d\"Object.entries(errorMessages).length\")"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    .error-message-box__close-button(v-on:click\u003d\"dismissTab($event)\") \u0026times;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    .error-message-box__message The following issues occurred when analyzing the following repositories:"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    .error-message-box__failed-repo(v-for\u003d\"errorBlock in errorMessages\")"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      font-awesome-icon(icon\u003d\"exclamation\")"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      span.error-message-box__failed-repo--name {{ errorBlock.repoName }}"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      .error-message-box__failed-repo--reason("},{"lineNumber":83,"author":{"gitId":"-"},"content":"        v-if\u003d\"errorBlock.errorMessage.startsWith(\u0027Unexpected error stack trace\u0027)\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        span Oops, an unexpected error occurred. If this is due to a problem in RepoSense, please report in\u0026nbsp;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":87,"author":{"gitId":"-"},"content":"          v-bind:href\u003d\"getReportIssueGitHubLink(errorBlock.errorMessage)\", target\u003d\"_blank\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":89,"author":{"gitId":"-"},"content":"          strong our issue tracker\u0026nbsp;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        span or email us at\u0026nbsp;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":92,"author":{"gitId":"-"},"content":"          v-bind:href\u003d\"getReportIssueEmailLink(errorBlock.errorMessage)\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":94,"author":{"gitId":"-"},"content":"          span {{ getReportIssueEmailAddress() }}"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      .error-message-box__failed-repo--reason(v-else) {{ errorBlock.errorMessage }}"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  .fileTypes(v-if\u003d\"filterBreakdown\")"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    .checkboxes.mui-form--inline(v-if\u003d\"Object.keys(fileTypeColors).length \u003e 0\")"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      label(style\u003d\u0027background-color: #000000; color: #ffffff\u0027)"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        input.mui-checkbox--fileType#all(type\u003d\"checkbox\", v-model\u003d\"checkAllFileTypes\")"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        span All:\u0026nbsp;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      template(v-for\u003d\"fileType in Object.keys(fileTypeColors)\", v-bind:key\u003d\"fileType\")"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        label("},{"lineNumber":103,"author":{"gitId":"-"},"content":"          v-bind:style\u003d\"{ \u0027background-color\u0027: fileTypeColors[fileType], \\"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            \u0027color\u0027: getFontColor(fileTypeColors[fileType])}\""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":106,"author":{"gitId":"-"},"content":"          input.mui-checkbox--fileType("},{"lineNumber":107,"author":{"gitId":"-"},"content":"            type\u003d\"checkbox\","},{"lineNumber":108,"author":{"gitId":"-"},"content":"            v-bind:id\u003d\"fileType\","},{"lineNumber":109,"author":{"gitId":"-"},"content":"            v-bind:value\u003d\"fileType\","},{"lineNumber":110,"author":{"gitId":"-"},"content":"            v-model\u003d\"checkedFileTypes\","},{"lineNumber":111,"author":{"gitId":"-"},"content":"            v-on:change\u003d\"getFiltered\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          span {{ fileType }}"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  c-summary-charts("},{"lineNumber":115,"author":{"gitId":"-"},"content":"    v-bind:filtered\u003d\"filtered\","},{"lineNumber":116,"author":{"gitId":"-"},"content":"    v-bind:checked-file-types\u003d\"checkedFileTypes\","},{"lineNumber":117,"author":{"gitId":"-"},"content":"    v-bind:avg-contribution-size\u003d\"avgContributionSize\","},{"lineNumber":118,"author":{"gitId":"-"},"content":"    v-bind:filter-group-selection\u003d\"filterGroupSelection\","},{"lineNumber":119,"author":{"gitId":"-"},"content":"    v-bind:filter-breakdown\u003d\"filterBreakdown\","},{"lineNumber":120,"author":{"gitId":"-"},"content":"    v-bind:filter-time-frame\u003d\"filterTimeFrame\","},{"lineNumber":121,"author":{"gitId":"-"},"content":"    v-bind:filter-since-date\u003d\"filterSinceDate\","},{"lineNumber":122,"author":{"gitId":"-"},"content":"    v-bind:filter-until-date\u003d\"filterUntilDate\","},{"lineNumber":123,"author":{"gitId":"-"},"content":"    v-bind:filter-search\u003d\"filterSearch\","},{"lineNumber":124,"author":{"gitId":"-"},"content":"    v-bind:min-date\u003d\"minDate\","},{"lineNumber":125,"author":{"gitId":"-"},"content":"    v-bind:max-date\u003d\"maxDate\","},{"lineNumber":126,"author":{"gitId":"-"},"content":"    v-bind:sort-group-selection\u003d\"sortGroupSelection\""},{"lineNumber":127,"author":{"gitId":"-"},"content":"  )"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cscript\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"import cSummaryCharts from \u0027../components/c-summary-charts.vue\u0027;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"import getNonRepeatingColor from \u0027../utils/ramp-colour-generator\u0027;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"import sortFiltered from \u0027../utils/repo-sorter\u0027;"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"const getFontColor \u003d window.getFontColor;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"const dateFormatRegex \u003d /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$/;"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"export default {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  name: \u0027c-summary\u0027,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    cSummaryCharts,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":145,"author":{"gitId":"ckcherry23"},"content":"  props: {"},{"lineNumber":146,"author":{"gitId":"ckcherry23"},"content":"    repos: {"},{"lineNumber":147,"author":{"gitId":"ckcherry23"},"content":"      type: Array,"},{"lineNumber":148,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":149,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":150,"author":{"gitId":"ckcherry23"},"content":"    errorMessages: {"},{"lineNumber":151,"author":{"gitId":"ckcherry23"},"content":"      type: Object,"},{"lineNumber":152,"author":{"gitId":"ckcherry23"},"content":"      default() {"},{"lineNumber":153,"author":{"gitId":"ckcherry23"},"content":"        return {};"},{"lineNumber":154,"author":{"gitId":"ckcherry23"},"content":"      },"},{"lineNumber":155,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":156,"author":{"gitId":"ckcherry23"},"content":"  },"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      checkedFileTypes: [],"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      fileTypes: [],"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      filtered: [],"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      filterSearch: \u0027\u0027,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      filterGroupSelection: \u0027groupByRepos\u0027,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      sortGroupSelection: \u0027groupTitle\u0027, // UI for sorting groups"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      sortWithinGroupSelection: \u0027title\u0027, // UI for sorting within groups"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      sortingOption: \u0027\u0027,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      isSortingDsc: \u0027\u0027,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      sortingWithinOption: \u0027\u0027,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      isSortingWithinDsc: \u0027\u0027,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      filterTimeFrame: \u0027commit\u0027,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      filterBreakdown: false,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      tmpFilterSinceDate: \u0027\u0027,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      tmpFilterUntilDate: \u0027\u0027,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      hasModifiedSinceDate: window.isSinceDateProvided,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      hasModifiedUntilDate: window.isUntilDateProvided,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      filterHash: \u0027\u0027,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      minDate: window.sinceDate,"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      maxDate: window.untilDate,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      fileTypeColors: {},"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      isSafariBrowser: /.*Version.*Safari.*/.test(navigator.userAgent),"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      filterGroupSelectionWatcherFlag: false,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    checkAllFileTypes: {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      get() {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return this.checkedFileTypes.length \u003d\u003d\u003d this.fileTypes.length;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      set(value) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (value) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"          this.checkedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"          this.checkedFileTypes \u003d [];"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"    avgContributionSize() {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      let totalLines \u003d 0;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      let totalCount \u003d 0;"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      this.repos.forEach((repo) \u003d\u003e {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        repo.users.forEach((user) \u003d\u003e {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"          if (user.checkedFileTypeContribution \u003d\u003d\u003d undefined) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.updateCheckedFileTypeContribution(user);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":207,"author":{"gitId":"-"},"content":"          if (user.checkedFileTypeContribution \u003e 0) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            totalCount +\u003d 1;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            totalLines +\u003d user.checkedFileTypeContribution;"},{"lineNumber":210,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"      return totalLines / totalCount;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"    allGroupsMerged: {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      get() {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (this.mergedGroups.length \u003d\u003d\u003d 0) {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"          return false;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return this.mergedGroups.length \u003d\u003d\u003d this.filtered.length;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      set(value) {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        if (value) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"          const mergedGroups \u003d [];"},{"lineNumber":227,"author":{"gitId":"-"},"content":"          this.filtered.forEach((group) \u003d\u003e {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            mergedGroups.push(this.getGroupName(group));"},{"lineNumber":229,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          this.filtered \u003d [];"},{"lineNumber":231,"author":{"gitId":"-"},"content":"          this.$store.commit(\u0027updateMergedGroup\u0027, mergedGroups);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"          this.$store.commit(\u0027updateMergedGroup\u0027, []);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"    filterSinceDate() {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      if (this.tmpFilterSinceDate \u0026\u0026 this.tmpFilterSinceDate \u003e\u003d this.minDate) {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        return this.tmpFilterSinceDate;"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      // If user clears the since date field"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      return this.minDate;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    filterUntilDate() {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"      if (this.tmpFilterUntilDate \u0026\u0026 this.tmpFilterUntilDate \u003c\u003d this.maxDate) {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return this.tmpFilterUntilDate;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      return this.maxDate;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"    ...mapState([\u0027mergedGroups\u0027]),"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":255,"author":{"gitId":"vvidday"},"content":"  watch: {"},{"lineNumber":256,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":257,"author":{"gitId":"vvidday"},"content":"    filterGroupSelection() {"},{"lineNumber":258,"author":{"gitId":"vvidday"},"content":"      // Deactivates watcher"},{"lineNumber":259,"author":{"gitId":"vvidday"},"content":"      if (!this.filterGroupSelectionWatcherFlag) {"},{"lineNumber":260,"author":{"gitId":"vvidday"},"content":"        return;"},{"lineNumber":261,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":262,"author":{"gitId":"vvidday"},"content":"      const { allGroupsMerged } \u003d this;"},{"lineNumber":263,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":264,"author":{"gitId":"vvidday"},"content":"      this.$store.dispatch(\u0027incrementLoadingOverlayCountForceReload\u0027, 1).then(() \u003d\u003e {"},{"lineNumber":265,"author":{"gitId":"vvidday"},"content":"        this.getFilteredRepos();"},{"lineNumber":266,"author":{"gitId":"vvidday"},"content":"        this.updateMergedGroup(allGroupsMerged);"},{"lineNumber":267,"author":{"gitId":"vvidday"},"content":"        this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, -1);"},{"lineNumber":268,"author":{"gitId":"vvidday"},"content":"      });"},{"lineNumber":269,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":270,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":271,"author":{"gitId":"vvidday"},"content":"    \u0027$store.state.summaryDates\u0027: function () {"},{"lineNumber":272,"author":{"gitId":"vvidday"},"content":"      this.hasModifiedSinceDate \u003d true;"},{"lineNumber":273,"author":{"gitId":"vvidday"},"content":"      this.hasModifiedUntilDate \u003d true;"},{"lineNumber":274,"author":{"gitId":"vvidday"},"content":"      this.tmpFilterSinceDate \u003d this.$store.state.summaryDates.since;"},{"lineNumber":275,"author":{"gitId":"vvidday"},"content":"      this.tmpFilterUntilDate \u003d this.$store.state.summaryDates.until;"},{"lineNumber":276,"author":{"gitId":"vvidday"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":277,"author":{"gitId":"vvidday"},"content":"      this.getFiltered();"},{"lineNumber":278,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":279,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":280,"author":{"gitId":"vvidday"},"content":"    mergedGroups: {"},{"lineNumber":281,"author":{"gitId":"vvidday"},"content":"      deep: true,"},{"lineNumber":282,"author":{"gitId":"vvidday"},"content":"      handler() {"},{"lineNumber":283,"author":{"gitId":"vvidday"},"content":"        this.getFiltered();"},{"lineNumber":284,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":285,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":286,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":287,"author":{"gitId":"vvidday"},"content":"  created() {"},{"lineNumber":288,"author":{"gitId":"vvidday"},"content":"    this.processFileTypes();"},{"lineNumber":289,"author":{"gitId":"vvidday"},"content":"    this.renderFilterHash();"},{"lineNumber":290,"author":{"gitId":"vvidday"},"content":"    this.getFiltered();"},{"lineNumber":291,"author":{"gitId":"vvidday"},"content":"    if (this.$store.state.tabZoomInfo.isRefreshing) {"},{"lineNumber":292,"author":{"gitId":"vvidday"},"content":"      const zoomInfo \u003d Object.assign({}, this.$store.state.tabZoomInfo);"},{"lineNumber":293,"author":{"gitId":"vvidday"},"content":"      this.restoreZoomFiltered(zoomInfo);"},{"lineNumber":294,"author":{"gitId":"vvidday"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":296,"author":{"gitId":"vvidday"},"content":"  mounted() {"},{"lineNumber":297,"author":{"gitId":"vvidday"},"content":"    // Delay execution of filterGroupSelection watcher"},{"lineNumber":298,"author":{"gitId":"vvidday"},"content":"    // to prevent clearing of merged groups"},{"lineNumber":299,"author":{"gitId":"vvidday"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":300,"author":{"gitId":"vvidday"},"content":"      this.filterGroupSelectionWatcherFlag \u003d true;"},{"lineNumber":301,"author":{"gitId":"vvidday"},"content":"    }, 0);"},{"lineNumber":302,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    dismissTab(event) {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      event.target.parentNode.style.display \u003d \u0027none\u0027;"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"    // view functions //"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    getReportIssueGitHubLink(stackTrace) {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"      return `${window.REPOSENSE_REPO_URL}/issues/new?title\u003d${this.getReportIssueTitle()"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      }\u0026body\u003d${this.getReportIssueMessage(stackTrace)}`;"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"    getReportIssueEmailAddress() {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      return \u0027seer@comp.nus.edu.sg\u0027;"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"    getReportIssueEmailLink(stackTrace) {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      return `mailto:${this.getReportIssueEmailAddress()}?subject\u003d${this.getReportIssueTitle()"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      }\u0026body\u003d${this.getReportIssueMessage(stackTrace)}`;"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"    getReportIssueTitle() {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      return `${encodeURI(\u0027Unexpected error with RepoSense version \u0027)}${window.repoSenseVersion}`;"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    getReportIssueMessage(message) {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      return encodeURI(message);"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"    // model functions //"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    resetFilterSearch() {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      this.filterSearch \u003d \u0027\u0027;"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      this.getFiltered();"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    updateFilterSearch(evt) {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      this.filterSearch \u003d evt.target.value;"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      this.getFiltered();"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"    setSummaryHash() {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      const { addHash, encodeHash } \u003d window;"},{"lineNumber":343,"author":{"gitId":"-"},"content":""},{"lineNumber":344,"author":{"gitId":"-"},"content":"      addHash(\u0027search\u0027, this.filterSearch);"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      addHash(\u0027sort\u0027, this.sortGroupSelection);"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      addHash(\u0027sortWithin\u0027, this.sortWithinGroupSelection);"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"      if (this.hasModifiedSinceDate) {"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        addHash(\u0027since\u0027, this.filterSinceDate);"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"      if (this.hasModifiedUntilDate) {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        addHash(\u0027until\u0027, this.filterUntilDate);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"      addHash(\u0027timeframe\u0027, this.filterTimeFrame);"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"      let mergedGroupsHash \u003d this.mergedGroups.join(window.HASH_DELIMITER);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      if (mergedGroupsHash.length \u003d\u003d\u003d 0) {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        mergedGroupsHash \u003d \u0027\u0027;"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      addHash(\u0027mergegroup\u0027, mergedGroupsHash);"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"      addHash(\u0027groupSelect\u0027, this.filterGroupSelection);"},{"lineNumber":365,"author":{"gitId":"-"},"content":"      addHash(\u0027breakdown\u0027, this.filterBreakdown);"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"      if (this.filterBreakdown) {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        const checkedFileTypesHash \u003d this.checkedFileTypes.length \u003e 0"},{"lineNumber":369,"author":{"gitId":"-"},"content":"          ? this.checkedFileTypes.join(window.HASH_DELIMITER)"},{"lineNumber":370,"author":{"gitId":"-"},"content":"          : \u0027\u0027;"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        addHash(\u0027checkedFileTypes\u0027, checkedFileTypesHash);"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        window.removeHash(\u0027checkedFileTypes\u0027);"},{"lineNumber":374,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"      encodeHash();"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"    renderFilterHash() {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      const convertBool \u003d (txt) \u003d\u003e (txt \u003d\u003d\u003d \u0027true\u0027);"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      const hash \u003d Object.assign({}, window.hashParams);"},{"lineNumber":382,"author":{"gitId":"-"},"content":""},{"lineNumber":383,"author":{"gitId":"-"},"content":"      if (hash.search) { this.filterSearch \u003d hash.search; }"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      if (hash.sort) {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        this.sortGroupSelection \u003d hash.sort;"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":387,"author":{"gitId":"-"},"content":"      if (hash.sortWithin) {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        this.sortWithinGroupSelection \u003d hash.sortWithin;"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"      if (hash.timeframe) { this.filterTimeFrame \u003d hash.timeframe; }"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      if (hash.mergegroup) {"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        this.$store.commit("},{"lineNumber":394,"author":{"gitId":"-"},"content":"          \u0027updateMergedGroup\u0027,"},{"lineNumber":395,"author":{"gitId":"-"},"content":"          hash.mergegroup.split(window.HASH_DELIMITER),"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":397,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      if (hash.since \u0026\u0026 dateFormatRegex.test(hash.since)) {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        this.tmpFilterSinceDate \u003d hash.since;"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":401,"author":{"gitId":"-"},"content":"      if (hash.until \u0026\u0026 dateFormatRegex.test(hash.until)) {"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        this.tmpFilterUntilDate \u003d hash.until;"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"      if (hash.groupSelect) {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        this.filterGroupSelection \u003d hash.groupSelect;"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      if (hash.breakdown) {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        this.filterBreakdown \u003d convertBool(hash.breakdown);"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      if (hash.checkedFileTypes) {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        const parsedFileTypes \u003d hash.checkedFileTypes.split(window.HASH_DELIMITER);"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        this.checkedFileTypes \u003d parsedFileTypes.filter((type) \u003d\u003e this.fileTypes.includes(type));"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":416,"author":{"gitId":"-"},"content":""},{"lineNumber":417,"author":{"gitId":"-"},"content":"    getGroupName(group) {"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      return window.getGroupName(group, this.filterGroupSelection);"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":420,"author":{"gitId":"-"},"content":""},{"lineNumber":421,"author":{"gitId":"-"},"content":"    isMatchSearchedUser(filterSearch, user) {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      return !filterSearch || filterSearch.toLowerCase()"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        .split(\u0027 \u0027)"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        .filter(Boolean)"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        .some((param) \u003d\u003e user.searchPath.includes(param));"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"    toggleBreakdown() {"},{"lineNumber":429,"author":{"gitId":"-"},"content":"      // Reset the file type filter"},{"lineNumber":430,"author":{"gitId":"-"},"content":"      if (this.checkedFileTypes.length !\u003d\u003d this.fileTypes.length) {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        this.checkedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":432,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":433,"author":{"gitId":"-"},"content":"      this.getFiltered();"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":435,"author":{"gitId":"-"},"content":""},{"lineNumber":436,"author":{"gitId":"-"},"content":"    async getFiltered() {"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      this.setSummaryHash();"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"      await this.$store.dispatch(\u0027incrementLoadingOverlayCountForceReload\u0027, 1);"},{"lineNumber":441,"author":{"gitId":"-"},"content":"      this.getFilteredRepos();"},{"lineNumber":442,"author":{"gitId":"-"},"content":"      this.getMergedRepos();"},{"lineNumber":443,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, -1);"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"-"},"content":"    getFilteredRepos() {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"      // array of array, sorted by repo"},{"lineNumber":448,"author":{"gitId":"-"},"content":"      const full \u003d [];"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"      // create deep clone of this.repos to not modify the original content of this.repos"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      // when merging groups"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      const groups \u003d this.hasMergedGroups() ? JSON.parse(JSON.stringify(this.repos)) : this.repos;"},{"lineNumber":453,"author":{"gitId":"-"},"content":"      groups.forEach((repo) \u003d\u003e {"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        const res \u003d [];"},{"lineNumber":455,"author":{"gitId":"-"},"content":""},{"lineNumber":456,"author":{"gitId":"-"},"content":"        // filtering"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        repo.users.forEach((user) \u003d\u003e {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"          if (this.isMatchSearchedUser(this.filterSearch, user)) {"},{"lineNumber":459,"author":{"gitId":"-"},"content":"            this.getUserCommits(user, this.filterSinceDate, this.filterUntilDate);"},{"lineNumber":460,"author":{"gitId":"-"},"content":"            if (this.filterTimeFrame \u003d\u003d\u003d \u0027week\u0027) {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"              this.splitCommitsWeek(user, this.filterSinceDate, this.filterUntilDate);"},{"lineNumber":462,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            this.updateCheckedFileTypeContribution(user);"},{"lineNumber":464,"author":{"gitId":"-"},"content":"            res.push(user);"},{"lineNumber":465,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"        if (res.length) {"},{"lineNumber":469,"author":{"gitId":"-"},"content":"          full.push(res);"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":471,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      this.filtered \u003d full;"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"      this.getOptionWithOrder();"},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"      const filterControl \u003d {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        filterGroupSelection: this.filterGroupSelection,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        sortingOption: this.sortingOption,"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        sortingWithinOption: this.sortingWithinOption,"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        isSortingDsc: this.isSortingDsc,"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        isSortingWithinDsc: this.isSortingWithinDsc,"},{"lineNumber":482,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":483,"author":{"gitId":"-"},"content":"      this.getOptionWithOrder();"},{"lineNumber":484,"author":{"gitId":"-"},"content":"      this.filtered \u003d sortFiltered(this.filtered, filterControl);"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"    updateMergedGroup(allGroupsMerged) {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"      // merge group is not allowed when group by none"},{"lineNumber":489,"author":{"gitId":"-"},"content":"      // also reset merged groups"},{"lineNumber":490,"author":{"gitId":"-"},"content":"      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 || !allGroupsMerged) {"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateMergedGroup\u0027, []);"},{"lineNumber":492,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        const mergedGroups \u003d [];"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        this.filtered.forEach((group) \u003d\u003e {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"          mergedGroups.push(this.getGroupName(group));"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateMergedGroup\u0027, mergedGroups);"},{"lineNumber":498,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"    getMergedRepos() {"},{"lineNumber":502,"author":{"gitId":"-"},"content":"      this.filtered.forEach((group, groupIndex) \u003d\u003e {"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        if (this.mergedGroups.includes(this.getGroupName(group))) {"},{"lineNumber":504,"author":{"gitId":"-"},"content":"          this.mergeGroupByIndex(this.filtered, groupIndex);"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":506,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"    mergeGroupByIndex(filtered, groupIndex) {"},{"lineNumber":510,"author":{"gitId":"-"},"content":"      const dateToIndexMap \u003d {};"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      const dailyIndexMap \u003d {};"},{"lineNumber":512,"author":{"gitId":"-"},"content":"      const mergedCommits \u003d [];"},{"lineNumber":513,"author":{"gitId":"-"},"content":"      const mergedDailyCommits \u003d [];"},{"lineNumber":514,"author":{"gitId":"-"},"content":"      const mergedFileTypeContribution \u003d {};"},{"lineNumber":515,"author":{"gitId":"-"},"content":"      let mergedVariance \u003d 0;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      let totalMergedCheckedFileTypeCommits \u003d 0;"},{"lineNumber":517,"author":{"gitId":"-"},"content":"      filtered[groupIndex].forEach((user) \u003d\u003e {"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        user.commits.forEach((commit) \u003d\u003e {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"          this.mergeCommits(commit, user, dateToIndexMap, mergedCommits);"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":521,"author":{"gitId":"-"},"content":"        user.dailyCommits.forEach((commit) \u003d\u003e {"},{"lineNumber":522,"author":{"gitId":"-"},"content":"          this.mergeCommits(commit, user, dailyIndexMap, mergedDailyCommits);"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"        this.mergeFileTypeContribution(user, mergedFileTypeContribution);"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"-"},"content":"        totalMergedCheckedFileTypeCommits +\u003d user.checkedFileTypeContribution;"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        mergedVariance +\u003d user.variance;"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      mergedCommits.sort(window.comparator((ele) \u003d\u003e ele.date));"},{"lineNumber":531,"author":{"gitId":"-"},"content":"      filtered[groupIndex][0].commits \u003d mergedCommits;"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      filtered[groupIndex][0].dailyCommits \u003d mergedDailyCommits;"},{"lineNumber":533,"author":{"gitId":"-"},"content":"      filtered[groupIndex][0].fileTypeContribution \u003d mergedFileTypeContribution;"},{"lineNumber":534,"author":{"gitId":"-"},"content":"      filtered[groupIndex][0].variance \u003d mergedVariance;"},{"lineNumber":535,"author":{"gitId":"-"},"content":"      filtered[groupIndex][0].checkedFileTypeContribution \u003d totalMergedCheckedFileTypeCommits;"},{"lineNumber":536,"author":{"gitId":"-"},"content":""},{"lineNumber":537,"author":{"gitId":"-"},"content":"      // only take the merged group"},{"lineNumber":538,"author":{"gitId":"-"},"content":"      filtered[groupIndex] \u003d filtered[groupIndex].slice(0, 1);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"-"},"content":"    hasMergedGroups() {"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      return this.mergedGroups.length \u003e 0;"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":544,"author":{"gitId":"-"},"content":""},{"lineNumber":545,"author":{"gitId":"-"},"content":"    mergeCommits(commit, user, dateToIndexMap, merged) {"},{"lineNumber":546,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        commitResults, date, insertions, deletions,"},{"lineNumber":548,"author":{"gitId":"-"},"content":"      } \u003d commit;"},{"lineNumber":549,"author":{"gitId":"-"},"content":""},{"lineNumber":550,"author":{"gitId":"-"},"content":"      // bind repoId to each commit"},{"lineNumber":551,"author":{"gitId":"-"},"content":"      commitResults.forEach((commitResult) \u003d\u003e {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        commitResult.repoId \u003d user.repoId;"},{"lineNumber":553,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"      if (Object.prototype.hasOwnProperty.call(dateToIndexMap, date)) {"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        const commitWithSameDate \u003d merged[dateToIndexMap[date]];"},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":"        commitResults.forEach((commitResult) \u003d\u003e {"},{"lineNumber":559,"author":{"gitId":"-"},"content":"          commitWithSameDate.commitResults.push(commitResult);"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":561,"author":{"gitId":"-"},"content":""},{"lineNumber":562,"author":{"gitId":"-"},"content":"        commitWithSameDate.insertions +\u003d insertions;"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        commitWithSameDate.deletions +\u003d deletions;"},{"lineNumber":564,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        dateToIndexMap[date] \u003d Object.keys(dateToIndexMap).length;"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        merged.push(JSON.parse(JSON.stringify(commit)));"},{"lineNumber":567,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":568,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":569,"author":{"gitId":"-"},"content":""},{"lineNumber":570,"author":{"gitId":"-"},"content":"    mergeFileTypeContribution(user, merged) {"},{"lineNumber":571,"author":{"gitId":"-"},"content":"      Object.entries(user.fileTypeContribution).forEach((fileType) \u003d\u003e {"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        const key \u003d fileType[0];"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        const value \u003d fileType[1];"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"        if (!Object.prototype.hasOwnProperty.call(merged, key)) {"},{"lineNumber":576,"author":{"gitId":"-"},"content":"          merged[key] \u003d 0;"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        merged[key] +\u003d value;"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":581,"author":{"gitId":"-"},"content":""},{"lineNumber":582,"author":{"gitId":"-"},"content":"    processFileTypes() {"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      const selectedColors \u003d [\u0027#ffe119\u0027, \u0027#4363d8\u0027, \u0027#3cb44b\u0027, \u0027#f58231\u0027, \u0027#911eb4\u0027, \u0027#46f0f0\u0027, \u0027#f032e6\u0027,"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        \u0027#bcf60c\u0027, \u0027#fabebe\u0027, \u0027#008080\u0027, \u0027#e6beff\u0027, \u0027#9a6324\u0027, \u0027#fffac8\u0027, \u0027#800000\u0027, \u0027#aaffc3\u0027, \u0027#808000\u0027, \u0027#ffd8b1\u0027,"},{"lineNumber":585,"author":{"gitId":"-"},"content":"        \u0027#000075\u0027, \u0027#808080\u0027];"},{"lineNumber":586,"author":{"gitId":"-"},"content":"      const fileTypeColors \u003d {};"},{"lineNumber":587,"author":{"gitId":"-"},"content":"      let i \u003d 0;"},{"lineNumber":588,"author":{"gitId":"-"},"content":""},{"lineNumber":589,"author":{"gitId":"-"},"content":"      this.repos.forEach((repo) \u003d\u003e {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        repo.users.forEach((user) \u003d\u003e {"},{"lineNumber":591,"author":{"gitId":"-"},"content":"          Object.keys(user.fileTypeContribution).forEach((fileType) \u003d\u003e {"},{"lineNumber":592,"author":{"gitId":"-"},"content":"            if (!Object.prototype.hasOwnProperty.call(fileTypeColors, fileType)) {"},{"lineNumber":593,"author":{"gitId":"-"},"content":"              if (i \u003c selectedColors.length) {"},{"lineNumber":594,"author":{"gitId":"-"},"content":"                fileTypeColors[fileType] \u003d selectedColors[i];"},{"lineNumber":595,"author":{"gitId":"-"},"content":"                i +\u003d 1;"},{"lineNumber":596,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":597,"author":{"gitId":"-"},"content":"                fileTypeColors[fileType] \u003d getNonRepeatingColor(Object.values(fileTypeColors));"},{"lineNumber":598,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":599,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":600,"author":{"gitId":"-"},"content":"            if (!this.fileTypes.includes(fileType)) {"},{"lineNumber":601,"author":{"gitId":"-"},"content":"              this.fileTypes.push(fileType);"},{"lineNumber":602,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":603,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        this.fileTypeColors \u003d fileTypeColors;"},{"lineNumber":606,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":607,"author":{"gitId":"-"},"content":""},{"lineNumber":608,"author":{"gitId":"-"},"content":"      this.checkedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":609,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateFileTypeColors\u0027, this.fileTypeColors);"},{"lineNumber":610,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":611,"author":{"gitId":"-"},"content":""},{"lineNumber":612,"author":{"gitId":"-"},"content":"    splitCommitsWeek(user, sinceDate, untilDate) {"},{"lineNumber":613,"author":{"gitId":"-"},"content":"      const { commits } \u003d user;"},{"lineNumber":614,"author":{"gitId":"-"},"content":""},{"lineNumber":615,"author":{"gitId":"-"},"content":"      const res \u003d [];"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"-"},"content":"      const nextMondayDate \u003d this.dateRounding(sinceDate, 0); // round up for the next monday"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":"      const nextMondayMs \u003d (new Date(nextMondayDate)).getTime();"},{"lineNumber":620,"author":{"gitId":"-"},"content":"      const sinceMs \u003d new Date(sinceDate).getTime();"},{"lineNumber":621,"author":{"gitId":"-"},"content":"      const untilMs \u003d (new Date(untilDate)).getTime();"},{"lineNumber":622,"author":{"gitId":"-"},"content":""},{"lineNumber":623,"author":{"gitId":"-"},"content":"      if (nextMondayDate \u003c\u003d untilDate) {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"        this.pushCommitsWeek(sinceMs, nextMondayMs - 1, res, commits);"},{"lineNumber":625,"author":{"gitId":"-"},"content":"        this.pushCommitsWeek(nextMondayMs, untilMs, res, commits);"},{"lineNumber":626,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        this.pushCommitsWeek(sinceMs, untilMs, res, commits);"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":629,"author":{"gitId":"-"},"content":"      user.commits \u003d res;"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":631,"author":{"gitId":"-"},"content":""},{"lineNumber":632,"author":{"gitId":"-"},"content":"    pushCommitsWeek(sinceMs, untilMs, res, commits) {"},{"lineNumber":633,"author":{"gitId":"-"},"content":"      const diff \u003d Math.round(Math.abs((untilMs - sinceMs) / window.DAY_IN_MS));"},{"lineNumber":634,"author":{"gitId":"-"},"content":"      const weekInMS \u003d window.DAY_IN_MS * 7;"},{"lineNumber":635,"author":{"gitId":"-"},"content":""},{"lineNumber":636,"author":{"gitId":"-"},"content":"      for (let weekId \u003d 0; weekId \u003c diff / 7; weekId +\u003d 1) {"},{"lineNumber":637,"author":{"gitId":"-"},"content":"        const startOfWeekMs \u003d sinceMs + (weekId * weekInMS);"},{"lineNumber":638,"author":{"gitId":"-"},"content":"        const endOfWeekMs \u003d startOfWeekMs + weekInMS - window.DAY_IN_MS;"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        const endOfWeekMsWithinUntilMs \u003d endOfWeekMs \u003c\u003d untilMs ? endOfWeekMs : untilMs;"},{"lineNumber":640,"author":{"gitId":"-"},"content":""},{"lineNumber":641,"author":{"gitId":"-"},"content":"        const week \u003d {"},{"lineNumber":642,"author":{"gitId":"-"},"content":"          insertions: 0,"},{"lineNumber":643,"author":{"gitId":"-"},"content":"          deletions: 0,"},{"lineNumber":644,"author":{"gitId":"-"},"content":"          date: window.getDateStr(startOfWeekMs),"},{"lineNumber":645,"author":{"gitId":"-"},"content":"          endDate: window.getDateStr(endOfWeekMsWithinUntilMs),"},{"lineNumber":646,"author":{"gitId":"-"},"content":"          commitResults: [],"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":648,"author":{"gitId":"-"},"content":""},{"lineNumber":649,"author":{"gitId":"-"},"content":"        this.addLineContributionWeek(endOfWeekMsWithinUntilMs, week, commits);"},{"lineNumber":650,"author":{"gitId":"-"},"content":"        if (week.commitResults.length \u003e 0) {"},{"lineNumber":651,"author":{"gitId":"-"},"content":"          res.push(week);"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":653,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":654,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"-"},"content":"    addLineContributionWeek(endOfWeekMs, week, commits) {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"      // commits are not contiguous, meaning there are gaps of days without"},{"lineNumber":658,"author":{"gitId":"-"},"content":"      // commits, so we are going to check each commit\u0027s date and make sure"},{"lineNumber":659,"author":{"gitId":"-"},"content":"      // it is within the duration of a week"},{"lineNumber":660,"author":{"gitId":"-"},"content":"      while (commits.length \u003e 0"},{"lineNumber":661,"author":{"gitId":"-"},"content":"          \u0026\u0026 (new Date(commits[0].date)).getTime() \u003c\u003d endOfWeekMs) {"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        const commit \u003d commits.shift();"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        week.insertions +\u003d commit.insertions;"},{"lineNumber":664,"author":{"gitId":"-"},"content":"        week.deletions +\u003d commit.deletions;"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        commit.commitResults.forEach((commitResult) \u003d\u003e week.commitResults.push(commitResult));"},{"lineNumber":666,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":667,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":668,"author":{"gitId":"-"},"content":""},{"lineNumber":669,"author":{"gitId":"-"},"content":"    getUserCommits(user, sinceDate, untilDate) {"},{"lineNumber":670,"author":{"gitId":"-"},"content":"      user.commits \u003d [];"},{"lineNumber":671,"author":{"gitId":"-"},"content":"      const userFirst \u003d user.dailyCommits[0];"},{"lineNumber":672,"author":{"gitId":"-"},"content":"      const userLast \u003d user.dailyCommits[user.dailyCommits.length - 1];"},{"lineNumber":673,"author":{"gitId":"-"},"content":""},{"lineNumber":674,"author":{"gitId":"-"},"content":"      if (!userFirst) {"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":676,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":677,"author":{"gitId":"-"},"content":""},{"lineNumber":678,"author":{"gitId":"-"},"content":"      if (!sinceDate || sinceDate \u003d\u003d\u003d \u0027undefined\u0027) {"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        sinceDate \u003d userFirst.date;"},{"lineNumber":680,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":681,"author":{"gitId":"-"},"content":""},{"lineNumber":682,"author":{"gitId":"-"},"content":"      if (!untilDate) {"},{"lineNumber":683,"author":{"gitId":"-"},"content":"        untilDate \u003d userLast.date;"},{"lineNumber":684,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":685,"author":{"gitId":"-"},"content":""},{"lineNumber":686,"author":{"gitId":"-"},"content":"      user.dailyCommits.forEach((commit) \u003d\u003e {"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        const { date } \u003d commit;"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        if (date \u003e\u003d sinceDate \u0026\u0026 date \u003c\u003d untilDate) {"},{"lineNumber":689,"author":{"gitId":"-"},"content":"          const filteredCommit \u003d JSON.parse(JSON.stringify(commit));"},{"lineNumber":690,"author":{"gitId":"-"},"content":"          this.filterCommitByCheckedFileTypes(filteredCommit);"},{"lineNumber":691,"author":{"gitId":"-"},"content":""},{"lineNumber":692,"author":{"gitId":"-"},"content":"          if (filteredCommit.commitResults.length \u003e 0) {"},{"lineNumber":693,"author":{"gitId":"vvidday"},"content":"            filteredCommit.commitResults.forEach((commitResult) \u003d\u003e {"},{"lineNumber":694,"author":{"gitId":"vvidday"},"content":"              if (commitResult.messageBody !\u003d\u003d \u0027\u0027) {"},{"lineNumber":695,"author":{"gitId":"vvidday"},"content":"                commitResult.isOpen \u003d true;"},{"lineNumber":696,"author":{"gitId":"vvidday"},"content":"              }"},{"lineNumber":697,"author":{"gitId":"vvidday"},"content":"            });"},{"lineNumber":698,"author":{"gitId":"-"},"content":"            user.commits.push(filteredCommit);"},{"lineNumber":699,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":700,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":701,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":702,"author":{"gitId":"-"},"content":""},{"lineNumber":703,"author":{"gitId":"-"},"content":"      return null;"},{"lineNumber":704,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":705,"author":{"gitId":"-"},"content":""},{"lineNumber":706,"author":{"gitId":"-"},"content":"    filterCommitByCheckedFileTypes(commit) {"},{"lineNumber":707,"author":{"gitId":"-"},"content":"      const filteredCommitResults \u003d commit.commitResults.map((result) \u003d\u003e {"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        const filteredFileTypes \u003d this.getFilteredFileTypes(result);"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        this.updateCommitResultWithFileTypes(result, filteredFileTypes);"},{"lineNumber":710,"author":{"gitId":"-"},"content":"        return result;"},{"lineNumber":711,"author":{"gitId":"-"},"content":"      }).filter((result) \u003d\u003e Object.values(result.fileTypesAndContributionMap).length \u003e 0);"},{"lineNumber":712,"author":{"gitId":"-"},"content":""},{"lineNumber":713,"author":{"gitId":"-"},"content":"      commit.insertions \u003d filteredCommitResults.reduce((acc, result) \u003d\u003e acc + result.insertions, 0);"},{"lineNumber":714,"author":{"gitId":"-"},"content":"      commit.deletions \u003d filteredCommitResults.reduce((acc, result) \u003d\u003e acc + result.deletions, 0);"},{"lineNumber":715,"author":{"gitId":"-"},"content":"      commit.commitResults \u003d filteredCommitResults;"},{"lineNumber":716,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":717,"author":{"gitId":"-"},"content":""},{"lineNumber":718,"author":{"gitId":"-"},"content":"    getFilteredFileTypes(commitResult) {"},{"lineNumber":719,"author":{"gitId":"-"},"content":"      return Object.keys(commitResult.fileTypesAndContributionMap)"},{"lineNumber":720,"author":{"gitId":"-"},"content":"        .filter(this.isFileTypeChecked)"},{"lineNumber":721,"author":{"gitId":"-"},"content":"        .reduce((obj, fileType) \u003d\u003e {"},{"lineNumber":722,"author":{"gitId":"-"},"content":"          obj[fileType] \u003d commitResult.fileTypesAndContributionMap[fileType];"},{"lineNumber":723,"author":{"gitId":"-"},"content":"          return obj;"},{"lineNumber":724,"author":{"gitId":"-"},"content":"        }, {});"},{"lineNumber":725,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":726,"author":{"gitId":"-"},"content":""},{"lineNumber":727,"author":{"gitId":"-"},"content":"    isFileTypeChecked(fileType) {"},{"lineNumber":728,"author":{"gitId":"-"},"content":"      if (this.filterBreakdown) {"},{"lineNumber":729,"author":{"gitId":"-"},"content":"        return this.checkedFileTypes.includes(fileType);"},{"lineNumber":730,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":731,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":732,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"    updateCommitResultWithFileTypes(commitResult, filteredFileTypes) {"},{"lineNumber":735,"author":{"gitId":"-"},"content":"      commitResult.insertions \u003d Object.values(filteredFileTypes)"},{"lineNumber":736,"author":{"gitId":"-"},"content":"        .reduce((acc, fileType) \u003d\u003e acc + fileType.insertions, 0);"},{"lineNumber":737,"author":{"gitId":"-"},"content":"      commitResult.deletions \u003d Object.values(filteredFileTypes)"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        .reduce((acc, fileType) \u003d\u003e acc + fileType.deletions, 0);"},{"lineNumber":739,"author":{"gitId":"-"},"content":"      commitResult.fileTypesAndContributionMap \u003d filteredFileTypes;"},{"lineNumber":740,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":741,"author":{"gitId":"-"},"content":""},{"lineNumber":742,"author":{"gitId":"-"},"content":"    getOptionWithOrder() {"},{"lineNumber":743,"author":{"gitId":"-"},"content":"      [this.sortingOption, this.isSortingDsc] \u003d this.sortGroupSelection.split(\u0027 \u0027);"},{"lineNumber":744,"author":{"gitId":"-"},"content":"      [this.sortingWithinOption, this.isSortingWithinDsc] \u003d this.sortWithinGroupSelection.split(\u0027 \u0027);"},{"lineNumber":745,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":746,"author":{"gitId":"-"},"content":""},{"lineNumber":747,"author":{"gitId":"-"},"content":"    // updating filters programically //"},{"lineNumber":748,"author":{"gitId":"-"},"content":"    resetDateRange() {"},{"lineNumber":749,"author":{"gitId":"-"},"content":"      this.hasModifiedSinceDate \u003d false;"},{"lineNumber":750,"author":{"gitId":"-"},"content":"      this.hasModifiedUntilDate \u003d false;"},{"lineNumber":751,"author":{"gitId":"-"},"content":"      this.tmpFilterSinceDate \u003d \u0027\u0027;"},{"lineNumber":752,"author":{"gitId":"-"},"content":"      this.tmpFilterUntilDate \u003d \u0027\u0027;"},{"lineNumber":753,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027since\u0027);"},{"lineNumber":754,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027until\u0027);"},{"lineNumber":755,"author":{"gitId":"-"},"content":"      this.getFiltered();"},{"lineNumber":756,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":757,"author":{"gitId":"-"},"content":""},{"lineNumber":758,"author":{"gitId":"-"},"content":"    updateTmpFilterSinceDate(event) {"},{"lineNumber":759,"author":{"gitId":"-"},"content":"      const since \u003d event.target.value;"},{"lineNumber":760,"author":{"gitId":"-"},"content":"      this.hasModifiedSinceDate \u003d true;"},{"lineNumber":761,"author":{"gitId":"-"},"content":""},{"lineNumber":762,"author":{"gitId":"-"},"content":"      if (!this.isSafariBrowser) {"},{"lineNumber":763,"author":{"gitId":"-"},"content":"        this.tmpFilterSinceDate \u003d since;"},{"lineNumber":764,"author":{"gitId":"-"},"content":"        event.target.value \u003d this.filterSinceDate;"},{"lineNumber":765,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":766,"author":{"gitId":"-"},"content":"      } else if (dateFormatRegex.test(since) \u0026\u0026 since \u003e\u003d this.minDate) {"},{"lineNumber":767,"author":{"gitId":"-"},"content":"        this.tmpFilterSinceDate \u003d since;"},{"lineNumber":768,"author":{"gitId":"-"},"content":"        event.currentTarget.style.removeProperty(\u0027border-bottom-color\u0027);"},{"lineNumber":769,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":770,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":771,"author":{"gitId":"-"},"content":"        // invalid since date detected"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        event.currentTarget.style.borderBottomColor \u003d \u0027red\u0027;"},{"lineNumber":773,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":774,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":775,"author":{"gitId":"-"},"content":""},{"lineNumber":776,"author":{"gitId":"-"},"content":"    updateTmpFilterUntilDate(event) {"},{"lineNumber":777,"author":{"gitId":"-"},"content":"      const until \u003d event.target.value;"},{"lineNumber":778,"author":{"gitId":"-"},"content":"      this.hasModifiedUntilDate \u003d true;"},{"lineNumber":779,"author":{"gitId":"-"},"content":""},{"lineNumber":780,"author":{"gitId":"-"},"content":"      if (!this.isSafariBrowser) {"},{"lineNumber":781,"author":{"gitId":"-"},"content":"        this.tmpFilterUntilDate \u003d until;"},{"lineNumber":782,"author":{"gitId":"-"},"content":"        event.target.value \u003d this.filterUntilDate;"},{"lineNumber":783,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":784,"author":{"gitId":"-"},"content":"      } else if (dateFormatRegex.test(until) \u0026\u0026 until \u003c\u003d this.maxDate) {"},{"lineNumber":785,"author":{"gitId":"-"},"content":"        this.tmpFilterUntilDate \u003d until;"},{"lineNumber":786,"author":{"gitId":"-"},"content":"        event.currentTarget.style.removeProperty(\u0027border-bottom-color\u0027);"},{"lineNumber":787,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":788,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        // invalid until date detected"},{"lineNumber":790,"author":{"gitId":"-"},"content":"        event.currentTarget.style.borderBottomColor \u003d \u0027red\u0027;"},{"lineNumber":791,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":792,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":793,"author":{"gitId":"-"},"content":""},{"lineNumber":794,"author":{"gitId":"-"},"content":"    updateCheckedFileTypeContribution(ele) {"},{"lineNumber":795,"author":{"gitId":"-"},"content":"      let validCommits \u003d 0;"},{"lineNumber":796,"author":{"gitId":"-"},"content":"      Object.keys(ele.fileTypeContribution).forEach((fileType) \u003d\u003e {"},{"lineNumber":797,"author":{"gitId":"-"},"content":"        if (!this.filterBreakdown) {"},{"lineNumber":798,"author":{"gitId":"-"},"content":"          validCommits +\u003d ele.fileTypeContribution[fileType];"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        } else if (this.checkedFileTypes.includes(fileType)) {"},{"lineNumber":800,"author":{"gitId":"-"},"content":"          validCommits +\u003d ele.fileTypeContribution[fileType];"},{"lineNumber":801,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":802,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":803,"author":{"gitId":"-"},"content":"      ele.checkedFileTypeContribution \u003d validCommits;"},{"lineNumber":804,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":805,"author":{"gitId":"-"},"content":""},{"lineNumber":806,"author":{"gitId":"-"},"content":"    restoreZoomFiltered(info) {"},{"lineNumber":807,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":808,"author":{"gitId":"-"},"content":"        zSince, zUntil, zTimeFrame, zIsMerged, zFilterSearch,"},{"lineNumber":809,"author":{"gitId":"-"},"content":"      } \u003d info;"},{"lineNumber":810,"author":{"gitId":"-"},"content":"      const filtered \u003d [];"},{"lineNumber":811,"author":{"gitId":"-"},"content":""},{"lineNumber":812,"author":{"gitId":"-"},"content":"      const groups \u003d JSON.parse(JSON.stringify(this.repos));"},{"lineNumber":813,"author":{"gitId":"-"},"content":""},{"lineNumber":814,"author":{"gitId":"-"},"content":"      const res \u003d [];"},{"lineNumber":815,"author":{"gitId":"-"},"content":"      groups.forEach((repo) \u003d\u003e {"},{"lineNumber":816,"author":{"gitId":"-"},"content":"        repo.users.forEach((user) \u003d\u003e {"},{"lineNumber":817,"author":{"gitId":"-"},"content":"          // only filter users that match with zoom user and previous searched user"},{"lineNumber":818,"author":{"gitId":"-"},"content":"          if (this.matchZoomUser(info, user) \u0026\u0026 this.isMatchSearchedUser(zFilterSearch, user)) {"},{"lineNumber":819,"author":{"gitId":"-"},"content":"            this.getUserCommits(user, zSince, zUntil);"},{"lineNumber":820,"author":{"gitId":"-"},"content":"            if (zTimeFrame \u003d\u003d\u003d \u0027week\u0027) {"},{"lineNumber":821,"author":{"gitId":"-"},"content":"              this.splitCommitsWeek(user, zSince, zUntil);"},{"lineNumber":822,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":823,"author":{"gitId":"-"},"content":"            this.updateCheckedFileTypeContribution(user);"},{"lineNumber":824,"author":{"gitId":"-"},"content":"            res.push(user);"},{"lineNumber":825,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":826,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":827,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":828,"author":{"gitId":"-"},"content":""},{"lineNumber":829,"author":{"gitId":"-"},"content":"      if (res.length) {"},{"lineNumber":830,"author":{"gitId":"-"},"content":"        filtered.push(res);"},{"lineNumber":831,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":832,"author":{"gitId":"-"},"content":""},{"lineNumber":833,"author":{"gitId":"-"},"content":"      if (zIsMerged) {"},{"lineNumber":834,"author":{"gitId":"-"},"content":"        this.mergeGroupByIndex(filtered, 0);"},{"lineNumber":835,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":836,"author":{"gitId":"-"},"content":"      [[info.zUser]] \u003d filtered;"},{"lineNumber":837,"author":{"gitId":"-"},"content":"      info.zFileTypeColors \u003d this.fileTypeColors;"},{"lineNumber":838,"author":{"gitId":"-"},"content":"      info.isRefreshing \u003d false;"},{"lineNumber":839,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabZoomInfo\u0027, info);"},{"lineNumber":840,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":841,"author":{"gitId":"-"},"content":"    matchZoomUser(info, user) {"},{"lineNumber":842,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":843,"author":{"gitId":"-"},"content":"        zIsMerged, zFilterGroup, zRepo, zAuthor,"},{"lineNumber":844,"author":{"gitId":"-"},"content":"      } \u003d info;"},{"lineNumber":845,"author":{"gitId":"-"},"content":"      if (zIsMerged) {"},{"lineNumber":846,"author":{"gitId":"-"},"content":"        return zFilterGroup \u003d\u003d\u003d \u0027groupByRepos\u0027"},{"lineNumber":847,"author":{"gitId":"-"},"content":"          ? user.repoName \u003d\u003d\u003d zRepo"},{"lineNumber":848,"author":{"gitId":"-"},"content":"          : user.name \u003d\u003d\u003d zAuthor;"},{"lineNumber":849,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":850,"author":{"gitId":"-"},"content":"      return user.repoName \u003d\u003d\u003d zRepo \u0026\u0026 user.name \u003d\u003d\u003d zAuthor;"},{"lineNumber":851,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":852,"author":{"gitId":"-"},"content":""},{"lineNumber":853,"author":{"gitId":"-"},"content":"    dateRounding(datestr, roundDown) {"},{"lineNumber":854,"author":{"gitId":"-"},"content":"      // rounding up to nearest monday"},{"lineNumber":855,"author":{"gitId":"-"},"content":"      const date \u003d new Date(datestr);"},{"lineNumber":856,"author":{"gitId":"-"},"content":"      const day \u003d date.getUTCDay();"},{"lineNumber":857,"author":{"gitId":"-"},"content":"      let datems \u003d date.getTime();"},{"lineNumber":858,"author":{"gitId":"-"},"content":"      if (roundDown) {"},{"lineNumber":859,"author":{"gitId":"-"},"content":"        datems -\u003d ((day + 6) % 7) * window.DAY_IN_MS;"},{"lineNumber":860,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":861,"author":{"gitId":"-"},"content":"        datems +\u003d ((8 - day) % 7) * window.DAY_IN_MS;"},{"lineNumber":862,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":863,"author":{"gitId":"-"},"content":""},{"lineNumber":864,"author":{"gitId":"-"},"content":"      return window.getDateStr(datems);"},{"lineNumber":865,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":866,"author":{"gitId":"-"},"content":""},{"lineNumber":867,"author":{"gitId":"-"},"content":"    getFontColor,"},{"lineNumber":868,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":869,"author":{"gitId":"-"},"content":"};"},{"lineNumber":870,"author":{"gitId":"-"},"content":"\u003c/script\u003e"},{"lineNumber":871,"author":{"gitId":"-"},"content":""},{"lineNumber":872,"author":{"gitId":"-"},"content":"\u003c!-- Add \"scoped\" attribute to limit CSS to this component only --\u003e"},{"lineNumber":873,"author":{"gitId":"-"},"content":"\u003cstyle lang\u003d\"scss\"\u003e"},{"lineNumber":874,"author":{"gitId":"-"},"content":"@import \u0027../styles/_colors.scss\u0027;"},{"lineNumber":875,"author":{"gitId":"-"},"content":""},{"lineNumber":876,"author":{"gitId":"-"},"content":"/* Summary */"},{"lineNumber":877,"author":{"gitId":"-"},"content":"#summary {"},{"lineNumber":878,"author":{"gitId":"-"},"content":"  .summary-status {"},{"lineNumber":879,"author":{"gitId":"-"},"content":"    text-align: center;"},{"lineNumber":880,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":881,"author":{"gitId":"-"},"content":""},{"lineNumber":882,"author":{"gitId":"-"},"content":"  @mixin icon-button-config {"},{"lineNumber":883,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027grey\u0027);"},{"lineNumber":884,"author":{"gitId":"-"},"content":"    padding: 0 1.2px 0 1.2px;"},{"lineNumber":885,"author":{"gitId":"-"},"content":"    text-decoration: none;"},{"lineNumber":886,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":887,"author":{"gitId":"-"},"content":""},{"lineNumber":888,"author":{"gitId":"-"},"content":"  .icon-button {"},{"lineNumber":889,"author":{"gitId":"-"},"content":"    @include icon-button-config;"},{"lineNumber":890,"author":{"gitId":"-"},"content":"    cursor: pointer;"},{"lineNumber":891,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":892,"author":{"gitId":"-"},"content":""},{"lineNumber":893,"author":{"gitId":"-"},"content":"  .broken-link {"},{"lineNumber":894,"author":{"gitId":"-"},"content":"    .icon-button {"},{"lineNumber":895,"author":{"gitId":"-"},"content":"      cursor: default;"},{"lineNumber":896,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":897,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":898,"author":{"gitId":"-"},"content":""},{"lineNumber":899,"author":{"gitId":"-"},"content":"  .summary-picker {"},{"lineNumber":900,"author":{"gitId":"-"},"content":"    align-items: center;"},{"lineNumber":901,"author":{"gitId":"-"},"content":"    display: flex;"},{"lineNumber":902,"author":{"gitId":"-"},"content":"    flex-flow: row wrap;"},{"lineNumber":903,"author":{"gitId":"-"},"content":"    justify-content: center;"},{"lineNumber":904,"author":{"gitId":"-"},"content":"    margin-bottom: 2rem;"},{"lineNumber":905,"author":{"gitId":"-"},"content":""},{"lineNumber":906,"author":{"gitId":"-"},"content":"    \u0026__section {"},{"lineNumber":907,"author":{"gitId":"-"},"content":"      align-items: inherit;"},{"lineNumber":908,"author":{"gitId":"-"},"content":"      display: flex;"},{"lineNumber":909,"author":{"gitId":"-"},"content":"      flex: 0 1 auto;"},{"lineNumber":910,"author":{"gitId":"-"},"content":"      flex-flow: inherit;"},{"lineNumber":911,"author":{"gitId":"-"},"content":"      justify-content: inherit;"},{"lineNumber":912,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":913,"author":{"gitId":"-"},"content":""},{"lineNumber":914,"author":{"gitId":"-"},"content":"    \u0026__checkboxes {"},{"lineNumber":915,"author":{"gitId":"-"},"content":"      label {"},{"lineNumber":916,"author":{"gitId":"-"},"content":"        margin-left: .5rem;"},{"lineNumber":917,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":918,"author":{"gitId":"-"},"content":""},{"lineNumber":919,"author":{"gitId":"-"},"content":"      span {"},{"lineNumber":920,"author":{"gitId":"-"},"content":"        margin-left: .25rem;"},{"lineNumber":921,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":922,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":923,"author":{"gitId":"-"},"content":""},{"lineNumber":924,"author":{"gitId":"-"},"content":"    .mui-textfield,"},{"lineNumber":925,"author":{"gitId":"-"},"content":"    .mui-select {"},{"lineNumber":926,"author":{"gitId":"-"},"content":"      margin: .5rem;"},{"lineNumber":927,"author":{"gitId":"-"},"content":"      padding-right: 10px;"},{"lineNumber":928,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":929,"author":{"gitId":"-"},"content":""},{"lineNumber":930,"author":{"gitId":"-"},"content":"    .mui-btn {"},{"lineNumber":931,"author":{"gitId":"-"},"content":"      background: transparent;"},{"lineNumber":932,"author":{"gitId":"-"},"content":"      box-shadow: none;"},{"lineNumber":933,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027grey\u0027);"},{"lineNumber":934,"author":{"gitId":"-"},"content":"      font-size: .75rem;"},{"lineNumber":935,"author":{"gitId":"-"},"content":"      font-weight: bold;"},{"lineNumber":936,"author":{"gitId":"-"},"content":"      left: -8px;"},{"lineNumber":937,"author":{"gitId":"-"},"content":"      margin: 0;"},{"lineNumber":938,"author":{"gitId":"-"},"content":"      padding: 0;"},{"lineNumber":939,"author":{"gitId":"-"},"content":"      vertical-align: middle;"},{"lineNumber":940,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":941,"author":{"gitId":"-"},"content":""},{"lineNumber":942,"author":{"gitId":"-"},"content":"    .search_box {"},{"lineNumber":943,"author":{"gitId":"-"},"content":"      align-items: center;"},{"lineNumber":944,"author":{"gitId":"-"},"content":"      display: flex;"},{"lineNumber":945,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":946,"author":{"gitId":"-"},"content":""},{"lineNumber":947,"author":{"gitId":"-"},"content":"    input {"},{"lineNumber":948,"author":{"gitId":"-"},"content":"      font-size: .75rem;"},{"lineNumber":949,"author":{"gitId":"-"},"content":"      padding-right: 10px;"},{"lineNumber":950,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":951,"author":{"gitId":"-"},"content":""},{"lineNumber":952,"author":{"gitId":"-"},"content":"    label {"},{"lineNumber":953,"author":{"gitId":"-"},"content":"      font-size: .75rem;"},{"lineNumber":954,"author":{"gitId":"-"},"content":"      overflow-y: hidden;"},{"lineNumber":955,"author":{"gitId":"-"},"content":"      text-align: left;"},{"lineNumber":956,"author":{"gitId":"-"},"content":"      width: fit-content;"},{"lineNumber":957,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":958,"author":{"gitId":"-"},"content":""},{"lineNumber":959,"author":{"gitId":"-"},"content":"    input,"},{"lineNumber":960,"author":{"gitId":"-"},"content":"    select {"},{"lineNumber":961,"author":{"gitId":"-"},"content":"      font-size: .75rem;"},{"lineNumber":962,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":963,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":964,"author":{"gitId":"-"},"content":""},{"lineNumber":965,"author":{"gitId":"-"},"content":"  .summary-charts {"},{"lineNumber":966,"author":{"gitId":"-"},"content":"    margin-bottom: 1.4rem;"},{"lineNumber":967,"author":{"gitId":"-"},"content":""},{"lineNumber":968,"author":{"gitId":"-"},"content":"    \u0026__title {"},{"lineNumber":969,"author":{"gitId":"-"},"content":"      align-items: center;"},{"lineNumber":970,"author":{"gitId":"-"},"content":"      display: flex;"},{"lineNumber":971,"author":{"gitId":"-"},"content":"      font-weight: bold;"},{"lineNumber":972,"author":{"gitId":"-"},"content":"      text-align: left;"},{"lineNumber":973,"author":{"gitId":"-"},"content":""},{"lineNumber":974,"author":{"gitId":"-"},"content":"      \u0026 \u003e * {"},{"lineNumber":975,"author":{"gitId":"-"},"content":"        padding-right: .5rem;"},{"lineNumber":976,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":977,"author":{"gitId":"-"},"content":""},{"lineNumber":978,"author":{"gitId":"-"},"content":"      \u0026--index {"},{"lineNumber":979,"author":{"gitId":"-"},"content":"        background: mui-color(\u0027black\u0027);"},{"lineNumber":980,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027white\u0027);"},{"lineNumber":981,"author":{"gitId":"-"},"content":"        font-size: medium;"},{"lineNumber":982,"author":{"gitId":"-"},"content":"        overflow: hidden;"},{"lineNumber":983,"author":{"gitId":"-"},"content":"        padding: .1em .25em;"},{"lineNumber":984,"author":{"gitId":"-"},"content":"        vertical-align: middle;"},{"lineNumber":985,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":986,"author":{"gitId":"-"},"content":""},{"lineNumber":987,"author":{"gitId":"-"},"content":"      \u0026--groupname {"},{"lineNumber":988,"author":{"gitId":"-"},"content":"        font-size: medium;"},{"lineNumber":989,"author":{"gitId":"-"},"content":"        padding: .5rem;"},{"lineNumber":990,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":991,"author":{"gitId":"-"},"content":""},{"lineNumber":992,"author":{"gitId":"-"},"content":"      \u0026--percentile {"},{"lineNumber":993,"author":{"gitId":"-"},"content":"        @include mini-font;"},{"lineNumber":994,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":995,"author":{"gitId":"-"},"content":"        margin-left: auto;"},{"lineNumber":996,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":997,"author":{"gitId":"-"},"content":""},{"lineNumber":998,"author":{"gitId":"-"},"content":"      \u0026--contribution {"},{"lineNumber":999,"author":{"gitId":"-"},"content":"        @include mini-font;"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"        display: inline;"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1003,"author":{"gitId":"-"},"content":""},{"lineNumber":1004,"author":{"gitId":"-"},"content":"    \u0026__fileType--breakdown {"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"      overflow-y: hidden;"},{"lineNumber":1006,"author":{"gitId":"-"},"content":""},{"lineNumber":1007,"author":{"gitId":"-"},"content":"      \u0026__legend {"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"        display: inline;"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"        float: left;"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1013,"author":{"gitId":"-"},"content":""},{"lineNumber":1014,"author":{"gitId":"-"},"content":"  .summary-chart {"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"    display: inline-block;"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"    margin-bottom: 1rem;"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"    position: relative;"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"    text-align: left;"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"    width: 100%;"},{"lineNumber":1020,"author":{"gitId":"-"},"content":""},{"lineNumber":1021,"author":{"gitId":"-"},"content":"    \u0026__title {"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"      align-items: center;"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"      clear: left;"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"      display: flex;"},{"lineNumber":1025,"author":{"gitId":"-"},"content":""},{"lineNumber":1026,"author":{"gitId":"-"},"content":"      \u0026 \u003e * {"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"        padding-right: .5rem;"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1029,"author":{"gitId":"-"},"content":""},{"lineNumber":1030,"author":{"gitId":"-"},"content":"      \u0026--index {"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"        margin-left: 3px;"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1033,"author":{"gitId":"-"},"content":""},{"lineNumber":1034,"author":{"gitId":"-"},"content":"      \u0026--repo {"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"        font-weight: bold;"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1037,"author":{"gitId":"-"},"content":""},{"lineNumber":1038,"author":{"gitId":"-"},"content":"      \u0026--index::after {"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"        content: \u0027.\u0027;"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1041,"author":{"gitId":"-"},"content":""},{"lineNumber":1042,"author":{"gitId":"-"},"content":"      \u0026--repo {"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"        padding-right: .25rem;"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1045,"author":{"gitId":"-"},"content":""},{"lineNumber":1046,"author":{"gitId":"-"},"content":"      \u0026--contribution {"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"        @include mini-font;"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1049,"author":{"gitId":"-"},"content":""},{"lineNumber":1050,"author":{"gitId":"-"},"content":"      \u0026--percentile {"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"        @include mini-font;"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"        margin-left: auto;"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"        padding-right: 0;"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1057,"author":{"gitId":"-"},"content":""},{"lineNumber":1058,"author":{"gitId":"-"},"content":"    \u0026__ramp {"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"      position: relative;"},{"lineNumber":1060,"author":{"gitId":"-"},"content":""},{"lineNumber":1061,"author":{"gitId":"-"},"content":"      .overlay {"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"        height: 100%;"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"        position: absolute;"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"        top: 0;"},{"lineNumber":1065,"author":{"gitId":"-"},"content":""},{"lineNumber":1066,"author":{"gitId":"-"},"content":"        \u0026.show {"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"          background-color: rgba(mui-color(\u0027white\u0027), .5);"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"          border: 1px dashed mui-color(\u0027black\u0027);"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1070,"author":{"gitId":"-"},"content":""},{"lineNumber":1071,"author":{"gitId":"-"},"content":"        \u0026.edge {"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"          border-right: 1px dashed mui-color(\u0027black\u0027);"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1076,"author":{"gitId":"-"},"content":""},{"lineNumber":1077,"author":{"gitId":"-"},"content":"    \u0026__contrib {"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"      text-align: left;"},{"lineNumber":1079,"author":{"gitId":"-"},"content":""},{"lineNumber":1080,"author":{"gitId":"-"},"content":"      \u0026--bar {"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"        background-color: mui-color(\u0027red\u0027);"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"        float: left;"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"        height: 4px;"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"        margin-top: 2px;"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1088,"author":{"gitId":"-"},"content":""},{"lineNumber":1089,"author":{"gitId":"-"},"content":"  .active-icon {"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027green\u0027);"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"    border-radius: 2px;"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027white\u0027);"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1094,"author":{"gitId":"-"},"content":""},{"lineNumber":1095,"author":{"gitId":"-"},"content":"  .active-background {"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027yellow\u0027, \u0027200\u0027);"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"}"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"vvidday":53,"ckcherry23":12,"-":1034}},{"path":"frontend/src/views/c-zoom.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"#zoom"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  .panel-title"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    span Commits Panel"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  .toolbar--multiline(v-if\u003d\"filteredUser.commits.length \u0026\u0026 totalCommitMessageBodyCount\")"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    a("},{"lineNumber":7,"author":{"gitId":"-"},"content":"      v-if\u003d\"expandedCommitMessagesCount \u003c totalCommitMessageBodyCount\","},{"lineNumber":8,"author":{"gitId":"-"},"content":"      v-on:click\u003d\"toggleAllCommitMessagesBody(true)\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    ) show all commit messages"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    a("},{"lineNumber":11,"author":{"gitId":"-"},"content":"      v-if\u003d\"expandedCommitMessagesCount \u003e 0\","},{"lineNumber":12,"author":{"gitId":"-"},"content":"      v-on:click\u003d\"toggleAllCommitMessagesBody(false)\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    ) hide all commit messages"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  .panel-heading"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    .group-name"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      span("},{"lineNumber":17,"author":{"gitId":"-"},"content":"        v-if\u003d\"info.zFilterGroup \u003d\u003d\u003d \u0027groupByAuthors\u0027\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"      ) {{ filteredUser.displayName }} ({{ filteredUser.name }})"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      a("},{"lineNumber":20,"author":{"gitId":"-"},"content":"        v-else,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        v-bind:href\u003d\"info.zLocation\", target\u003d\"_blank\","},{"lineNumber":22,"author":{"gitId":"-"},"content":"        v-bind:title\u003d\"\u0027Click to open the repo\u0027\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        span {{ filteredUser.repoName }}"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    .author(v-if\u003d\"!info.zIsMerge\")"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      span \u0026#8627; \u0026nbsp;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      span(v-if\u003d\"info.zFilterGroup \u003d\u003d\u003d \u0027groupByAuthors\u0027\") {{ filteredUser.repoName }}"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      span(v-else) {{ filteredUser.displayName }} ({{ filteredUser.name }})"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    .period"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      span \u0026#8627; \u0026nbsp;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      span {{ info.zSince }} to {{ info.zUntil }} \u0026nbsp;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  .zoom__title"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    .zoom__title--granularity granularity: one ramp per {{ info.zTimeFrame }}"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    .zoom__title--tags"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      template(v-for\u003d\"commit in filteredUser.commits\")"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        template(v-for\u003d\"commitResult in commit.commitResults\")"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          template(v-if\u003d\"commitResult.tags\")"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .tag("},{"lineNumber":39,"author":{"gitId":"-"},"content":"              v-for\u003d\"tag in commitResult.tags\","},{"lineNumber":40,"author":{"gitId":"-"},"content":"              vbind:key\u003d\"tag\","},{"lineNumber":41,"author":{"gitId":"-"},"content":"              v-on:click\u003d\"scrollToCommit(tag, `tag ${commitResult.hash}`)\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":43,"author":{"gitId":"-"},"content":"              font-awesome-icon(icon\u003d\"tags\")"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              span \u0026nbsp;{{ tag }}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  c-ramp("},{"lineNumber":47,"author":{"gitId":"-"},"content":"    v-bind:groupby\u003d\"info.zFilterGroup\","},{"lineNumber":48,"author":{"gitId":"-"},"content":"    v-bind:user\u003d\"filteredUser\","},{"lineNumber":49,"author":{"gitId":"-"},"content":"    v-bind:tframe\u003d\"info.zTimeFrame\","},{"lineNumber":50,"author":{"gitId":"-"},"content":"    v-bind:sdate\u003d\"info.zSince\","},{"lineNumber":51,"author":{"gitId":"-"},"content":"    v-bind:udate\u003d\"info.zUntil\","},{"lineNumber":52,"author":{"gitId":"-"},"content":"    v-bind:avgsize\u003d\"info.zAvgCommitSize\","},{"lineNumber":53,"author":{"gitId":"-"},"content":"    v-bind:mergegroup\u003d\"info.zIsMerge\","},{"lineNumber":54,"author":{"gitId":"-"},"content":"    v-bind:fromramp\u003d\"info.zFromRamp\","},{"lineNumber":55,"author":{"gitId":"-"},"content":"    v-bind:filtersearch\u003d\"info.zFilterSearch\")"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  .sorting.mui-form--inline"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    .mui-select.sort-by"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      select(v-model\u003d\"commitsSortType\")"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        option(value\u003d\"time\") Time"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        option(value\u003d\"lineOfCode\") LoC"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      label sort by"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    .mui-select.sort-order"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      select(v-model\u003d\"toReverseSortedCommits\")"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        option(v-bind:value\u003d\u0027true\u0027) Descending"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        option(v-bind:value\u003d\u0027false\u0027) Ascending"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      label order"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  .fileTypes"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    .checkboxes.mui-form--inline(v-if\u003d\"fileTypes.length \u003e 0\")"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      label(style\u003d\u0027background-color: #000000; color: #ffffff\u0027)"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        input.mui-checkbox--fileType(type\u003d\"checkbox\", v-model\u003d\"isSelectAllChecked\", value\u003d\"all\")"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        span All\u0026nbsp;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      label("},{"lineNumber":75,"author":{"gitId":"-"},"content":"        v-for\u003d\"fileType in fileTypes\","},{"lineNumber":76,"author":{"gitId":"-"},"content":"        v-bind:key\u003d\"fileType\","},{"lineNumber":77,"author":{"gitId":"-"},"content":"        v-bind:style\u003d\"{\\"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0027background-color\u0027: fileTypeColors[fileType],\\"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0027color\u0027: getFontColor(fileTypeColors[fileType])\\"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                }\""},{"lineNumber":81,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        input.mui-checkbox--fileType(type\u003d\"checkbox\", v-bind:value\u003d\"fileType\","},{"lineNumber":83,"author":{"gitId":"-"},"content":"          v-on:change\u003d\"updateSelectedFileTypesHash\", v-model\u003d\"selectedFileTypes\")"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        span {{ fileType }} \u0026nbsp;"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  .zoom__day(v-for\u003d\"day in selectedCommits\", v-bind:key\u003d\"day.date\")"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    h3(v-if\u003d\"info.zTimeFrame \u003d\u003d\u003d \u0027week\u0027\") Week of {{ day.date }}"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    h3(v-else) {{ day.date }}"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    //- use tabindex to enable focus property on div"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    .commit-message("},{"lineNumber":91,"author":{"gitId":"-"},"content":"      tabindex\u003d\"-1\","},{"lineNumber":92,"author":{"gitId":"-"},"content":"      v-for\u003d\"slice in day.commitResults\","},{"lineNumber":93,"author":{"gitId":"-"},"content":"      v-bind:key\u003d\"slice.hash\","},{"lineNumber":94,"author":{"gitId":"-"},"content":"      v-bind:class\u003d\"{ \u0027message-body active\u0027: slice.messageBody !\u003d\u003d \u0027\u0027 }\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      a.message-title(v-bind:href\u003d\"getSliceLink(slice)\","},{"lineNumber":97,"author":{"gitId":"-"},"content":"        v-bind:class\u003d\"!isBrokenLink(getSliceLink(slice)) ? \u0027\u0027 : \u0027broken-link\u0027\", target\u003d\"_blank\")"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        .within-border {{ slice.messageTitle.substr(0, 50) }}"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        .not-within-border(v-if\u003d\"slice.messageTitle.length \u003e 50\")"},{"lineNumber":100,"author":{"gitId":"-"},"content":"          |{{ slice.messageTitle.substr(50) }}"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"      span \u0026nbsp; (+{{ slice.insertions }} -{{ slice.deletions }} lines) \u0026nbsp;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      .hash"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        span {{ slice.hash.substr(0, 7) }}"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      span.fileTypeLabel("},{"lineNumber":105,"author":{"gitId":"-"},"content":"        v-if\u003d\"containsAtLeastOneSelected(Object.keys(slice.fileTypesAndContributionMap))\","},{"lineNumber":106,"author":{"gitId":"-"},"content":"        v-for\u003d\"fileType in\\"},{"lineNumber":107,"author":{"gitId":"-"},"content":"          Object.keys(slice.fileTypesAndContributionMap)\","},{"lineNumber":108,"author":{"gitId":"-"},"content":"        vbind:key\u003d\"fileType\","},{"lineNumber":109,"author":{"gitId":"-"},"content":"        v-bind:style\u003d\"{\\"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          \u0027background-color\u0027: fileTypeColors[fileType],\\"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          \u0027color\u0027: getFontColor(fileTypeColors[fileType])\\"},{"lineNumber":112,"author":{"gitId":"-"},"content":"          }\""},{"lineNumber":113,"author":{"gitId":"-"},"content":"      ) {{ fileType }}"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      template(v-if\u003d\"slice.tags\")"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        .tag("},{"lineNumber":116,"author":{"gitId":"-"},"content":"          v-for\u003d\"tag in slice.tags\","},{"lineNumber":117,"author":{"gitId":"-"},"content":"          vbind:key\u003d\"tag\","},{"lineNumber":118,"author":{"gitId":"-"},"content":"          tabindex\u003d\"-1\", v-bind:class\u003d\"[`${slice.hash}`, tag]\""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":120,"author":{"gitId":"-"},"content":"          font-awesome-icon(icon\u003d\"tags\")"},{"lineNumber":121,"author":{"gitId":"-"},"content":"          span \u0026nbsp;{{ tag }}"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      a("},{"lineNumber":123,"author":{"gitId":"-"},"content":"        v-if\u003d\"slice.messageBody !\u003d\u003d \u0027\u0027\","},{"lineNumber":124,"author":{"gitId":"vvidday"},"content":"        v-on:click\u003d\"toggleSelectedCommitMessageBody(slice)\""},{"lineNumber":125,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        .tooltip"},{"lineNumber":127,"author":{"gitId":"-"},"content":"          font-awesome-icon.commit-message--button(icon\u003d\"ellipsis-h\")"},{"lineNumber":128,"author":{"gitId":"-"},"content":"          span.tooltip-text Click to show/hide the commit message body"},{"lineNumber":129,"author":{"gitId":"vvidday"},"content":"      .body(v-if\u003d\"slice.messageBody !\u003d\u003d \u0027\u0027\", v-show\u003d\"slice.isOpen\")"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        pre {{ slice.messageBody }}"},{"lineNumber":131,"author":{"gitId":"-"},"content":"          .dashed-border"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cscript\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"import { FontAwesomeIcon } from \u0027@fortawesome/vue-fontawesome\u0027;"},{"lineNumber":137,"author":{"gitId":"vvidday"},"content":"import brokenLinkDisabler from \u0027../mixin/brokenLinkMixin\u0027;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"import cRamp from \u0027../components/c-ramp.vue\u0027;"},{"lineNumber":139,"author":{"gitId":"vvidday"},"content":"import User from \u0027../utils/user\u0027;"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"const getFontColor \u003d window.getFontColor;"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"function zoomInitialState() {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  return {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    showAllCommitMessageBody: true,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    commitsSortType: \u0027time\u0027,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    toReverseSortedCommits: true,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    isCommitsFinalized: false,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    selectedFileTypes: [],"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    fileTypes: [],"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"export default {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  name: \u0027c-zoom\u0027,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    FontAwesomeIcon,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    cRamp,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":160,"author":{"gitId":"vvidday"},"content":"  mixins: [brokenLinkDisabler],"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      ...zoomInitialState(),"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    sortingFunction() {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      const commitSortFunction \u003d this.commitsSortType \u003d\u003d\u003d \u0027time\u0027"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ? (commit) \u003d\u003e commit.date"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        : (commit) \u003d\u003e commit.insertions;"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"      return (a, b) \u003d\u003e (this.toReverseSortedCommits ? -1 : 1)"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        * window.comparator(commitSortFunction)(a, b);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    filteredUser() {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        zUser, zSince, zUntil, zTimeFrame,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      } \u003d this.info;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      const filteredUser \u003d Object.assign({}, zUser);"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"      const date \u003d zTimeFrame \u003d\u003d\u003d \u0027week\u0027 ? \u0027endDate\u0027 : \u0027date\u0027;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      filteredUser.commits \u003d zUser.commits.filter("},{"lineNumber":184,"author":{"gitId":"-"},"content":"        (commit) \u003d\u003e commit[date] \u003e\u003d zSince \u0026\u0026 commit[date] \u003c\u003d zUntil,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      ).sort(this.sortingFunction);"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"ckcherry23"},"content":"      return new User(filteredUser);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    selectedCommits() {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      const commits \u003d [];"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      this.filteredUser.commits.forEach((commit) \u003d\u003e {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        const filteredCommit \u003d { ...commit };"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        filteredCommit.commitResults \u003d [];"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        commit.commitResults.forEach((slice) \u003d\u003e {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"          if (Object.keys(slice.fileTypesAndContributionMap).some("},{"lineNumber":196,"author":{"gitId":"-"},"content":"            (fileType) \u003d\u003e this.selectedFileTypes.indexOf(fileType) !\u003d\u003d -1,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"          )) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            filteredCommit.commitResults.push(slice);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (filteredCommit.commitResults.length \u003e 0) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"          commits.push(filteredCommit);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      return commits;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    totalCommitMessageBodyCount() {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      let nonEmptyCommitMessageCount \u003d 0;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      this.selectedCommits.forEach((commit) \u003d\u003e {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        commit.commitResults.forEach((commitResult) \u003d\u003e {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"          if (commitResult.messageBody !\u003d\u003d \u0027\u0027) {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            nonEmptyCommitMessageCount +\u003d 1;"},{"lineNumber":213,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"      return nonEmptyCommitMessageCount;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":219,"author":{"gitId":"vvidday"},"content":"    expandedCommitMessagesCount() {"},{"lineNumber":220,"author":{"gitId":"vvidday"},"content":"      return this.selectedCommits.reduce((prev, commit) \u003d\u003e ("},{"lineNumber":221,"author":{"gitId":"vvidday"},"content":"        prev + commit.commitResults.filter((slice) \u003d\u003e slice.isOpen).length"},{"lineNumber":222,"author":{"gitId":"vvidday"},"content":"      ), 0);"},{"lineNumber":223,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    isSelectAllChecked: {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      get() {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return this.selectedFileTypes.length \u003d\u003d\u003d this.fileTypes.length;"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      set(value) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        if (value) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          this.selectedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"          this.selectedFileTypes \u003d [];"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        this.updateSelectedFileTypesHash();"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"    ...mapState({"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      fileTypeColors: \u0027fileTypeColors\u0027,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      info: \u0027tabZoomInfo\u0027,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }),"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"  watch: {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    info() {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      const newData \u003d {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        ...zoomInitialState(),"},{"lineNumber":248,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      Object.assign(this.$data, newData);"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      this.initiate();"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      this.setInfoHash();"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    commitsSortType() {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      window.addHash(\u0027zCST\u0027, this.commitsSortType);"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    toReverseSortedCommits() {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      window.addHash(\u0027zRSC\u0027, this.toReverseSortedCommits);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":262,"author":{"gitId":"vvidday"},"content":"  created() {"},{"lineNumber":263,"author":{"gitId":"vvidday"},"content":"    this.initiate();"},{"lineNumber":264,"author":{"gitId":"vvidday"},"content":"    this.retrieveHashes();"},{"lineNumber":265,"author":{"gitId":"vvidday"},"content":"    this.setInfoHash();"},{"lineNumber":266,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":267,"author":{"gitId":"vvidday"},"content":"  beforeUnmount() {"},{"lineNumber":268,"author":{"gitId":"vvidday"},"content":"    this.removeZoomHashes();"},{"lineNumber":269,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    initiate() {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      // This code crashes if info.zUser is not defined"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      this.updateFileTypes();"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      this.selectedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"    getSliceLink(slice) {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      if (this.info.zIsMerged) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        return window.getCommitLink(slice.repoId, slice.hash);"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      return window.getCommitLink(this.info.zUser.repoId, slice.hash);"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"    scrollToCommit(tag, commit) {"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      const el \u003d this.$el.getElementsByClassName(`${commit} ${tag}`)[0];"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      if (el) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        el.focus();"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"    updateFileTypes() {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      const commitsFileTypes \u003d new Set();"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      this.filteredUser.commits.forEach((commit) \u003d\u003e {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        commit.commitResults.forEach((slice) \u003d\u003e {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"          Object.keys(slice.fileTypesAndContributionMap).forEach((fileType) \u003d\u003e {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            commitsFileTypes.add(fileType);"},{"lineNumber":298,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      this.fileTypes \u003d Object.keys(this.filteredUser.fileTypeContribution).filter("},{"lineNumber":302,"author":{"gitId":"-"},"content":"        (fileType) \u003d\u003e commitsFileTypes.has(fileType),"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"    retrieveHashes() {"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      this.retrieveSortHash();"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      this.retrieveSelectedFileTypesHash();"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"    retrieveSortHash() {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":313,"author":{"gitId":"-"},"content":"      if (hash.zCST) {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        this.commitsSortType \u003d hash.zCST;"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      if (hash.zRSC) {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        this.toReverseSortedCommits \u003d (hash.zRSC \u003d\u003d\u003d \u0027true\u0027);"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"    retrieveSelectedFileTypesHash() {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"      if (hash.zFT) {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        this.selectedFileTypes \u003d hash.zFT"},{"lineNumber":326,"author":{"gitId":"-"},"content":"          .split(window.HASH_DELIMITER)"},{"lineNumber":327,"author":{"gitId":"-"},"content":"          .filter((fileType) \u003d\u003e this.fileTypes.includes(fileType));"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"    updateSelectedFileTypesHash() {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"      const fileTypeHash \u003d this.selectedFileTypes.length \u003e 0"},{"lineNumber":333,"author":{"gitId":"-"},"content":"          ? this.selectedFileTypes.reduce((a, b) \u003d\u003e `${a}~${b}`)"},{"lineNumber":334,"author":{"gitId":"-"},"content":"          : \u0027\u0027;"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"      window.addHash(\u0027zFT\u0027, fileTypeHash);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"    setInfoHash() {"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      const { addHash, encodeHash } \u003d window;"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        zAvgCommitSize, zSince, zUntil, zFilterGroup,"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        zTimeFrame, zIsMerged, zAuthor, zRepo, zFromRamp, zFilterSearch,"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      } \u003d this.info;"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      addHash(\u0027zA\u0027, zAuthor);"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      addHash(\u0027zR\u0027, zRepo);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      addHash(\u0027zACS\u0027, zAvgCommitSize);"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      addHash(\u0027zS\u0027, zSince);"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      addHash(\u0027zFS\u0027, zFilterSearch);"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      addHash(\u0027zU\u0027, zUntil);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      addHash(\u0027zMG\u0027, zIsMerged);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      addHash(\u0027zFTF\u0027, zTimeFrame);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"      addHash(\u0027zFGS\u0027, zFilterGroup);"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      addHash(\u0027zFR\u0027, zFromRamp);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      encodeHash();"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":358,"author":{"gitId":"-"},"content":""},{"lineNumber":359,"author":{"gitId":"vvidday"},"content":"    toggleSelectedCommitMessageBody(slice) {"},{"lineNumber":360,"author":{"gitId":"vvidday"},"content":"      this.$store.commit(\u0027toggleZoomCommitMessageBody\u0027, slice);"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"vvidday"},"content":"    toggleAllCommitMessagesBody(isOpen) {"},{"lineNumber":364,"author":{"gitId":"vvidday"},"content":"      this.showAllCommitMessageBody \u003d isOpen;"},{"lineNumber":365,"author":{"gitId":"vvidday"},"content":"      this.$store.commit(\u0027setAllZoomCommitMessageBody\u0027, {"},{"lineNumber":366,"author":{"gitId":"vvidday"},"content":"        isOpen,"},{"lineNumber":367,"author":{"gitId":"vvidday"},"content":"        commits: this.selectedCommits,"},{"lineNumber":368,"author":{"gitId":"vvidday"},"content":"      });"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"    removeZoomHashes() {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zA\u0027);"},{"lineNumber":373,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zR\u0027);"},{"lineNumber":374,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zFS\u0027);"},{"lineNumber":375,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zACS\u0027);"},{"lineNumber":376,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zS\u0027);"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zU\u0027);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zFGS\u0027);"},{"lineNumber":379,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zFTF\u0027);"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zMG\u0027);"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zFT\u0027);"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zCST\u0027);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zRSC\u0027);"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"    containsAtLeastOneSelected(fileTypes) {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      for (let i \u003d 0; i \u003c fileTypes.length; i +\u003d 1) {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        if (this.selectedFileTypes.includes(fileTypes[i])) {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"          return true;"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":393,"author":{"gitId":"-"},"content":"      return false;"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"    getFontColor,"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":398,"author":{"gitId":"-"},"content":"};"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"\u003c/script\u003e"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"\u003cstyle lang\u003d\"scss\" scoped\u003e"},{"lineNumber":403,"author":{"gitId":"-"},"content":"@import \u0027../styles/_colors.scss\u0027;"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"#tab-zoom {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"  .zoom {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u0026__title {"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u0026--granularity {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        @include mini-font;"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        margin-top: .5rem;"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u0026--tags {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        margin: .25rem 0 .25rem 0;"},{"lineNumber":415,"author":{"gitId":"-"},"content":""},{"lineNumber":416,"author":{"gitId":"-"},"content":"        .tag {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"          cursor: pointer;"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":419,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"    \u0026__toggle-commit-message-body {"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      padding-top: 10px;"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"    \u0026__day,"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    \u0026__title {"},{"lineNumber":428,"author":{"gitId":"-"},"content":"      /* Tags in commits */"},{"lineNumber":429,"author":{"gitId":"-"},"content":"      .tag {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        @include mini-font;"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        background: mui-color(\u0027grey\u0027, \u0027600\u0027);"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        border-radius: 5px;"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027white\u0027);"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        display: inline-block;"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        margin: .2rem .2rem .2rem 0;"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        padding: 0 3px 0 3px;"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"        .fa-tags {"},{"lineNumber":439,"author":{"gitId":"-"},"content":"          width: .65rem;"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":441,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":443,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"-"},"content":"  /* Commit Message Body in Zoom Tab */"},{"lineNumber":446,"author":{"gitId":"-"},"content":"  .commit-message {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    border: 1px solid transparent;"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    padding: 5px;"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"    \u0026:focus,"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    \u0026:focus-within {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      border: 1px solid mui-color(\u0027blue\u0027, \u0027500\u0027);"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":454,"author":{"gitId":"-"},"content":""},{"lineNumber":455,"author":{"gitId":"-"},"content":"    \u0026.active {"},{"lineNumber":456,"author":{"gitId":"-"},"content":"      .body {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"        background-color: mui-color(\u0027white\u0027);"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        border: 1px solid mui-color(\u0027grey\u0027, \u0027700\u0027);"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        display: grid;"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        margin: .25rem 0 .25rem 0;"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        overflow-x: auto;"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        padding: .4rem;"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        resize: none;"},{"lineNumber":464,"author":{"gitId":"-"},"content":""},{"lineNumber":465,"author":{"gitId":"-"},"content":"        pre {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"          position: relative;"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"          .dashed-border {"},{"lineNumber":469,"author":{"gitId":"-"},"content":"            border-right: 1px dashed mui-color(\u0027grey\u0027, \u0027500\u0027); // 72nd character line"},{"lineNumber":470,"author":{"gitId":"-"},"content":"            height: 100%;"},{"lineNumber":471,"author":{"gitId":"-"},"content":"            pointer-events: none;"},{"lineNumber":472,"author":{"gitId":"-"},"content":"            position: absolute;"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            top: 0;"},{"lineNumber":474,"author":{"gitId":"-"},"content":"            width: 72ch;"},{"lineNumber":475,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":477,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"-"},"content":"    .body {"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      display: none;"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"    .tag {"},{"lineNumber":485,"author":{"gitId":"-"},"content":"      cursor: pointer;"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"      \u0026:focus {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        border: 1px solid mui-color(\u0027blue\u0027, \u0027500\u0027);"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        outline: none;"},{"lineNumber":490,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"    \u0026--button {"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027grey\u0027);"},{"lineNumber":495,"author":{"gitId":"-"},"content":"      padding-left: .5rem;"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"      \u0026:hover {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        cursor: pointer;"},{"lineNumber":499,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":500,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"    pre {"},{"lineNumber":503,"author":{"gitId":"-"},"content":"      margin: 0;"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":505,"author":{"gitId":"-"},"content":""},{"lineNumber":506,"author":{"gitId":"-"},"content":"    span.loc {"},{"lineNumber":507,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027grey\u0027);"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":509,"author":{"gitId":"-"},"content":""},{"lineNumber":510,"author":{"gitId":"-"},"content":"    .message-title {"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      display: inline;"},{"lineNumber":512,"author":{"gitId":"-"},"content":"      font-family: monospace;"},{"lineNumber":513,"author":{"gitId":"-"},"content":""},{"lineNumber":514,"author":{"gitId":"-"},"content":"      .within-border {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        display: inline;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"      .not-within-border {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        border-left: 1px dashed mui-color(\u0027grey\u0027, \u0027500\u0027); // 50th character line"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        display: inline;"},{"lineNumber":521,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":523,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":524,"author":{"gitId":"-"},"content":"}"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"vvidday":26,"ckcherry23":2,"-":498}},{"path":"src/main/java/reposense/authorship/analyzer/AnnotatorAnalyzer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship.analyzer;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Analyzes the authorship of a {@code FileInfo} using the given annotations on the file."},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Only the lines with the format (START OF LINE) COMMENT_SYMBOL @@author ONE_STRING_WITH_NO_SPACE (END OF LINE)"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * will be analyzed. Otherwise, the line will be ignored and treated as normal lines."},{"lineNumber":18,"author":{"gitId":"-"},"content":" * If the line is analyzed, and the string following the author tag is a valid git id, and there is no author config"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * file, then the code will be attributed to the author with that git id. Otherwise, the code will be attributed to"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unknown author."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AnnotatorAnalyzer {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String AUTHOR_TAG \u003d \"@@author\";"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    private static final String REGEX_AUTHOR_TAG_FORMAT \u003d \"@@author(\\\\s+.*)?\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String[][] COMMENT_FORMATS \u003d {"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"            {\"//\", null},"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            {\"/\\\\*\", \"\\\\*/\"},"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"            {\"#\", null},"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            {\"\u003c!--\", \"--\u003e\"},"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"            {\"%\", null},"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            {\"\\\\[.*]:\\\\s*#\\\\s*\\\\(\", \"\\\\)\"},"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            {\"\u003c!---\", \"---\u003e\"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern[] COMMENT_PATTERNS \u003d {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[0][0], COMMENT_FORMATS[0][1])),"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[1][0], COMMENT_FORMATS[1][1])),"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[2][0], COMMENT_FORMATS[2][1])),"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[3][0], COMMENT_FORMATS[3][1])),"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[4][0], COMMENT_FORMATS[4][1])),"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[5][0], COMMENT_FORMATS[5][1])),"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[6][0], COMMENT_FORMATS[6][1]))"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Overrides the authorship information in {@code fileInfo} based on annotations given on the file."},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param fileInfo FileInfo to be further analyzed with author annotations."},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param authorConfig AuthorConfiguration for current analysis."},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void aggregateAnnotationAuthorInfo(FileInfo fileInfo, AuthorConfiguration authorConfig) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Optional\u003cAuthor\u003e currentAnnotatedAuthor \u003d Optional.empty();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Path filePath \u003d Paths.get(fileInfo.getPath());"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (LineInfo lineInfo : fileInfo.getLines()) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            String lineContent \u003d lineInfo.getContent();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (lineContent.contains(AUTHOR_TAG) \u0026\u0026 isValidCommentLine(lineContent)) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                Optional\u003cAuthor\u003e newAnnotatedAuthor \u003d findAuthorInLine(lineContent, authorConfig);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                boolean isEndOfAnnotatedSegment \u003d currentAnnotatedAuthor.isPresent() \u0026\u0026 !newAnnotatedAuthor.isPresent();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                boolean isUnknownAuthorSegment \u003d !currentAnnotatedAuthor.isPresent() \u0026\u0026 !newAnnotatedAuthor.isPresent();"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"                if (isEndOfAnnotatedSegment) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    lineInfo.setAuthor(currentAnnotatedAuthor.get());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    currentAnnotatedAuthor \u003d Optional.empty();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                } else if (isUnknownAuthorSegment) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    currentAnnotatedAuthor \u003d Optional.of(Author.UNKNOWN_AUTHOR);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                } else {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    currentAnnotatedAuthor \u003d newAnnotatedAuthor.filter(author -\u003e !author.isIgnoringFile(filePath));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            currentAnnotatedAuthor.ifPresent(lineInfo::setAuthor);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an optional {@code Author} corresponding to the @@author tag in {@code line}."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * It looks for the corresponding {@code Author} object in the {@code authorAliasMap} inside"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code authorConfig} and returns it. If an author config file is specified and the"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * author name found is not in it, then it returns {@code Author#UNKNOWN_AUTHOR} instead."},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param line Line to be analyzed."},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param authorConfig AuthorConfiguration for the analysis of this repo."},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @return Optional {@code Author} found in the line."},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static Optional\u003cAuthor\u003e findAuthorInLine(String line, AuthorConfiguration authorConfig) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Optional\u003cString\u003e optionalName \u003d extractAuthorName(line);"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        optionalName.filter(name -\u003e !authorConfig.containsName(name) \u0026\u0026 !AuthorConfiguration.hasAuthorConfigFile())"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .ifPresent(name -\u003e authorConfig.addAuthor(new Author(name)));"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return optionalName.map(name -\u003e authorConfig.getAuthor(name, name));"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Extracts the {@link Author} name that follows the specific format from {@code line} at {@code formatIndex}."},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param line Line to extract the author\u0027s name from."},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return An optional string containing the author\u0027s name."},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Optional\u003cString\u003e extractAuthorName(String line) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Optional.of(line)"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                // gets component after AUTHOR_TAG"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .map(l -\u003e l.split(AUTHOR_TAG))"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .filter(array -\u003e array.length \u003e\u003d 2)"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                // separates by end-comment format to obtain the author\u0027s name at the zeroth index"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"                .map(array -\u003e COMMENT_FORMATS[getCommentTypeIndex(line)][1] !\u003d null"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"                        ? array[1].trim().split(COMMENT_FORMATS[getCommentTypeIndex(line)][1])"},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"                        : new String[]{ array[1].trim() })"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .filter(array -\u003e array.length \u003e 0)"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .map(array -\u003e array[0].trim())"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"                // checks if the author name is not empty"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"                .filter(trimmedParameters -\u003e !trimmedParameters.isEmpty());"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Generates regex for valid comment formats in which author tag is found, with {@code REGEX_AUTHOR_TAG_FORMAT}"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * flanked by {@code commentStart} and {@code commentEnd}."},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private static String generateCommentRegex(String commentStart, String commentEnd) {"},{"lineNumber":120,"author":{"gitId":"sikai00"},"content":"        if (commentEnd \u003d\u003d null) {"},{"lineNumber":121,"author":{"gitId":"sikai00"},"content":"            return \"^[\\\\s]*\" + commentStart + \"[\\\\s]*\" + REGEX_AUTHOR_TAG_FORMAT + \"[\\\\s]*$\";"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return \"^[\\\\s]*\" + commentStart + \"[\\\\s]*\" + REGEX_AUTHOR_TAG_FORMAT + \"[\\\\s]*(\" + commentEnd + \")?[\\\\s]*$\";"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns the index in {@code COMMENT_FORMATS} representing the type of comment the @@author tag line is."},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @param line The line to be checked"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @return The index of the comment syntax type if the comment pattern matches, -1 if no match could be found"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static int getCommentTypeIndex(String line) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c COMMENT_PATTERNS.length; i++) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Pattern commentPattern \u003d COMMENT_PATTERNS[i];"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Matcher matcher \u003d commentPattern.matcher(line);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            if (matcher.find()) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                return i;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return -1;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns true if line is one of the supported comment types."},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param line Line to be checked."},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @return True if line is a valid comment line."},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private static boolean isValidCommentLine(String line) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return getCommentTypeIndex(line) \u003e\u003d 0;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":12,"-":140}},{"path":"src/main/java/reposense/util/TimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.ResolverStyle;"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import java.util.logging.Logger;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.parser.ParseException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.parser.SinceDateArgumentType;"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import reposense.system.LogsManager;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains time related functionalities."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class TimeUtil {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static Long startTime;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String DATE_FORMAT_REGEX \u003d"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \"^((0?[1-9]|[12][0-9]|3[01])\\\\/(0?[1-9]|1[012])\\\\/(19|2[0-9])[0-9]{2})\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // \"uuuu\" is used for year since \"yyyy\" does not work with ResolverStyle.STRICT"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter CLI_ARGS_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/uuuu HH:mm:ss\");"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_DATE_LATER_THAN_UNTIL_DATE \u003d"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \"\\\"Since Date\\\" cannot be later than \\\"Until Date\\\".\";"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_DATE_LATER_THAN_TODAY_DATE \u003d"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"\\\"Since Date\\\" must not be later than today\u0027s date.\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    private static final String EARLIEST_VALID_DATE \u003d \"1970-01-01T00:00:00\";"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    private static final String LATEST_VALID_DATE \u003d \"2099-12-31T23:59:59\";"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    private static final String MESSAGE_SINCE_DATE_EARLIER_THAN_EARLIEST_VALID_DATE \u003d"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"            \"Date of %s must not be earlier than \""},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"            + String.format(\"%s, resetting it to earliest valid date\", EARLIEST_VALID_DATE);"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"    private static final String MESSAGE_UNTIL_DATE_LATER_THAN_LATEST_VALID_DATE \u003d"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"            \"Date of %s must not be later than \""},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"            + String.format(\"%s, resetting it to latest valid date\", LATEST_VALID_DATE);"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(TimeUtil.class);"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code startTime} to be the current time."},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void startTimer() {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        startTime \u003d System.nanoTime();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the formatted elapsed time from {@code startTime} until current time."},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String getElapsedTime() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        long endTime \u003d System.nanoTime();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        double elapsedTime \u003d (double) (endTime - startTime) / 1_000_000_000.0;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        int elapsedHours \u003d (int) elapsedTime / 3600;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        int elapsedMinutes \u003d (int) (elapsedTime % 3600) / 60;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        double elapsedSeconds \u003d elapsedTime % 60;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String formattedElapsedTime \u003d \"\";"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (elapsedHours \u003e 0) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            formattedElapsedTime +\u003d String.format(\" %d hour(s)\", elapsedHours);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (elapsedMinutes \u003e 0) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            formattedElapsedTime +\u003d String.format(\" %d minute(s)\", elapsedMinutes);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        formattedElapsedTime +\u003d String.format(\" %.2f second(s)\", elapsedSeconds);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return formattedElapsedTime;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns the formatted elapsed time from {@code startTime} until current time,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * with an additional explanatory string."},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static String getElapsedTimeMessage() {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return \"Elapsed processing time:\" + getElapsedTime();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"     * Returns a valid {@link LocalDateTime} that is set to midnight for the given {@code sinceDate}."},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static LocalDateTime getSinceDate(LocalDateTime sinceDate) {"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"        return getValidDate(sinceDate).withHour(0).withMinute(0).withSecond(0);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"     * Returns a valid {@link LocalDateTime} that is set to 23:59:59 for the given {@code untilDate}."},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static LocalDateTime getUntilDate(LocalDateTime untilDate) {"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"        return getValidDate(untilDate).withHour(23).withMinute(59).withSecond(59);"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"     * Returns a valid {@link LocalDateTime} that is within {@value EARLIEST_VALID_DATE} and {@value LATEST_VALID_DATE}."},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"     * Resets {@code date} passed the closest valid date if it exceeds the date range."},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"    public static LocalDateTime getValidDate(LocalDateTime date) {"},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"        if (date.isBefore(LocalDateTime.parse(EARLIEST_VALID_DATE))) {"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"            logger.warning(String.format(MESSAGE_SINCE_DATE_EARLIER_THAN_EARLIEST_VALID_DATE, date));"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"            return LocalDateTime.parse(EARLIEST_VALID_DATE);"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"        if (date.isAfter(LocalDateTime.parse(LATEST_VALID_DATE))) {"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"            logger.warning(String.format(MESSAGE_UNTIL_DATE_LATER_THAN_LATEST_VALID_DATE, date));"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"            return LocalDateTime.parse(LATEST_VALID_DATE);"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"        return date;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns a {@link LocalDateTime} that is one month before {@code cliUntilDate} (if present) or one month"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * before report generation date otherwise."},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static LocalDateTime getDateMinusAMonth(LocalDateTime cliUntilDate) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return getSinceDate(cliUntilDate.minusMonths(1));"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Returns a {@link LocalDateTime} that is {@code numOfDays} before {@code cliUntilDate} (if present) or one month"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * before report generation date otherwise."},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static LocalDateTime getDateMinusNDays(LocalDateTime cliUntilDate, int numOfDays) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return getSinceDate(cliUntilDate.minusDays(numOfDays));"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns a {@link LocalDateTime} that is {@code numOfDays} after {@code cliSinceDate} (if present)."},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static LocalDateTime getDatePlusNDays(LocalDateTime cliSinceDate, int numOfDays) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return getUntilDate(cliSinceDate.plusDays(numOfDays));"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns current date with time set to 23:59:59. The time zone is adjusted to the given {@code zoneId}."},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static LocalDateTime getCurrentDate(ZoneId zoneId) {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return LocalDateTime.now(zoneId).withHour(23).withMinute(59).withSecond(59).withNano(0);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns the {@link LocalDateTime} of {@code ARBITRARY_FIRST_COMMIT_DATE} in the UTC time zone."},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static LocalDateTime getArbitraryFirstCommitDateLocal() {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return SinceDateArgumentType.getArbitraryFirstCommitDateLocal();"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns the {@link LocalDateTime} of {@code ARBITRARY_FIRST_COMMIT_DATE} adjusted for the time zone based on"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * {@code toZoneId}."},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static LocalDateTime getArbitraryFirstCommitDateConverted(ZoneId toZoneId) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return SinceDateArgumentType.getArbitraryFirstCommitDateConverted(toZoneId);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Checks whether the given {@code dateTime} is the {@code ARBITRARY_FIRST_COMMIT_DATE} in UTC time."},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static boolean isEqualToArbitraryFirstDateUtc(LocalDateTime dateTime) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return dateTime.equals(getArbitraryFirstCommitDateLocal());"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Checks whether the given {@code dateTime} is the {@code ARBITRARY_FIRST_COMMIT_DATE} in the time zone given by"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * {@code zoneId}."},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public static boolean isEqualToArbitraryFirstDateConverted(LocalDateTime dateTime, ZoneId zoneId) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return dateTime.equals(getArbitraryFirstCommitDateConverted(zoneId));"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Verifies that {@code sinceDate} is earlier than {@code untilDate}."},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code sinceDate} supplied is later than {@code untilDate}."},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static void verifyDatesRangeIsCorrect(LocalDateTime sinceDate, LocalDateTime untilDate)"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throws ParseException {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (sinceDate.compareTo(untilDate) \u003e 0) {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_SINCE_DATE_LATER_THAN_UNTIL_DATE);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Verifies that {@code sinceDate} is no later than the date of report generation, given by {@code currentDate}."},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code sinceDate} supplied is later than date of report generation."},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public static void verifySinceDateIsValid(LocalDateTime sinceDate, LocalDateTime currentDate)"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throws ParseException {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (sinceDate.compareTo(currentDate) \u003e 0) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_SINCE_DATE_LATER_THAN_TODAY_DATE);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Extracts the first substring of {@code date} string that matches the {@code DATE_FORMAT_REGEX}."},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public static String extractDate(String date) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d Pattern.compile(DATE_FORMAT_REGEX).matcher(date);"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String extractedDate \u003d date;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (matcher.find()) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            extractedDate \u003d matcher.group(1);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return extractedDate;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Parses the given {@code date} string as a {@link LocalDateTime} based on the {@code CLI_ARGS_DATE_FORMAT}."},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Uses {@link ResolverStyle#STRICT} to avoid unexpected dates like 31/02/2020."},{"lineNumber":210,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * @throws java.text.ParseException if date cannot be parsed by the required format."},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public static LocalDateTime parseDate(String date) throws java.text.ParseException {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return LocalDateTime.parse(date, CLI_ARGS_DATE_FORMAT.withResolverStyle(ResolverStyle.STRICT));"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw new java.text.ParseException(String.format("},{"lineNumber":218,"author":{"gitId":"-"},"content":"                    \"Exception message: %s\\n\", e.getMessage()), e.getErrorIndex());"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MarcusTXK":34,"-":187}},{"path":"src/systemtest/java/reposense/LocalRepoSystemTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterAll;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.parallel.Execution;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.parallel.ExecutionMode;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.SupportedDomainUrlMap;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.parser.SinceDateArgumentType;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.report.ErrorSummary;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.util.SystemTestUtil;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.util.TestRepoCloner;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"@Execution(ExecutionMode.SAME_THREAD)"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LocalRepoSystemTest {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String LOCAL_DIRECTORY_ONE_PARENT \u003d \"parent1\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String LOCAL_DIRECTORY_TWO_PARENT \u003d \"parent2\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String LOCAL_DIRECTORY_ONE \u003d \"parent1/test-repo\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String LOCAL_DIRECTORY_TWO \u003d \"parent2/test-repo\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"    private static final String LAST_COMMIT_DATE \u003d \"31/01/2023\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String OUTPUT_DIRECTORY \u003d \"local-test\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String TIME_ZONE \u003d \"UTC+08\";"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Path REPORT_DIRECTORY_PATH \u003d Paths.get(OUTPUT_DIRECTORY, \"reposense-report\");"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @BeforeAll"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static void setupLocalRepos() throws Exception {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        TestRepoCloner.clone(new RepoConfiguration(new RepoLocation(\"https://github.com/reposense/testrepo-Alpha\")),"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                Paths.get(\".\"), LOCAL_DIRECTORY_ONE);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        TestRepoCloner.clone(new RepoConfiguration(new RepoLocation(\"https://github.com/reposense/testrepo-Alpha\")),"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                Paths.get(\".\"), LOCAL_DIRECTORY_TWO);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setupLocalTest() throws Exception {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        SupportedDomainUrlMap.clearAccessedSet();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(OUTPUT_DIRECTORY);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ErrorSummary.getInstance().clearErrorSet();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @AfterEach"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void deleteReportDirectory() throws Exception {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(OUTPUT_DIRECTORY);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @AfterAll"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static void deleteClonedLocalRepos() throws Exception {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(LOCAL_DIRECTORY_ONE_PARENT);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(LOCAL_DIRECTORY_TWO_PARENT);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void testSameFinalDirectory() {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d new InputBuilder()"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .addRepos(LOCAL_DIRECTORY_ONE, LOCAL_DIRECTORY_TWO)"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .addSinceDate(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND)"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .addUntilDate(LAST_COMMIT_DATE)"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .addOutput(Paths.get(OUTPUT_DIRECTORY))"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .addTimezone(TIME_ZONE);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        runTest(inputBuilder, \"LocalRepoSystemTest/testSameFinalDirectory\");"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void testRelativePathing() {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String relativePathForTesting \u003d \"parent1/../parent1/./test-repo\";"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d new InputBuilder()"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .addRepos(relativePathForTesting)"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .addSinceDate(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .addUntilDate(LAST_COMMIT_DATE)"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .addOutput(Paths.get(OUTPUT_DIRECTORY))"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .addTimezone(TIME_ZONE);"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        runTest(inputBuilder, \"LocalRepoSystemTest/testRelativePathing\");"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Runs RepoSense with {@code inputBuilder} and tests it against the expected"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * files in {@code expectedFilesPathString}."},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void runTest(InputBuilder inputBuilder, String expectedFilesPathString) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        RepoSense.main(translateCommandline(inputBuilder.build()));"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Path expectedFilesPath \u003d loadResource(getClass(), expectedFilesPathString);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        SystemTestUtil.verifyReportJsonFiles(expectedFilesPath, REPORT_DIRECTORY_PATH);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":1,"-":99}},{"path":"src/test/java/reposense/authorship/AnnotatorAnalyzerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.model.Author.UNKNOWN_AUTHOR;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.Month;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.authorship.analyzer.AnnotatorAnalyzer;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AnnotatorAnalyzerTest extends GitTestTemplate {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final LocalDateTime SINCE_DATE \u003d TestUtil.getSinceDate(2018, Month.FEBRUARY.getValue(), 8);"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    private static final LocalDateTime UNTIL_DATE \u003d TestUtil.getUntilDate(2023, Month.JANUARY.getValue(), 31);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_OVERRIDE_AUTHORSHIP_TEST \u003d {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"            UNCONVENTIONAL_AUTHOR, UNCONVENTIONAL_AUTHOR, UNCONVENTIONAL_AUTHOR, UNCONVENTIONAL_AUTHOR,"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"            UNCONVENTIONAL_AUTHOR,"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"            FAKE_AUTHOR,"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"            WHITESPACE_AUTHOR, WHITESPACE_AUTHOR, WHITESPACE_AUTHOR,"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_DISOWN_CODE_TEST \u003d {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR,"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"            FAKE_AUTHOR,"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR,"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        config \u003d configs.get();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        config.setSinceDate(SINCE_DATE);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config.setUntilDate(UNTIL_DATE);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID);"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AuthorConfiguration.setHasAuthorConfigFile(AuthorConfiguration.DEFAULT_HAS_AUTHOR_CONFIG_FILE);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @AfterEach"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void after() {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super.after();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AuthorConfiguration.setHasAuthorConfigFile(AuthorConfiguration.DEFAULT_HAS_AUTHOR_CONFIG_FILE);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void analyzeAnnotation_authorNamePresentInConfig_overrideAuthorship() {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        config.setAuthorList(new ArrayList\u003c\u003e(Arrays.asList(FAKE_AUTHOR)));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"annotationTest.java\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_OVERRIDE_AUTHORSHIP_TEST));"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void analyzeAnnotation_authorNameNotInConfigAndNoAuthorConfigFile_acceptTaggedAuthor() {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        config.setAuthorList(new ArrayList\u003c\u003e(Arrays.asList(FAKE_AUTHOR)));"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"annotationTest.java\");"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_OVERRIDE_AUTHORSHIP_TEST));"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void analyzeAnnotation_authorNameNotInConfigAndHaveAuthorConfigFile_disownCode() {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        config.setAuthorList(new ArrayList\u003c\u003e(Arrays.asList(FAKE_AUTHOR)));"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AuthorConfiguration.setHasAuthorConfigFile(true);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"annotationTest.java\");"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_DISOWN_CODE_TEST));"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchCommentPattern0_returnAuthorName() {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        int index \u003d 0;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        line \u003d \"//@@author fakeAuthor\";"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        line \u003d \"// @@author fakeauthor  \";"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        line \u003d \"  //  @@author   fake-4u-th0r  \";"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":"        line \u003d \"// @@author   fake 4u-th0r\";"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake 4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"        line \u003d \"// @@author   --fake4u-th0r--\";"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"--fake4u-th0r--\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"        line \u003d \"// @@author   --fake--  __4u-th0r--   \";"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"--fake--  __4u-th0r--\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchCommentPattern1_returnAuthorName() {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        int index \u003d 1;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        line \u003d \"/*@@author fakeAuthor\";"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"        line \u003d \"/* @@author fakeauthor  \";"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        line \u003d \"  /*  @@author   fake-4u-th0r  \";"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        line \u003d \"/*@@author fakeAuthor*/\";"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"        line \u003d \"/* @@author fakeauthor */\";"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        line \u003d \"  /*  @@author   fake-4u-th0r  */  \";"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":144,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":145,"author":{"gitId":"sikai00"},"content":"        line \u003d \"/*  @@author   fake  4u-th0r  */\";"},{"lineNumber":146,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":147,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake  4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":148,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":149,"author":{"gitId":"sikai00"},"content":"        line \u003d \"/*  @@author   --_fake4u-th0r  */\";"},{"lineNumber":150,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":151,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"--_fake4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchCommentPattern2_returnAuthorName() {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        int index \u003d 2;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        line \u003d \"#@@author fakeAuthor\";"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        line \u003d \"# @@author fakeauthor  \";"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"        line \u003d \"  #  @@author   fake-4u-th0r  \";"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":169,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":170,"author":{"gitId":"sikai00"},"content":"        line \u003d \"#  @@author   fake  4u-th0r\";"},{"lineNumber":171,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":172,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake  4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":173,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":174,"author":{"gitId":"sikai00"},"content":"        line \u003d \"#  @@author   fake -4u-th0r     \";"},{"lineNumber":175,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":176,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake -4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchCommentPattern3_returnAuthorName() {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        int index \u003d 3;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!--@@author fakeAuthor\";"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!-- @@author fakeauthor  \";"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"sikai00"},"content":"        line \u003d \"\u003c!-- @@author fake  author  \";"},{"lineNumber":192,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":193,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake  author\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":194,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"        line \u003d \"  \u003c!--  @@author   fake-4u-th0r  \";"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!--@@author fakeAuthor--\u003e\";"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!-- @@author fakeauthor --\u003e\";"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"        line \u003d \"  \u003c!--  @@author   fake-4u-th0r  --\u003e  \";"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":210,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":211,"author":{"gitId":"sikai00"},"content":"        line \u003d \"  \u003c!--  @@author   fake-4u-th0r--\u003e  --\u003e  \";"},{"lineNumber":212,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":213,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":214,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":215,"author":{"gitId":"sikai00"},"content":"        line \u003d \"  \u003c!--  @@author   fake-4u-th0r---\u003e  --\u003e  \";"},{"lineNumber":216,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":217,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake-4u-th0r-\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchCommentPattern4_returnAuthorName() {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        int index \u003d 4;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        line \u003d \"%@@author fakeAuthor\";"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"        line \u003d \"% @@author fakeauthor  \";"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        line \u003d \" % @@author fake-4u-th0r\";"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":235,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"        line \u003d \"  %  @@author   fake-4u-th0r  \";"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":239,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":240,"author":{"gitId":"sikai00"},"content":"        line \u003d \"  %  @@author   *()fake-4u-th0r-- %%  \";"},{"lineNumber":241,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":242,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"*()fake-4u-th0r-- %%\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchMarkdownCommentPattern5_returnAuthorName() {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        int index \u003d 5;"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"        line \u003d \"[//]:#(@@author fakeAuthor\";"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"        line \u003d \"[//]: # (@@author fakeAuthor\";"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"        line \u003d \"[//]: # (@@author fakeauthor   \";"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"        line \u003d \"  [//]:   #   (@@author    fake-4u-th0r  \";"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"        line \u003d \"[//]: # (@@author fakeAuthor)\";"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"        line \u003d \"[//]: # (@@author fakeauthor   )\";"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"        line \u003d \"   [//]:   #   (@@author fake-4u-th0r   )  \";"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"        line \u003d \"   [fake inner text 123+%^\u0026!@#$(`]:   #   (@@author fake-4u-th0r   )  \";"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"        line \u003d \"   [    space   separated   inner   text   ]:   #   (  @@author fake-4u-th0r   )  \";"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchCommentPattern6_returnAuthorName() {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        int index \u003d 6;"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!---@@author fakeAuthor\";"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!--- @@author fakeauthor  \";"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"        line \u003d \"  \u003c!---  @@author   fake-4u-th0r  \";"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!---@@author fakeAuthor---\u003e\";"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!--- @@author fakeauthor ---\u003e\";"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"        line \u003d \"  \u003c!---  @@author   fake-4u-th0r  ---\u003e  \";"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    public void extractAuthorName_noAuthorName_returnNull() {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"        line \u003d \"//@@author\";"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(0, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"        line \u003d \"/*@@author \";"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"        line \u003d \"/* @@author*/ \";"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"        line \u003d \"#@@author \";"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"        line \u003d \"  \u003c!--@@author --\u003e \";"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"        line \u003d \"% @@author \";"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"        line \u003d \"[//]: # (@@author)\";"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"        line \u003d \"  \u003c!---@@author ---\u003e \";"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern0_success() {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(0, AnnotatorAnalyzer.getCommentTypeIndex(\"//@@author fakeAuthor\"));"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(0, AnnotatorAnalyzer.getCommentTypeIndex(\"// @@author fakeAuthor\"));"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(0, AnnotatorAnalyzer.getCommentTypeIndex(\"   // @@author fakeAuthor\"));"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(0, AnnotatorAnalyzer.getCommentTypeIndex(\"   //    @@author  fakeAuthor     \"));"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern1_success() {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, AnnotatorAnalyzer.getCommentTypeIndex(\"/*@@author fakeAuthor\"));"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, AnnotatorAnalyzer.getCommentTypeIndex(\"/* @@author fakeAuthor\"));"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, AnnotatorAnalyzer.getCommentTypeIndex(\"   /* @@author fakeAuthor*/\"));"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, AnnotatorAnalyzer.getCommentTypeIndex(\"   /*  @@author  fakeAuthor  */  \"));"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern2_success() {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, AnnotatorAnalyzer.getCommentTypeIndex(\"#@@author fakeAuthor\"));"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, AnnotatorAnalyzer.getCommentTypeIndex(\"# @@author fakeAuthor\"));"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, AnnotatorAnalyzer.getCommentTypeIndex(\"   # @@author fakeAuthor\"));"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, AnnotatorAnalyzer.getCommentTypeIndex(\"   #    @@author  fakeAuthor     \"));"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern3_success() {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, AnnotatorAnalyzer.getCommentTypeIndex(\"\u003c!--@@author fakeAuthor\"));"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, AnnotatorAnalyzer.getCommentTypeIndex(\"\u003c!-- @@author fakeAuthor\"));"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, AnnotatorAnalyzer.getCommentTypeIndex(\"   \u003c!-- @@author fakeAuthor--\u003e\"));"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, AnnotatorAnalyzer.getCommentTypeIndex(\"   \u003c!--  @@author  fakeAuthor  --\u003e  \"));"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern4_success() {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, AnnotatorAnalyzer.getCommentTypeIndex(\"%@@author fakeAuthor\"));"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, AnnotatorAnalyzer.getCommentTypeIndex(\"% @@author fakeAuthor\"));"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, AnnotatorAnalyzer.getCommentTypeIndex(\"   % @@author fakeAuthor\"));"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, AnnotatorAnalyzer.getCommentTypeIndex(\"   %    @@author  fakeAuthor     \"));"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern5_success() {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, AnnotatorAnalyzer.getCommentTypeIndex(\"[//]:#(@@author fakeAuthor)\"));"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, AnnotatorAnalyzer.getCommentTypeIndex(\"[//]: # (@@author fakeAuthor)\"));"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, AnnotatorAnalyzer.getCommentTypeIndex(\"   [//]:  #  (@@author fakeAuthor)  \"));"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, AnnotatorAnalyzer.getCommentTypeIndex(\"   [//]:  #  (  @@author   fakeAuthor  )  \"));"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern6_success() {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, AnnotatorAnalyzer.getCommentTypeIndex(\"\u003c!---@@author fakeAuthor\"));"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, AnnotatorAnalyzer.getCommentTypeIndex(\"\u003c!--- @@author fakeAuthor\"));"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, AnnotatorAnalyzer.getCommentTypeIndex(\"   \u003c!--- @@author fakeAuthor---\u003e\"));"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, AnnotatorAnalyzer.getCommentTypeIndex(\"   \u003c!---  @@author  fakeAuthor  ---\u003e  \"));"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    public void getCommentType_invalidCommentPattern_returnMinus1() {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"@@author fakeAuthor\"));"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"/@@author fakeAuthor\"));"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"@@author fakeAuthor */\"));"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"# something @@author fakeAuthor\"));"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"something % @@author fakeAuthor\"));"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"\u003c!--@@authorfakeAuthor--\u003e\"));"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    public void getCommentType_invalidMarkdownCommentPattern_returnMinus1() {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"@@author fakeAuthor\"));"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"/@@author fakeAuthor\"));"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"@@author fakeAuthor */\"));"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"# something @@author fakeAuthor\"));"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"something % @@author fakeAuthor\"));"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"\u003c!--@@authorfakeAuthor--\u003e\"));"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"[//]: # (@@authorfakeAuthor)\"));"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":430,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":54,"-":376}},{"path":"src/test/java/reposense/git/GitLogTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Month;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class GitLogTest extends GitTestTemplate {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        config \u003d configs.get();"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void gitLog_existingFormats_hasContent() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(content.isEmpty());"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void gitLog_nonExistingFormats_noContent() {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"py\")));"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void gitLog_includeAllJavaFiles_success() {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(12, content));"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void gitLog_fakeAuthorNameOnly_success() {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Author fakeAuthorName \u003d new Author(FAKE_AUTHOR_NAME);"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, fakeAuthorName);"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(8, content));"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void gitLog_authorNameIncorrectCase_success() {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Author fakeAuthorName \u003d new Author(FAKE_AUTHOR_NAME.toUpperCase());"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, fakeAuthorName);"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(8, content));"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void gitLog_fakeAuthorNameWithSpecialCharacter_success() {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Author fakeAuthorWithSpecialCharacter \u003d new Author(FAKE_AUTHOR_NAME.replace(\"fake\", \"#()!\"));"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, fakeAuthorWithSpecialCharacter);"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(8, content));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void gitLog_includeAllJavaFilesAuthorIgnoreMovedFile_success() {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Author ignoreMovedFileAuthor \u003d getAlphaAllAliasAuthor();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ignoreMovedFileAuthor.setIgnoreGlobList(Collections.singletonList(\"**movedFile.java\"));"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, ignoreMovedFileAuthor);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(4, content));"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void gitLog_authorIgnoreAllJavaFiles_success() {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Author ignoreAllJavaFilesAuthor \u003d getAlphaAllAliasAuthor();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ignoreAllJavaFilesAuthor.setIgnoreGlobList(Collections.singletonList(\"*.java\"));"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, ignoreAllJavaFilesAuthor);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(0, content));"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void gitLog_validIgnoreGlobs_success() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Author author \u003d getAlphaAllAliasAuthor();"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"annotationTest.java\"));"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(6, content));"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"**Test**\"));"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(5, content));"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"README.md\"));"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(6, content));"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"**.java\"));"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(1, content));"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"./newPos\"));"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(6, content));"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void gitLog_invalidIgnoreGlobs_filtered() {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Author author \u003d getAlphaAllAliasAuthor();"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"../testrepo-Alpha\"));"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(7, content));"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"../*.java\"));"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(7, content));"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"/newPos\"));"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(7, content));"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"..\"));"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(7, content));"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void gitLog_authorWithAllCharactersRegexAlias_emptyResult() {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Author authorWithAllCharactersRegexAlias \u003d new Author(\"none\");"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        authorWithAllCharactersRegexAlias.setAuthorAliases(Collections.singletonList(\".*\"));"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, authorWithAllCharactersRegexAlias);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void gitLog_sinceDateInFuture_noContent() {"},{"lineNumber":148,"author":{"gitId":"MarcusTXK"},"content":"        LocalDateTime date \u003d TimeUtil.getSinceDate("},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"                LocalDateTime.of(2050, Month.JANUARY, 1, 0, 0));"},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":"        config.setSinceDate(date);"},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertTrue(content.isEmpty());"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":"    @Test"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"    public void gitLog_invalidSinceDateInFuture_noContent() {"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":"        LocalDateTime date \u003d TimeUtil.getSinceDate("},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"                LocalDateTime.of(2100, Month.JANUARY, 1, 0, 0));"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        config.setSinceDate(date);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void gitLog_untilDateBeforeAnyCommit_noContent() {"},{"lineNumber":166,"author":{"gitId":"MarcusTXK"},"content":"        LocalDateTime date \u003d TimeUtil.getUntilDate("},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":"                LocalDateTime.of(2010, Month.JANUARY, 1, 0, 0));"},{"lineNumber":168,"author":{"gitId":"MarcusTXK"},"content":"        config.setUntilDate(date);"},{"lineNumber":169,"author":{"gitId":"MarcusTXK"},"content":"        config.setSinceDate(null);"},{"lineNumber":170,"author":{"gitId":"MarcusTXK"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":171,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertTrue(content.isEmpty());"},{"lineNumber":172,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":174,"author":{"gitId":"MarcusTXK"},"content":"    @Test"},{"lineNumber":175,"author":{"gitId":"MarcusTXK"},"content":"    public void gitLog_invalidUntilDateBeforeAnyCommit_noContent() {"},{"lineNumber":176,"author":{"gitId":"MarcusTXK"},"content":"        LocalDateTime date \u003d TimeUtil.getUntilDate("},{"lineNumber":177,"author":{"gitId":"MarcusTXK"},"content":"                LocalDateTime.of(1969, Month.JANUARY, 1, 0, 0));"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        config.setUntilDate(date);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        config.setSinceDate(null);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void gitLog_emailWithAdditionOperator_success() {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MINGYI_AUTHOR_NAME);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, author);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(1, content));"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MarcusTXK":24,"sikai00":4,"-":166}},{"path":"src/test/java/reposense/git/GitShortlogTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Month;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class GitShortlogTest extends GitTestTemplate {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        config \u003d configs.get();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void getAuthors_validRepoNoDateRange_success() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"Eugene Peh\"));"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"FH-30\"));"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        expectedAuthorList.add(new Author(\"HCY123902\"));"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"WANG CHAO\"));"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"chan-j-d\"));"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"eugenepeh\"));"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"fakeAuthor\"));"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"harryggg\"));"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        expectedAuthorList.add(new Author(\"sikai00\"));"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthorList.size(), actualAuthorList.size());"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthorList, actualAuthorList);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void getAuthors_validRepoDateRange_success() {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"eugenepeh\"));"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        config.setSinceDate(TestUtil.getSinceDate(2018, Month.MAY.getValue(), 5));"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        config.setUntilDate(TestUtil.getUntilDate(2018, Month.MAY.getValue(), 10));"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthorList.size(), actualAuthorList.size());"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthorList, actualAuthorList);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void getAuthors_validRepoDateOutOfRange_success() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config.setSinceDate(TestUtil.getSinceDate(2018, Month.JUNE.getValue(), 1));"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        config.setUntilDate(TestUtil.getUntilDate(2018, Month.JUNE.getValue(), 20));"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(actualAuthorList.isEmpty());"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":2,"-":65}},{"path":"src/test/java/reposense/template/GitTestTemplate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.template;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Iterator;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Supplier;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.authorship.FileInfoAnalyzer;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.authorship.FileInfoExtractor;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.git.GitShow;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.util.TestRepoCloner;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains templates for git testing."},{"lineNumber":36,"author":{"gitId":"-"},"content":" */"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class GitTestTemplate {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    protected static final String TEST_REPO_GIT_LOCATION \u003d \"https://github.com/reposense/testrepo-Alpha.git\";"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    protected static final String IGNORE_REVS_FILE_NAME \u003d \".git-blame-ignore-revs\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    protected static final String TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH \u003d \"1565-find-previous-authors\";"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected static final String FIRST_COMMIT_HASH \u003d \"7d7584f\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected static final String ROOT_COMMIT_HASH \u003d \"fd425072e12004b71d733a58d819d845509f8db3\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected static final String TEST_COMMIT_HASH \u003d \"2fb6b9b\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected static final String TEST_COMMIT_HASH_LONG \u003d \"2fb6b9b2dd9fa40bf0f9815da2cb0ae8731436c7\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected static final String TEST_COMMIT_HASH_PARENT \u003d \"c5a6dc774e22099cd9ddeb0faff1e75f9cf4f151\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected static final String MAIN_AUTHOR_NAME \u003d \"harryggg\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_NAME \u003d \"fakeAuthor\";"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"    protected static final String UNCONVENTIONAL_AUTHOR_NAME \u003d \"-unconventional_author-\";"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"    protected static final String WHITESPACE_AUTHOR_NAME \u003d \"whitespace author\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected static final String IGNORED_AUTHOR_NAME \u003d \"FH-30\";"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected static final String EUGENE_AUTHOR_NAME \u003d \"eugenepeh\";"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected static final String YONG_AUTHOR_NAME \u003d \"Yong Hao TENG\";"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected static final String MINGYI_AUTHOR_NAME \u003d \"myteo\";"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected static final String JAMES_AUTHOR_NAME \u003d \"jamessspanggg\";"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected static final String JAMES_ALTERNATIVE_AUTHOR_NAME \u003d \"James Pang\";"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    protected static final String JINYAO_AUTHOR_NAME \u003d \"jylee-git\";"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"    protected static final String LATEST_COMMIT_HASH \u003d \"abbd5888d5cd4e411c6a8e58e661b0eafdae1335\";"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"    protected static final String LATEST_COMMIT_HASH_PARENT \u003d \"f768b9b1d9d1478f8ac8cf3b4c7f868479edc07a\";"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    protected static final String EMPTY_TREE_HASH \u003d \"4b825dc642cb6eb9a060e54bf8d69288fbee4904\";"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    protected static final String EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING \u003d"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \"2d87a431fcbb8f73a731b6df0fcbee962c85c250\";"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    protected static final CommitHash EUGENE_AUTHOR_README_FILE_COMMIT_07052018 \u003d"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            new CommitHash(EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING \u003d"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \"768015345e70f06add2a8b7d1f901dc07bf70582\";"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    protected static final CommitHash FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018 \u003d"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    protected static final String MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING \u003d"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \"8d0ac2ee20f04dce8df0591caed460bffacb65a4\";"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    protected static final CommitHash MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018 \u003d"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            new CommitHash(MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    protected static final String AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021_STRING \u003d"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \"1d29339e7d16eb5b2bc8fb542e08acedd3d4b0eb\";"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    protected static final CommitHash AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021 \u003d"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            new CommitHash(AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021_STRING);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING \u003d"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \"7d7584fc204922cc5ff3bd5ca073cad6bed2c46a\";"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_TWO_06022018_STRING \u003d"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"8d0ac2ee20f04dce8df0591caed460bffacb65a4\";"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_THREE_07022018_STRING \u003d"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            \"8e4ca1da5d413e9ab84a1e8d1474918afa97f7a1\";"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING \u003d"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            \"768015345e70f06add2a8b7d1f901dc07bf70582\";"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    protected static final List\u003cCommitHash\u003e FAKE_AUTHOR_BLAME_RANGED_COMMIT_LIST_09022018 \u003d Arrays.asList("},{"lineNumber":86,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING),"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_TWO_06022018_STRING),"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_THREE_07022018_STRING),"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING));"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    protected static final List\u003cCommitHash\u003e AUTHOR_TO_IGNORE_BLAME_COMMIT_LIST_07082021 \u003d Collections.singletonList("},{"lineNumber":91,"author":{"gitId":"-"},"content":"            new CommitHash(AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021_STRING)"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    protected static final String NONEXISTENT_COMMIT_HASH \u003d \"nonExistentCommitHash\";"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    protected static final ZoneId TIME_ZONE_ID \u003d ZoneId.of(\"Asia/Singapore\");"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    protected static final Author MAIN_AUTHOR \u003d new Author(MAIN_AUTHOR_NAME);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    protected static final Author FAKE_AUTHOR \u003d new Author(FAKE_AUTHOR_NAME);"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"    protected static final Author UNCONVENTIONAL_AUTHOR \u003d new Author(UNCONVENTIONAL_AUTHOR_NAME);"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"    protected static final Author WHITESPACE_AUTHOR \u003d new Author(WHITESPACE_AUTHOR_NAME);"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    protected static ThreadLocal\u003cRepoConfiguration\u003e configs \u003d ThreadLocal.withInitial(() -\u003e {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return newRepoConfiguration();"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private static final Supplier\u003cString\u003e EXTRA_OUTPUT_FOLDER_NAME_SUPPLIER \u003d () -\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            String.valueOf(Thread.currentThread().getId());"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d newRepoConfiguration();"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(getAlphaAllAliasAuthor()));"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.DEFAULT_TEST_FORMATS);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        config.setIsLastModifiedDateIncluded(false);"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        configs.set(config);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @BeforeAll"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void beforeClass() throws Exception {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d newRepoConfiguration();"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        configs.set(config);"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(config, EXTRA_OUTPUT_FOLDER_NAME_SUPPLIER.get());"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @AfterEach"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void after() {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(configs.get().getRepoRoot(), \"master\");"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private static RepoConfiguration newRepoConfiguration() throws Exception {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return new RepoConfiguration(new RepoLocation(TEST_REPO_GIT_LOCATION), \"master\","},{"lineNumber":139,"author":{"gitId":"-"},"content":"                EXTRA_OUTPUT_FOLDER_NAME_SUPPLIER.get());"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Generates the .git-blame-ignore-revs file containing {@link CommitHash}es"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * from {@code toIgnore} for the test repo."},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public List\u003cCommitHash\u003e createTestIgnoreRevsFile(List\u003cCommitHash\u003e toIgnore) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String repoRoot \u003d configs.get().getRepoRoot();"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cCommitHash\u003e expandedIgnoreCommitList \u003d toIgnore.stream()"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .map(CommitHash::toString)"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .map(commitHash -\u003e {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    try {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                        return GitShow.getExpandedCommitHash(repoRoot, commitHash);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    } catch (CommitNotFoundException e) {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                        return new CommitHash(commitHash);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                })"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String fileLocation \u003d repoRoot + IGNORE_REVS_FILE_NAME;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        FileUtil.writeIgnoreRevsFile(fileLocation, expandedIgnoreCommitList);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return expandedIgnoreCommitList;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void removeTestIgnoreRevsFile() {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String fileLocation \u003d configs.get().getRepoRoot() + IGNORE_REVS_FILE_NAME;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        new File(fileLocation).delete();"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * For each line in {@link FileResult}, assert that it is attributed to the expected author provided by"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * {@code expectedLineAuthors}."},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void assertFileAnalysisCorrectness(FileResult fileResult, List\u003cAuthor\u003e expectedLineAuthors) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        List\u003cLineInfo\u003e lines \u003d fileResult.getLines();"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedLineAuthors.size(), lines.size());"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Iterator\u003cAuthor\u003e lineAuthorsItr \u003d expectedLineAuthors.iterator();"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Iterator\u003cLineInfo\u003e linesItr \u003d lines.iterator();"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        while (linesItr.hasNext() \u0026\u0026 lineAuthorsItr.hasNext()) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            assertEquals(lineAuthorsItr.next(), linesItr.next().getAuthor());"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public FileResult getFileResult(String relativePath) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(configs.get(), relativePath);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return FileInfoAnalyzer.analyzeTextFile(configs.get(), fileInfo);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Returns a {@link Author} that has git id and aliases of all authors in testrepo-Alpha, so that no commits"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * will be filtered out in the `git log` command."},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    protected Author getAlphaAllAliasAuthor() {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MAIN_AUTHOR_NAME);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        author.setAuthorAliases(Arrays.asList(FAKE_AUTHOR_NAME, EUGENE_AUTHOR_NAME, YONG_AUTHOR_NAME));"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return author;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":6,"-":193}}]
