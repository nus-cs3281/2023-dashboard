[{"path":".github/workflows/integration.yml","fileType":"yml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# This workflow executes the various RepoSense tests"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"name: Continuous Integration"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"on:"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  push:"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    branches-ignore:"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      - gh-pages"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  pull_request:"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    branches-ignore:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      - gh-pages"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"env:"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  NODE_VER: \u002718.x\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  JAVA_DISTRIBUTION: \u0027zulu\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  JAVA_VER: 8"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"jobs:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  mainbuild:"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    name: ${{ matrix.os }} JDK 8"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    strategy:"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      fail-fast: false"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      matrix:"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        os: [ubuntu-20.04, ubuntu-22.04, macos-11, macos-12, windows-2019, windows-2022]"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    runs-on: ${{ matrix.os }}"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    env:"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      HOMEBREW_NO_AUTO_UPDATE: 1 # Prevent time-consuming brew update"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    steps:"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    - name: Checkout repository"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      uses: actions/checkout@v3"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        fetch-depth: 0"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    - name: Set up JDK 1.8"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      uses: actions/setup-java@v3"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        distribution: ${{ env.JAVA_DISTRIBUTION }}"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        java-version: ${{ env.JAVA_VER }}"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    - name: Verify Java version"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      run: echo \"Actual JDK in use -- \"; java -version"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    - name: Set up Node.js"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      uses: actions/setup-node@v3"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        node-version: ${{ env.NODE_VER }}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    - name: Set up Gradle caching"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      uses: actions/cache@v3"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        path: |"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          $HOME/.gradle/caches"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          $HOME/.gradle/wrapper"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        key: ${{ matrix.os }}-gradle-${{ hashFiles(\u0027**/*.gradle*\u0027) }}"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        restore-keys: |"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          ${{ matrix.os }}-gradle-"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    - name: Set up Node caching"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      uses: actions/cache@v3"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        path: $HOME/.npm"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        key: ${{ matrix.os }}-node-${{ hashFiles(\u0027**/package-lock.json\u0027) }}"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        restore-keys: |"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          ${{ matrix.os }}-node-"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    - name: Grant execute permission for gradlew"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      if: ${{ runner.os !\u003d \u0027Windows\u0027 }}"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      run: chmod +x gradlew # Windows does not need this"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    - name: Run environmental checks"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"      run: ./gradlew environmentalChecks"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    - name: Run linter"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      run: ./gradlew lintFrontend"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    - name: Build with Gradle"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      run: ./gradlew clean checkstyleAll test systemTest coverage"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    - name: Run code coverage"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      if: ${{ success() \u0026\u0026 ( matrix.os \u003d\u003d \u0027ubuntu-20.04\u0027 || matrix.os \u003d\u003d \u0027macos-11\u0027 || matrix.os \u003d\u003d \u0027windows-2022\u0027 ) }}"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      uses: codecov/codecov-action@v3"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        directory: ${{ github.workspace }}/build/reports/jacoco/coverage"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        files: coverage.xml"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        fail_ci_if_error: true"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    - name: Build preview website (pull request)"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      if: ${{ success() \u0026\u0026 github.event_name \u003d\u003d \u0027pull_request\u0027 \u0026\u0026 matrix.os \u003d\u003d \u0027ubuntu-20.04\u0027 }}"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      run: |"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        git fetch --all \u0026\u0026 git config --global user.email \"-\" \u0026\u0026 git config --global user.name \"-\" \u0026\u0026 ./gradlew run -Dargs\u003d\"--since d1\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        sudo apt-get -y install graphviz"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        npm install -g markbind-cli"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        (cd docs \u0026\u0026 markbind build)"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    - name: Save PR number and HEAD commit (pull request)"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      if: ${{ success() \u0026\u0026 github.event_name \u003d\u003d \u0027pull_request\u0027 \u0026\u0026 matrix.os \u003d\u003d \u0027ubuntu-20.04\u0027 }}"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      run: |"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        mkdir -p ./pr"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        echo ${{ github.event.number }} \u003e ./pr/NUMBER"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        echo ${{ github.event.pull_request.head.sha }} \u003e ./pr/SHA"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    - name: Upload artifacts (pull request)"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      if: ${{ success() \u0026\u0026 github.event_name \u003d\u003d \u0027pull_request\u0027 \u0026\u0026 matrix.os \u003d\u003d \u0027ubuntu-20.04\u0027 }}"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      uses: actions/upload-artifact@v3"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        name: reposense-deployment"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        path: |"},{"lineNumber":109,"author":{"gitId":"-"},"content":"          ./reposense-report"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          ./docs/_site"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          ./pr"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"  cypress:"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    name: Cypress frontend tests"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    runs-on: ubuntu-20.04"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    steps:"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    - name: Checkout repository"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      uses: actions/checkout@v3"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        fetch-depth: 0"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    - name: Set up JDK 1.8"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      uses: actions/setup-java@v3"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        distribution: ${{ env.JAVA_DISTRIBUTION }}"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        java-version: ${{ env.JAVA_VER }}"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    - name: Verify Java version"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      run: echo \"Actual JDK in use -- \"; java -version"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    - name: Set up Node.js"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      uses: actions/setup-node@v3"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        node-version: ${{ env.NODE_VER }}"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    - name: Set up Gradle caching"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      uses: actions/cache@v3"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        path: |"},{"lineNumber":141,"author":{"gitId":"-"},"content":"          $HOME/.gradle/caches"},{"lineNumber":142,"author":{"gitId":"-"},"content":"          $HOME/.gradle/wrapper"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        key: ${{ runner.os }}-gradle-${{ hashFiles(\u0027**/*.gradle*\u0027) }}"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        restore-keys: |"},{"lineNumber":145,"author":{"gitId":"-"},"content":"          ${{ runner.os }}-gradle-"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    - name: Set up Node caching"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      uses: actions/cache@v3"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        path: $HOME/.npm"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        key: ${{ runner.os }}-node-${{ hashFiles(\u0027**/package-lock.json\u0027) }}"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        restore-keys: |"},{"lineNumber":153,"author":{"gitId":"-"},"content":"          ${{ runner.os }}-node-"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    - name: Grant execute permission for gradlew"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      run: chmod +x gradlew"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"    - name: Set up environment"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      run: sudo apt-get install -y libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    - name: Run frontend tests"},{"lineNumber":162,"author":{"gitId":"-"},"content":"      run: ./gradlew frontendTest -Pci"}],"authorContributionMap":{"MarcusTXK":1,"-":161}},{"path":".github/workflows/surge.yml","fileType":"yml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# This workflow deploys a RepoSense report and the MarkBind documentation"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# website to surge.sh in a secure manner for pull requests"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"name: Surge.sh build preview"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"on:"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  workflow_run:"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    workflows: [\"Continuous Integration\"]"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    types:"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      - completed"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"jobs:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  deploy:"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    name: Deploy to surge.sh"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    runs-on: ubuntu-latest"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    if: ${{ github.event.workflow_run.event \u003d\u003d \u0027pull_request\u0027 \u0026\u0026 github.event.workflow_run.conclusion \u003d\u003d \u0027success\u0027 }}"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    env:"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      NODE_VERSION: \"lts/*\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"      GITHUB_TOKEN: ${{ github.token }}"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    steps:"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    - name: Checkout repository"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      uses: actions/checkout@v3"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    - name: Set up Node.js"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      uses: actions/setup-node@v3"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        node-version: \u002718.x\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    - name: Download deployment artifacts"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      uses: dawidd6/action-download-artifact@v2"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        workflow: integration.yml"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        run_id: ${{ github.event.workflow_run.id }}"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name: reposense-deployment"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        path: ."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    - name: Extract PR number"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      id: pr-number"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"      run: echo \u0027ACTIONS_PR_NUMBER\u003d\u0027$(cat ./pr/NUMBER) \u003e\u003e $GITHUB_OUTPUT"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    - name: Download deployment status artifacts"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      uses: dawidd6/action-download-artifact@v2"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      with:"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        workflow: pending.yml"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        pr: ${{ steps.pr-number.outputs.ACTIONS_PR_NUMBER }}"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        workflow_conclusion: success"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name: reposense-deployment-id"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        path: ./pr"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    - name: Update PR checklist for surge.sh as in progress"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      if: ${{ success() }}"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      run: ./config/gh-actions/deploy.sh in_progress"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    - name: Install surge"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      if: ${{ success() }}"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      run: npm install -g surge"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    - name: Deploy to surge.sh"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      if: ${{ success() }}"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      env:"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      run: ./config/gh-actions/deploy.sh success"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    - name: Update PR checklist for surge.sh as failure"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      if: ${{ failure() }}"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      run: ./config/gh-actions/deploy.sh failure"}],"authorContributionMap":{"sikai00":1,"-":67}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027idea\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    id \u0027com.liferay.node\u0027 version \u00277.2.18\u0027"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    id \u0027com.github.psxpaul.execfork\u0027 version \u00270.2.0\u0027"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    id \u0027com.palantir.git-version\u0027 version \u00270.13.0\u0027"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"OperatingSystem os \u003d DefaultNativePlatform.currentOperatingSystem;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027reposense.RepoSense\u0027"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"node.download \u003d false // The Liferay Node Gradle Plugin will use the system PATH to find the Node/npm executable."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_1_8"},{"lineNumber":22,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_1_8"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"configurations {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    systemtestImplementation.extendsFrom testImplementation"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    systemtestRuntime.extendsFrom testRuntime"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.8.2\u0027"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    implementation  group: \u0027com.google.code.gson\u0027 ,name: \u0027gson\u0027, version:\u00272.9.0\u0027"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    implementation  group: \u0027net.freeutils\u0027, name: \u0027jlhttp\u0027, version: \u00272.6\u0027"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    implementation  group: \u0027net.sourceforge.argparse4j\u0027, name: \u0027argparse4j\u0027, version: \u00270.9.0\u0027"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.apache.ant\u0027, name: \u0027ant\u0027, version: \u00271.10.12\u0027"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.apache.commons\u0027, name: \u0027commons-csv\u0027, version: \u00271.9.0\u0027"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    implementation  group: \u0027org.fusesource.jansi\u0027, name: \u0027jansi\u0027, version: \u00272.4.0\u0027"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"sourceSets {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    systemtest {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        compileClasspath +\u003d main.output + test.output"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        runtimeClasspath +\u003d main.output + test.output"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        java.srcDir file(\u0027src/systemtest/java\u0027)"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        resources.srcDir file(\u0027src/systemtest/resources\u0027)"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"def installFrontend \u003d tasks.register(\u0027installFrontend\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"    args \u003d [\u0027ci\u0027]"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"def buildFrontend \u003d tasks.register(\u0027buildFrontend\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    dependsOn installFrontend"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    args \u003d [\u0027run\u0027, \u0027devbuild\u0027]"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"def zipReport \u003d tasks.register(\u0027zipReport\u0027, Zip) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    dependsOn buildFrontend"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    from \u0027frontend/build/\u0027"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \u0027templateZip\u0027"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    destinationDirectory \u003d file(\u0027src/main/resources\u0027)"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"def copyCypressConfig \u003d tasks.register(\u0027copyCypressConfig\u0027, Copy) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    description \u0027Copies the config files used by the backend to generate the test report for Cypress testing into an isolated working directory\u0027"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    from \u0027frontend/cypress/config\u0027"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    into \u0027build/serveTestReport/exampleconfig\u0027"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"def copyMainClasses \u003d tasks.register(\u0027copyMainClasses\u0027, Copy) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    description \u0027Copies the backend classes used to generate the test report for Cypress testing into an isolated working directory\u0027"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    dependsOn classes"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    from \u0027build/classes/java/main\u0027"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    into \u0027build/serveTestReport/java/main\u0027"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"def compileJava \u003d tasks.compileJava"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"tasks.named(\"processSystemtestResources\").configure {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    duplicatesStrategy \u003d DuplicatesStrategy.INCLUDE"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"tasks.run.dependsOn(zipReport);"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //the second arguments indicates the default value associated with the property."},{"lineNumber":96,"author":{"gitId":"-"},"content":"    tasks.compileJava.mustRunAfter(zipReport)"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    args System.getProperty(\u0027args\u0027, \u0027\u0027).split()"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    systemProperty \"version\", getRepoSenseVersion()"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00279.3\u0027"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    getConfigDirectory().set(file(\"$rootProject.projectDir/config/checkstyle\"))"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"idea {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    module {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        sourceSets.systemtest.allSource.srcDirs.each { srcDir -\u003e module.testSourceDirs +\u003d srcDir }"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    environment(\"REPOSENSE_ENVIRONMENT\", \"TEST\")"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        events \u0027passed\u0027, \u0027skipped\u0027, \u0027failed\u0027"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d true"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    doFirst {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        deleteReposAddressDirectory()"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    doLast {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        deleteReposAddressDirectory()"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"tasks.shadowJar.dependsOn(zipReport);"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    tasks.compileJava.mustRunAfter(zipReport)"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    tasks.processResources.mustRunAfter(zipReport)"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027RepoSense.jar\u0027"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    destinationDirectory \u003d file(\"${buildDir}/jar/\")"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    manifest {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        attributes \u0027Implementation-Version\u0027: getRepoSenseVersion()"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"tasks.register(\u0027lintFrontend\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    dependsOn installFrontend"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    args \u003d [\u0027run\u0027, \u0027lint\u0027]"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"def checkstyleMain \u003d tasks.checkstyleMain"},{"lineNumber":151,"author":{"gitId":"-"},"content":"def checkstyleTest \u003d tasks.checkstyleTest"},{"lineNumber":152,"author":{"gitId":"-"},"content":"def checkstyleSystemtest \u003d tasks.checkstyleSystemtest"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"tasks.register(\u0027checkstyleAll\u0027, Checkstyle) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    dependsOn checkstyleMain, checkstyleTest, checkstyleSystemtest"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    tasks.checkstyleTest.mustRunAfter(\u0027checkstyleMain\u0027)"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    tasks.checkstyleSystemtest.mustRunAfter(\u0027checkstyleTest\u0027)"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":"tasks.register(\u0027environmentalChecks\u0027, Exec) {"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":"    workingDir \u0027config/checks/\u0027"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":"    if (os.isWindows()){"},{"lineNumber":163,"author":{"gitId":"MarcusTXK"},"content":"        commandLine \u0027cmd\u0027, \u0027/c\u0027, \u0027run-checks.bat\u0027"},{"lineNumber":164,"author":{"gitId":"MarcusTXK"},"content":"    } else {"},{"lineNumber":165,"author":{"gitId":"MarcusTXK"},"content":"        commandLine \u0027sh\u0027, \u0027./run-checks.sh\u0027"},{"lineNumber":166,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":"}"},{"lineNumber":168,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":169,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"tasks.register(\u0027systemtest\u0027, Test) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    testClassesDirs \u003d sourceSets.systemtest.output.classesDirs"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    classpath \u003d sourceSets.systemtest.runtimeClasspath"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    environment(\"REPOSENSE_ENVIRONMENT\", \"TEST\")"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        events \u0027passed\u0027, \u0027skipped\u0027, \u0027failed\u0027"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d true"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    doFirst {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        deleteReposAddressDirectory()"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    doLast {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        deleteReposAddressDirectory()"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"def serveTestReportInBackground \u003d tasks.register(\u0027serveTestReportInBackground\u0027, com.github.psxpaul.task.JavaExecFork) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    description \u0027Creates a background server process for the test report that is to be used by Cypress\u0027"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    dependsOn zipReport, compileJava, processResources, copyCypressConfig, copyMainClasses"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    tasks.compileJava.mustRunAfter(zipReport)"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    tasks.processResources.mustRunAfter(zipReport)"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    workingDir \u003d \u0027build/serveTestReport\u0027"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    main \u003d mainClassName"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    classpath \u003d sourceSets.main.runtimeClasspath"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    args \u003d [\u0027--config\u0027, \u0027./exampleconfig\u0027, \u0027--since\u0027, \u0027d1\u0027, \u0027--view\u0027]"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    String versionJvmArgs \u003d \u0027-Dversion\u003d\u0027 + getRepoSenseVersion()"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    jvmArgs \u003d [ versionJvmArgs ]"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    killDescendants \u003d false // Kills descendants of started process using methods only found in Java 9 and beyond."},{"lineNumber":203,"author":{"gitId":"-"},"content":"    // Above flag is set to true by default but is incompatible with Java 8. It should be removed from this file if we fully migrate to Java 11."},{"lineNumber":204,"author":{"gitId":"-"},"content":"    waitForPort \u003d 9000"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"def installCypress \u003d tasks.register(\u0027installCypress\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/cypress/\u0027"},{"lineNumber":209,"author":{"gitId":"MarcusTXK"},"content":"    args \u003d [\u0027ci\u0027]"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"tasks.register(\u0027cypress\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    dependsOn installCypress, serveTestReportInBackground"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    tasks.serveTestReportInBackground.mustRunAfter(installCypress)"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"    workingDir \u003d file(\u0027frontend/cypress/\u0027)"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    args \u003d [\"run-script\", \"debug\"]"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"tasks.register(\u0027frontendTest\u0027, com.liferay.gradle.plugins.node.tasks.ExecutePackageManagerTask) {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    dependsOn installCypress, serveTestReportInBackground"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    tasks.serveTestReportInBackground.mustRunAfter(installCypress)"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"    workingDir \u003d file(\u0027frontend/cypress/\u0027)"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    args \u003d [\"run-script\", \"tests\"]"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"    // Run tests in CI without slow motion"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    if (project.hasProperty(\u0027ci\u0027)) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        args \u003d [\"run-script\", \"ci\"]"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"tasks.withType(Copy) {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    includeEmptyDirs \u003d true"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"jacoco {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    toolVersion \u003d \"0.8.7\""},{"lineNumber":239,"author":{"gitId":"-"},"content":"}"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"jacocoTestReport {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    reports {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        html.required \u003d true"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        xml.required \u003d true"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        csv.required \u003d false"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        html.destination file(\"${buildDir}/jacocoHtml\")"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    executionData systemtest, frontendTest"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"tasks.register(\u0027coverage\u0027, JacocoReport)"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"coverage.configure {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    afterEvaluate {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"    reports {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        html.required \u003d true"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        xml.required \u003d true"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"String getRepoSenseVersion() {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    String repoSenseVersion \u003d project.property(\"version\")"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    if (repoSenseVersion.equals(\"unspecified\")) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        repoSenseVersion \u003d versionDetails().commitDistance \u003d\u003d 0 ? versionDetails().lastTag : versionDetails().gitHash"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    return repoSenseVersion"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"def syncFrontendPublic \u003d tasks.register(\u0027syncFrontendPublic\u0027, Sync) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    from \u0027reposense-report\u0027"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    into \u0027frontend/public/\u0027"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    include \u0027**/*.json\u0027"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    includeEmptyDirs \u003d false"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    preserve {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        include \u0027index.html\u0027"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        include \u0027favicon.ico\u0027"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"def macHotReloadFrontend \u003d tasks.register(\u0027macHotReloadFrontend\u0027, Exec) {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    dependsOn installFrontend"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    onlyIf {os.isMacOsX()}"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    commandLine \u0027npm\u0027, \u0027run\u0027, \u0027serveOpen\u0027"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"def windowsHotReloadFrontend \u003d tasks.register(\u0027windowsHotReloadFrontend\u0027, Exec) {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    dependsOn installFrontend"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    onlyIf {os.isWindows()}"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    commandLine \u0027cmd\u0027,\u0027/c\u0027, \u0027START\u0027, \u0027\"hotreload RepoSense frontend\"\u0027, \u0027npm\u0027, \u0027run\u0027, \u0027serveOpen\u0027"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"def linuxHotReloadFrontend \u003d tasks.register(\u0027linuxHotReloadFrontend\u0027, Exec) {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    dependsOn installFrontend"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    onlyIf {os.isLinux()}"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    workingDir \u0027frontend/\u0027"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    commandLine \u0027npm\u0027, \u0027run\u0027, \u0027serveOpen\u0027"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"tasks.register(\u0027hotReloadFrontend\u0027) {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    dependsOn syncFrontendPublic"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    finalizedBy windowsHotReloadFrontend"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    finalizedBy macHotReloadFrontend"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    finalizedBy linuxHotReloadFrontend"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}"},{"lineNumber":317,"author":{"gitId":"-"},"content":"// End of hot reload Tasks"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"void deleteReposAddressDirectory() {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    final String REPOS_ADDRESS \u003d \"repos\""},{"lineNumber":321,"author":{"gitId":"-"},"content":"    def reposDirectory \u003d new File(REPOS_ADDRESS)"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    reposDirectory.deleteDir()"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027build\u0027, \u0027systemtest\u0027, \u0027frontendTest\u0027, \u0027coverage\u0027"}],"authorContributionMap":{"MarcusTXK":12,"-":313}},{"path":"config/checks/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"# Runs all check-*.sh scripts, and returns a non-zero exit code if any of them fail."},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"ret\u003d0 \u0026\u0026"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"for checkscript in \"$dir\"/check-*.sh; do"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"    chmod +x $checkscript"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"    if ! \"$checkscript\"; then"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"        ret\u003d1"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"    fi"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"done"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"exit $ret"}],"authorContributionMap":{"MarcusTXK":12}},{"path":"docs/_markbind/layouts/ug-sitenav.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set ug_sitenav_items \u003d ["},{"lineNumber":2,"author":{"gitId":"-"},"content":"  {name: \"Overview\", link: \"ug/index.html\"},"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  {name: \"Generating reports\", link: \"ug/generatingReports.html\"},"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  {name: \"Using reports\", link: \"ug/usingReports.html\"},"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  {name: \"Customizing reports\", link: \"ug/customizingReports.html\"},"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {name: \"Sharing reports\", link: \"ug/sharingReports.html\"},"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {name: \"Appendices\"},"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  {level: 2, name: \"CLI syntax reference\", link: \"ug/cli.html\"},"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {level: 2, name: \"Config files format\", link: \"ug/configFiles.html\"},"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"  {level: 2, name: \"Advanced syntax: `author-config.csv`\", link: \"ug/authorConfigSyntax.html\"}, "},{"lineNumber":11,"author":{"gitId":"-"},"content":"  {level: 2, name: \"Using `@@author` tags\", link: \"ug/usingAuthorTags.html\"},"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  {level: 2, name: \"RepoSense with Netlify\", link: \"ug/withNetlify.html\"},"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  {level: 2, name: \"RepoSense with GitHub Actions\", link: \"ug/withGithubActions.html\"},"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  {level: 2, name: \"RepoSense with Travis\", link: \"ug/withTravis.html\"},"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  {level: 2, name: \"`run.sh` format\", link: \"ug/runSh.html\"},"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  {level: 2, name: \"FAQ\", link: \"ug/faq.html\"},"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  {level: 2, name: \"Troubleshooting\", link: \"ug/troubleshooting.html\"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":"]"},{"lineNumber":19,"author":{"gitId":"-"},"content":"%}"},{"lineNumber":20,"author":{"gitId":"-"},"content":"{% from \"scripts/macros.njk\" import show_sitenav_items with context %}"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003csite-nav\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"{{ show_sitenav_items(ug_sitenav_items) }}"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/site-nav\u003e"}],"authorContributionMap":{"sikai00":1,"-":22}},{"path":"docs/_markbind/variables.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_announcement\"\u003e\u003cmd\u003e:fas-bell:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_book\"\u003e\u003cmd\u003e:fas-book:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_calendar\"\u003e\u003cmd\u003e:fas-calendar-alt:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_dislike\"\u003e\u003cmd\u003e:fas-thumbs-down:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_example\"\u003e\u003cmd\u003e:fas-cube:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_embedding\"\u003e\u003cmd\u003e:glyphicon-log-in:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_exercise\"\u003e\u003cmd\u003e:fas-dumbbell:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_extra\"\u003e\u003cspan class\u003d\u0027badge rounded-pill bg-secondary\u0027\u003e\u003cmd\u003e:fas-plus: extra\u003c/md\u003e\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_info\"\u003e\u003cmd\u003e:fas-info-circle:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_like\"\u003e\u003cmd\u003e:fas-thumbs-up:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_linux\"\u003e\u003cmd\u003e:fab-linux:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_level_basic\"\u003e\u003cmd\u003e\u003cspan class\u003d\"badge rounded-pill bg-danger\"\u003e:far-star:\u003c/span\u003e\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_level_intermediate\"\u003e\u003cmd\u003e\u003cspan class\u003d\"badge rounded-pill bg-warning text-white\"\u003e:far-star::far-star:\u003c/span\u003e\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_level_advanced\"\u003e\u003cmd\u003e\u003cspan class\u003d\"badge rounded-pill bg-success\"\u003e:far-star::far-star::far-star:\u003c/span\u003e\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_important_big_red\"\u003e\u003cfont color\u003d\"red\"\u003e\u003cbig\u003e:glyphicon-exclamation-sign:\u003c/big\u003e\u003c/font\u003e\u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_important\"\u003e\u003cmd\u003e:glyphicon-exclamation-sign:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_new_window\"\u003e\u003cmd\u003e:glyphicon-new-window:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_outcome\"\u003e\u003cmd\u003e:fas-trophy:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_output\"\u003e\u003cmd\u003e:fas-arrow-down:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_output_right\"\u003e\u003cmd\u003e:fas-arrow-right:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_print\"\u003e\u003cmd\u003e:glyphicon-print:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_prereq\"\u003e\u003cmd\u003e:glyphicon-education:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_preview\"\u003e\u003cmd\u003e:glyphicon-eye-open:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_pro_tip\"\u003e\u003cspan class\u003d\"badge rounded-pill bg-warning\"\u003e:fas-lightbulb: PRO TIP\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_Q\"\u003e\u003cmd\u003e:glyphicon-question-sign:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_Q_A\"\u003e{{ icon_Q | safe }}:glyphicon-ok-sign:\u003c/span\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_resource\"\u003e\u003cmd\u003e:fas-paperclip:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_terminal\"\u003e\u003csmal\u003e\u003cspan class\u003d\"badge bg-secondary\"\u003e\u0026gt;_\u003c/span\u003e\u003c/smal\u003e\u003c/span\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_text\"\u003e\u003cmd\u003e:far-file-alt:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_tick\"\u003e\u003cmd\u003e:fas-check:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"\u003cspan id\u003d\"icon_tip\"\u003e\u003cspan class\u003d\"badge rounded-pill bg-warning\"\u003e:fas-lightbulb:\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_tick_green\"\u003e\u003cspan style\u003d\"color:green\"\u003e{{ icon_tick | safe }}\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_todo\"\u003e\u003cmd\u003e:glyphicon-check:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_slides\"\u003e\u003cmd\u003e:far-images:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_video\"\u003e\u003cmd\u003e:glyphicon-facetime-video:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_windows\"\u003e\u003cmd\u003e:fab-windows:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_x\"\u003e\u003cmd\u003e:fas-times:\u003c/md\u003e\u003c/span\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"icon_x_red\"\u003e\u003cspan style\u003d\"color:red\"\u003e{{ icon_x | safe }}\u003c/span\u003e\u003c/span\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"bad\"\u003e\u003cfont color\u003d\"red\"\u003e\u003cmd\u003e**{{ icon_dislike | safe }} Bad**\u003c/md\u003e\u003c/font\u003e\u003c/span\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cspan id\u003d\"good\"\u003e\u003cfont color\u003d\"green\"\u003e\u003cmd\u003e**{{ icon_like | safe }} Good**\u003c/md\u003e\u003c/font\u003e\u003c/span\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cvariable from\u003d\"variables.json\" /\u003e"}],"authorContributionMap":{"sikai00":7,"-":35}},{"path":"docs/dg/architecture.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Architecture\" %}"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":" ![architecture](../images/architecture.png)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"*Figure 1. Overall architecture of RepoSense*"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Parser(ConfigParser)"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"[`Parser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser) contains three components:"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":" * [`ArgsParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/ArgsParser.java): Parses the user-supplied command line arguments into a `CliArguments` object. `RunConfigurationDecider` then gets the appropriate `RunConfiguration` for the `CliArguments` which generates the appropriate `Config` files."},{"lineNumber":18,"author":{"gitId":"-"},"content":" * [`CsvParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/CsvParser.java): Abstract generic class for CSV parsing functionality. The following three classes extend `CsvParser`."},{"lineNumber":19,"author":{"gitId":"-"},"content":"   * [`AuthorConfigCsvParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/AuthorConfigCsvParser.java): Parses the `author-config.csv` config file into a list of `AuthorConfiguration` for each repository to analyze."},{"lineNumber":20,"author":{"gitId":"-"},"content":"   * [`GroupConfigCsvParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/GroupConfigCsvParser.java): Parses the `group-config.csv` config file into a list of `GroupConfiguration` for each repository to analyze."},{"lineNumber":21,"author":{"gitId":"-"},"content":"   * [`RepoConfigCsvParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/RepoConfigCsvParser.java): Parses the `repo-config.csv` config file into a list of `RepoConfiguration` for each repository to analyze."},{"lineNumber":22,"author":{"gitId":"-"},"content":" * [`JsonParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/JsonParser.java): Abstract generic class for JSON parsing functionality. The following class extends `JsonParser` class:"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   * [`StandaloneConfigJsonParser`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/parser/StandaloneConfigJsonParser.java): Parses the `_reposense/config.json` config file into a `StandaloneConfig`."},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Git"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"[`Git`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git) package contains the wrapper classes for respective *git* commands."},{"lineNumber":30,"author":{"gitId":"-"},"content":" * [`GitBlame`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitBlame.java): Wrapper class for `git blame` functionality. Traces the revision and author last modified each line of a file."},{"lineNumber":31,"author":{"gitId":"-"},"content":" * [`GitBranch`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitBranch.java): Wrapper class for `git branch` functionality. Gets the name of the working branch of the target repo."},{"lineNumber":32,"author":{"gitId":"-"},"content":" * [`GitCatFile`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitCatFile.java): Wrapper class for `git cat-file` functionality. Obtains the parent commit hash with the given commit indicated by the commit hash."},{"lineNumber":33,"author":{"gitId":"-"},"content":" * [`GitCheckout`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitCheckout.java): Wrapper class for `git checkout` functionality. Checks out the repository by branch name or commit hash."},{"lineNumber":34,"author":{"gitId":"-"},"content":" * [`GitClone`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitClone.java): Wrapper class for `git clone` functionality. Clones the repository from the given URL or local directory into a temporary folder in order to run the analysis."},{"lineNumber":35,"author":{"gitId":"-"},"content":" * [`GitDiff`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitDiff.java): Wrapper class for `git diff` functionality. Obtains the changes between commits."},{"lineNumber":36,"author":{"gitId":"-"},"content":" * [`GitLog`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitLog.java): Wrapper class for `git log` functionality. Obtains the commit logs and the authors\u0027 info."},{"lineNumber":37,"author":{"gitId":"-"},"content":" * [`GitRevList`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitRevList.java): Wrapper class for `git rev-list` functionality. Retrieves the commit objects in reverse chronological order."},{"lineNumber":38,"author":{"gitId":"-"},"content":" * [`GitRevParse`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitRevParse.java): Wrapper class for `git rev-parse` functionality. Ensures that the branch of the repo is to be analyzed exists."},{"lineNumber":39,"author":{"gitId":"-"},"content":" * [`GitShortlog`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitShortlog.java): Wrapper class for `git shortlog` functionality. Obtains the list of authors who have contributed to the target repo."},{"lineNumber":40,"author":{"gitId":"-"},"content":" * [`GitShow`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitShow.java): Wrapper class for `git show` functionality. Gets the date of the commit with the commit hash."},{"lineNumber":41,"author":{"gitId":"-"},"content":" * [`GitUtil`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitUtil.java): Contains helper functions used by the other Git classes above."},{"lineNumber":42,"author":{"gitId":"-"},"content":" * [`GitVersion`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/git/GitVersion.java): Wrapper class for `git --version` functionality. Obtains the current git version of the environment that RepoSense is being run on."},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"Note that when constructing new commands containing path arguments, use the `StringsUtil::addQuotesForFilePath` method to safely convert a Java string into an equivalent Bash/CMD argument."},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CommitsReporter"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"[`CommitsReporter`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/CommitsReporter.java) is responsible for analyzing the **commit** history and generating a [`CommitContributionSummary`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/model/CommitContributionSummary.java) for each repository. `CommitContributionSummary` contains information such as each author\u0027s daily and weekly contribution and the variance of their contribution. `CommitsReporter`"},{"lineNumber":53,"author":{"gitId":"-"},"content":" 1. uses [`CommitInfoExtractor`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/CommitInfoExtractor.java) to run the `git log` command, which generates each commit\u0027s statistics within the date range."},{"lineNumber":54,"author":{"gitId":"-"},"content":" 1. generates a [`CommitInfo`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/model/CommitInfo.java) for each commit, which contains the `infoLine` and `statLine`."},{"lineNumber":55,"author":{"gitId":"-"},"content":" 1. uses [`CommitInfoAnalyzer`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/CommitInfoAnalyzer.java) to extract the relevant data from `CommitInfo` into a [`CommitResult`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/model/CommitResult.java), such as the number of line insertions and deletions in the commit and the author of the commit."},{"lineNumber":56,"author":{"gitId":"-"},"content":" 1. uses [`CommitResultAggregator`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/CommitResultAggregator.java) to aggregate all `CommitResult` into a [`CommitContributionSummary`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/commits/model/CommitContributionSummary.java)."},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"## AuthorshipReporter"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"[`AuthorshipReporter`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/AuthorshipReporter.java) is responsible for analyzing the whitelisted **files**, traces the original author for each line of text/code, and generating an [`AuthorshipSummary`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/model/AuthorshipSummary.java) for each repository. `AuthorshipSummary` contains the analysis results of the whitelisted files and the number of line contributions each author made. `AuthorshipReporter`"},{"lineNumber":63,"author":{"gitId":"-"},"content":" 1. uses [`FileInfoExtractor`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/FileInfoExtractor.java) to traverse the repository to find all relevant files."},{"lineNumber":64,"author":{"gitId":"-"},"content":" 1. generates a [`FileInfo`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/model/FileInfo.java) for each relevant file, which contains the path to the file and a list of [`LineInfo`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/model/LineInfo.java) representing each line of the file."},{"lineNumber":65,"author":{"gitId":"-"},"content":" 1. uses [`FileInfoAnalyzer`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/FileInfoAnalyzer.java) to analyze each file, using `git blame` or annotations, and finds the `Author` for each `LineInfo`."},{"lineNumber":66,"author":{"gitId":"-"},"content":" 1. generates a [`FileResult`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/model/FileResult.java) for each file, which consolidates the authorship results into a *Map* of each author\u0027s line contribution to the file."},{"lineNumber":67,"author":{"gitId":"-"},"content":" 1. uses [`FileResultAggregator`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/authorship/FileResultAggregator.java) to aggregate all `FileResult` into an `AuthorshipSummary`."},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"## ReportGenerator(Main)"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"[`ReportGenerator`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/report/ReportGenerator.java)"},{"lineNumber":74,"author":{"gitId":"-"},"content":" 1. clones repositories using the `GitClone` API in a multi-threaded fashion."},{"lineNumber":75,"author":{"gitId":"-"},"content":"    * By default, 4 threads are used for cloning; the number of threads can be specified using the CLI argument `--cloning-threads \u003cthreads\u003e`."},{"lineNumber":76,"author":{"gitId":"-"},"content":" 1. analyzes the repositories using the `CommitReporter` and `AuthorshipReporter` in a multi-threaded fashion."},{"lineNumber":77,"author":{"gitId":"-"},"content":"    * First, copies the template files into the designated output directory."},{"lineNumber":78,"author":{"gitId":"-"},"content":"    * Then, uses `CommitReporter` and `AuthorshipReporter` to produce the commit and authorship summary, respectively."},{"lineNumber":79,"author":{"gitId":"-"},"content":"    * By default, the number of threads used for analysis is equal to the number of CPU cores available; the number of threads can be specified using the CLI argument `--analysis-threads \u003cthreads\u003e`."},{"lineNumber":80,"author":{"gitId":"-"},"content":" 1. generates the `JSON` files needed to generate the `HTML` report."},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"## System"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"[`System`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/system) contains the classes that interact with the Operating System and external processes."},{"lineNumber":87,"author":{"gitId":"-"},"content":" * [`CommandRunner`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/system/CommandRunner.java) creates processes that execute commands on the terminal. It consists of many *git* commands."},{"lineNumber":88,"author":{"gitId":"-"},"content":" * [`LogsManager`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/system/LogsManager.java) uses the `java.util.logging` package for logging. The `LogsManager` class is used to manage the logging levels and logging destinations. Log messages are output through: `Console` and to a `.log` file."},{"lineNumber":89,"author":{"gitId":"-"},"content":" * [`ReportServer`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/system/ReportServer.java) starts a server to display the report on the browser. It depends on the `net.freeutils.httpserver` package."},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Model"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"[`Model`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/model) holds the data structures that are commonly used by the different aspects of *RepoSense*."},{"lineNumber":96,"author":{"gitId":"-"},"content":" * [`Author`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/model/Author.java) stores the `Git ID` of an author. Any contributions or commits made by the author, using his/her `Git ID` or aliases, will be attributed to the same `Author` object. `AuthorshipReporter` and `CommitsReporter` use it to attribute the commit and file contributions to the respective authors."},{"lineNumber":97,"author":{"gitId":"-"},"content":" * [`CliArguments`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/model/CliArguments.java) stores the parsed command-line arguments supplied by the user. It contains the configuration settings such as the CSV config file to read from, the directory to output the report to, and the date range of commits to analyze. These configuration settings are passed into `RepoConfiguration`."},{"lineNumber":98,"author":{"gitId":"-"},"content":" * [`FileTypeManager`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/model/FileTypeManager.java) stores the file format to be analyzed and the custom groups specified by the user for any repository."},{"lineNumber":99,"author":{"gitId":"-"},"content":" * [`RepoConfiguration`](https://github.com/reposense/RepoSense/blob/master/src/main/java/reposense/model/RepoConfiguration.java) stores the configuration information from the CSV config file for a single repository: the repository\u0027s organization, name, branch, list of authors to analyze, date range to analyze commits, and files from `CliArguments`."},{"lineNumber":100,"author":{"gitId":"-"},"content":" This configuration information is used by:"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    - `GitClone` to determine the location to clone the repository from and which branch to check out to."},{"lineNumber":102,"author":{"gitId":"-"},"content":"    - `AuthorshipReporter` and `CommitsReporter` to determine the range of commits and files to analyze."},{"lineNumber":103,"author":{"gitId":"-"},"content":"    - `ReportGenerator` to determine the directory to output the report."}],"authorContributionMap":{"MarcusTXK":1,"-":102}},{"path":"docs/dg/report.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"HTML report\" %}"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"The report\u0027s source files are located in [`frontend/src`](https://github.com/reposense/RepoSense/blob/master/frontend/src) and are built by [vue-cli](https://github.com/vuejs/vue-cli) before being packaged into the JAR file to be extracted as part of the report."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"[Vue](https://vuejs.org/api/) (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. It is heavily utilized in the report to update the information in the various views dynamically. (Style guide available [here](https://vuejs.org/style-guide/), Developer tool available [here](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd)). Vue lifecycle hooks are the defined methods that get executed in a particular stage of the Vue object lifespan. The following is the Vue lifecycle diagram taken from [here](https://vuejs.org/guide/essentials/lifecycle.html#lifecycle-diagram) indicating the hook sequence:"},{"lineNumber":12,"author":{"gitId":"-"},"content":"![vue lifecycle diagram](../images/vue-lifecycle-diagram.png)"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"The following is a snapshot of the report:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"![report screenshot](../images/report-summary.png)"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Report architecture"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ReportArchitecture.puml\"/\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"The main Vue object (`app.vue`) is responsible for loading the report via an async call to `api.ts`, which parses `summary.json`. Its `repos` attribute is tied to the global `window.REPOS`, and is passed into the various other modules when the information is needed."},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"The report interface is broken down into two main parts"},{"lineNumber":26,"author":{"gitId":"-"},"content":"- the summary view"},{"lineNumber":27,"author":{"gitId":"-"},"content":"- and the tabbed interface"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"The summary view acts as the main report, which shows the various calculations. \u003c/br\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"The tabbed interface is responsible for loading various modules such as authorship and zoom to display additional information."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"## Typescript and Vue files"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"- **main.ts** - sets up plugins and 3rd party components used in the report"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"- [**app.vue**](#app-app-vue) - module that renders the `router-view`"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"- [**api.ts**](#data-loader-api-ts) - loading and parsing of the report content"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"- [**c-home.vue**](#home-view-c-home-vue) - module that supports the report interface"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"- [**c-widget.vue**](#widget-view-c-widget-vue) - module that supports the widget interface"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"- [**c-summary.vue**](#summary-view-c-summary-vue) - module that supports the summary view"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"- [**c-authorship.vue**](#authorship-view-c-authorship-vue) - module that supports the authorship tab view"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"- [**c-zoom.vue**](#zoom-view-c-zoom-vue) - module that supports the zoom tab view"},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"- [**c-ramp.vue**](#ramp-view-c-ramp-vue) - module that supports the ramp chart view"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"- [**c-segment.vue**](#segment-view-c-segment-vue) - module that supports the code segment view"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"## JSON report files"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"- **summary.json** - a list of all the repositories and their respective details"},{"lineNumber":52,"author":{"gitId":"-"},"content":"- **projName/commits.json** - contains information of the users\u0027 commits information (e.g., line deletion, insertion, etc.), grouped by date"},{"lineNumber":53,"author":{"gitId":"-"},"content":"- **projName/authorship.json** - contains information from git blame, detailing the author of each line for all the processed files"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"## App ([app.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/app.vue))"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"This contains the logic for the main VueJS object, `app.vue`, which is the entry point for the web application."},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"Vuex in `store.ts` is used to pass the necessary data into the relevant modules."},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"`c-home`, `c-widget`, `c-summary`, `c-authorship`, `c-zoom`, `c-segment`, and `c-ramp` are components embedded into the report and will render the corresponding content based on the data passed into it from Vuex."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Loading of report information"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"The main Vue object depends on the `summary.json` data to determine the right `commits.json` files to load into memory. This is handled by `api.ts`, which loads the relevant file information from the network files if available; otherwise, a report archive, `archive.zip`, has to be used."},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"Once the relevant `commit.json` files are loaded, all the repo information will be passed into `c-summary` to be loaded in the summary view as the relevant ramp charts."},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"### Activating additional view modules"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Most activity or actions should happen within the module itself, but in the case where there is a need to spawn or alter the view of another module, an event is emitted from the first module to the Vuex store, which then handles the data received and passes it along to the relevant modules."},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"### Hash link"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Other than the global main Vue object, another global variable we have is the `window.hashParams`. This object is responsible for generating the relevant permalink for a specific view of the report\u0027s summary module."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"## Data loader ([api.ts](https://github.com/reposense/RepoSense/blob/master/frontend/src/utils/api.ts))"},{"lineNumber":77,"author":{"gitId":"-"},"content":"This is the module that is in charge of loading and parsing the data files generated as part of the report."},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"### Loading from ZIP file"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Due to security design, most modern browsers (e.g., Chrome) do not allow web pages to obtain local files using the directory alone. As such, a ZIP archive of the report information will be produced alongside the report generation."},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"This archive will be used in place of the network files to load information into the report when the network files are unavailable."},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"The API module will be handling all requests for all the JSON data files. If the network file is not available, the files will be obtained from the zip archive provided."},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Retrieving and parsing information"},{"lineNumber":87,"author":{"gitId":"-"},"content":"After the JSON files are loaded from their respective sources, the data will be parsed as objects and included inside the global storage object, `window.REPOS`,  in the right format."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"For the basic skeleton of `window.REPOS`, refer to the generated `summary.json` file in the report for more details."},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"## Home view ([c-home.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/views/c-home.vue))"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"The `c-home` module is in charge of rendering the main report, and renders `c-resizer`, `c-summary`, `c-authorship` and `c-zoom`."},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"## Widget view ([c-widget.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/views/c-widget.vue))"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"The `c-widget` module is in charge of rendering the widget from the `iframe` and only renders `c-summary`. An additional prop, `isWidgetMode`, is passed to `c-summary` so it knows to render as a widget and omit unnecessary elements."},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"## Summary view ([c-summary.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/views/c-summary.vue))"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"ckcherry23"},"content":"The `c-summary` module is in charge of loading the ramp charts from the corresponding `commits.json`."},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ReportArchitectureSummary.puml\"/\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Initializing the data for the ramp charts"},{"lineNumber":114,"author":{"gitId":"-"},"content":"The summary module is activated after the information is loaded from the main Vue.JS object. At creation, the `repo` attribute is populated with the `window.REPOS` object, which contains information loaded from `summary.json`."},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Filtering users and repositories"},{"lineNumber":117,"author":{"gitId":"-"},"content":"The commits information is retrieved from the corresponding project folders for each repository. This information will be filtered and sorted before being passed into the template to be displayed as ramp charts."},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"## Authorship view ([c-authorship.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/views/c-authorship.vue))"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"The authorship module retrieves the relevant information from the corresponding `authorship.json` file if it is not yet loaded. If it has been loaded, the data will be written into `window.REPOS` and be read from there instead."},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ReportArchitectureAuthorship.puml\"/\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"### Showing relevant information by authors"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The files will be filtered, picking only files the selected author has written in. The lines are then split into chunks of \"touched\" and \"untouched\" code segments displayed in the tab view which will be popped up on the right side of the screen."},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"## Zoom view ([c-zoom.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/views/c-zoom.vue))"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"ckcherry23"},"content":"The `c-zoom` module is in charge of filtering and displaying the commits from the ramp chart\u0027s selected sub-range."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"## Ramp view ([c-ramp.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/components/c-ramp.vue))"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"ckcherry23"},"content":"The `c-ramp` module is responsible for receiving the relevant information from `c-summary` and generating ramp charts that contain ramp slices."},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Padding for dates"},{"lineNumber":143,"author":{"gitId":"-"},"content":"For ramps between the date ranges, the slices will be selected and it will be pre and post padded with empty slices to align the ramp slice between the `sinceDate` and `untilDate`. The ramps will then be rendered with the slices in the right position."},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"## Segment view ([c-segment.vue](https://github.com/reposense/RepoSense/blob/master/frontend/src/components/c-segment.vue))"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"ckcherry23"},"content":"The `c-segment` module is used as a component in `c-authorship`. It separates the code in terms of \"touched\" and \"untouched\" segments and only loads each \"untouched\" segment when it is toggled."}],"authorContributionMap":{"ckcherry23":22,"MarcusTXK":13,"-":114}},{"path":"docs/dg/styleGuides.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Appendix: Style guides\" %}"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"Our coding standards are mostly based on those at [se-education.org/guides](https://se-education.org/guides)."},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"* [**CSS** coding standard](https://se-education.org/guides/conventions/css.html)"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* [**Files/folders** naming conventions](https://se-education.org/guides/conventions/files.html)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* [**HTML** coding standard](https://se-education.org/guides/conventions/html.html)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* [**Markdown/MarkBind** coding standard](https://se-education.org/guides/conventions/markdown.html)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* [**Java** coding standard](https://se-education.org/guides/conventions/java/index.html)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* [**JavaScript** coding standard](https://se-education.org/guides/conventions/javascript.html)"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"* **TypeScript**: In addition to the JavaScript coding standard, follow the [**recommended ESLint rules**](https://typescript-eslint.io/rules/) and the formatting rules [described below](#typescript-specific-formatting)."},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"* **Vue Components**: Follow the [**Vue style guide**](https://vuejs.org/style-guide/), up to the **Recommended** section."},{"lineNumber":21,"author":{"gitId":"-"},"content":"* **Documentation**: Follow the [**Google developer documentation style guide**](https://developers.google.com/style)."},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Note on Ternary Operators:"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Ternary operators can be used to shorten if-else blocks such as this:"},{"lineNumber":25,"author":{"gitId":"-"},"content":"```java"},{"lineNumber":26,"author":{"gitId":"-"},"content":"LocalDateTime min \u003d ARBITRARY_FIRST_COMMIT_DATE_UTC.withZoneSameInstant(zoneId).toLocalDateTime();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if (!commitInfos.isEmpty()) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    min \u003d commitInfos.get(0).getTime();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":"return min;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"```"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"The result would look something like this:"},{"lineNumber":34,"author":{"gitId":"-"},"content":"```java"},{"lineNumber":35,"author":{"gitId":"-"},"content":"return (commitInfos.isEmpty())"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ? ARBITRARY_FIRST_COMMIT_DATE_UTC.withZoneSameInstant(zoneId).toLocalDateTime()"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        : commitInfos.get(0).getTime();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"```"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"To preserve readability, it is recommended that if-else blocks should only be"},{"lineNumber":41,"author":{"gitId":"-"},"content":"converted to ternary operators if the resultant code can be kept at most 3 lines long"},{"lineNumber":42,"author":{"gitId":"-"},"content":"(in accordance to the coding standard)."},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Additional Javadoc requirements:"},{"lineNumber":45,"author":{"gitId":"-"},"content":"In addition to what has been mentioned in the [**Java** coding standard (SE-EDU)](https://se-education.org/guides/conventions/java/index.html) and [**Google Java Style Guide**](https://google.github.io/styleguide/javaguide.html), we also stipulate the following standards for Javadoc:"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* If Javadoc is written for a method, all input parameters should be described in the Javadoc, either in the description with `@code tags` or through `@param` block tags."},{"lineNumber":47,"author":{"gitId":"-"},"content":"  * If `@param` block tags are used, they must be used for all parameters."},{"lineNumber":48,"author":{"gitId":"-"},"content":"  * This is not necessary (although still recommended) for methods with `@Override` annotations if Javadoc is used. However, if the method that is being overriden is part of your code and has Javadoc, all parameters must be described."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"Negative Examples:"},{"lineNumber":51,"author":{"gitId":"-"},"content":"```java"},{"lineNumber":52,"author":{"gitId":"-"},"content":"// Not okay (Only mentions zoneId parameter):"},{"lineNumber":53,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":54,"author":{"gitId":"-"},"content":" * Returns a {@link LocalDateTime} object adjusted for timezone given by {@code zoneId}."},{"lineNumber":55,"author":{"gitId":"-"},"content":" */"},{"lineNumber":56,"author":{"gitId":"-"},"content":"public LocalDateTime adjustTimeZone(LocalDateTime sinceDate, ZoneId zoneId) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //Code here"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"// Not okay (@param tag used only for zoneId)"},{"lineNumber":61,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":62,"author":{"gitId":"-"},"content":" * Returns a {@link LocalDateTime} object by adjusting {@code sinceDate}"},{"lineNumber":63,"author":{"gitId":"-"},"content":" * to the timezone given by {@code zoneId}."},{"lineNumber":64,"author":{"gitId":"-"},"content":" *"},{"lineNumber":65,"author":{"gitId":"-"},"content":" * @param zoneId The timezone ID to adjust the sinceDate to."},{"lineNumber":66,"author":{"gitId":"-"},"content":" */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"public LocalDateTime adjustTimeZone(LocalDateTime sinceDate, ZoneId zoneId) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    //Code here"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Positive Example #1:"},{"lineNumber":72,"author":{"gitId":"-"},"content":"```java"},{"lineNumber":73,"author":{"gitId":"-"},"content":"// Okay (No @param tags):"},{"lineNumber":74,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":75,"author":{"gitId":"-"},"content":" * Returns a {@link LocalDateTime} object by adjusting {@code sinceDate}"},{"lineNumber":76,"author":{"gitId":"-"},"content":" * to the timezone given by {@code zoneId}."},{"lineNumber":77,"author":{"gitId":"-"},"content":" */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"public LocalDateTime adjustTimeZone(LocalDateTime sinceDate, ZoneId zoneId) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //Code here"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Positive Example #2:"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```java"},{"lineNumber":84,"author":{"gitId":"-"},"content":"// Okay (@param tags used for all inputs):"},{"lineNumber":85,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":86,"author":{"gitId":"-"},"content":" * Returns a {@link LocalDateTime} object by adjusting {@code sinceDate}"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * to the timezone given by {@code zoneId}."},{"lineNumber":88,"author":{"gitId":"-"},"content":" *"},{"lineNumber":89,"author":{"gitId":"-"},"content":" * @param sinceDate The date prior to the timezone conversion."},{"lineNumber":90,"author":{"gitId":"-"},"content":" * @param zoneId The timezone ID to adjust the sinceDate to."},{"lineNumber":91,"author":{"gitId":"-"},"content":" */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"public LocalDateTime adjustTimeZone(LocalDateTime sinceDate, ZoneId zoneId) {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    //Code here"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}"},{"lineNumber":95,"author":{"gitId":"-"},"content":"```"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"* Within the main code, if an exception is thrown in a method (both header and body) for which Javadoc is written, a `@throws` tag must be used to describe how the exception is likely to arise."},{"lineNumber":98,"author":{"gitId":"-"},"content":"  * This requirement does not apply to test code."},{"lineNumber":99,"author":{"gitId":"-"},"content":"  * One `@throws` tag per unique exception."},{"lineNumber":100,"author":{"gitId":"-"},"content":"  * The order of exceptions in the `@throws` tag block should match that of the method\u0027s `throws` statement."},{"lineNumber":101,"author":{"gitId":"-"},"content":"```java"},{"lineNumber":102,"author":{"gitId":"-"},"content":"// Not okay (order of exceptions in tag block and method signature do not match):"},{"lineNumber":103,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":104,"author":{"gitId":"-"},"content":" * Returns a {@link LocalDateTime} object from {@code dateString}."},{"lineNumber":105,"author":{"gitId":"-"},"content":" *"},{"lineNumber":106,"author":{"gitId":"-"},"content":" * @throws ParseException if {@code dateString} cannot be parsed."},{"lineNumber":107,"author":{"gitId":"-"},"content":" * @throws NullPointerException if {@code dateString} is null."},{"lineNumber":108,"author":{"gitId":"-"},"content":" */"},{"lineNumber":109,"author":{"gitId":"-"},"content":"public LocalDateTime parseDate(String dateString) throws NullPointerException, ParseException {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    String trimmedString \u003d dateString.toUpperCase(); // NullPointerException may happen here."},{"lineNumber":111,"author":{"gitId":"-"},"content":"    // Code here"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"// Should be:"},{"lineNumber":115,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":116,"author":{"gitId":"-"},"content":" * Returns a {@link LocalDateTime} object from {@code dateString}."},{"lineNumber":117,"author":{"gitId":"-"},"content":" *"},{"lineNumber":118,"author":{"gitId":"-"},"content":" * @throws NullPointerException if {@code dateString} is null."},{"lineNumber":119,"author":{"gitId":"-"},"content":" * @throws ParseException if {@code dateString} cannot be parsed."},{"lineNumber":120,"author":{"gitId":"-"},"content":" */"},{"lineNumber":121,"author":{"gitId":"-"},"content":"public LocalDateTime parseDate(String dateString) throws NullPointerException, ParseException {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    String trimmedString \u003d dateString.toUpperCase(); // NullPointerException may happen here."},{"lineNumber":123,"author":{"gitId":"-"},"content":"    // Code here"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}"},{"lineNumber":125,"author":{"gitId":"-"},"content":"```"},{"lineNumber":126,"author":{"gitId":"vvidday"},"content":"## TypeScript specific formatting"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"vvidday"},"content":"For TypeScript specific code, such as within an `interface` or type annotations, we also stipulate the following standards:"},{"lineNumber":129,"author":{"gitId":"vvidday"},"content":"* Use semicolons as delimiters for TypeScript interfaces and types."},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"vvidday"},"content":"Negative Examples:"},{"lineNumber":132,"author":{"gitId":"vvidday"},"content":"```typescript"},{"lineNumber":133,"author":{"gitId":"vvidday"},"content":"// missing semicolon delimiter"},{"lineNumber":134,"author":{"gitId":"vvidday"},"content":"interface Foo {"},{"lineNumber":135,"author":{"gitId":"vvidday"},"content":"    name: string"},{"lineNumber":136,"author":{"gitId":"vvidday"},"content":"    greet(): string"},{"lineNumber":137,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":138,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":139,"author":{"gitId":"vvidday"},"content":"// using incorrect delimiter"},{"lineNumber":140,"author":{"gitId":"vvidday"},"content":"interface Foo {"},{"lineNumber":141,"author":{"gitId":"vvidday"},"content":"    name: string,"},{"lineNumber":142,"author":{"gitId":"vvidday"},"content":"    greet(): string,"},{"lineNumber":143,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":144,"author":{"gitId":"vvidday"},"content":"```"},{"lineNumber":145,"author":{"gitId":"vvidday"},"content":"Positive Example:"},{"lineNumber":146,"author":{"gitId":"vvidday"},"content":"```typescript"},{"lineNumber":147,"author":{"gitId":"vvidday"},"content":"// semicolon delimiter"},{"lineNumber":148,"author":{"gitId":"vvidday"},"content":"interface Foo {"},{"lineNumber":149,"author":{"gitId":"vvidday"},"content":"    name: string;"},{"lineNumber":150,"author":{"gitId":"vvidday"},"content":"    greet(): string;"},{"lineNumber":151,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":152,"author":{"gitId":"vvidday"},"content":"```"},{"lineNumber":153,"author":{"gitId":"vvidday"},"content":"* For type annotations, use a space after but not before."},{"lineNumber":154,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":155,"author":{"gitId":"vvidday"},"content":"Negative Examples:"},{"lineNumber":156,"author":{"gitId":"vvidday"},"content":"```typescript"},{"lineNumber":157,"author":{"gitId":"vvidday"},"content":"let foo:string \u003d \"bar\";"},{"lineNumber":158,"author":{"gitId":"vvidday"},"content":"let foo :string \u003d \"bar\";"},{"lineNumber":159,"author":{"gitId":"vvidday"},"content":"let foo : string \u003d \"bar\";"},{"lineNumber":160,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":161,"author":{"gitId":"vvidday"},"content":"function foo():string {}"},{"lineNumber":162,"author":{"gitId":"vvidday"},"content":"function foo() :string {}"},{"lineNumber":163,"author":{"gitId":"vvidday"},"content":"function foo() : string {}"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"vvidday"},"content":"class Foo {"},{"lineNumber":166,"author":{"gitId":"vvidday"},"content":"    name:string;"},{"lineNumber":167,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"vvidday"},"content":"class Foo {"},{"lineNumber":170,"author":{"gitId":"vvidday"},"content":"    name :string;"},{"lineNumber":171,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":172,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":173,"author":{"gitId":"vvidday"},"content":"class Foo {"},{"lineNumber":174,"author":{"gitId":"vvidday"},"content":"    name : string;"},{"lineNumber":175,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":176,"author":{"gitId":"vvidday"},"content":"```"},{"lineNumber":177,"author":{"gitId":"vvidday"},"content":"Positive Examples:"},{"lineNumber":178,"author":{"gitId":"vvidday"},"content":"```typescript"},{"lineNumber":179,"author":{"gitId":"vvidday"},"content":"let foo: string \u003d \"bar\";"},{"lineNumber":180,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":181,"author":{"gitId":"vvidday"},"content":"function foo(): string {}"},{"lineNumber":182,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":183,"author":{"gitId":"vvidday"},"content":"class Foo {"},{"lineNumber":184,"author":{"gitId":"vvidday"},"content":"    name: string;"},{"lineNumber":185,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":186,"author":{"gitId":"vvidday"},"content":"```"}],"authorContributionMap":{"vvidday":59,"-":127}},{"path":"docs/dg/workflow.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Workflow\" %}"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"{% from \u0027scripts/macros.njk\u0027 import embed with context %}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"Our workflow is mostly based on the guidelines given at se-education.org/guides."},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"**To submit a PR**, follow [this guide](https://se-education.org/guides/guidelines/PRs.html), but note the following:"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"* As we squash the commits when merging a PR, there is \u003d\u003dno need to follow a strict commit organization or write elaborate commit messages for each commit\u003d\u003d.\u003cbr\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  However, when pushing new commits to your PR branch, do clean up _new_ commits (i.e., commits not yet pushed) e.g., delete temporary print statements added for debugging purposes."},{"lineNumber":20,"author":{"gitId":"-"},"content":"* In the PR description, please propose a commit message to be used when the PR is merged eventually. The commit message should follow the guidelines given [here](https://se-education.org/guides/guidelines/PRs.html). You may refer to [this PR](https://github.com/reposense/RepoSense/pull/1057) for an example."},{"lineNumber":21,"author":{"gitId":"-"},"content":"* For simple documentation fixes or tasks with clear instructions, it is unnecessary to create an issue before creating a PR."},{"lineNumber":22,"author":{"gitId":"-"},"content":"* You can refer to the [Architecture](architecture.html) and the [HTML Report](report.html) sections to learn about the design and implementation of RepoSense."},{"lineNumber":23,"author":{"gitId":"-"},"content":"* The section below has more information about the various stages of submitting a PR."},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Find the suitable pull requests"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"* If you are contributing to RepoSense for the first time, you can check the list of [backend issues](https://github.com/reposense/RepoSense/issues?q\u003dis%3Aopen+is%3Aissue+label%3Aa-Backend+label%3Ad.FirstTimers) or [frontend issues](https://github.com/reposense/RepoSense/issues?q\u003dis%3Aopen+is%3Aissue+label%3Ad.FirstTimers+label%3Aa-FrontEnd) for first timers."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"The issues for first timers usually have guidance provided in the comment or have linked pull requests from previous contributors. You can refer to them for implementation details."},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"* If you are more experienced in contributing, aside from searching for issues in the issue tracker, you can find the list of issues organized in a more systematic way under the [Projects Tab](https://github.com/reposense/RepoSense/projects) of the RepoSense repository. This can help you to find issues with suitable workload and direction."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Following the coding standards"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Make sure you know our coding standards."},{"lineNumber":44,"author":{"gitId":"-"},"content":"  {{ embed(\u0027Appendix: Coding Standards\u0027, \u0027styleGuides.md\u0027, level\u003d2) }}"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* **Follow [the tutorial](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to configure Intellij to follow our coding style**."},{"lineNumber":46,"author":{"gitId":"-"},"content":"* **This project uses Checkstyle** to check the compliance of Java code. You can use [this document](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use it."},{"lineNumber":47,"author":{"gitId":"-"},"content":"  * In particular, run `gradlew checkstyleAll` to check the style of all the relevant Java code. This will check the Java code in the following order: main code -\u003e test code -\u003e systemtest code."},{"lineNumber":48,"author":{"gitId":"-"},"content":"  * If you only want to check the main code, run `gradlew checkstyleMain`. Likewise, for test code, run `gradlew checkstyleTest` and for systemtest code, run `gradlew checkstyleSystemtest`."},{"lineNumber":49,"author":{"gitId":"-"},"content":"  * You can also run any of the combination of the above, such as `gradlew checkstyleMain checkstyleTest` or `gradlew checkstyleTest checkstyleSystemtest`."},{"lineNumber":50,"author":{"gitId":"-"},"content":"* **To check Vue files for style errors**, run `gradlew lintFrontend` from the project root directory. You can also run `npm run lintfix` in the `frontend` folder to automatically fix some of the JavaScript and CSS lint errors."},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"* **To perform environmental checks for style errors**, run `gradlew environmentalChecks` from the project root directory. This checks if all files end with a newline, if prohibited line endings (`\\r\\n`) are present and if trailing whitespaces are present."},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Running the app from code"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"section-running-from-code\"\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"* To run the app from code, run `gradlew run` from the project root. By default, it will run based on the config files in the `[project root]/config` folder, and generate the report in the `[project root]/reposense-report` folder."},{"lineNumber":60,"author":{"gitId":"-"},"content":"* To supply flags to customize the report, you can use the `-Dargs\u003d\"[FLAGS]\"` format.\u003cbr\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g., `gradlew run -Dargs\u003d\"--since 31/12/2019 --formats java adoc xml\"`"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Run `gradlew run -Dargs\u003d\"--view\"` to generate the report and view it in the default browser."},{"lineNumber":63,"author":{"gitId":"-"},"content":"* You can refer to the panel below for the format of the flags that can be supplied in `-Dargs\u003d\"[FLAGS]\"`."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"{{ embed(\"User guide → Appendix: **CLI syntax reference**\", \"../ug/cli.md\") }}"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"## Debugging (front-end)"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"**You can use the hot reloading feature to see how your code changes the functionality of the website in real time.**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"1. Navigate to the project root in your terminal."},{"lineNumber":74,"author":{"gitId":"-"},"content":"1. Generate the desired data for the report using `gradlew run` with the appropriate flags."},{"lineNumber":75,"author":{"gitId":"-"},"content":"1. Run `gradlew hotReloadFrontend`."},{"lineNumber":76,"author":{"gitId":"-"},"content":"1. The website will be automatically opened in your browser shortly."},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"**You can use Vue.js devtools for frontend debugging on Chrome.** Here are the steps:"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. On your Chrome, visit the website of [Vue.js devtools](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd) and add the extension."},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Go to the detail page of this extension in Chrome\u0027s extension management panel and select `Allow access to file URLs`. If you are unable to locate it, copy the link: `chrome://extensions/?id\u003dnhdogjmejiglipccpnnnanhbledajbpd` and visit it on your Chrome."},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Open any report generated by RepoSense."},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. Press `F12` or right click and choose `inspect` at the report page."},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. Choose `Vue` at the navigation bar.\u003cbr\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"   ![Choose Vue](../images/choose-vue.png)"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. Debug using the tool.\u003cbr\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"   ![Use Vue](../images/use-vue.png)"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"See [vue-devtools project home](https://github.com/vuejs/vue-devtools) page for more details."},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"## Testing (front-end)"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"**We use [Cypress](https://www.cypress.io/) for automated end-to-end front-end testing.**"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Writing tests"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. Create a new test file in `frontend/cypress/tests`."},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. At project root start *Cypress Test Runner* by running `gradlew cypress`."},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"1. Select **E2E Testing** and choose **Chrome** as the preferred browser."},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"![Cypress Test E2E](../images/cypress-test-e2e.png)"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"![Cypress Test Chrome](../images/cypress-test-chrome.png)"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":"1. Under **E2E specs**, click on the newly created test file to run it."},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":"![Cypress Test Runner](../images/cypress-test-runner.png \"Cypress Test Runner\")"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"Read [Cypress\u0027s Documentation](https://docs.cypress.io/api/commands/document.html#Syntax) to familiarize yourself with its syntax and [Cypress\u0027s debugging guide](https://docs.cypress.io/guides/guides/debugging.html#Log-Cypress-events) to tackle problems with your tests."},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"Note that it is **compulsory** to add tests for the new front-end changes that you made to prevent regression bugs, except for trivial changes that are unlikely to cause any regression or other situations where testing does not apply to the change."},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Running tests"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"To run all tests locally, run `gradlew frontendTest`."},{"lineNumber":123,"author":{"gitId":"vvidday"},"content":"* Using the above command, tests are run on the CLI in a headless browser without the report being displayed."},{"lineNumber":124,"author":{"gitId":"vvidday"},"content":"* To run tests in a headed browser, run `gradlew cypress` then select the test file(s) in the Cypress GUI as shown above."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"If you encountered an invalid browser error, ensure that you have `Chrome` installed in the default installation directory. Otherwise, follow the instructions [here](https://docs.cypress.io/guides/guides/debugging.html#Launching-browsers) to create symbolic links so Cypress can locate `Chrome` in your system."},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"## Testing (back-end)"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"The back-end tests can be found at `[project root]/systemtest` and `[project root]/test`."},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Running tests"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"To run all the system tests, run `gradlew systemtest`."},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"To run all the unit and integration tests, run `gradlew test`."},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"## Writing documentation"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"**This project uses [MarkBind](https://markbind.org/)** for documentation. Follow [this tutorial](https://se-education.org/guides/tutorials/markbind.html) to learn how to use MarkBind for updating project documentation."},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"**To show some content only in the \u003ctooltip content\u003d\"i.e., https://reposense.org\"\u003eproduction website\u003c/tooltip\u003e**, add the `tags\u003d\"production\"` attribute to the HTML element enclosing the content. Similarly, `tags\u003d\"dev\"` will make the content appear only in the \u003ctooltip content\u003d\"i.e., https://reposense.org/RepoSense\"\u003edev website\u003c/tooltip\u003e."},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"```html"},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003cspan tags\u003d\"production\"\u003eThis will appear in the production website only.\u003c/span\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003cspan tags\u003d\"dev\"\u003eThis will appear in the dev website only.\u003c/span\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"This will appear in both sites."},{"lineNumber":155,"author":{"gitId":"-"},"content":"```"}],"authorContributionMap":{"vvidday":7,"MarcusTXK":1,"-":147}},{"path":"docs/ug/authorConfigSyntax.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"{% set title \u003d \"Appendix: `author-config.csv` advanced syntax\" %}"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"{% from \u0027scripts/macros.njk\u0027 import embed, step with context %}"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"Given below are the advanced syntax available for `author-config.csv`. "},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"\u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"## Multiple `Repository\u0027s Location` per author"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"#### Specifying multiple `Repository\u0027s Location`"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"To specify multiple `Repository\u0027s Location` in a single row, we can use a semicolon `;` as a separator."},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"Below is an example:"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"| Repository\u0027s Location                                                                 | Branch  | Author\u0027s Git Host ID | ... Hidden columns    |"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"|---------------------------------------------------------------------------------------|---------|----------------------|-----------------------|"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"| `https://github.com/reposense/RepoSense.git;https://github.com/MarkBind/markbind.git` | master  | sikai00              | --                    |"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"We have now furnished author details for both repositories in a single row, instead of having two individual rows per `Repository\u0027s Location`."},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"#### Specifying `Repository\u0027s Location` with one or more specific branches"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"To list out one or more branches for a particular `Repository\u0027s Location`, we can use a pipe `|` separator to demarcate the different branches."},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"Below is an example:"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"| Repository\u0027s Location                                                  | Branch   | Author\u0027s Git Host ID | ... Hidden columns    |"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"|------------------------------------------------------------------------|----------|----------------------|-----------------------|"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"| `https://github.com/reposense/RepoSense.git~master\\|release\\|cypress`  | master   | sikai00              | --                    |"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"We have now provided author details for three different branches in a single repo, using a single row."},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"The branch specified through the delimiter syntax will take precedence over the `Branch` column."},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"\u003c/box\u003e"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"## Using GitHub branch URL as `Repository\u0027s Location`"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"We can also use GitHub branch URL as copied from the address bar directly, to be able to quickly use the URL to specify the `Repository\u0027s Location` and a specific `Branch` at the same time."},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"Below is an example:"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"| Repository\u0027s Location                                 | Branch   | Author\u0027s Git Host ID | ... Hidden columns    |"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"|-------------------------------------------------------|----------|----------------------|-----------------------|"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"| `https://github.com/reposense/RepoSense/tree/release` |          | sikai00              | --                    |"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"There is no need to specify the `Branch` column now, as we have specified it through the GitHub branch URL."},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"GitLab and BitBucket branch URL are not supported at the moment."},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"\u003c/box\u003e"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"## Combining the advanced syntax"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"It is possible to combine the above-mentioned advanced syntax. By doing so, we can go from:"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"| Repository\u0027s Location                                      | Branch   | Author\u0027s Git Host ID | ... Hidden columns    |"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"|------------------------------------------------------------|----------|----------------------|-----------------------|"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"| `https://github.com/MarkBind/markbind/tree/vue3-migration` |          | sikai00              | --                    |"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"| `https://github.com/reposense/RepoSense.git`               | master   | sikai00              | --                    |"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"| `https://github.com/reposense/RepoSense.git`               | cypress  | sikai00              | --                    |"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"to:"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"| Repository\u0027s Location                                                                                                 | Branch   | Author\u0027s Git Host ID | ... Hidden columns   |"},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":"|-----------------------------------------------------------------------------------------------------------------------|----------|----------------------|----------------------|"},{"lineNumber":83,"author":{"gitId":"ckcherry23"},"content":"| `https://github.com/MarkBind/markbind/tree/vue3-migration;https://github.com/reposense/RepoSense.git~master\\|cypress` |          | sikai00              | --                   |"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"\u003cbr\u003e"}],"authorContributionMap":{"ckcherry23":12,"sikai00":73}},{"path":"docs/ug/configFiles.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Appendix: Config files format\" %}"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"{% set mandatory %}\u003cspan class\u003d\"badge bg-danger\"\u003emandatory\u003c/span\u003e{% endset %}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"{% from \u0027scripts/macros.njk\u0027 import embed with context %}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"Given below are the details of the various config files used by RepoSense."},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"**RepoSense ignores the order of column headers in the CSV config files. However, the spelling of the column headers must match the specified headers exactly, or the column would be ignored by RepoSense.**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"**A value in a config file is optional to provide unless it is specified as {{ mandatory }}**."},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"## `repo-config.csv`"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"**`repo-config.csv` file contains repo-level config data.** Each row represents a repository\u0027s configuration ([example](repo-config.csv))."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"| Column Name | Explanation |"},{"lineNumber":35,"author":{"gitId":"-"},"content":"|-------------|-------------|"},{"lineNumber":36,"author":{"gitId":"-"},"content":"| Repository\u0027s Location {{ mandatory }} | The `Remote Repo URL` or `Disk Path` to the git repository e.g., `https://github.com/foo/bar.git` or `C:\\Users\\user\\Desktop\\GitHub\\foo\\bar` |"},{"lineNumber":37,"author":{"gitId":"-"},"content":"| Branch | The branch to analyze in the target repository e.g., `master`. Default: the default branch of the repo |"},{"lineNumber":38,"author":{"gitId":"-"},"content":"| File formats\u003csup\u003e*+\u003c/sup\u003e | The file extensions to analyze. Binary file formats, such as `png` and `jpg`, will be automatically labelled as the file type `binary` in the generated report. Default: all file formats |"},{"lineNumber":39,"author":{"gitId":"-"},"content":"| Find Previous Authors | Enter **`yes`** to utilize Git blame\u0027s ignore revisions functionality, RepoSense will attempt to blame the line changes caused by commits in the ignore commit list to the previous authors who altered those lines (if available). |"},{"lineNumber":40,"author":{"gitId":"-"},"content":"| Ignore Glob List\u003csup\u003e*+\u003c/sup\u003e | The list of file path globs to ignore during analysis for each author e.g., `test/**;temp/**`. Refer to the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob) for the path glob syntax. |"},{"lineNumber":41,"author":{"gitId":"-"},"content":"| Ignore standalone config | To ignore the standalone config file (if any) in target repository, enter **`yes`**. If the cell is empty, the standalone config file in the repo (if any) will take precedence over configurations provided in the csv files. |"},{"lineNumber":42,"author":{"gitId":"-"},"content":"| Ignore Commits List\u003csup\u003e*+\u003c/sup\u003e | The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash. Additionally, a range of commits can be specified using the `..` notation e.g. `abc123..def456` (both inclusive). |"},{"lineNumber":43,"author":{"gitId":"-"},"content":"| Ignore Authors List\u003csup\u003e*+\u003c/sup\u003e | The list of authors to ignore during analysis. Authors should be specified by their [Git Author Name](#a-note-about-git-author-name). |"},{"lineNumber":44,"author":{"gitId":"-"},"content":"| Shallow Cloning | Enter **`yes`** to clone the repository using Git\u0027s shallow cloning functionality. This option can significantly reduce the time taken to clone large repositories. However, the option should ideally be disabled for smaller repositories where the `.git` file is smaller than 500 MB, as it would create overhead. |"},{"lineNumber":45,"author":{"gitId":"-"},"content":"| File Size Limit\u003csup\u003e+\u003c/sup\u003e | Enter a file size limit for the repository in bytes as a single number without units (for a size limit of 1MB for example, enter 1000000). This file size limit will override the default file size limit (500KB). Files exceeding the file size limit will be marked as ignored and only the file name and line count will be reflected in the report. |"},{"lineNumber":46,"author":{"gitId":"-"},"content":"| Ignore File Size Limit | Enter **`yes`** to ignore both the default file size limit and the file size limit possibly set by the user in `repo-config.csv`. |"},{"lineNumber":47,"author":{"gitId":"-"},"content":"| Skip Ignored File Analysis | Enter **`yes`** to ignore analysis of files exceeding the file size limit entirely. If file analysis is skipped, all information about the file will be omitted from the generated report. This option can significantly improve report generation time. |"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"The Shallow Cloning option is incompatible with the \"--last-modified-date\" CLI flag."},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"If Ignore File Size Limit is yes, the File Size Limit and Skip Ignored File Analysis columns are ignored."},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e\u003c/br\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003csup\u003e+ **Overrideable column**: prepend with `override:` to use entered value(s) instead of value(s) from standalone config.\u003c/sup\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"When using [standalone config](#config-json-standalone-config-file) (if it is not ignored), it is possible to override specific values from the standalone config by prepending the entered value with `override:`."},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"## `author-config.csv`"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"Optionally, you can use an `author-config.csv` (which should be in the same directory as the `repo-config.csv` file) to provide more details about the authors to analyze ([example](author-config.csv)). It should contain the following columns:"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"| Column Name                                      | Explanation                                                                                                                                                                                      |"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"|--------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"| Repository\u0027s Location\u003csup\u003e*\u003c/sup\u003e                | Same as `repo-config.csv`. Default: all the repos in `repo-config.csv`.                                                                                                                          |"},{"lineNumber":74,"author":{"gitId":"-"},"content":"| Branch                                           | The branch to analyze for this author, e.g., `master`. Default: the author will be bound to all the repos in `repo-config.csv` that has the same repo\u0027s location, regardless of branch.          |"},{"lineNumber":75,"author":{"gitId":"-"},"content":"| Author\u0027s Git Host ID\u003csup\u003e#\u003c/sup\u003e {{ mandatory }} | Username of the target author\u0027s profile on GitHub, GitLab or Bitbucket, e.g.`JohnDoe`.                                                                                                           |"},{"lineNumber":76,"author":{"gitId":"-"},"content":"| Author\u0027s Emails\u003csup\u003e*\u003c/sup\u003e                      | Associated emails of the author. For GitHub users, this can be found in your [GitHub settings](https://github.com/settings/emails).                                                              |"},{"lineNumber":77,"author":{"gitId":"-"},"content":"| Author\u0027s Display Name                            | The name to display for the author. Default: author\u0027s username.                                                                                                                                  |"},{"lineNumber":78,"author":{"gitId":"-"},"content":"| Author\u0027s Git Author Name\u003csup\u003e*\u003c/sup\u003e             | The meaning of _Git Author Name_ is explained in [_A note about git author name_](#a-note-about-git-author-name).                                                                                |"},{"lineNumber":79,"author":{"gitId":"-"},"content":"| Ignore Glob List\u003csup\u003e*\u003c/sup\u003e                     | Files to ignore for this author, in addition to files ignored by the patterns specified in `repo-config.csv`. The path glob syntax is the same as that of Ignore Glob List in `repo-config.csv`. |"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003c/br\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003csup\u003e# For backward compatibility, `Author\u0027s GitHub ID` is still accepted as the header in place of `Author\u0027s Git Host ID`.\u003c/sup\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"If `author-config.csv` is not given and the repo has not provided author details in a standalone config file, all the authors of the repositories within the date range specified (if any) will be analyzed."},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"`author-config.csv` has some advanced syntax that can help to reduce duplication of the author\u0027s information. The syntax guide is given below:"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"{{ embed(\"Appendix: `author-config.csv` advanced syntax\", \"authorConfigSyntax.md\") }}"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"## `group-config.csv`"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"Optionally, you can provide a `group-config.csv`(which should be in the same directory as `repo-config.csv` file) to provide details on any custom groupings for files in specified repositories ([example](group-config.csv)). It should contain the following columns:"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"| Column Name | Explanation |"},{"lineNumber":98,"author":{"gitId":"-"},"content":"|-------------|-------------|"},{"lineNumber":99,"author":{"gitId":"-"},"content":"| Repository\u0027s Location | Same as `repo-config.csv`. Default: all the repos in `repo-config.csv` |"},{"lineNumber":100,"author":{"gitId":"-"},"content":"| Group Name {{ mandatory }} | Name of the group, e.g.,`test`. |"},{"lineNumber":101,"author":{"gitId":"-"},"content":"| Globs * {{ mandatory }} | The list of file path globs to include for specified group, e.g.,`**/test/*;**.java`. |"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"Note that a file in a given repository should only be tagged to one group. \u003cbr\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"e.g.: `example.java` in `example-repo` can either be in the `test` group or the `code` group, but not in both `test` and `code` group. If multiple groups are specified for a given file, the latter group (i.e., `code` group) is set for the file."},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"## `report-config.json`"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can optionally use `report-config.json` to customize report generation by providing the following information. ([example](report-config.json))"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"**Fields to provide**:"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* `title`: Title of the generated report, which is also the title of the deployed dashboard. Default: \"RepoSense Report\""},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"section-standalone\"\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"## `config.json` (standalone config file)"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"Repo owners can provide the following additional information to RepoSense using a config file that we call the **_standalone config file_**:"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* which files/authors/commits to analyze/omit"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* which git and git host usernames belong to which authors"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* the display of an author"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"To use this feature, add a `_reposense/config.json` to the root of your repo using the format in the example below ([another example](https://github.com/reposense/RepoSense/blob/master/_reposense/config.json)) and **commit it** (reason: RepoSense can see committed code only):"},{"lineNumber":129,"author":{"gitId":"-"},"content":"```json {.no-line-numbers}"},{"lineNumber":130,"author":{"gitId":"-"},"content":"{"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  \"ignoreGlobList\": [\"about-us/**\", \"**index.html\"],"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  \"formats\": [\"html\", \"css\"],"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  \"ignoreCommitList\": [\"90018e49f129ce7e0abdc8b18e91c9813588c601\", \"67890def\", \"abc123..def456\"],"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  \"ignoreAuthorList\": [\"charlie\"],"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  \"authors\":"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  ["},{"lineNumber":137,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      \"gitId\": \"alice\","},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \"emails\": [\"alice@example.com\", \"alicet@example.com\"],"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \"displayName\": \"Alice T.\","},{"lineNumber":141,"author":{"gitId":"-"},"content":"      \"authorNames\": [\"AT\", \"A\"],"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      \"ignoreGlobList\": [\"**.css\"]"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \"gitId\": \"bob\""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  ]"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}"},{"lineNumber":149,"author":{"gitId":"-"},"content":"```"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Note: all fields are optional unless specified otherwise."},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"**Fields to provide _repository-level_ info**:"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"* `ignoreGlobList`: Folders/files to ignore, specified using the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob)."},{"lineNumber":155,"author":{"gitId":"-"},"content":"* `formats`: File formats to analyze. Binary file formats, such as `png` and `jpg`, will be automatically labelled as the file type `binary` in the generated report. Default: all file formats"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* `ignoreCommitList`: The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash. Additionally, a range of commits can be specified using the `..` notation e.g. `abc123..def456` (both inclusive)."},{"lineNumber":157,"author":{"gitId":"-"},"content":"* `ignoreAuthorList`: The list of authors to ignore during analysis. Authors specified in `authors` field or `author-config.csv` will be also be omitted if they are in this list. Authors should be specified by their [Git Author Name](#a-note-about-git-author-name)."},{"lineNumber":158,"author":{"gitId":"-"},"content":"* `fileSizeLimit`: A file size limit for the repository in bytes as a single number without units, that will override the default file size limit. If not specified, the default file size limit will continue to be used."},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"**Fields to provide _author-level_ info**:\u003cbr\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Note: `authors` field should contain _all_ authors that should be captured in the analysis."},{"lineNumber":162,"author":{"gitId":"-"},"content":"* `gitId`: Username of the author. {{ mandatory }} field."},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `emails`: Associated git emails of the author. For GitHub, this can be found in your [GitHub settings](https://github.com/settings/emails)."},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `displayName`: Name to display on the report for this author."},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `authorNames`: Git Author Name(s) used in the author\u0027s commits. By default, RepoSense assumes an author would use their remote Git Host username as the Git username too. The meaning of _Git Author Name_ is explained in [_A note about git author name_](#a-note-about-git-author-name)."},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `ignoreGlobList`: _Additional_ (i.e. on top of the repo-level `ignoreGlobList`) folders/files to ignore for a specific author. The path glob syntax is specified by the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob). In the example above, the actual `ignoreGlobList` for `alice` would be `[\"about-us/**\", \"**index.html\", \"**.css\"]`."},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"To verify your standalone configuration is as intended, add the `_reposense/config.json` to your local copy of repo and run RepoSense against it as follows:\u003cbr\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* Format: `java -jar RepoSense.jar --repo LOCAL_REPO_LOCATION` \u003cbr\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* Example: `java -jar RepoSense.jar --repo c:/myRepose/foo/bar`\u003cbr\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"After that, view the report to see if the configuration you specified in the config file is being reflected correctly in the report."},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"## A note about git author name"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"`Git Author Name` refers to the customizable author\u0027s display name set in the local `.gitconfig` file. For example, in the Git Log\u0027s display:"},{"lineNumber":176,"author":{"gitId":"-"},"content":"``` {.no-line-numbers}"},{"lineNumber":177,"author":{"gitId":"-"},"content":"..."},{"lineNumber":178,"author":{"gitId":"-"},"content":"commit cd7f610e0becbdf331d5231887d8010a689f87c7"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Author: ConfiguredAuthorName \u003cauthor@example.com\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Date:   Fri Feb 9 19:14:41 2018 +0800"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    Make some changes to show my new author\u0027s name"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"commit e3f699fd4ef128eebce98d5b4e5b3bb06a512f49"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Author: ActualGitHostId \u003cauthor@example.com\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Date:   Fri Feb 9 19:13:13 2018 +0800"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    Initial commit"},{"lineNumber":189,"author":{"gitId":"-"},"content":" ..."},{"lineNumber":190,"author":{"gitId":"-"},"content":"```"},{"lineNumber":191,"author":{"gitId":"-"},"content":"`ActualGitHostId` and `ConfiguredAuthorName` are both `Git Author Name` of the same author.\u003cbr\u003e"},{"lineNumber":192,"author":{"gitId":"-"},"content":"To find the author name that you are currently using for your current git repository, run the following command within your git repository:"},{"lineNumber":193,"author":{"gitId":"-"},"content":"``` shell {.no-line-numbers}"},{"lineNumber":194,"author":{"gitId":"-"},"content":"git config user.name"},{"lineNumber":195,"author":{"gitId":"-"},"content":"```"},{"lineNumber":196,"author":{"gitId":"-"},"content":"To set the author name to the value you want (e.g., to set it to your GitHub username) for your current git repository, you can use the following command ([more info](https://www.git-tower.com/learn/git/faq/change-author-name-email)):"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` shell {.no-line-numbers}"},{"lineNumber":198,"author":{"gitId":"-"},"content":"git config user.name \"YOUR_AUTHOR_NAME”"},{"lineNumber":199,"author":{"gitId":"-"},"content":"```"},{"lineNumber":200,"author":{"gitId":"-"},"content":"To set the author name to use a default value you want for future git repositories, you can use the following command:"},{"lineNumber":201,"author":{"gitId":"-"},"content":"``` shell {.no-line-numbers}"},{"lineNumber":202,"author":{"gitId":"-"},"content":"git config --global user.name \"YOUR_AUTHOR_NAME”"},{"lineNumber":203,"author":{"gitId":"-"},"content":"```"},{"lineNumber":204,"author":{"gitId":"-"},"content":"RepoSense expects the Git Author Name to be the same as author\u0027s username on the Git hosting platform (GitHub, GitLab, BitBucket). If an author\u0027s `Git Author Name` is different from their username on the Git hosting platform, the `Git Author Name` needs to be specified in the standalone config file. If the author has more than one `Git Author Name`, multiple values can be entered too."},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"Note: Symbols such as `\"`, `!`, `/` etc. in your author name will be omitted, which may reduce the accuracy of the analysis if 2 names in the repository are approximately similar."},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"ckcherry23":1,"sikai00":7,"-":203}},{"path":"docs/ug/customizingReports.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Customizing reports\" %}"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"{% from \u0027scripts/macros.njk\u0027 import embed, step with context %}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"The report can be customized using several ways, as explained below."},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Customize using CLI flags"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"**The simplest approach is to provide additional flags when running RepoSense.** The various flags are given in the panel below."},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  {{ embed(\"Appendix: **CLI syntax reference**\", \"cli.md\") }}"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"### Customize using CSV config files"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"**Another, more powerful, way to customize the report is by using dedicated config files.** In this case you need to use the `--config` flag instead of the `--repo` flag when running RepoSense, as follows:"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  {{ embed(\"Appendix: **CLI syntax reference → `config` flag**\", \"cli.md#section-config\") }}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"**Managing config files collaboratively**: If you use RepoSense to monitor a large number of programmers, it may be more practical to get the programmers to submit PRs to update the config files as necessary (\u003ctooltip content\u003d\"a coder realizes some of her code is missing from the report because she used multiple git usernames, and wants to add the additional usernames to the config file\"\u003eexample use case\u003c/tooltip\u003e)."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"To ensure that their PRs are correct, you can use [Netlify _deploy previews_](https://www.netlify.com/blog/2016/07/20/introducing-deploy-previews-in-netlify/) to preview how the report would look like after the PR has been merged. More details are in the panels below."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  {{ embed(\"Appendix: **Using RepoSense with Netlify → Setting up**\", \"withNetlify.md#section-setting-up\") }}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  {{ embed(\"Appendix: **Using RepoSense with Netlify → PR previews**\", \"withNetlify.md#section-pr-previews\") }}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"### Get target repos to provide more info"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**If feasible, you can also customize the target repos to play well with RepoSense** in the following two ways:"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"1\\. Add a _standalone config file_ to the repo to provide more config details to RepoSense. The format of the file is given below."},{"lineNumber":50,"author":{"gitId":"-"},"content":"  {{ embed(\"Appendix: **Standalone config file format**\", \"configFiles.md#section-standalone\") }}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"2\\. To have more precise control over which code segment is attributed to which author, authors can annotate their code using `@@author` tags, as explained below."},{"lineNumber":53,"author":{"gitId":"-"},"content":"  {{ embed(\"Appendix: **Using `@@author` tags**\", \"usingAuthorTags.md\") }}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"In both instances, it is **necessary to commit any changes** for them to be detected by RepoSense."},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"3\\. Add a git `.mailmap` file at the top-level of the repository, specifying mapped authors/commiters and/or e-mail addresses as per [gitmailmap documentation](https://git-scm.com/docs/gitmailmap). Any mappings specified here will be applied by git before all other RepoSense configurations. Configuration via `.mailmap` is particularly useful if you want the mapping to apply for all git commands as well instead of just for RepoSense."}],"authorContributionMap":{"MarcusTXK":2,"-":59}},{"path":"docs/ug/sharingReports.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Sharing reports\" %}"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"{% from \u0027scripts/macros.njk\u0027 import embed with context %}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"**Often, you would want to share the RepoSense report with others.** For example, a teacher using RepoSense for a programming class might want to share the report privately with tutors or publish it so that everyone can see it."},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"The sections below explain various ways of sharing a RepoSense report."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Share privately"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"To share a RepoSense report privately, simply find a way to share the folder containing the report (by default, it will be in a folder named `reposense-report`). For example, you can zip that folder and share it with the intended recipients."},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"You can point the recipients to the [_**Using reports**_](usingReports.html) section for guidance on how to view reports."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Publish on the web"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"As RepoSense reports are in a web page format, you can publish a report by simply uploading it onto any web hosting service. Given below are several options that not only allow to publish reports, but **also enable various levels of automating** the entire process (e.g., automatically update the report daily)."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"{{ embed(\"Appendix: **Using RepoSense with GitHub Actions**\", \"withGithubActions.md\") }}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"{{ embed(\"Appendix: **Using RepoSense with Travis**\", \"withTravis.md\") }}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"{{ embed(\"Appendix: **Using RepoSense with Netlify**\", \"withNetlify.md\") }}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"\u003c!-- ------------------------------------------------------------------------------------------------------ --\u003e"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"### Embeddable Widgets"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"Published reports can additionally be embedded in other websites through `iframes`. Simply click the clipboard icon to generate and copy the iframe for your desired section of the report for either a single ramp chart or a group of ramp charts. Paste the iframe in any HTML supported document to render it."},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"A sample iframe would look like:"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"```html"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"\u003ciframe src\u003d\"XXX\" frameborder\u003d\"0\" width\u003d\"800px\" height\u003d\"XXXpx\"\u003e\u003c/iframe\u003e"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"```"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"Adjust the width and height to the desired dimensions as required."}],"authorContributionMap":{"MarcusTXK":13,"-":38}},{"path":"docs/ug/usingAuthorTags.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Appendix: Using `@@author` tags\" %}"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"{% from \u0027scripts/macros.njk\u0027 import embed, step with context %}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"`@@author` tags is a rather invasive but sometimes necessary way to provide more information to RepoSense, by annotating the code being analyzed."},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"If you want to override the code authorship deduced by RepoSense (which is based on Git blame/log data), you can use `@@author` tags to specify certain code segments that should be credited to a certain author irrespective of git history. An example scenario where this is useful is when a method was originally written by one author but a second author did some minor refactoring to it; in this case, RepoSense might attribute the code to the second author while you may want to attribute the code to the first author."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"There are 2 types of `@@author` tags:"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"- Start Tags (format: `@@author AUTHOR_GIT_AUTHOR_NAME`): A start tag indicates the start of a code segment written by the author identified by the `AUTHOR_GIT_AUTHOR_NAME`."},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"- End Tags (format: `@@author`): Optional. An end tag indicates the end of a code segment written by the author identified by the `AUTHOR_GIT_AUTHOR_NAME` of the start tag."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"If an end tag is not provided, the code till the next start tag (or the end of the file) will be attributed to the author specified in the start tag above. Use only when necessary to minimize polluting your code with these extra tags."},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"If an end tag is provided without a corresponding start tag, the code until the next start tag, the next end tag, or the end of the file, will not be attributed to any author. This should only be used if the code should not be attributed to any author."},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"The `@@author` tags should be enclosed within a single-line comment, using the comment syntax of the file in concern. Below are some examples:"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"![author tags](../images/add-author-tags.png)"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"Currently, the following comment formats are supported:"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cul\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003cli\u003e// @@author authorName\u003c/li\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cli\u003e/* @@author authorName */\u003c/li\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003cli\u003e/* @@author authorName\u003c/li\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003cli\u003e# @@author authorName\u003c/li\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cli\u003e% @@author authorName\u003c/li\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u0026lt!-- @@author authorName --\u0026gt\u003c/li\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u0026lt!--- @@author authorName ---\u0026gt\u003c/li\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003cli\u003e[//]: # (@@author authorName)\u003c/li\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/ul\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"RepoSense checks whether the line matches the supported comment formats. If the line does not match the formats,"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"RepoSense treats it as a normal line."},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"The code until the next start tag, the end tag, or the end of file will be attributed to that author."},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"Note: Remember to **commit** the files after the changes. (reason: RepoSense can see committed code only)"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"Special thanks to [Collate project](https://github.com/se-edu/collate) for providing the inspiration for this functionality."}],"authorContributionMap":{"sikai00":6,"-":51}},{"path":"docs/ug/usingReports.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{% set title \u003d \"Using reports\" %}"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cfrontmatter\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"{{ title | safe }}\""},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/frontmatter\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003ch1 class\u003d\"display-4\"\u003e\u003cmd\u003e{{ title }}\u003c/md\u003e\u003c/h1\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"lead\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"Let\u0027s look at how to view, interpret, and interact with a RepoSense report."},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Viewing the report"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"As a report consists of web pages, it can be viewed using a Web Browser. Here are the ways to view the report in different situations."},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Situation 1: The report has been hosted on a website**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  * Simply go to the URL of the report ([example](https://nus-cs2113-ay1920s2.github.io/tp-dashboard)) in your browser."},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Situation 2: You generated the report in your computer earlier**"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Run RepoSense with the `--view` option:\u003cbr\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Format: `java -jar RepoSense.jar --view REPORT_FOLDER`\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    e.g., `java -jar RepoSense.jar --view ./myReport/reposense-report`"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Situation 3: The report was given to you as a zip file or as a folder**"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  1. If it is a zip file, unzip it."},{"lineNumber":28,"author":{"gitId":"-"},"content":"  1. Open the `index.html` (in the unzipped report directory) using a browser."},{"lineNumber":29,"author":{"gitId":"-"},"content":"  1. If the report was not loaded automatically, click on the `choose file` button in the shown web page, and select the `archive.zip` (in the same directory) manually.\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     If even the `choose file` button is not showing up, try a different browser."},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Report structure"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"Here is an example of how a typical report looks like:"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"![report](../images/report-features.png)"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"The report is divided into two sections: [_**Chart panel**_](#chart-panel) and the [_**Code panel**_](#code-panel). In some situations, the [_**Commits panel**_](#commits-panel) will appear in place of the _code panel_. All three are explained in the sections below."},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"Links to external webpages (repository link, author\u0027s profile, blame view, etc.) is only properly supported when RepoSense analyzes a remote repository belonging to GitHub, GitLab or BitBucket."},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Chart panel"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Ramp Charts](../images/rampchart.png)\u003cbr\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"The `Chart panel` (an example is shown above) contains a series of _ramp chart_ + _contribution bar_ pairs, possibly organized into sub-groups, with a _tool bar_ at the top."},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"#### Ramp charts"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"**Ramp chart**: This is a visualization of the frequency and quantity of contributions of an author for a specific repository. Each ramp chart (i.e., light blue rectangle) represents an author\u0027s contribution timeline for a particular repository. Contributions appear as ramps in the timeline."},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"**Ramp**: The name we use to refer to the triangular saw-tooth-like shape that represents a code contribution. A ramp can represent a single commit, a sum of the commits done in a certain period, depending on the granularity used."},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"* The ramp\u0027s area is proportional to the amount of contribution the author made at that time period."},{"lineNumber":67,"author":{"gitId":"-"},"content":"* The position of the right edge of the ramp (perpendicular to the blue bar) represents the period (the day or the week) in which the contribution was made."},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Hover the pointer over a ramp to see the total number of lines represented by that ramp."},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Click on the ramp to view details about the list of commits represented in the ramp."},{"lineNumber":70,"author":{"gitId":"-"},"content":"  * At the commit-level of granularity, it links to the commit in the remote repository."},{"lineNumber":71,"author":{"gitId":"-"},"content":"  * At higher levels of granularity, it displays the list of commits in the Code Panel."},{"lineNumber":72,"author":{"gitId":"-"},"content":"* To make the comparison between two authors easier, the color of the ramps that represent different authors\u0027 contributions at the same time period are the same."},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Ramps representing big contributions can overlap with earlier time periods. This represents the possibility that if the work committed during a specific period is big, it could have started at an earlier time period."},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"#### Contribution bars"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"definition\" seamless\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"**Contribution bar**: It\u0027s the bar that appears below each ramp chart. Its length represents the total amount of code contributed by an author during the _total analysis period_."},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"* Hover over a contribution bar to see the exact amount of the contribution."},{"lineNumber":83,"author":{"gitId":"-"},"content":"* If an author contributed significantly higher than other authors, the contribution bar could _overflow_ into multiple lines."},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"We allow contribution bars to overflow into multiple lines (rather than adjust the scale to fit the maximum bar length) to prevent a minority of \u003ctooltip content\u003d\"i.e., those contributing an unusually high amount of code\"\u003eoutliers\u003c/tooltip\u003e from affecting the scale of the majority."},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"#### Tool bar"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"The `Tool Bar` at the top of the Chart panel provides a set of configuration options that control the Chart panel."},{"lineNumber":93,"author":{"gitId":"-"},"content":"* `Search`: filters the author and repository by keywords."},{"lineNumber":94,"author":{"gitId":"-"},"content":"  * Multiple keywords/terms can be used, separated by spaces."},{"lineNumber":95,"author":{"gitId":"-"},"content":"  * Entries that contain _any_ (not necessarily _all_) of the search terms will be displayed."},{"lineNumber":96,"author":{"gitId":"-"},"content":"  * The keywords used to filter the author and repository are case-insensitive."},{"lineNumber":97,"author":{"gitId":"-"},"content":"* `Group by`: grouping criteria for the rows of results."},{"lineNumber":98,"author":{"gitId":"-"},"content":"  * `None`: results will not be grouped in any particular way."},{"lineNumber":99,"author":{"gitId":"-"},"content":"  * `Repo/Branch`: results will be grouped by repositories and its\u0027 associating branches."},{"lineNumber":100,"author":{"gitId":"-"},"content":"  * `Author`: results will be grouped by the name of the author. Contributions made to multiple repositories by a particular author will be grouped under the author."},{"lineNumber":101,"author":{"gitId":"-"},"content":"* `Sort groups by`: sorting criteria for the main group. See note [1] below."},{"lineNumber":102,"author":{"gitId":"-"},"content":"  * `Group title`: groups will be sorted by the title of the group (in bold text) in alphabetical order."},{"lineNumber":103,"author":{"gitId":"-"},"content":"  * `Contribution`: groups will be sorted by the combined contributions within a group, in the order of number of lines added."},{"lineNumber":104,"author":{"gitId":"-"},"content":"  * `Variance`: groups will be sorted by how far the daily contributions are spread out from their average value among all authors involved. A detailed definition of variance is located [here](https://en.wikipedia.org/wiki/Variance)."},{"lineNumber":105,"author":{"gitId":"-"},"content":"* `Sort within groups by`: sorting criteria within each group."},{"lineNumber":106,"author":{"gitId":"-"},"content":"  * `Title`: each group will be internally sorted by its title in alphabetical order."},{"lineNumber":107,"author":{"gitId":"-"},"content":"  * `Contribution`: each group will be internally sorted by individual contributions in the order of number of lines added."},{"lineNumber":108,"author":{"gitId":"-"},"content":"  * `Variance`: each group will be internally sorted by how far the daily contributions are spread out from their average value by each author into a particular repo. A detailed definition of variance is located [here](https://en.wikipedia.org/wiki/Variance)."},{"lineNumber":109,"author":{"gitId":"-"},"content":"* `Granularity`: the period of time for which commits are aggregated in the Ramp Chart."},{"lineNumber":110,"author":{"gitId":"-"},"content":"    * `Commit`: each commit made is shown as one ramp."},{"lineNumber":111,"author":{"gitId":"-"},"content":"    * `Day`: commits within a day (commits made within 00:00 to 23:59) are shown as one ramp."},{"lineNumber":112,"author":{"gitId":"-"},"content":"    * `Week`: commits within a week (from Monday 00:00 to Sunday 23:59) are shown as one ramp."},{"lineNumber":113,"author":{"gitId":"-"},"content":"* `Since`, `Until`: the date range for the Ramp Chart (not applied to the Contribution Bars)."},{"lineNumber":114,"author":{"gitId":"-"},"content":"* `Reset date range`: resets the date range of the Ramp Chart to the default date range."},{"lineNumber":115,"author":{"gitId":"-"},"content":"* `Breakdown by file type`: toggles the contribution bar to either display the bar by :"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    * the total lines of codes added (if the checkbox is left unchecked), or"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    * a breakdown of the number of lines of codes added to each file type (if the checkbox is checked). More info on note [3] below."},{"lineNumber":118,"author":{"gitId":"-"},"content":"* `Merge group`: merges all the ramp charts of each group into a single ramp chart; aggregates the contribution of each group."},{"lineNumber":119,"author":{"gitId":"-"},"content":"    * viewing of authored code of the group as a whole is available when `group by repos`."},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"Notes:\u003cbr\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"[1] **`Sort groups by`**: each main group has its own index and percentile according to its ranking position after sorting (e.g., if the groups are sorted by contribution in descending order, a 25% percentile indicates that the group is in the top 25% of the whole cohort in terms of contribution)\u003cbr\u003e."},{"lineNumber":123,"author":{"gitId":"-"},"content":"[2] **`Repo/Branch`**: the repo/branch name is constructed as `ORGANIZATION/REPOSITORY[BRANCH]` (e.g., `reposense/reposense[master]`)\u003cbr\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"[3] The total contribution of each group will get updated based on the checked file types and will be taken into account when the sorting criteria is contribution."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"**RepoSense support _intelligent_ bookmarks**: Note how the browser URL changes as you modify settings in the report. If you send that URL to someone else, that person will be able to use that URL to view the report in the same _view configuration_ you had when you copied the URL. For example, [this URL](https://nus-cs2113-ay1920s2.github.io/tp-dashboard/) and [this URL](https://nus-cs2113-ay1920s2.github.io/tp-dashboard/#search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2020-03-01\u0026timeframe\u003dday\u0026mergegroup\u003dtrue\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue) give two different views of the same report."},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"## Code panel"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/code-panel.png\" alt\u003d\"code panel\" width\u003d\"468\"\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"The `Code panel` allows users to see the code attributed to a specific author. Click on the `\u003c/\u003e` icon beside the author\u0027s name in the `Chart panel` to display the `Code panel` on the right."},{"lineNumber":138,"author":{"gitId":"-"},"content":"* The Code panel shows the files that contain the author\u0027s contributions, sorted by the number of lines written."},{"lineNumber":139,"author":{"gitId":"-"},"content":"* Select the radio button to enable one of the following 2 filters. Note that only 1 of the 2 filters is active at any time."},{"lineNumber":140,"author":{"gitId":"-"},"content":"    * Type file path glob in glob filter to include files matching the glob expression."},{"lineNumber":141,"author":{"gitId":"-"},"content":"    * Select the checkboxes to include files of preferred file extensions."},{"lineNumber":142,"author":{"gitId":"-"},"content":"    The number right beside the file extension shows the total number of lines written by the author in such file extension files. In contrast, the number inside the parenthesis indicates the number of non-blank lines written by the author."},{"lineNumber":143,"author":{"gitId":"-"},"content":"* Clicking the file title toggles the file content."},{"lineNumber":144,"author":{"gitId":"-"},"content":"* Clicking the first icon beside the file title opens the history view of the file on the remote repository."},{"lineNumber":145,"author":{"gitId":"-"},"content":"* Clicking the second icon beside the file title opens the blame view of the file on the remote repository."},{"lineNumber":146,"author":{"gitId":"ckcherry23"},"content":"* When using the code panel for a specific author, code attributed to the author is highlighted in green. "},{"lineNumber":147,"author":{"gitId":"ckcherry23"},"content":"  * When using the `merge group` option with `group by repos`, the code panel will consist of multiple authors\u0027 contributions. Code attributed to these authors can be differentiated by the highlight colors of the code. The color legend is shown at the top of each file and consists only those authors that edited a particular file."},{"lineNumber":148,"author":{"gitId":"ckcherry23"},"content":"* Non-trivial code segments that the selected author has not written are hidden by default, but you can toggle them by clicking on the %%:fas-plus-circle:%% icon."},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"Changing binary files, such as images (`.jpg`, `.png`), applications (`.exe`), zip files (`.zip`, `.rar`) and certain document types (`.docx`, `.pptx`), is not counted towards the total number of lines of code contributed by an author."},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003c/box\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003c!-- \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d --\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"## Commits panel"},{"lineNumber":158,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/commits-panel.png\" alt\u003d\"commits panel\" width\u003d\"468\"\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"The `Commits panel` allows users to see the commits attributed to a specific author."},{"lineNumber":161,"author":{"gitId":"-"},"content":"* To view all commits attributed to an author, locate the author\u0027s ramp chart in the chart panel, and click on the %%:fas-list-ul:%% icon above the ramp chart."},{"lineNumber":162,"author":{"gitId":"-"},"content":"* To view commits of a specific period, locate the author\u0027s ramp chart in the chart panel, hold down the \u003ckbd\u003eCtrl\u003c/kbd\u003e key (\u003ckbd\u003e\u0026#8984;\u003c/kbd\u003e in MacOS), and click on the start and end positions of the period (on the ramp chart) you want to view. \u003cbr\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"![Opening commits panel](../images/opening-commits-panel.gif)"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"* The commits can be sorted by the date it was committed or by LoC."},{"lineNumber":167,"author":{"gitId":"-"},"content":"* The tags of the commits will also be displayed on top if any. Clicking on a tag will direct you to the commit having that particular tag."},{"lineNumber":168,"author":{"gitId":"-"},"content":"* The date range for the `Chart panel` can be updated by clicking on the \"Show ramp chart for this period\" below the name of the author."},{"lineNumber":169,"author":{"gitId":"-"},"content":"* The ramp chart at the top of the `Commits panel` represents individual commits (not weekly or daily contributions)."},{"lineNumber":170,"author":{"gitId":"-"},"content":"* The commit messages body can be expanded or collapsed by clicking on the %%:fas-ellipsis-h:%% icon beside each commit message title."},{"lineNumber":171,"author":{"gitId":"-"},"content":"* To promote and encourage the 50/72 rule for commit messages, a dotted vertical line will be shown for:"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  * Commit message subject that exceeds 50 characters."},{"lineNumber":173,"author":{"gitId":"-"},"content":"  * Commit message body after the 72nd character mark."}],"authorContributionMap":{"ckcherry23":3,"-":170}},{"path":"frontend/.eslintrc.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"env\": {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"browser\": true"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \"extends\": ["},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"airbnb-base\","},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"plugin:vue/recommended\","},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"    \"@vue/typescript\","},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"    \"plugin:import/typescript\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \"rules\": {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"vue/component-definition-name-casing\": ["},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \"error\","},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \"kebab-case\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"vue/require-prop-types\": 0,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"no-param-reassign\": 0,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"arrow-parens\": ["},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \"error\","},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \"always\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"indent\": ["},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \"error\","},{"lineNumber":24,"author":{"gitId":"-"},"content":"      2,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \"ignoredNodes\": ["},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \"ConditionalExpression\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ]"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"prefer-destructuring\": 0,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"func-names\": ["},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \"error\","},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \"as-needed\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"no-alert\": 0,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"linebreak-style\": 0,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"max-len\": ["},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \"error\","},{"lineNumber":40,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \"code\": 120"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"prefer-object-spread\": 0,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"function-call-argument-newline\": 0,"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"    \"vue/no-computed-properties-in-data\": 0,"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"    \"import/extensions\": ["},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"      \"error\","},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"      {"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"        \"js\": \"never\","},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"        \"ts\": \"never\""},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"    ]"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \"parserOptions\": {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"parser\": \"@typescript-eslint/parser\""},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"  \"overrides\": ["},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"    {"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"      \"files\": [\"*.ts\"],"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"      \"extends\": ["},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"        \"airbnb-typescript/base\","},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"        \"plugin:@typescript-eslint/recommended\""},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"      ],"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"      \"parserOptions\": {"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"        \"project\": [\"./tsconfig.json\"]"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"      \"rules\": {"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"        \"indent\": \"off\","},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"        \"@typescript-eslint/indent\": ["},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"          \"error\","},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"          2,"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"          {"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"            \"ignoredNodes\": ["},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":"              \"ConditionalExpression\""},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"            ],"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"            \"SwitchCase\": 0"},{"lineNumber":78,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"        ],"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"        \"@typescript-eslint/member-delimiter-style\": \"error\","},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \"@typescript-eslint/type-annotation-spacing\": \"error\","},{"lineNumber":82,"author":{"gitId":"-"},"content":"        \"@typescript-eslint/array-type\": ["},{"lineNumber":83,"author":{"gitId":"-"},"content":"          \"error\","},{"lineNumber":84,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \"default\": \"array-simple\","},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \"readonly\": \"array-simple\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ]"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      \"files\": [\"*.vue\"],"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \"rules\": {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \"@typescript-eslint/array-type\": ["},{"lineNumber":95,"author":{"gitId":"-"},"content":"          \"error\","},{"lineNumber":96,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            \"default\": \"generic\","},{"lineNumber":98,"author":{"gitId":"-"},"content":"            \"readonly\": \"generic\""},{"lineNumber":99,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        ]"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"  ]"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vvidday":36,"-":68}},{"path":"frontend/cypress/cypress.config.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"const { defineConfig } \u003d require(\u0027cypress\u0027)"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"module.exports \u003d defineConfig({"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  fixturesFolder: false,"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"  video: false,"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"  defaultCommandTimeout: 30000,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  pageLoadTimeout: 400000,"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"  e2e: {"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"    setupNodeEvents(on, config) {},"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"    baseUrl: \u0027http://localhost:9000\u0027,"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"    specPattern: \u0027tests/**/*.cy.{js,jsx,ts,tsx}\u0027,"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"    supportFile: \u0027support.js\u0027,"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"})"}],"authorContributionMap":{"vvidday":13,"-":1}},{"path":"frontend/cypress/package-lock.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"requires\": true,"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"lockfileVersion\": 1,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \"dependencies\": {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"@colors/colors\": {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"version\": \"1.5.0\","},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/@colors/colors/-/colors-1.5.0.tgz\","},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-ooWCrlZP11i8GImSjTHYHLkvFDP48nS4+204nGb1RiX/WXYHmJA2III9/e2DWVabCESdW7hBAEzHRqUn9OUVvQ\u003d\u003d\","},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \"optional\": true"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"@cypress/request\": {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \"version\": \"3.0.1\","},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/@cypress/request/-/request-3.0.1.tgz\","},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-TWivJlJi8ZDx2wGOw1dbLuHJKUYX7bWySw377nlnGOW3hP9/MUKIsEdXT/YngWxVdgNCHRBmFlBipE+5/2ZZlQ\u003d\u003d\","},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \"aws-sign2\": \"~0.7.0\","},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \"aws4\": \"^1.8.0\","},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \"caseless\": \"~0.12.0\","},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \"combined-stream\": \"~1.0.6\","},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \"extend\": \"~3.0.2\","},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \"forever-agent\": \"~0.6.1\","},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \"form-data\": \"~2.3.2\","},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \"http-signature\": \"~1.3.6\","},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \"is-typedarray\": \"~1.0.0\","},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \"isstream\": \"~0.1.2\","},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \"json-stringify-safe\": \"~5.0.1\","},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \"mime-types\": \"~2.1.19\","},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \"performance-now\": \"^2.1.0\","},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \"qs\": \"6.10.4\","},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \"safe-buffer\": \"^5.1.2\","},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \"tough-cookie\": \"^4.1.3\","},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \"tunnel-agent\": \"^0.6.0\","},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \"uuid\": \"^8.3.2\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"@cypress/xvfb\": {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \"version\": \"1.2.4\","},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/@cypress/xvfb/-/xvfb-1.2.4.tgz\","},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-skbBzPggOVYCbnGgV+0dmBdW/s77ZkAOXIC1knS8NagwDjBrNC1LuXtQJeiN6l+m7lzmHtaoUw/ctJKdqkG57Q\u003d\u003d\","},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \"debug\": \"^3.1.0\","},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \"lodash.once\": \"^4.1.1\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \"dependencies\": {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \"debug\": {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \"version\": \"3.2.7\","},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \"resolved\": \"https://registry.npmjs.org/debug/-/debug-3.2.7.tgz\","},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \"integrity\": \"sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ\u003d\u003d\","},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \"dev\": true,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \"requires\": {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \"ms\": \"^2.1.1\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"@types/node\": {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \"version\": \"18.18.3\","},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-18.18.3.tgz\","},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-0OVfGupTl3NBFr8+iXpfZ8NR7jfFO+P1Q+IO/q0wbo02wYkP5gy36phojeYWpLQ6WAMjl+VfmqUk2YbUfp0irA\u003d\u003d\","},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \"@types/sinonjs__fake-timers\": {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      \"version\": \"8.1.1\","},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/@types/sinonjs__fake-timers/-/sinonjs__fake-timers-8.1.1.tgz\","},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-0kSuKjAS0TrGLJ0M/+8MaFkGsQhZpB6pxOmvS3K8FYI72K//YmdfoW9X2qPsAKh1mkwxGD5zib9s1FIFed6E8g\u003d\u003d\","},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \"@types/sizzle\": {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      \"version\": \"2.3.4\","},{"lineNumber":73,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/@types/sizzle/-/sizzle-2.3.4.tgz\","},{"lineNumber":74,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-jA2llq2zNkg8HrALI7DtWzhALcVH0l7i89yhY3iBdOz6cBPeACoFq+fkQrjHA39t1hnSFOboZ7A/AY5MMZSlag\u003d\u003d\","},{"lineNumber":75,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \"@types/yauzl\": {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \"version\": \"2.10.1\","},{"lineNumber":79,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/@types/yauzl/-/yauzl-2.10.1.tgz\","},{"lineNumber":80,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-CHzgNU3qYBnp/O4S3yv2tXPlvMTq0YWSTVg2/JYLqWZGHwwgJGAwd00poay/11asPq8wLFwHzubyInqHIFmmiw\u003d\u003d\","},{"lineNumber":81,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      \"optional\": true,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \"@types/node\": \"*\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \"aggregate-error\": {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \"version\": \"3.1.0\","},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.1.0.tgz\","},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA\u003d\u003d\","},{"lineNumber":91,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        \"clean-stack\": \"^2.0.0\","},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \"indent-string\": \"^4.0.0\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"ansi-colors\": {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      \"version\": \"4.1.3\","},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.3.tgz\","},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw\u003d\u003d\","},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    \"ansi-escapes\": {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      \"version\": \"4.3.2\","},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\","},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ\u003d\u003d\","},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        \"type-fest\": \"^0.21.3\""},{"lineNumber":110,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    \"ansi-regex\": {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      \"version\": \"5.0.1\","},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\","},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ\u003d\u003d\","},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \"ansi-styles\": {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      \"version\": \"4.3.0\","},{"lineNumber":120,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\","},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg\u003d\u003d\","},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        \"color-convert\": \"^2.0.1\""},{"lineNumber":125,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \"arch\": {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \"version\": \"2.2.0\","},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/arch/-/arch-2.2.0.tgz\","},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-Of/R0wqp83cgHozfIYLbBMnej79U/SVGOOyuB3VVFv1NRM/PSFMK12x9KVtiYzJqmnU5WR2qp0Z5rHb7sWGnFQ\u003d\u003d\","},{"lineNumber":131,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \"asn1\": {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \"version\": \"0.2.6\","},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/asn1/-/asn1-0.2.6.tgz\","},{"lineNumber":136,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-ix/FxPn0MDjeyJ7i/yoHGFt/EX6LyNbxSEhPPXODPL+KB0VPk86UYfL0lMdy+KCnv+fmvIzySwaK5COwqVbWTQ\u003d\u003d\","},{"lineNumber":137,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        \"safer-buffer\": \"~2.1.0\""},{"lineNumber":140,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    \"assert-plus\": {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.0\","},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz\","},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw\u003d\u003d\","},{"lineNumber":146,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    \"astral-regex\": {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.0\","},{"lineNumber":150,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/astral-regex/-/astral-regex-2.0.0.tgz\","},{"lineNumber":151,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ\u003d\u003d\","},{"lineNumber":152,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    \"async\": {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      \"version\": \"3.2.4\","},{"lineNumber":156,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/async/-/async-3.2.4.tgz\","},{"lineNumber":157,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-iAB+JbDEGXhyIUavoDl9WP/Jj106Kz9DEn1DPgYw5ruDn0e3Wgi3sKFm55sASdGBNOQB8F59d9qQ7deqrHA8wQ\u003d\u003d\","},{"lineNumber":158,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \"asynckit\": {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      \"version\": \"0.4.0\","},{"lineNumber":162,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\","},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q\u003d\u003d\","},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    \"at-least-node\": {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.0\","},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/at-least-node/-/at-least-node-1.0.0.tgz\","},{"lineNumber":169,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg\u003d\u003d\","},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    \"aws-sign2\": {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      \"version\": \"0.7.0\","},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz\","},{"lineNumber":175,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-08kcGqnYf/YmjoRhfxyu+CLxBjUtHLXLXX/vUfx9l2LYzG3c1m61nrpyFUZI6zeS+Li/wWMMidD9KgrqtGq3mA\u003d\u003d\","},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    \"aws4\": {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      \"version\": \"1.12.0\","},{"lineNumber":180,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/aws4/-/aws4-1.12.0.tgz\","},{"lineNumber":181,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-NmWvPnx0F1SfrQbYwOi7OeaNGokp9XhzNioJ/CSBs8Qa4vxug81mhJEAVZwxXuBmYB5KDRfMq/F3RR0BIU7sWg\u003d\u003d\","},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    \"balanced-match\": {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.2\","},{"lineNumber":186,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\","},{"lineNumber":187,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw\u003d\u003d\","},{"lineNumber":188,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    \"base64-js\": {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      \"version\": \"1.5.1\","},{"lineNumber":192,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz\","},{"lineNumber":193,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA\u003d\u003d\","},{"lineNumber":194,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    \"bcrypt-pbkdf\": {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.2\","},{"lineNumber":198,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz\","},{"lineNumber":199,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-qeFIXtP4MSoi6NLqO12WfqARWWuCKi2Rn/9hJLEmtB5yTNr9DqFWkJRCf2qShWzPeAMRnOgCrq0sg/KLv5ES9w\u003d\u003d\","},{"lineNumber":200,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        \"tweetnacl\": \"^0.14.3\""},{"lineNumber":203,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \"blob-util\": {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.2\","},{"lineNumber":207,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/blob-util/-/blob-util-2.0.2.tgz\","},{"lineNumber":208,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-T7JQa+zsXXEa6/8ZhHcQEW1UFfVM49Ts65uBkFL6fz2QmrElqmbajIDJvuA0tEhRe5eIjpV9ZF+0RfZR9voJFQ\u003d\u003d\","},{"lineNumber":209,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    \"bluebird\": {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      \"version\": \"3.7.2\","},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz\","},{"lineNumber":214,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg\u003d\u003d\","},{"lineNumber":215,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \"brace-expansion\": {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \"version\": \"1.1.11\","},{"lineNumber":219,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\","},{"lineNumber":220,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA\u003d\u003d\","},{"lineNumber":221,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        \"balanced-match\": \"^1.0.0\","},{"lineNumber":224,"author":{"gitId":"-"},"content":"        \"concat-map\": \"0.0.1\""},{"lineNumber":225,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    \"buffer\": {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \"version\": \"5.7.1\","},{"lineNumber":229,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz\","},{"lineNumber":230,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ\u003d\u003d\","},{"lineNumber":231,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        \"base64-js\": \"^1.3.1\","},{"lineNumber":234,"author":{"gitId":"-"},"content":"        \"ieee754\": \"^1.1.13\""},{"lineNumber":235,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    \"buffer-crc32\": {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      \"version\": \"0.2.13\","},{"lineNumber":239,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/buffer-crc32/-/buffer-crc32-0.2.13.tgz\","},{"lineNumber":240,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-VO9Ht/+p3SN7SKWqcrgEzjGbRSJYTx+Q1pTQC0wrWqHx0vpJraQ6GtHx8tvcg1rlK1byhU5gccxgOgj7B0TDkQ\u003d\u003d\","},{"lineNumber":241,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    \"cachedir\": {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      \"version\": \"2.4.0\","},{"lineNumber":245,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/cachedir/-/cachedir-2.4.0.tgz\","},{"lineNumber":246,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-9EtFOZR8g22CL7BWjJ9BUx1+A/djkofnyW3aOXZORNW2kxoUpx2h+uN2cOqwPmFhnpVmxg+KW2OjOSgChTEvsQ\u003d\u003d\","},{"lineNumber":247,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \"call-bind\": {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.2\","},{"lineNumber":251,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.2.tgz\","},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtzXf2QGGueWJGTYsqrA\u003d\u003d\","},{"lineNumber":253,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        \"function-bind\": \"^1.1.1\","},{"lineNumber":256,"author":{"gitId":"-"},"content":"        \"get-intrinsic\": \"^1.0.2\""},{"lineNumber":257,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \"caseless\": {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"      \"version\": \"0.12.0\","},{"lineNumber":261,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz\","},{"lineNumber":262,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-4tYFyifaFfGacoiObjJegolkwSU4xQNGbVgUiNYVUxbQ2x2lUsFvY4hVgVzGiIe6WLOPqycWXA40l+PWsxthUw\u003d\u003d\","},{"lineNumber":263,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \"chalk\": {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      \"version\": \"4.1.2\","},{"lineNumber":267,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\","},{"lineNumber":268,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA\u003d\u003d\","},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        \"ansi-styles\": \"^4.1.0\","},{"lineNumber":272,"author":{"gitId":"-"},"content":"        \"supports-color\": \"^7.1.0\""},{"lineNumber":273,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      \"dependencies\": {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        \"supports-color\": {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"          \"version\": \"7.2.0\","},{"lineNumber":277,"author":{"gitId":"-"},"content":"          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\","},{"lineNumber":278,"author":{"gitId":"-"},"content":"          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw\u003d\u003d\","},{"lineNumber":279,"author":{"gitId":"-"},"content":"          \"dev\": true,"},{"lineNumber":280,"author":{"gitId":"-"},"content":"          \"requires\": {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            \"has-flag\": \"^4.0.0\""},{"lineNumber":282,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    \"check-more-types\": {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \"version\": \"2.24.0\","},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/check-more-types/-/check-more-types-2.24.0.tgz\","},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-Pj779qHxV2tuapviy1bSZNEL1maXr13bPYpsvSDB68HlYcYuhlDrmGd63i0JHMCLKzc7rUSNIrpdJlhVlNwrxA\u003d\u003d\","},{"lineNumber":290,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \"ci-info\": {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \"version\": \"3.9.0\","},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/ci-info/-/ci-info-3.9.0.tgz\","},{"lineNumber":295,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ\u003d\u003d\","},{"lineNumber":296,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    \"clean-stack\": {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \"version\": \"2.2.0\","},{"lineNumber":300,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz\","},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A\u003d\u003d\","},{"lineNumber":302,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \"cli-cursor\": {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      \"version\": \"3.1.0\","},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz\","},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw\u003d\u003d\","},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        \"restore-cursor\": \"^3.1.0\""},{"lineNumber":311,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    \"cli-table3\": {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      \"version\": \"0.6.3\","},{"lineNumber":315,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/cli-table3/-/cli-table3-0.6.3.tgz\","},{"lineNumber":316,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-w5Jac5SykAeZJKntOxJCrm63Eg5/4dhMWIcuTbo9rpE+brgaSZo0RuNJZeOyMgsUdhDeojvgyQLmjI+K50ZGyg\u003d\u003d\","},{"lineNumber":317,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        \"@colors/colors\": \"1.5.0\","},{"lineNumber":320,"author":{"gitId":"-"},"content":"        \"string-width\": \"^4.2.0\""},{"lineNumber":321,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \"cli-truncate\": {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      \"version\": \"2.1.0\","},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/cli-truncate/-/cli-truncate-2.1.0.tgz\","},{"lineNumber":326,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-n8fOixwDD6b/ObinzTrp1ZKFzbgvKZvuz/TvejnLn1aQfC6r52XEx85FmuC+3HI+JM7coBRXUvNqEU2PHVrHpg\u003d\u003d\","},{"lineNumber":327,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        \"slice-ansi\": \"^3.0.0\","},{"lineNumber":330,"author":{"gitId":"-"},"content":"        \"string-width\": \"^4.2.0\""},{"lineNumber":331,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \"color-convert\": {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.1\","},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\","},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ\u003d\u003d\","},{"lineNumber":337,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        \"color-name\": \"~1.1.4\""},{"lineNumber":340,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \"color-name\": {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"      \"version\": \"1.1.4\","},{"lineNumber":344,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\","},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA\u003d\u003d\","},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    \"colorette\": {"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.20\","},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/colorette/-/colorette-2.0.20.tgz\","},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-IfEDxwoWIjkeXL1eXcDiow4UbKjhLdq6/EuSVR9GMN7KVH3r9gQ83e73hsz1Nd1T3ijd5xv1wcWRYO+D6kCI2w\u003d\u003d\","},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    \"combined-stream\": {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.8\","},{"lineNumber":356,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\","},{"lineNumber":357,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg\u003d\u003d\","},{"lineNumber":358,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        \"delayed-stream\": \"~1.0.0\""},{"lineNumber":361,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \"commander\": {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"      \"version\": \"6.2.1\","},{"lineNumber":365,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-6.2.1.tgz\","},{"lineNumber":366,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-U7VdrJFnJgo4xjrHpTzu0yrHPGImdsmD95ZlgYSEajAn2JKzDhDTPG9kBTefmObL2w/ngeZnilk+OV9CG3d7UA\u003d\u003d\","},{"lineNumber":367,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \"common-tags\": {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \"version\": \"1.8.2\","},{"lineNumber":371,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/common-tags/-/common-tags-1.8.2.tgz\","},{"lineNumber":372,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-gk/Z852D2Wtb//0I+kRFNKKE9dIIVirjoqPoA1wJU+XePVXZfGeBpk45+A1rKO4Q43prqWBNY/MiIeRLbPWUaA\u003d\u003d\","},{"lineNumber":373,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    \"concat-map\": {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"      \"version\": \"0.0.1\","},{"lineNumber":377,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\","},{"lineNumber":378,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg\u003d\u003d\","},{"lineNumber":379,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    \"core-util-is\": {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.2\","},{"lineNumber":383,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz\","},{"lineNumber":384,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ\u003d\u003d\","},{"lineNumber":385,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    \"cross-spawn\": {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      \"version\": \"7.0.3\","},{"lineNumber":389,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\","},{"lineNumber":390,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w\u003d\u003d\","},{"lineNumber":391,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        \"path-key\": \"^3.1.0\","},{"lineNumber":394,"author":{"gitId":"-"},"content":"        \"shebang-command\": \"^2.0.0\","},{"lineNumber":395,"author":{"gitId":"-"},"content":"        \"which\": \"^2.0.1\""},{"lineNumber":396,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \"cypress\": {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      \"version\": \"13.3.0\","},{"lineNumber":400,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/cypress/-/cypress-13.3.0.tgz\","},{"lineNumber":401,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-mpI8qcTwLGiA4zEQvTC/U1xGUezVV4V8HQCOYjlEOrVmU1etVvxOjkCXHGwrlYdZU/EPmUiWfsO3yt1o+Q2bgw\u003d\u003d\","},{"lineNumber":402,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        \"@cypress/request\": \"^3.0.0\","},{"lineNumber":405,"author":{"gitId":"-"},"content":"        \"@cypress/xvfb\": \"^1.2.4\","},{"lineNumber":406,"author":{"gitId":"-"},"content":"        \"@types/node\": \"^18.17.5\","},{"lineNumber":407,"author":{"gitId":"-"},"content":"        \"@types/sinonjs__fake-timers\": \"8.1.1\","},{"lineNumber":408,"author":{"gitId":"-"},"content":"        \"@types/sizzle\": \"^2.3.2\","},{"lineNumber":409,"author":{"gitId":"-"},"content":"        \"arch\": \"^2.2.0\","},{"lineNumber":410,"author":{"gitId":"-"},"content":"        \"blob-util\": \"^2.0.2\","},{"lineNumber":411,"author":{"gitId":"-"},"content":"        \"bluebird\": \"^3.7.2\","},{"lineNumber":412,"author":{"gitId":"-"},"content":"        \"buffer\": \"^5.6.0\","},{"lineNumber":413,"author":{"gitId":"-"},"content":"        \"cachedir\": \"^2.3.0\","},{"lineNumber":414,"author":{"gitId":"-"},"content":"        \"chalk\": \"^4.1.0\","},{"lineNumber":415,"author":{"gitId":"-"},"content":"        \"check-more-types\": \"^2.24.0\","},{"lineNumber":416,"author":{"gitId":"-"},"content":"        \"cli-cursor\": \"^3.1.0\","},{"lineNumber":417,"author":{"gitId":"-"},"content":"        \"cli-table3\": \"~0.6.1\","},{"lineNumber":418,"author":{"gitId":"-"},"content":"        \"commander\": \"^6.2.1\","},{"lineNumber":419,"author":{"gitId":"-"},"content":"        \"common-tags\": \"^1.8.0\","},{"lineNumber":420,"author":{"gitId":"-"},"content":"        \"dayjs\": \"^1.10.4\","},{"lineNumber":421,"author":{"gitId":"vvidday"},"content":"        \"debug\": \"^4.3.4\","},{"lineNumber":422,"author":{"gitId":"-"},"content":"        \"enquirer\": \"^2.3.6\","},{"lineNumber":423,"author":{"gitId":"vvidday"},"content":"        \"eventemitter2\": \"6.4.7\","},{"lineNumber":424,"author":{"gitId":"-"},"content":"        \"execa\": \"4.1.0\","},{"lineNumber":425,"author":{"gitId":"-"},"content":"        \"executable\": \"^4.1.1\","},{"lineNumber":426,"author":{"gitId":"-"},"content":"        \"extract-zip\": \"2.0.1\","},{"lineNumber":427,"author":{"gitId":"-"},"content":"        \"figures\": \"^3.2.0\","},{"lineNumber":428,"author":{"gitId":"-"},"content":"        \"fs-extra\": \"^9.1.0\","},{"lineNumber":429,"author":{"gitId":"-"},"content":"        \"getos\": \"^3.2.1\","},{"lineNumber":430,"author":{"gitId":"-"},"content":"        \"is-ci\": \"^3.0.0\","},{"lineNumber":431,"author":{"gitId":"-"},"content":"        \"is-installed-globally\": \"~0.4.0\","},{"lineNumber":432,"author":{"gitId":"-"},"content":"        \"lazy-ass\": \"^1.6.0\","},{"lineNumber":433,"author":{"gitId":"-"},"content":"        \"listr2\": \"^3.8.3\","},{"lineNumber":434,"author":{"gitId":"-"},"content":"        \"lodash\": \"^4.17.21\","},{"lineNumber":435,"author":{"gitId":"-"},"content":"        \"log-symbols\": \"^4.0.0\","},{"lineNumber":436,"author":{"gitId":"-"},"content":"        \"minimist\": \"^1.2.8\","},{"lineNumber":437,"author":{"gitId":"-"},"content":"        \"ospath\": \"^1.2.2\","},{"lineNumber":438,"author":{"gitId":"-"},"content":"        \"pretty-bytes\": \"^5.6.0\","},{"lineNumber":439,"author":{"gitId":"-"},"content":"        \"process\": \"^0.11.10\","},{"lineNumber":440,"author":{"gitId":"-"},"content":"        \"proxy-from-env\": \"1.0.0\","},{"lineNumber":441,"author":{"gitId":"-"},"content":"        \"request-progress\": \"^3.0.0\","},{"lineNumber":442,"author":{"gitId":"-"},"content":"        \"semver\": \"^7.5.3\","},{"lineNumber":443,"author":{"gitId":"-"},"content":"        \"supports-color\": \"^8.1.1\","},{"lineNumber":444,"author":{"gitId":"-"},"content":"        \"tmp\": \"~0.2.1\","},{"lineNumber":445,"author":{"gitId":"-"},"content":"        \"untildify\": \"^4.0.0\","},{"lineNumber":446,"author":{"gitId":"-"},"content":"        \"yauzl\": \"^2.10.0\""},{"lineNumber":447,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    \"dashdash\": {"},{"lineNumber":450,"author":{"gitId":"-"},"content":"      \"version\": \"1.14.1\","},{"lineNumber":451,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz\","},{"lineNumber":452,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-jRFi8UDGo6j+odZiEpjazZaWqEal3w/basFjQHQEwVtZJGDpxbH1MeYluwCS8Xq5wmLJooDlMgvVarmWfGM44g\u003d\u003d\","},{"lineNumber":453,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        \"assert-plus\": \"^1.0.0\""},{"lineNumber":456,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    \"dayjs\": {"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      \"version\": \"1.11.10\","},{"lineNumber":460,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/dayjs/-/dayjs-1.11.10.tgz\","},{"lineNumber":461,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-vjAczensTgRcqDERK0SR2XMwsF/tSvnvlv6VcF2GIhg6Sx4yOIt/irsr1RDJsKiIyBzJDpCoXiWWq28MqH2cnQ\u003d\u003d\","},{"lineNumber":462,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    \"debug\": {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      \"version\": \"4.3.4\","},{"lineNumber":466,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\","},{"lineNumber":467,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ\u003d\u003d\","},{"lineNumber":468,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        \"ms\": \"2.1.2\""},{"lineNumber":471,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      \"dependencies\": {"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        \"ms\": {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"          \"version\": \"2.1.2\","},{"lineNumber":475,"author":{"gitId":"-"},"content":"          \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\","},{"lineNumber":476,"author":{"gitId":"-"},"content":"          \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w\u003d\u003d\","},{"lineNumber":477,"author":{"gitId":"-"},"content":"          \"dev\": true"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":479,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    \"delayed-stream\": {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.0\","},{"lineNumber":483,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\","},{"lineNumber":484,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ\u003d\u003d\","},{"lineNumber":485,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":486,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    \"ecc-jsbn\": {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"      \"version\": \"0.1.2\","},{"lineNumber":489,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz\","},{"lineNumber":490,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-eh9O+hwRHNbG4BLTjEl3nw044CkGm5X6LoaCf7LPp7UU8Qrt47JYNi6nPX8xjW97TKGKm1ouctg0QSpZe9qrnw\u003d\u003d\","},{"lineNumber":491,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":492,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        \"jsbn\": \"~0.1.0\","},{"lineNumber":494,"author":{"gitId":"-"},"content":"        \"safer-buffer\": \"^2.1.0\""},{"lineNumber":495,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    \"emoji-regex\": {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"      \"version\": \"8.0.0\","},{"lineNumber":499,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\","},{"lineNumber":500,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A\u003d\u003d\","},{"lineNumber":501,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    \"end-of-stream\": {"},{"lineNumber":504,"author":{"gitId":"-"},"content":"      \"version\": \"1.4.4\","},{"lineNumber":505,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz\","},{"lineNumber":506,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q\u003d\u003d\","},{"lineNumber":507,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        \"once\": \"^1.4.0\""},{"lineNumber":510,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    \"enquirer\": {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"      \"version\": \"2.4.1\","},{"lineNumber":514,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/enquirer/-/enquirer-2.4.1.tgz\","},{"lineNumber":515,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-rRqJg/6gd538VHvR3PSrdRBb/1Vy2YfzHqzvbhGIQpDRKIa4FgV/54b5Q1xYSxOOwKvjXweS26E0Q+nAMwp2pQ\u003d\u003d\","},{"lineNumber":516,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":517,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        \"ansi-colors\": \"^4.1.1\","},{"lineNumber":519,"author":{"gitId":"-"},"content":"        \"strip-ansi\": \"^6.0.1\""},{"lineNumber":520,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    \"escape-string-regexp\": {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.5\","},{"lineNumber":524,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\","},{"lineNumber":525,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg\u003d\u003d\","},{"lineNumber":526,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    \"eventemitter2\": {"},{"lineNumber":529,"author":{"gitId":"vvidday"},"content":"      \"version\": \"6.4.7\","},{"lineNumber":530,"author":{"gitId":"vvidday"},"content":"      \"resolved\": \"https://registry.npmjs.org/eventemitter2/-/eventemitter2-6.4.7.tgz\","},{"lineNumber":531,"author":{"gitId":"vvidday"},"content":"      \"integrity\": \"sha512-tYUSVOGeQPKt/eC1ABfhHy5Xd96N3oIijJvN3O9+TsC28T5V9yX9oEfEK5faP0EFSNVOG97qtAS68GBrQB2hDg\u003d\u003d\","},{"lineNumber":532,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":533,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    \"execa\": {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"      \"version\": \"4.1.0\","},{"lineNumber":536,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-4.1.0.tgz\","},{"lineNumber":537,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-j5W0//W7f8UxAn8hXVnwG8tLwdiUy4FJLcSupCg6maBYZDpyBvTApK7KyuI4bKj8KOh1r2YH+6ucuYtJv1bTZA\u003d\u003d\","},{"lineNumber":538,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":539,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        \"cross-spawn\": \"^7.0.0\","},{"lineNumber":541,"author":{"gitId":"-"},"content":"        \"get-stream\": \"^5.0.0\","},{"lineNumber":542,"author":{"gitId":"-"},"content":"        \"human-signals\": \"^1.1.1\","},{"lineNumber":543,"author":{"gitId":"-"},"content":"        \"is-stream\": \"^2.0.0\","},{"lineNumber":544,"author":{"gitId":"-"},"content":"        \"merge-stream\": \"^2.0.0\","},{"lineNumber":545,"author":{"gitId":"-"},"content":"        \"npm-run-path\": \"^4.0.0\","},{"lineNumber":546,"author":{"gitId":"-"},"content":"        \"onetime\": \"^5.1.0\","},{"lineNumber":547,"author":{"gitId":"-"},"content":"        \"signal-exit\": \"^3.0.2\","},{"lineNumber":548,"author":{"gitId":"-"},"content":"        \"strip-final-newline\": \"^2.0.0\""},{"lineNumber":549,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":550,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    \"executable\": {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      \"version\": \"4.1.1\","},{"lineNumber":553,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/executable/-/executable-4.1.1.tgz\","},{"lineNumber":554,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-8iA79xD3uAch729dUG8xaaBBFGaEa0wdD2VkYLFHwlqosEj/jT66AzcreRDSgV7ehnNLBW2WR5jIXwGKjVdTLg\u003d\u003d\","},{"lineNumber":555,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":556,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        \"pify\": \"^2.2.0\""},{"lineNumber":558,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    \"extend\": {"},{"lineNumber":561,"author":{"gitId":"-"},"content":"      \"version\": \"3.0.2\","},{"lineNumber":562,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/extend/-/extend-3.0.2.tgz\","},{"lineNumber":563,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g\u003d\u003d\","},{"lineNumber":564,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    \"extract-zip\": {"},{"lineNumber":567,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.1\","},{"lineNumber":568,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/extract-zip/-/extract-zip-2.0.1.tgz\","},{"lineNumber":569,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-GDhU9ntwuKyGXdZBUgTIe+vXnWj0fppUEtMDL0+idd5Sta8TGpHssn/eusA9mrPr9qNDym6SxAYZjNvCn/9RBg\u003d\u003d\","},{"lineNumber":570,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":571,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        \"@types/yauzl\": \"^2.9.1\","},{"lineNumber":573,"author":{"gitId":"-"},"content":"        \"debug\": \"^4.1.1\","},{"lineNumber":574,"author":{"gitId":"-"},"content":"        \"get-stream\": \"^5.1.0\","},{"lineNumber":575,"author":{"gitId":"-"},"content":"        \"yauzl\": \"^2.10.0\""},{"lineNumber":576,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":577,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":578,"author":{"gitId":"-"},"content":"    \"extsprintf\": {"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      \"version\": \"1.3.0\","},{"lineNumber":580,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz\","},{"lineNumber":581,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-11Ndz7Nv+mvAC1j0ktTa7fAb0vLyGGX+rMHNBYQviQDGU0Hw7lhctJANqbPhu9nV9/izT/IntTgZ7Im/9LJs9g\u003d\u003d\","},{"lineNumber":582,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":584,"author":{"gitId":"-"},"content":"    \"fd-slicer\": {"},{"lineNumber":585,"author":{"gitId":"-"},"content":"      \"version\": \"1.1.0\","},{"lineNumber":586,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/fd-slicer/-/fd-slicer-1.1.0.tgz\","},{"lineNumber":587,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-cE1qsB/VwyQozZ+q1dGxR8LBYNZeofhEdUNGSMbQD3Gw2lAzX9Zb3uIU6Ebc/Fmyjo9AWWfnn0AUCHqtevs/8g\u003d\u003d\","},{"lineNumber":588,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        \"pend\": \"~1.2.0\""},{"lineNumber":591,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":592,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    \"figures\": {"},{"lineNumber":594,"author":{"gitId":"-"},"content":"      \"version\": \"3.2.0\","},{"lineNumber":595,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/figures/-/figures-3.2.0.tgz\","},{"lineNumber":596,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg\u003d\u003d\","},{"lineNumber":597,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":598,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        \"escape-string-regexp\": \"^1.0.5\""},{"lineNumber":600,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":601,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    \"forever-agent\": {"},{"lineNumber":603,"author":{"gitId":"-"},"content":"      \"version\": \"0.6.1\","},{"lineNumber":604,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz\","},{"lineNumber":605,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-j0KLYPhm6zeac4lz3oJ3o65qvgQCcPubiyotZrXqEaG4hNagNYO8qdlUrX5vwqv9ohqeT/Z3j6+yW067yWWdUw\u003d\u003d\","},{"lineNumber":606,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":607,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":608,"author":{"gitId":"-"},"content":"    \"form-data\": {"},{"lineNumber":609,"author":{"gitId":"-"},"content":"      \"version\": \"2.3.3\","},{"lineNumber":610,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz\","},{"lineNumber":611,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ\u003d\u003d\","},{"lineNumber":612,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":613,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        \"asynckit\": \"^0.4.0\","},{"lineNumber":615,"author":{"gitId":"-"},"content":"        \"combined-stream\": \"^1.0.6\","},{"lineNumber":616,"author":{"gitId":"-"},"content":"        \"mime-types\": \"^2.1.12\""},{"lineNumber":617,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    \"fs-extra\": {"},{"lineNumber":620,"author":{"gitId":"-"},"content":"      \"version\": \"9.1.0\","},{"lineNumber":621,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz\","},{"lineNumber":622,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ\u003d\u003d\","},{"lineNumber":623,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":625,"author":{"gitId":"-"},"content":"        \"at-least-node\": \"^1.0.0\","},{"lineNumber":626,"author":{"gitId":"-"},"content":"        \"graceful-fs\": \"^4.2.0\","},{"lineNumber":627,"author":{"gitId":"-"},"content":"        \"jsonfile\": \"^6.0.1\","},{"lineNumber":628,"author":{"gitId":"-"},"content":"        \"universalify\": \"^2.0.0\""},{"lineNumber":629,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":630,"author":{"gitId":"-"},"content":"      \"dependencies\": {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        \"universalify\": {"},{"lineNumber":632,"author":{"gitId":"-"},"content":"          \"version\": \"2.0.0\","},{"lineNumber":633,"author":{"gitId":"-"},"content":"          \"resolved\": \"https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz\","},{"lineNumber":634,"author":{"gitId":"-"},"content":"          \"integrity\": \"sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ\u003d\u003d\","},{"lineNumber":635,"author":{"gitId":"-"},"content":"          \"dev\": true"},{"lineNumber":636,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":637,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":638,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":639,"author":{"gitId":"-"},"content":"    \"fs.realpath\": {"},{"lineNumber":640,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.0\","},{"lineNumber":641,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\","},{"lineNumber":642,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw\u003d\u003d\","},{"lineNumber":643,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    \"function-bind\": {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"      \"version\": \"1.1.1\","},{"lineNumber":647,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz\","},{"lineNumber":648,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A\u003d\u003d\","},{"lineNumber":649,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":650,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    \"get-intrinsic\": {"},{"lineNumber":652,"author":{"gitId":"-"},"content":"      \"version\": \"1.2.1\","},{"lineNumber":653,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.1.tgz\","},{"lineNumber":654,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-2DcsyfABl+gVHEfCOaTrWgyt+tb6MSEGmKq+kI5HwLbIYgjgmMcV8KQ41uaKz1xxUcn9tJtgFbQUEVcEbd0FYw\u003d\u003d\","},{"lineNumber":655,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":656,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        \"function-bind\": \"^1.1.1\","},{"lineNumber":658,"author":{"gitId":"-"},"content":"        \"has\": \"^1.0.3\","},{"lineNumber":659,"author":{"gitId":"-"},"content":"        \"has-proto\": \"^1.0.1\","},{"lineNumber":660,"author":{"gitId":"-"},"content":"        \"has-symbols\": \"^1.0.3\""},{"lineNumber":661,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":662,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":663,"author":{"gitId":"-"},"content":"    \"get-stream\": {"},{"lineNumber":664,"author":{"gitId":"-"},"content":"      \"version\": \"5.2.0\","},{"lineNumber":665,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz\","},{"lineNumber":666,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA\u003d\u003d\","},{"lineNumber":667,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":668,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        \"pump\": \"^3.0.0\""},{"lineNumber":670,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":671,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":672,"author":{"gitId":"-"},"content":"    \"getos\": {"},{"lineNumber":673,"author":{"gitId":"-"},"content":"      \"version\": \"3.2.1\","},{"lineNumber":674,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/getos/-/getos-3.2.1.tgz\","},{"lineNumber":675,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-U56CfOK17OKgTVqozZjUKNdkfEv6jk5WISBJ8SHoagjE6L69zOwl3Z+O8myjY9MEW3i2HPWQBt/LTbCgcC973Q\u003d\u003d\","},{"lineNumber":676,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":677,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        \"async\": \"^3.2.0\""},{"lineNumber":679,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":680,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":681,"author":{"gitId":"-"},"content":"    \"getpass\": {"},{"lineNumber":682,"author":{"gitId":"-"},"content":"      \"version\": \"0.1.7\","},{"lineNumber":683,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz\","},{"lineNumber":684,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-0fzj9JxOLfJ+XGLhR8ze3unN0KZCgZwiSSDz168VERjK8Wl8kVSdcu2kspd4s4wtAa1y/qrVRiAA0WclVsu0ng\u003d\u003d\","},{"lineNumber":685,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":686,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        \"assert-plus\": \"^1.0.0\""},{"lineNumber":688,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":689,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":690,"author":{"gitId":"-"},"content":"    \"glob\": {"},{"lineNumber":691,"author":{"gitId":"-"},"content":"      \"version\": \"7.2.3\","},{"lineNumber":692,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\","},{"lineNumber":693,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q\u003d\u003d\","},{"lineNumber":694,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":695,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":696,"author":{"gitId":"-"},"content":"        \"fs.realpath\": \"^1.0.0\","},{"lineNumber":697,"author":{"gitId":"-"},"content":"        \"inflight\": \"^1.0.4\","},{"lineNumber":698,"author":{"gitId":"-"},"content":"        \"inherits\": \"2\","},{"lineNumber":699,"author":{"gitId":"-"},"content":"        \"minimatch\": \"^3.1.1\","},{"lineNumber":700,"author":{"gitId":"-"},"content":"        \"once\": \"^1.3.0\","},{"lineNumber":701,"author":{"gitId":"-"},"content":"        \"path-is-absolute\": \"^1.0.0\""},{"lineNumber":702,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":704,"author":{"gitId":"-"},"content":"    \"global-dirs\": {"},{"lineNumber":705,"author":{"gitId":"-"},"content":"      \"version\": \"3.0.1\","},{"lineNumber":706,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/global-dirs/-/global-dirs-3.0.1.tgz\","},{"lineNumber":707,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-NBcGGFbBA9s1VzD41QXDG+3++t9Mn5t1FpLdhESY6oKY4gYTFpX4wO3sqGUa0Srjtbfj3szX0RnemmrVRUdULA\u003d\u003d\","},{"lineNumber":708,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":709,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":710,"author":{"gitId":"-"},"content":"        \"ini\": \"2.0.0\""},{"lineNumber":711,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":712,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":713,"author":{"gitId":"-"},"content":"    \"graceful-fs\": {"},{"lineNumber":714,"author":{"gitId":"-"},"content":"      \"version\": \"4.2.11\","},{"lineNumber":715,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\","},{"lineNumber":716,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ\u003d\u003d\","},{"lineNumber":717,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":718,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":719,"author":{"gitId":"-"},"content":"    \"has\": {"},{"lineNumber":720,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.4\","},{"lineNumber":721,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/has/-/has-1.0.4.tgz\","},{"lineNumber":722,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-qdSAmqLF6209RFj4VVItywPMbm3vWylknmB3nvNiUIs72xAimcM8nVYxYr7ncvZq5qzk9MKIZR8ijqD/1QuYjQ\u003d\u003d\","},{"lineNumber":723,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":724,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":725,"author":{"gitId":"-"},"content":"    \"has-flag\": {"},{"lineNumber":726,"author":{"gitId":"-"},"content":"      \"version\": \"4.0.0\","},{"lineNumber":727,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\","},{"lineNumber":728,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ\u003d\u003d\","},{"lineNumber":729,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":730,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":731,"author":{"gitId":"-"},"content":"    \"has-proto\": {"},{"lineNumber":732,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.1\","},{"lineNumber":733,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.1.tgz\","},{"lineNumber":734,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-7qE+iP+O+bgF9clE5+UoBFzE65mlBiVj3tKCrlNQ0Ogwm0BjpT/gK4SlLYDMybDh5I3TCTKnPPa0oMG7JDYrhg\u003d\u003d\","},{"lineNumber":735,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":736,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":737,"author":{"gitId":"-"},"content":"    \"has-symbols\": {"},{"lineNumber":738,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.3\","},{"lineNumber":739,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\","},{"lineNumber":740,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A\u003d\u003d\","},{"lineNumber":741,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":743,"author":{"gitId":"-"},"content":"    \"http-signature\": {"},{"lineNumber":744,"author":{"gitId":"-"},"content":"      \"version\": \"1.3.6\","},{"lineNumber":745,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/http-signature/-/http-signature-1.3.6.tgz\","},{"lineNumber":746,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-3adrsD6zqo4GsTqtO7FyrejHNv+NgiIfAfv68+jVlFmSr9OGy7zrxONceFRLKvnnZA5jbxQBX1u9PpB6Wi32Gw\u003d\u003d\","},{"lineNumber":747,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":748,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":749,"author":{"gitId":"-"},"content":"        \"assert-plus\": \"^1.0.0\","},{"lineNumber":750,"author":{"gitId":"-"},"content":"        \"jsprim\": \"^2.0.2\","},{"lineNumber":751,"author":{"gitId":"-"},"content":"        \"sshpk\": \"^1.14.1\""},{"lineNumber":752,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":753,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":754,"author":{"gitId":"-"},"content":"    \"human-signals\": {"},{"lineNumber":755,"author":{"gitId":"-"},"content":"      \"version\": \"1.1.1\","},{"lineNumber":756,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-1.1.1.tgz\","},{"lineNumber":757,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-SEQu7vl8KjNL2eoGBLF3+wAjpsNfA9XMlXAYj/3EdaNfAlxKthD1xjEQfGOUhllCGGJVNY34bRr6lPINhNjyZw\u003d\u003d\","},{"lineNumber":758,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":759,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":760,"author":{"gitId":"-"},"content":"    \"ieee754\": {"},{"lineNumber":761,"author":{"gitId":"-"},"content":"      \"version\": \"1.2.1\","},{"lineNumber":762,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz\","},{"lineNumber":763,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA\u003d\u003d\","},{"lineNumber":764,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":765,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":766,"author":{"gitId":"-"},"content":"    \"indent-string\": {"},{"lineNumber":767,"author":{"gitId":"-"},"content":"      \"version\": \"4.0.0\","},{"lineNumber":768,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz\","},{"lineNumber":769,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg\u003d\u003d\","},{"lineNumber":770,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":771,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":772,"author":{"gitId":"-"},"content":"    \"inflight\": {"},{"lineNumber":773,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.6\","},{"lineNumber":774,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\","},{"lineNumber":775,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA\u003d\u003d\","},{"lineNumber":776,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":777,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        \"once\": \"^1.3.0\","},{"lineNumber":779,"author":{"gitId":"-"},"content":"        \"wrappy\": \"1\""},{"lineNumber":780,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":781,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":782,"author":{"gitId":"-"},"content":"    \"inherits\": {"},{"lineNumber":783,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.4\","},{"lineNumber":784,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\","},{"lineNumber":785,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ\u003d\u003d\","},{"lineNumber":786,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":787,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":788,"author":{"gitId":"-"},"content":"    \"ini\": {"},{"lineNumber":789,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.0\","},{"lineNumber":790,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/ini/-/ini-2.0.0.tgz\","},{"lineNumber":791,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-7PnF4oN3CvZF23ADhA5wRaYEQpJ8qygSkbtTXWBeXWXmEVRXK+1ITciHWwHhsjv1TmW0MgacIv6hEi5pX5NQdA\u003d\u003d\","},{"lineNumber":792,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":793,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":794,"author":{"gitId":"-"},"content":"    \"is-ci\": {"},{"lineNumber":795,"author":{"gitId":"-"},"content":"      \"version\": \"3.0.1\","},{"lineNumber":796,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/is-ci/-/is-ci-3.0.1.tgz\","},{"lineNumber":797,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-ZYvCgrefwqoQ6yTyYUbQu64HsITZ3NfKX1lzaEYdkTDcfKzzCI/wthRRYKkdjHKFVgNiXKAKm65Zo1pk2as/QQ\u003d\u003d\","},{"lineNumber":798,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":799,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":800,"author":{"gitId":"-"},"content":"        \"ci-info\": \"^3.2.0\""},{"lineNumber":801,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":803,"author":{"gitId":"-"},"content":"    \"is-fullwidth-code-point\": {"},{"lineNumber":804,"author":{"gitId":"-"},"content":"      \"version\": \"3.0.0\","},{"lineNumber":805,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\","},{"lineNumber":806,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg\u003d\u003d\","},{"lineNumber":807,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":808,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":809,"author":{"gitId":"-"},"content":"    \"is-installed-globally\": {"},{"lineNumber":810,"author":{"gitId":"-"},"content":"      \"version\": \"0.4.0\","},{"lineNumber":811,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/is-installed-globally/-/is-installed-globally-0.4.0.tgz\","},{"lineNumber":812,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-iwGqO3J21aaSkC7jWnHP/difazwS7SFeIqxv6wEtLU8Y5KlzFTjyqcSIT0d8s4+dDhKytsk9PJZ2BkS5eZwQRQ\u003d\u003d\","},{"lineNumber":813,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":814,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":815,"author":{"gitId":"-"},"content":"        \"global-dirs\": \"^3.0.0\","},{"lineNumber":816,"author":{"gitId":"-"},"content":"        \"is-path-inside\": \"^3.0.2\""},{"lineNumber":817,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":818,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":819,"author":{"gitId":"-"},"content":"    \"is-path-inside\": {"},{"lineNumber":820,"author":{"gitId":"-"},"content":"      \"version\": \"3.0.3\","},{"lineNumber":821,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz\","},{"lineNumber":822,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ\u003d\u003d\","},{"lineNumber":823,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":824,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":825,"author":{"gitId":"-"},"content":"    \"is-stream\": {"},{"lineNumber":826,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.1\","},{"lineNumber":827,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\","},{"lineNumber":828,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg\u003d\u003d\","},{"lineNumber":829,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":830,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":831,"author":{"gitId":"-"},"content":"    \"is-typedarray\": {"},{"lineNumber":832,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.0\","},{"lineNumber":833,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz\","},{"lineNumber":834,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA\u003d\u003d\","},{"lineNumber":835,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":836,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":837,"author":{"gitId":"-"},"content":"    \"is-unicode-supported\": {"},{"lineNumber":838,"author":{"gitId":"-"},"content":"      \"version\": \"0.1.0\","},{"lineNumber":839,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz\","},{"lineNumber":840,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw\u003d\u003d\","},{"lineNumber":841,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":842,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":843,"author":{"gitId":"-"},"content":"    \"isexe\": {"},{"lineNumber":844,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.0\","},{"lineNumber":845,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\","},{"lineNumber":846,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw\u003d\u003d\","},{"lineNumber":847,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":848,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":849,"author":{"gitId":"-"},"content":"    \"isstream\": {"},{"lineNumber":850,"author":{"gitId":"-"},"content":"      \"version\": \"0.1.2\","},{"lineNumber":851,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz\","},{"lineNumber":852,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-Yljz7ffyPbrLpLngrMtZ7NduUgVvi6wG9RJ9IUcyCd59YQ911PBJphODUcbOVbqYfxe1wuYf/LJ8PauMRwsM/g\u003d\u003d\","},{"lineNumber":853,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":854,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":855,"author":{"gitId":"-"},"content":"    \"jsbn\": {"},{"lineNumber":856,"author":{"gitId":"-"},"content":"      \"version\": \"0.1.1\","},{"lineNumber":857,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz\","},{"lineNumber":858,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-UVU9dibq2JcFWxQPA6KCqj5O42VOmAY3zQUfEKxU0KpTGXwNoCjkX1e13eHNvw/xPynt6pU0rZ1htjWTNTSXsg\u003d\u003d\","},{"lineNumber":859,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":860,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":861,"author":{"gitId":"-"},"content":"    \"json-schema\": {"},{"lineNumber":862,"author":{"gitId":"-"},"content":"      \"version\": \"0.4.0\","},{"lineNumber":863,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.4.0.tgz\","},{"lineNumber":864,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA\u003d\u003d\","},{"lineNumber":865,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":866,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":867,"author":{"gitId":"-"},"content":"    \"json-stringify-safe\": {"},{"lineNumber":868,"author":{"gitId":"-"},"content":"      \"version\": \"5.0.1\","},{"lineNumber":869,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz\","},{"lineNumber":870,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA\u003d\u003d\","},{"lineNumber":871,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":872,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":873,"author":{"gitId":"-"},"content":"    \"jsonfile\": {"},{"lineNumber":874,"author":{"gitId":"-"},"content":"      \"version\": \"6.1.0\","},{"lineNumber":875,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz\","},{"lineNumber":876,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ\u003d\u003d\","},{"lineNumber":877,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":878,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":879,"author":{"gitId":"-"},"content":"        \"graceful-fs\": \"^4.1.6\","},{"lineNumber":880,"author":{"gitId":"-"},"content":"        \"universalify\": \"^2.0.0\""},{"lineNumber":881,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":882,"author":{"gitId":"-"},"content":"      \"dependencies\": {"},{"lineNumber":883,"author":{"gitId":"-"},"content":"        \"universalify\": {"},{"lineNumber":884,"author":{"gitId":"-"},"content":"          \"version\": \"2.0.0\","},{"lineNumber":885,"author":{"gitId":"-"},"content":"          \"resolved\": \"https://registry.npmjs.org/universalify/-/universalify-2.0.0.tgz\","},{"lineNumber":886,"author":{"gitId":"-"},"content":"          \"integrity\": \"sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW5nq5scPqq0ZDP9Zyl04oQ\u003d\u003d\","},{"lineNumber":887,"author":{"gitId":"-"},"content":"          \"dev\": true"},{"lineNumber":888,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":889,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":890,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":891,"author":{"gitId":"-"},"content":"    \"jsprim\": {"},{"lineNumber":892,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.2\","},{"lineNumber":893,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-2.0.2.tgz\","},{"lineNumber":894,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-gqXddjPqQ6G40VdnI6T6yObEC+pDNvyP95wdQhkWkg7crHH3km5qP1FsOXEkzEQwnz6gz5qGTn1c2Y52wP3OyQ\u003d\u003d\","},{"lineNumber":895,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":896,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":897,"author":{"gitId":"-"},"content":"        \"assert-plus\": \"1.0.0\","},{"lineNumber":898,"author":{"gitId":"-"},"content":"        \"extsprintf\": \"1.3.0\","},{"lineNumber":899,"author":{"gitId":"-"},"content":"        \"json-schema\": \"0.4.0\","},{"lineNumber":900,"author":{"gitId":"-"},"content":"        \"verror\": \"1.10.0\""},{"lineNumber":901,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":902,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":903,"author":{"gitId":"-"},"content":"    \"lazy-ass\": {"},{"lineNumber":904,"author":{"gitId":"-"},"content":"      \"version\": \"1.6.0\","},{"lineNumber":905,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/lazy-ass/-/lazy-ass-1.6.0.tgz\","},{"lineNumber":906,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-cc8oEVoctTvsFZ/Oje/kGnHbpWHYBe8IAJe4C0QNc3t8uM/0Y8+erSz/7Y1ALuXTEZTMvxXwO6YbX1ey3ujiZw\u003d\u003d\","},{"lineNumber":907,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":908,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":909,"author":{"gitId":"-"},"content":"    \"listr2\": {"},{"lineNumber":910,"author":{"gitId":"-"},"content":"      \"version\": \"3.14.0\","},{"lineNumber":911,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/listr2/-/listr2-3.14.0.tgz\","},{"lineNumber":912,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-TyWI8G99GX9GjE54cJ+RrNMcIFBfwMPxc3XTFiAYGN4s10hWROGtOg7+O6u6LE3mNkyld7RSLE6nrKBvTfcs3g\u003d\u003d\","},{"lineNumber":913,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":914,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":915,"author":{"gitId":"-"},"content":"        \"cli-truncate\": \"^2.1.0\","},{"lineNumber":916,"author":{"gitId":"-"},"content":"        \"colorette\": \"^2.0.16\","},{"lineNumber":917,"author":{"gitId":"-"},"content":"        \"log-update\": \"^4.0.0\","},{"lineNumber":918,"author":{"gitId":"-"},"content":"        \"p-map\": \"^4.0.0\","},{"lineNumber":919,"author":{"gitId":"-"},"content":"        \"rfdc\": \"^1.3.0\","},{"lineNumber":920,"author":{"gitId":"-"},"content":"        \"rxjs\": \"^7.5.1\","},{"lineNumber":921,"author":{"gitId":"-"},"content":"        \"through\": \"^2.3.8\","},{"lineNumber":922,"author":{"gitId":"-"},"content":"        \"wrap-ansi\": \"^7.0.0\""},{"lineNumber":923,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":924,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":925,"author":{"gitId":"-"},"content":"    \"lodash\": {"},{"lineNumber":926,"author":{"gitId":"-"},"content":"      \"version\": \"4.17.21\","},{"lineNumber":927,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\","},{"lineNumber":928,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg\u003d\u003d\","},{"lineNumber":929,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":930,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":931,"author":{"gitId":"-"},"content":"    \"lodash.once\": {"},{"lineNumber":932,"author":{"gitId":"-"},"content":"      \"version\": \"4.1.1\","},{"lineNumber":933,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz\","},{"lineNumber":934,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg\u003d\u003d\","},{"lineNumber":935,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":936,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":937,"author":{"gitId":"-"},"content":"    \"log-symbols\": {"},{"lineNumber":938,"author":{"gitId":"-"},"content":"      \"version\": \"4.1.0\","},{"lineNumber":939,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/log-symbols/-/log-symbols-4.1.0.tgz\","},{"lineNumber":940,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg\u003d\u003d\","},{"lineNumber":941,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":942,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":943,"author":{"gitId":"-"},"content":"        \"chalk\": \"^4.1.0\","},{"lineNumber":944,"author":{"gitId":"-"},"content":"        \"is-unicode-supported\": \"^0.1.0\""},{"lineNumber":945,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":946,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":947,"author":{"gitId":"-"},"content":"    \"log-update\": {"},{"lineNumber":948,"author":{"gitId":"-"},"content":"      \"version\": \"4.0.0\","},{"lineNumber":949,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/log-update/-/log-update-4.0.0.tgz\","},{"lineNumber":950,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-9fkkDevMefjg0mmzWFBW8YkFP91OrizzkW3diF7CpG+S2EYdy4+TVfGwz1zeF8x7hCx1ovSPTOE9Ngib74qqUg\u003d\u003d\","},{"lineNumber":951,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":952,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":953,"author":{"gitId":"-"},"content":"        \"ansi-escapes\": \"^4.3.0\","},{"lineNumber":954,"author":{"gitId":"-"},"content":"        \"cli-cursor\": \"^3.1.0\","},{"lineNumber":955,"author":{"gitId":"-"},"content":"        \"slice-ansi\": \"^4.0.0\","},{"lineNumber":956,"author":{"gitId":"-"},"content":"        \"wrap-ansi\": \"^6.2.0\""},{"lineNumber":957,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":958,"author":{"gitId":"-"},"content":"      \"dependencies\": {"},{"lineNumber":959,"author":{"gitId":"-"},"content":"        \"slice-ansi\": {"},{"lineNumber":960,"author":{"gitId":"-"},"content":"          \"version\": \"4.0.0\","},{"lineNumber":961,"author":{"gitId":"-"},"content":"          \"resolved\": \"https://registry.npmjs.org/slice-ansi/-/slice-ansi-4.0.0.tgz\","},{"lineNumber":962,"author":{"gitId":"-"},"content":"          \"integrity\": \"sha512-qMCMfhY040cVHT43K9BFygqYbUPFZKHOg7K73mtTWJRb8pyP3fzf4Ixd5SzdEJQ6MRUg/WBnOLxghZtKKurENQ\u003d\u003d\","},{"lineNumber":963,"author":{"gitId":"-"},"content":"          \"dev\": true,"},{"lineNumber":964,"author":{"gitId":"-"},"content":"          \"requires\": {"},{"lineNumber":965,"author":{"gitId":"-"},"content":"            \"ansi-styles\": \"^4.0.0\","},{"lineNumber":966,"author":{"gitId":"-"},"content":"            \"astral-regex\": \"^2.0.0\","},{"lineNumber":967,"author":{"gitId":"-"},"content":"            \"is-fullwidth-code-point\": \"^3.0.0\""},{"lineNumber":968,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":969,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":970,"author":{"gitId":"-"},"content":"        \"wrap-ansi\": {"},{"lineNumber":971,"author":{"gitId":"-"},"content":"          \"version\": \"6.2.0\","},{"lineNumber":972,"author":{"gitId":"-"},"content":"          \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz\","},{"lineNumber":973,"author":{"gitId":"-"},"content":"          \"integrity\": \"sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA\u003d\u003d\","},{"lineNumber":974,"author":{"gitId":"-"},"content":"          \"dev\": true,"},{"lineNumber":975,"author":{"gitId":"-"},"content":"          \"requires\": {"},{"lineNumber":976,"author":{"gitId":"-"},"content":"            \"ansi-styles\": \"^4.0.0\","},{"lineNumber":977,"author":{"gitId":"-"},"content":"            \"string-width\": \"^4.1.0\","},{"lineNumber":978,"author":{"gitId":"-"},"content":"            \"strip-ansi\": \"^6.0.0\""},{"lineNumber":979,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":980,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":981,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":982,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":983,"author":{"gitId":"-"},"content":"    \"lru-cache\": {"},{"lineNumber":984,"author":{"gitId":"-"},"content":"      \"version\": \"6.0.0\","},{"lineNumber":985,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\","},{"lineNumber":986,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA\u003d\u003d\","},{"lineNumber":987,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":988,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":989,"author":{"gitId":"-"},"content":"        \"yallist\": \"^4.0.0\""},{"lineNumber":990,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":991,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":992,"author":{"gitId":"-"},"content":"    \"merge-stream\": {"},{"lineNumber":993,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.0\","},{"lineNumber":994,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz\","},{"lineNumber":995,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w\u003d\u003d\","},{"lineNumber":996,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":997,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":998,"author":{"gitId":"-"},"content":"    \"mime-db\": {"},{"lineNumber":999,"author":{"gitId":"-"},"content":"      \"version\": \"1.52.0\","},{"lineNumber":1000,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\","},{"lineNumber":1001,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg\u003d\u003d\","},{"lineNumber":1002,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"    \"mime-types\": {"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"      \"version\": \"2.1.35\","},{"lineNumber":1006,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\","},{"lineNumber":1007,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw\u003d\u003d\","},{"lineNumber":1008,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"        \"mime-db\": \"1.52.0\""},{"lineNumber":1011,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"    \"mimic-fn\": {"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"      \"version\": \"2.1.0\","},{"lineNumber":1015,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\","},{"lineNumber":1016,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg\u003d\u003d\","},{"lineNumber":1017,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"    \"minimatch\": {"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"      \"version\": \"3.1.2\","},{"lineNumber":1021,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\","},{"lineNumber":1022,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw\u003d\u003d\","},{"lineNumber":1023,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"        \"brace-expansion\": \"^1.1.7\""},{"lineNumber":1026,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"    \"minimist\": {"},{"lineNumber":1029,"author":{"gitId":"vvidday"},"content":"      \"version\": \"1.2.8\","},{"lineNumber":1030,"author":{"gitId":"vvidday"},"content":"      \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz\","},{"lineNumber":1031,"author":{"gitId":"vvidday"},"content":"      \"integrity\": \"sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA\u003d\u003d\","},{"lineNumber":1032,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"    \"ms\": {"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"      \"version\": \"2.1.3\","},{"lineNumber":1036,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\","},{"lineNumber":1037,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA\u003d\u003d\","},{"lineNumber":1038,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"    \"npm-run-path\": {"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"      \"version\": \"4.0.1\","},{"lineNumber":1042,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz\","},{"lineNumber":1043,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw\u003d\u003d\","},{"lineNumber":1044,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"        \"path-key\": \"^3.0.0\""},{"lineNumber":1047,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"    \"object-inspect\": {"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"      \"version\": \"1.12.3\","},{"lineNumber":1051,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.12.3.tgz\","},{"lineNumber":1052,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-geUvdk7c+eizMNUDkRpW1wJwgfOiOeHbxBR/hLXK1aT6zmVSO0jsQcs7fj6MGw89jC/cjGfLcNOrtMYtGqm81g\u003d\u003d\","},{"lineNumber":1053,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"    \"once\": {"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"      \"version\": \"1.4.0\","},{"lineNumber":1057,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\","},{"lineNumber":1058,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w\u003d\u003d\","},{"lineNumber":1059,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"        \"wrappy\": \"1\""},{"lineNumber":1062,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"    \"onetime\": {"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"      \"version\": \"5.1.2\","},{"lineNumber":1066,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz\","},{"lineNumber":1067,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg\u003d\u003d\","},{"lineNumber":1068,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"        \"mimic-fn\": \"^2.1.0\""},{"lineNumber":1071,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"    \"ospath\": {"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"      \"version\": \"1.2.2\","},{"lineNumber":1075,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/ospath/-/ospath-1.2.2.tgz\","},{"lineNumber":1076,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-o6E5qJV5zkAbIDNhGSIlyOhScKXgQrSRMilfph0clDfM0nEnBOlKlH4sWDmG95BW/CvwNz0vmm7dJVtU2KlMiA\u003d\u003d\","},{"lineNumber":1077,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"    \"p-map\": {"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"      \"version\": \"4.0.0\","},{"lineNumber":1081,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/p-map/-/p-map-4.0.0.tgz\","},{"lineNumber":1082,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ\u003d\u003d\","},{"lineNumber":1083,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"        \"aggregate-error\": \"^3.0.0\""},{"lineNumber":1086,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"    \"path-is-absolute\": {"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.1\","},{"lineNumber":1090,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\","},{"lineNumber":1091,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg\u003d\u003d\","},{"lineNumber":1092,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"    \"path-key\": {"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"      \"version\": \"3.1.1\","},{"lineNumber":1096,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\","},{"lineNumber":1097,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q\u003d\u003d\","},{"lineNumber":1098,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"    \"pend\": {"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"      \"version\": \"1.2.0\","},{"lineNumber":1102,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/pend/-/pend-1.2.0.tgz\","},{"lineNumber":1103,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-F3asv42UuXchdzt+xXqfW1OGlVBe+mxa2mqI0pg5yAHZPvFmY3Y6drSf/GQ1A86WgWEN9Kzh/WrgKa6iGcHXLg\u003d\u003d\","},{"lineNumber":1104,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"    \"performance-now\": {"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"      \"version\": \"2.1.0\","},{"lineNumber":1108,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz\","},{"lineNumber":1109,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-7EAHlyLHI56VEIdK57uwHdHKIaAGbnXPiw0yWbarQZOKaKpvUIgW0jWRVLiatnM+XXlSwsanIBH/hzGMJulMow\u003d\u003d\","},{"lineNumber":1110,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"    \"pify\": {"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"      \"version\": \"2.3.0\","},{"lineNumber":1114,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-2.3.0.tgz\","},{"lineNumber":1115,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog\u003d\u003d\","},{"lineNumber":1116,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"    \"pretty-bytes\": {"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"      \"version\": \"5.6.0\","},{"lineNumber":1120,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-5.6.0.tgz\","},{"lineNumber":1121,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-FFw039TmrBqFK8ma/7OL3sDz/VytdtJr044/QUJtH0wK9lb9jLq9tJyIxUwtQJHwar2BqtiA4iCWSwo9JLkzFg\u003d\u003d\","},{"lineNumber":1122,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"    \"process\": {"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"      \"version\": \"0.11.10\","},{"lineNumber":1126,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/process/-/process-0.11.10.tgz\","},{"lineNumber":1127,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-cdGef/drWFoydD1JsMzuFf8100nZl+GT+yacc2bEced5f9Rjk4z+WtFUTBu9PhOi9j/jfmBPu0mMEY4wIdAF8A\u003d\u003d\","},{"lineNumber":1128,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"    \"proxy-from-env\": {"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.0\","},{"lineNumber":1132,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.0.0.tgz\","},{"lineNumber":1133,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-F2JHgJQ1iqwnHDcQjVBsq3n/uoaFL+iPW/eAeL7kVxy/2RrWaN4WroKjjvbsoRtv0ftelNyC01bjRhn/bhcf4A\u003d\u003d\","},{"lineNumber":1134,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"    \"psl\": {"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"      \"version\": \"1.9.0\","},{"lineNumber":1138,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/psl/-/psl-1.9.0.tgz\","},{"lineNumber":1139,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-E/ZsdU4HLs/68gYzgGTkMicWTLPdAftJLfJFlLUAAKZGkStNU72sZjT66SnMDVOfOWY/YAoiD7Jxa9iHvngcag\u003d\u003d\","},{"lineNumber":1140,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"    \"pump\": {"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"      \"version\": \"3.0.0\","},{"lineNumber":1144,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/pump/-/pump-3.0.0.tgz\","},{"lineNumber":1145,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww\u003d\u003d\","},{"lineNumber":1146,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"        \"end-of-stream\": \"^1.1.0\","},{"lineNumber":1149,"author":{"gitId":"-"},"content":"        \"once\": \"^1.3.1\""},{"lineNumber":1150,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"    \"punycode\": {"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"      \"version\": \"2.3.0\","},{"lineNumber":1154,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.0.tgz\","},{"lineNumber":1155,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-rRV+zQD8tVFys26lAGR9WUuS4iUAngJScM+ZRSKtvl5tKeZ2t5bvdNFdNHBW9FWR4guGHlgmsZ1G7BSm2wTbuA\u003d\u003d\","},{"lineNumber":1156,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"    \"qs\": {"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"      \"version\": \"6.10.4\","},{"lineNumber":1160,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.10.4.tgz\","},{"lineNumber":1161,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-OQiU+C+Ds5qiH91qh/mg0w+8nwQuLjM4F4M/PbmhDOoYehPh+Fb0bDjtR1sOvy7YKxvj28Y/M0PhP5uVX0kB+g\u003d\u003d\","},{"lineNumber":1162,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"        \"side-channel\": \"^1.0.4\""},{"lineNumber":1165,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"    \"querystringify\": {"},{"lineNumber":1168,"author":{"gitId":"-"},"content":"      \"version\": \"2.2.0\","},{"lineNumber":1169,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/querystringify/-/querystringify-2.2.0.tgz\","},{"lineNumber":1170,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ\u003d\u003d\","},{"lineNumber":1171,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"    \"request-progress\": {"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"      \"version\": \"3.0.0\","},{"lineNumber":1175,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/request-progress/-/request-progress-3.0.0.tgz\","},{"lineNumber":1176,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-MnWzEHHaxHO2iWiQuHrUPBi/1WeBf5PkxQqNyNvLl9VAYSdXkP8tQ3pBSeCPD+yw0v0Aq1zosWLz0BdeXpWwZg\u003d\u003d\","},{"lineNumber":1177,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"        \"throttleit\": \"^1.0.0\""},{"lineNumber":1180,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"    \"requires-port\": {"},{"lineNumber":1183,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.0\","},{"lineNumber":1184,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz\","},{"lineNumber":1185,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ\u003d\u003d\","},{"lineNumber":1186,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"    \"restore-cursor\": {"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"      \"version\": \"3.1.0\","},{"lineNumber":1190,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz\","},{"lineNumber":1191,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA\u003d\u003d\","},{"lineNumber":1192,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"        \"onetime\": \"^5.1.0\","},{"lineNumber":1195,"author":{"gitId":"-"},"content":"        \"signal-exit\": \"^3.0.2\""},{"lineNumber":1196,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1197,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"    \"rfdc\": {"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"      \"version\": \"1.3.0\","},{"lineNumber":1200,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/rfdc/-/rfdc-1.3.0.tgz\","},{"lineNumber":1201,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-V2hovdzFbOi77/WajaSMXk2OLm+xNIeQdMMuB7icj7bk6zi2F8GGAxigcnDFpJHbNyNcgyJDiP+8nOrY5cZGrA\u003d\u003d\","},{"lineNumber":1202,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"    \"rimraf\": {"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"      \"version\": \"3.0.2\","},{"lineNumber":1206,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz\","},{"lineNumber":1207,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA\u003d\u003d\","},{"lineNumber":1208,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"        \"glob\": \"^7.1.3\""},{"lineNumber":1211,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"    \"rxjs\": {"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"      \"version\": \"7.8.1\","},{"lineNumber":1215,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/rxjs/-/rxjs-7.8.1.tgz\","},{"lineNumber":1216,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-AA3TVj+0A2iuIoQkWEK/tqFjBq2j+6PO6Y0zJcvzLAFhEFIO3HL0vls9hWLncZbAAbK0mar7oZ4V079I/qPMxg\u003d\u003d\","},{"lineNumber":1217,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1218,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"        \"tslib\": \"^2.1.0\""},{"lineNumber":1220,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"    \"safe-buffer\": {"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"      \"version\": \"5.2.1\","},{"lineNumber":1224,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\","},{"lineNumber":1225,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ\u003d\u003d\","},{"lineNumber":1226,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1227,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"    \"safer-buffer\": {"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"      \"version\": \"2.1.2\","},{"lineNumber":1230,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\","},{"lineNumber":1231,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg\u003d\u003d\","},{"lineNumber":1232,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1233,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"    \"semver\": {"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"      \"version\": \"7.5.4\","},{"lineNumber":1236,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.5.4.tgz\","},{"lineNumber":1237,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA\u003d\u003d\","},{"lineNumber":1238,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1240,"author":{"gitId":"-"},"content":"        \"lru-cache\": \"^6.0.0\""},{"lineNumber":1241,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1243,"author":{"gitId":"-"},"content":"    \"shebang-command\": {"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.0\","},{"lineNumber":1245,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\","},{"lineNumber":1246,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA\u003d\u003d\","},{"lineNumber":1247,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1248,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1249,"author":{"gitId":"-"},"content":"        \"shebang-regex\": \"^3.0.0\""},{"lineNumber":1250,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"    \"shebang-regex\": {"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"      \"version\": \"3.0.0\","},{"lineNumber":1254,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\","},{"lineNumber":1255,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A\u003d\u003d\","},{"lineNumber":1256,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1257,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1258,"author":{"gitId":"-"},"content":"    \"side-channel\": {"},{"lineNumber":1259,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.4\","},{"lineNumber":1260,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.4.tgz\","},{"lineNumber":1261,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3RwJyGqg5wS7epxTv0Zvw\u003d\u003d\","},{"lineNumber":1262,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1263,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1264,"author":{"gitId":"-"},"content":"        \"call-bind\": \"^1.0.0\","},{"lineNumber":1265,"author":{"gitId":"-"},"content":"        \"get-intrinsic\": \"^1.0.2\","},{"lineNumber":1266,"author":{"gitId":"-"},"content":"        \"object-inspect\": \"^1.9.0\""},{"lineNumber":1267,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1268,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1269,"author":{"gitId":"-"},"content":"    \"signal-exit\": {"},{"lineNumber":1270,"author":{"gitId":"-"},"content":"      \"version\": \"3.0.7\","},{"lineNumber":1271,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz\","},{"lineNumber":1272,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ\u003d\u003d\","},{"lineNumber":1273,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1274,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1275,"author":{"gitId":"-"},"content":"    \"slice-ansi\": {"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"      \"version\": \"3.0.0\","},{"lineNumber":1277,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/slice-ansi/-/slice-ansi-3.0.0.tgz\","},{"lineNumber":1278,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-pSyv7bSTC7ig9Dcgbw9AuRNUb5k5V6oDudjZoMBSr13qpLBG7tB+zgCkARjq7xIUgdz5P1Qe8u+rSGdouOOIyQ\u003d\u003d\","},{"lineNumber":1279,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1280,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1281,"author":{"gitId":"-"},"content":"        \"ansi-styles\": \"^4.0.0\","},{"lineNumber":1282,"author":{"gitId":"-"},"content":"        \"astral-regex\": \"^2.0.0\","},{"lineNumber":1283,"author":{"gitId":"-"},"content":"        \"is-fullwidth-code-point\": \"^3.0.0\""},{"lineNumber":1284,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1285,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1286,"author":{"gitId":"-"},"content":"    \"sshpk\": {"},{"lineNumber":1287,"author":{"gitId":"-"},"content":"      \"version\": \"1.17.0\","},{"lineNumber":1288,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/sshpk/-/sshpk-1.17.0.tgz\","},{"lineNumber":1289,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-/9HIEs1ZXGhSPE8X6Ccm7Nam1z8KcoCqPdI7ecm1N33EzAetWahvQWVqLZtaZQ+IDKX4IyA2o0gBzqIMkAagHQ\u003d\u003d\","},{"lineNumber":1290,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1291,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1292,"author":{"gitId":"-"},"content":"        \"asn1\": \"~0.2.3\","},{"lineNumber":1293,"author":{"gitId":"-"},"content":"        \"assert-plus\": \"^1.0.0\","},{"lineNumber":1294,"author":{"gitId":"-"},"content":"        \"bcrypt-pbkdf\": \"^1.0.0\","},{"lineNumber":1295,"author":{"gitId":"-"},"content":"        \"dashdash\": \"^1.12.0\","},{"lineNumber":1296,"author":{"gitId":"-"},"content":"        \"ecc-jsbn\": \"~0.1.1\","},{"lineNumber":1297,"author":{"gitId":"-"},"content":"        \"getpass\": \"^0.1.1\","},{"lineNumber":1298,"author":{"gitId":"-"},"content":"        \"jsbn\": \"~0.1.0\","},{"lineNumber":1299,"author":{"gitId":"-"},"content":"        \"safer-buffer\": \"^2.0.2\","},{"lineNumber":1300,"author":{"gitId":"-"},"content":"        \"tweetnacl\": \"~0.14.0\""},{"lineNumber":1301,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1302,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1303,"author":{"gitId":"-"},"content":"    \"string-width\": {"},{"lineNumber":1304,"author":{"gitId":"-"},"content":"      \"version\": \"4.2.3\","},{"lineNumber":1305,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\","},{"lineNumber":1306,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g\u003d\u003d\","},{"lineNumber":1307,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1308,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"        \"emoji-regex\": \"^8.0.0\","},{"lineNumber":1310,"author":{"gitId":"-"},"content":"        \"is-fullwidth-code-point\": \"^3.0.0\","},{"lineNumber":1311,"author":{"gitId":"-"},"content":"        \"strip-ansi\": \"^6.0.1\""},{"lineNumber":1312,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1313,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1314,"author":{"gitId":"-"},"content":"    \"strip-ansi\": {"},{"lineNumber":1315,"author":{"gitId":"-"},"content":"      \"version\": \"6.0.1\","},{"lineNumber":1316,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\","},{"lineNumber":1317,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A\u003d\u003d\","},{"lineNumber":1318,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1319,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1320,"author":{"gitId":"-"},"content":"        \"ansi-regex\": \"^5.0.1\""},{"lineNumber":1321,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1322,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1323,"author":{"gitId":"-"},"content":"    \"strip-final-newline\": {"},{"lineNumber":1324,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.0\","},{"lineNumber":1325,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz\","},{"lineNumber":1326,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA\u003d\u003d\","},{"lineNumber":1327,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1328,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1329,"author":{"gitId":"-"},"content":"    \"supports-color\": {"},{"lineNumber":1330,"author":{"gitId":"-"},"content":"      \"version\": \"8.1.1\","},{"lineNumber":1331,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\","},{"lineNumber":1332,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q\u003d\u003d\","},{"lineNumber":1333,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1334,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1335,"author":{"gitId":"-"},"content":"        \"has-flag\": \"^4.0.0\""},{"lineNumber":1336,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1337,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1338,"author":{"gitId":"-"},"content":"    \"throttleit\": {"},{"lineNumber":1339,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.0\","},{"lineNumber":1340,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/throttleit/-/throttleit-1.0.0.tgz\","},{"lineNumber":1341,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-rkTVqu6IjfQ/6+uNuuc3sZek4CEYxTJom3IktzgdSxcZqdARuebbA/f4QmAxMQIxqq9ZLEUkSYqvuk1I6VKq4g\u003d\u003d\","},{"lineNumber":1342,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1343,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1344,"author":{"gitId":"-"},"content":"    \"through\": {"},{"lineNumber":1345,"author":{"gitId":"-"},"content":"      \"version\": \"2.3.8\","},{"lineNumber":1346,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/through/-/through-2.3.8.tgz\","},{"lineNumber":1347,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-w89qg7PI8wAdvX60bMDP+bFoD5Dvhm9oLheFp5O4a2QF0cSBGsBX4qZmadPMvVqlLJBBci+WqGGOAPvcDeNSVg\u003d\u003d\","},{"lineNumber":1348,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1349,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1350,"author":{"gitId":"-"},"content":"    \"tmp\": {"},{"lineNumber":1351,"author":{"gitId":"-"},"content":"      \"version\": \"0.2.1\","},{"lineNumber":1352,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/tmp/-/tmp-0.2.1.tgz\","},{"lineNumber":1353,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-76SUhtfqR2Ijn+xllcI5P1oyannHNHByD80W1q447gU3mp9G9PSpGdWmjUOHRDPiHYacIk66W7ubDTuPF3BEtQ\u003d\u003d\","},{"lineNumber":1354,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1356,"author":{"gitId":"-"},"content":"        \"rimraf\": \"^3.0.0\""},{"lineNumber":1357,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1358,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1359,"author":{"gitId":"-"},"content":"    \"tough-cookie\": {"},{"lineNumber":1360,"author":{"gitId":"-"},"content":"      \"version\": \"4.1.3\","},{"lineNumber":1361,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.1.3.tgz\","},{"lineNumber":1362,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-aX/y5pVRkfRnfmuX+OdbSdXvPe6ieKX/G2s7e98f4poJHnqH3281gDPm/metm6E/WRamfx7WC4HUqkWHfQHprw\u003d\u003d\","},{"lineNumber":1363,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1364,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1365,"author":{"gitId":"-"},"content":"        \"psl\": \"^1.1.33\","},{"lineNumber":1366,"author":{"gitId":"-"},"content":"        \"punycode\": \"^2.1.1\","},{"lineNumber":1367,"author":{"gitId":"-"},"content":"        \"universalify\": \"^0.2.0\","},{"lineNumber":1368,"author":{"gitId":"-"},"content":"        \"url-parse\": \"^1.5.3\""},{"lineNumber":1369,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1370,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1371,"author":{"gitId":"-"},"content":"    \"tslib\": {"},{"lineNumber":1372,"author":{"gitId":"-"},"content":"      \"version\": \"2.6.2\","},{"lineNumber":1373,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/tslib/-/tslib-2.6.2.tgz\","},{"lineNumber":1374,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-AEYxH93jGFPn/a2iVAwW87VuUIkR1FVUKB77NwMF7nBTDkDrrT/Hpt/IrCJ0QXhW27jTBDcf5ZY7w6RiqTMw2Q\u003d\u003d\","},{"lineNumber":1375,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1376,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1377,"author":{"gitId":"-"},"content":"    \"tunnel-agent\": {"},{"lineNumber":1378,"author":{"gitId":"-"},"content":"      \"version\": \"0.6.0\","},{"lineNumber":1379,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz\","},{"lineNumber":1380,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w\u003d\u003d\","},{"lineNumber":1381,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1382,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1383,"author":{"gitId":"-"},"content":"        \"safe-buffer\": \"^5.0.1\""},{"lineNumber":1384,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1385,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1386,"author":{"gitId":"-"},"content":"    \"tweetnacl\": {"},{"lineNumber":1387,"author":{"gitId":"-"},"content":"      \"version\": \"0.14.5\","},{"lineNumber":1388,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz\","},{"lineNumber":1389,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-KXXFFdAbFXY4geFIwoyNK+f5Z1b7swfXABfL7HXCmoIWMKU3dmS26672A4EeQtDzLKy7SXmfBu51JolvEKwtGA\u003d\u003d\","},{"lineNumber":1390,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1391,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1392,"author":{"gitId":"-"},"content":"    \"type-fest\": {"},{"lineNumber":1393,"author":{"gitId":"-"},"content":"      \"version\": \"0.21.3\","},{"lineNumber":1394,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz\","},{"lineNumber":1395,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w\u003d\u003d\","},{"lineNumber":1396,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1397,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1398,"author":{"gitId":"-"},"content":"    \"universalify\": {"},{"lineNumber":1399,"author":{"gitId":"-"},"content":"      \"version\": \"0.2.0\","},{"lineNumber":1400,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz\","},{"lineNumber":1401,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg\u003d\u003d\","},{"lineNumber":1402,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1403,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1404,"author":{"gitId":"-"},"content":"    \"untildify\": {"},{"lineNumber":1405,"author":{"gitId":"-"},"content":"      \"version\": \"4.0.0\","},{"lineNumber":1406,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/untildify/-/untildify-4.0.0.tgz\","},{"lineNumber":1407,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-KK8xQ1mkzZeg9inewmFVDNkg3l5LUhoq9kN6iWYB/CC9YMG8HA+c1Q8HwDe6dEX7kErrEVNVBO3fWsVq5iDgtw\u003d\u003d\","},{"lineNumber":1408,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1409,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1410,"author":{"gitId":"-"},"content":"    \"url-parse\": {"},{"lineNumber":1411,"author":{"gitId":"-"},"content":"      \"version\": \"1.5.10\","},{"lineNumber":1412,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/url-parse/-/url-parse-1.5.10.tgz\","},{"lineNumber":1413,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ\u003d\u003d\","},{"lineNumber":1414,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1415,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1416,"author":{"gitId":"-"},"content":"        \"querystringify\": \"^2.1.1\","},{"lineNumber":1417,"author":{"gitId":"-"},"content":"        \"requires-port\": \"^1.0.0\""},{"lineNumber":1418,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1419,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1420,"author":{"gitId":"-"},"content":"    \"uuid\": {"},{"lineNumber":1421,"author":{"gitId":"-"},"content":"      \"version\": \"8.3.2\","},{"lineNumber":1422,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz\","},{"lineNumber":1423,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg\u003d\u003d\","},{"lineNumber":1424,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1425,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1426,"author":{"gitId":"-"},"content":"    \"verror\": {"},{"lineNumber":1427,"author":{"gitId":"-"},"content":"      \"version\": \"1.10.0\","},{"lineNumber":1428,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/verror/-/verror-1.10.0.tgz\","},{"lineNumber":1429,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-ZZKSmDAEFOijERBLkmYfJ+vmk3w+7hOLYDNkRCuRuMJGEmqYNCNLyBBFwWKVMhfwaEF3WOd0Zlw86U/WC/+nYw\u003d\u003d\","},{"lineNumber":1430,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1431,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1432,"author":{"gitId":"-"},"content":"        \"assert-plus\": \"^1.0.0\","},{"lineNumber":1433,"author":{"gitId":"-"},"content":"        \"core-util-is\": \"1.0.2\","},{"lineNumber":1434,"author":{"gitId":"-"},"content":"        \"extsprintf\": \"^1.2.0\""},{"lineNumber":1435,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1436,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1437,"author":{"gitId":"-"},"content":"    \"which\": {"},{"lineNumber":1438,"author":{"gitId":"-"},"content":"      \"version\": \"2.0.2\","},{"lineNumber":1439,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\","},{"lineNumber":1440,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA\u003d\u003d\","},{"lineNumber":1441,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1442,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1443,"author":{"gitId":"-"},"content":"        \"isexe\": \"^2.0.0\""},{"lineNumber":1444,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1445,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1446,"author":{"gitId":"-"},"content":"    \"wrap-ansi\": {"},{"lineNumber":1447,"author":{"gitId":"-"},"content":"      \"version\": \"7.0.0\","},{"lineNumber":1448,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\","},{"lineNumber":1449,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q\u003d\u003d\","},{"lineNumber":1450,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1451,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1452,"author":{"gitId":"-"},"content":"        \"ansi-styles\": \"^4.0.0\","},{"lineNumber":1453,"author":{"gitId":"-"},"content":"        \"string-width\": \"^4.1.0\","},{"lineNumber":1454,"author":{"gitId":"-"},"content":"        \"strip-ansi\": \"^6.0.0\""},{"lineNumber":1455,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1456,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1457,"author":{"gitId":"-"},"content":"    \"wrappy\": {"},{"lineNumber":1458,"author":{"gitId":"-"},"content":"      \"version\": \"1.0.2\","},{"lineNumber":1459,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\","},{"lineNumber":1460,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ\u003d\u003d\","},{"lineNumber":1461,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1462,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1463,"author":{"gitId":"-"},"content":"    \"yallist\": {"},{"lineNumber":1464,"author":{"gitId":"-"},"content":"      \"version\": \"4.0.0\","},{"lineNumber":1465,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\","},{"lineNumber":1466,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A\u003d\u003d\","},{"lineNumber":1467,"author":{"gitId":"-"},"content":"      \"dev\": true"},{"lineNumber":1468,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1469,"author":{"gitId":"-"},"content":"    \"yauzl\": {"},{"lineNumber":1470,"author":{"gitId":"-"},"content":"      \"version\": \"2.10.0\","},{"lineNumber":1471,"author":{"gitId":"-"},"content":"      \"resolved\": \"https://registry.npmjs.org/yauzl/-/yauzl-2.10.0.tgz\","},{"lineNumber":1472,"author":{"gitId":"-"},"content":"      \"integrity\": \"sha512-p4a9I6X6nu6IhoGmBqAcbJy1mlC4j27vEPZX9F4L4/vZT3Lyq1VkFHw/V/PUcB9Buo+DG3iHkT0x3Qya58zc3g\u003d\u003d\","},{"lineNumber":1473,"author":{"gitId":"-"},"content":"      \"dev\": true,"},{"lineNumber":1474,"author":{"gitId":"-"},"content":"      \"requires\": {"},{"lineNumber":1475,"author":{"gitId":"-"},"content":"        \"buffer-crc32\": \"~0.2.3\","},{"lineNumber":1476,"author":{"gitId":"-"},"content":"        \"fd-slicer\": \"~1.1.0\""},{"lineNumber":1477,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":1478,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1479,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1480,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vvidday":8,"-":1472}},{"path":"frontend/cypress/tests/chartView/chartView_mergeCommits.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"describe(\u0027include merge commits in chart view\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027show merge commits in summary chart\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"    // ramp chart should have merge commit slices"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027[title\u003d\"[2023-03-03] Merge branch \\\u0027new-branch\\\u0027 into cypress: +0 -0 lines \"]\u0027)"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027have.class\u0027, \u0027ramp__slice\u0027)"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027exist\u0027);"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027hide merge commits in summary chart when some file types unselected\u0027, () \u003d\u003e {"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"    // check breakdown by file type"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#summary label.filter-breakdown input:visible\u0027)"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"      .check()"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    // uncheck gradle file type"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#summary div.fileTypes input[id\u003d\"gradle\"]\u0027)"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"      .uncheck()"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"    // ramp chart should not have merge commit slices"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027[title\u003d\"[2023-03-03] Merge branch \\\u0027new-branch\\\u0027 into cypress: +0 -0 lines \"]\u0027)"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027not.exist\u0027);"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"});"}],"authorContributionMap":{"ckcherry23":25}},{"path":"frontend/cypress/tests/chartView/chartView_mergeGroup.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027merge group\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027check and uncheck merge group when group by repos\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      .select(\u0027groupByRepos\u0027);"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      .check()"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    // after checking merge group, only one merged repo group will show"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-charts\u0027).find(\u0027.summary-chart\u0027)"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      .should(\u0027have.length\u0027, 1);"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      .uncheck()"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // after un-checking merge group, all 5 summary charts will show"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-charts\u0027).find(\u0027.summary-chart\u0027)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      .should(\u0027have.length\u0027, 5);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  it(\u0027check and uncheck merge group when group by authors\u0027, () \u003d\u003e {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      .select(\u0027groupByAuthors\u0027);"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      .check()"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // after checking merge group, 5 merged author groups will show"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-charts\u0027).find(\u0027.summary-chart\u0027)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      .should(\u0027have.length\u0027, 5);"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      .uncheck()"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // after un-checking merge group, all 5 summary charts will show"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-charts\u0027).find(\u0027.summary-chart\u0027)"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      .should(\u0027have.length\u0027, 5);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  it(\u0027merge group option should be disabled when group by none\u0027, () \u003d\u003e {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      .select(\u0027groupByNone\u0027);"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      .should(\u0027be.disabled\u0027);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"  it(\u0027should have the correct number of merge group contribution bars and correct length\u0027, () \u003d\u003e {"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"    // Assumption: The number of merge group contribution bars is 3 and the width of the third bar is 50%."},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"      .check()"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"    // get the three chart bars and assert they have the correct initial widths"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    cy.get(\u0027.stacked-bar__contrib--bar\u0027)"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"      .should(\u0027have.length\u0027, 3)"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"      .then(($bars) \u003d\u003e {"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"        // calculate the percentage of the width relative to the parent container"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"        const parentWidth \u003d $bars.eq(0).parent().width();"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"        const width1 \u003d (parseFloat(window.getComputedStyle($bars[0]).width) / parentWidth) * 100;"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"        const width2 \u003d (parseFloat(window.getComputedStyle($bars[1]).width) / parentWidth) * 100;"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"        const width3 \u003d (parseFloat(window.getComputedStyle($bars[2]).width) / parentWidth) * 100;"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"        // assert that the widths are close enough to 100% and 50%"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"        expect(width1).to.be.closeTo(100, 1);"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"        expect(width2).to.be.closeTo(100, 1);"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"        expect(width3).to.be.closeTo(50, 1);"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"      });"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"  });"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"  it(\u0027merge group contribution bars should have correct width after reload\u0027, () \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input:visible\u0027)"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"      .check()"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"    const initialWidths \u003d [];"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"    // Store the initial widths of the contribution bars"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    cy.get(\u0027.stacked-bar__contrib--bar\u0027)"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"      .each(($bar) \u003d\u003e {"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"        const width \u003d window.getComputedStyle($bar[0]).width;"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"        initialWidths.push(width);"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"      })"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"      .then(() \u003d\u003e {"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"        // Reload the page and wait for the loading div to disappear"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"        cy.reload();"},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"        cy.get(\u0027.overlay-loader\u0027).should(\u0027not.be.visible\u0027);"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"        // Get the contribution bars again and compare their widths with the initial widths"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        cy.get(\u0027.stacked-bar__contrib--bar\u0027)"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"          .should(\u0027have.length\u0027, initialWidths.length)"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"          .each(($bar, index) \u003d\u003e {"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"            const width \u003d window.getComputedStyle($bar[0]).width;"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"            expect(width).to.equal(initialWidths[index]);"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"          });"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"      });"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"  });"},{"lineNumber":110,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"MarcusTXK":50,"-":60}},{"path":"frontend/cypress/tests/chartView/chartView_percentage.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027sort by contribution\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027percentage should only be displayed when sort by contribution\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      .should(\u0027not.exist\u0027);"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.sort-group \u003e select:visible\u0027)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      .select(\u0027↑ contribution\u0027);"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027);"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.sort-group \u003e select:visible\u0027)"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      .select(\u0027↓ group title\u0027);"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      .should(\u0027not.exist\u0027);"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.sort-group \u003e select:visible\u0027)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      .select(\u0027↓ contribution\u0027);"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.sort-group \u003e select:visible\u0027)"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      .select(\u0027↑ variance\u0027);"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      .should(\u0027not.exist\u0027);"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.sort-group \u003e select:visible\u0027)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      .select(\u0027↓ variance\u0027);"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      .should(\u0027not.exist\u0027);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  it(\u0027percentage is NOT shown even after changing other fields\u0027, () \u003d\u003e {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      .select(\u0027None\u0027);"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      .should(\u0027not.exist\u0027);"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      .select(\u0027Author\u0027);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      .should(\u0027not.exist\u0027);"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.sort-within-group \u003e select:visible\u0027)"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      .select(\u0027↓ contribution\u0027);"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      .should(\u0027not.exist\u0027);"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.sort-within-group \u003e select:visible\u0027)"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      .select(\u0027↑ variance\u0027);"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      .should(\u0027not.exist\u0027);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  it(\u0027percentage is NOT hidden even after changing other fields\u0027, () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.sort-group \u003e select:visible\u0027)"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      .select(\u0027↓ contribution\u0027);"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027);"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"    cy.get(\u0027#summary-wrapper\u0027).scrollTo(\u0027top\u0027);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      .select(\u0027None\u0027);"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027);"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      .select(\u0027Author\u0027);"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027);"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.sort-within-group \u003e select:visible\u0027)"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      .select(\u0027↑ contribution\u0027);"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027);"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    cy.get(\u0027div.mui-select.sort-within-group \u003e select:visible\u0027)"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      .select(\u0027↓ title\u0027);"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary .summary-chart__title--percentile\u0027)"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":96,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"MarcusTXK":1,"-":95}},{"path":"frontend/cypress/tests/codeView/codeView_hideFileDetails.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027hide all file details\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027check hide all file details hides the content of all the files\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    // open the code panel"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    // the contents of all the files should be visible"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // hide the details of all the files"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .files\u0027)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // the contents of all the files should be hidden"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  it(\u0027check details of one file are shown, rest are hidden\u0027, () \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // should show \u0027show all file details\u0027 only"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline a\u0027)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      .should(\u0027not.contain.text\u0027, \u0027hide all file details\u0027)"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      .should(\u0027contain.text\u0027, \u0027show all file details\u0027);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // open contents of the first file"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .title .caret\u0027)"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // should show both \u0027show/hide all file details\u0027"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline a\u0027)"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      .should(\u0027contain.text\u0027, \u0027hide all file details\u0027)"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      .should(\u0027contain.text\u0027, \u0027show all file details\u0027);"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // contents of the first file should be visible"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // contents of the last file should be hidden"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      .last()"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027check file can be hidden after scrolling\u0027, () \u003d\u003e {"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"    // contents of the first file should be visible"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":81,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":83,"author":{"gitId":"ckcherry23"},"content":"    // scroll some lines in the contents of the second file"},{"lineNumber":84,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"      .eq(1)"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"      .scrollIntoView({ offset: { top: 500, left: 0 } });"},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"    // title of the second file should still be visible"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .file .title \u0027)"},{"lineNumber":90,"author":{"gitId":"ckcherry23"},"content":"      .eq(1)"},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"    // close contents of the second file"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .title .caret\u0027)"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"      .eq(1)"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"    // contents of the second file should not be visible"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"      .eq(1)"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"    // title of the second file should still be visible"},{"lineNumber":105,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .file .title \u0027)"},{"lineNumber":106,"author":{"gitId":"ckcherry23"},"content":"      .eq(1)"},{"lineNumber":107,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":108,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":109,"author":{"gitId":"ckcherry23"},"content":"    // scroll some lines up from the top of the second file"},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":111,"author":{"gitId":"ckcherry23"},"content":"      .eq(1)"},{"lineNumber":112,"author":{"gitId":"ckcherry23"},"content":"      .scrollIntoView({ offset: { top: -500, left: 0 } });"},{"lineNumber":113,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":114,"author":{"gitId":"ckcherry23"},"content":"    // title of the first file should be visible"},{"lineNumber":115,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .file .title \u0027)"},{"lineNumber":116,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":117,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":118,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":119,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  it(\u0027check show all file details shows the content of all the files\u0027, () \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    // hide the content of all the files"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    // show the content of all the files"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":148,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":149,"author":{"gitId":"vvidday"},"content":"  it(\u0027check collapsed file persists after sort\u0027, () \u003d\u003e {"},{"lineNumber":150,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":152,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":153,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":154,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":155,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":156,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":157,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":158,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":159,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":160,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":161,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":162,"author":{"gitId":"vvidday"},"content":"    // hide contents of the first file"},{"lineNumber":163,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-authorship .title .caret\u0027)"},{"lineNumber":164,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":165,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":166,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":167,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":168,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-authorship .file-content \u0027)"},{"lineNumber":169,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":170,"author":{"gitId":"vvidday"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":171,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":172,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-authorship .title .path\u0027)"},{"lineNumber":173,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":174,"author":{"gitId":"vvidday"},"content":"      .invoke(\u0027text\u0027)"},{"lineNumber":175,"author":{"gitId":"vvidday"},"content":"    // keep track of first file by file path so test doesn\u0027t rely on correctness of sort"},{"lineNumber":176,"author":{"gitId":"vvidday"},"content":"      .then((filePath) \u003d\u003e {"},{"lineNumber":177,"author":{"gitId":"vvidday"},"content":"        // change sort by"},{"lineNumber":178,"author":{"gitId":"vvidday"},"content":"        cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-by \u003e select\u0027)"},{"lineNumber":179,"author":{"gitId":"vvidday"},"content":"          .select(\u0027Path\u0027)"},{"lineNumber":180,"author":{"gitId":"vvidday"},"content":"          .should(\u0027have.value\u0027, \u0027path\u0027);"},{"lineNumber":181,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":182,"author":{"gitId":"vvidday"},"content":"        // wait until loading is finished"},{"lineNumber":183,"author":{"gitId":"vvidday"},"content":"        cy.get(\u0027[aria-label\u003d\"Loading\"]\u0027)"},{"lineNumber":184,"author":{"gitId":"vvidday"},"content":"          .should(\u0027not.be.visible\u0027);"},{"lineNumber":185,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":186,"author":{"gitId":"vvidday"},"content":"        // contents of file should still be hidden"},{"lineNumber":187,"author":{"gitId":"vvidday"},"content":"        cy.contains(\u0027#tab-authorship .file\u0027, filePath.trim())"},{"lineNumber":188,"author":{"gitId":"vvidday"},"content":"          .children(\u0027.file-content\u0027)"},{"lineNumber":189,"author":{"gitId":"vvidday"},"content":"          .should(\u0027not.be.visible\u0027);"},{"lineNumber":190,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":191,"author":{"gitId":"vvidday"},"content":"        // change sort order"},{"lineNumber":192,"author":{"gitId":"vvidday"},"content":"        cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-order \u003e select\u0027)"},{"lineNumber":193,"author":{"gitId":"vvidday"},"content":"          .select(\u0027Ascending\u0027)"},{"lineNumber":194,"author":{"gitId":"vvidday"},"content":"          .should(\u0027have.value\u0027, \u0027false\u0027);"},{"lineNumber":195,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":196,"author":{"gitId":"vvidday"},"content":"        // wait until loading is finished"},{"lineNumber":197,"author":{"gitId":"vvidday"},"content":"        cy.get(\u0027[aria-label\u003d\"Loading\"]\u0027)"},{"lineNumber":198,"author":{"gitId":"vvidday"},"content":"          .should(\u0027not.be.visible\u0027);"},{"lineNumber":199,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":200,"author":{"gitId":"vvidday"},"content":"        // contents of file should still be hidden"},{"lineNumber":201,"author":{"gitId":"vvidday"},"content":"        cy.contains(\u0027#tab-authorship .file\u0027, filePath.trim())"},{"lineNumber":202,"author":{"gitId":"vvidday"},"content":"          .children(\u0027.file-content\u0027)"},{"lineNumber":203,"author":{"gitId":"vvidday"},"content":"          .should(\u0027not.be.visible\u0027);"},{"lineNumber":204,"author":{"gitId":"vvidday"},"content":"      });"},{"lineNumber":205,"author":{"gitId":"vvidday"},"content":"  });"},{"lineNumber":206,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"vvidday":57,"ckcherry23":50,"-":99}},{"path":"frontend/cypress/tests/codeView/codeView_mergeGroupBlame.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"describe(\u0027merge group blame in code view\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027no author breakdown shown by default\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"    // open the code panel"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"    // code panel should be visible"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"    // author breakdown should not be visible"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .files .file .title .author-breakdown\u0027)"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027not.exist\u0027);"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027merge group for group by repos shows author breakdown for each file\u0027, () \u003d\u003e {"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"    // group summary charts by repos"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"      .select(\u0027groupByRepos\u0027);"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"    // check merge group checkbox"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input\u0027)"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"      .check()"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"    // open the code panel"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"    // code panel should be visible"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .files\u0027, { timeout: 90000 })"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":"    // author breakdown should exist"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .files .file .title .author-breakdown\u0027)"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027exist\u0027);"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027author breakdown visible when file content hidden\u0027, () \u003d\u003e {"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"    // group summary charts by repos"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"      .select(\u0027groupByRepos\u0027);"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"    // check merge group checkbox"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input\u0027)"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"      .check()"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"    // open the code panel"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"    // hide content of all files"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .toolbar--multiline\u0027)"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"    // author breakdown should be visible"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .files .file .title .author-breakdown\u0027)"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027author breakdown contains only file authors in alphabetical order\u0027, () \u003d\u003e {"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"    // group summary charts by repos"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"      .select(\u0027groupByRepos\u0027);"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"    // check merge group checkbox"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input\u0027)"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"      .check()"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":81,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":"    // open the code panel"},{"lineNumber":83,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"    // author breakdown contains expected author count and order"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"    const expectedResult \u003d [\u0027eugenepeh\u0027, \u0027jamessspanggg\u0027, \u0027yamidark\u0027, \u0027yong24s\u0027];"},{"lineNumber":90,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .files .file .title .author-breakdown\u0027)"},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"      .eq(2)"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"      .children(\u0027.author-breakdown__legend\u0027)"},{"lineNumber":93,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027have.length\u0027, expectedResult.length)"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"      .each(($el, index) \u003d\u003e {"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"        cy.wrap($el).should(\u0027contain\u0027, expectedResult[index]);"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027authors are assigned the same color in all files\u0027, () \u003d\u003e {"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"    // group summary charts by repos"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":"      .select(\u0027groupByRepos\u0027);"},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"    // check merge group checkbox"},{"lineNumber":105,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input\u0027)"},{"lineNumber":106,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":107,"author":{"gitId":"ckcherry23"},"content":"      .check()"},{"lineNumber":108,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":109,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"    // open the code panel"},{"lineNumber":111,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":113,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":114,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":115,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":116,"author":{"gitId":"ckcherry23"},"content":"    // check first and second occurence of same author has the same color"},{"lineNumber":117,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .author-breakdown__legend:contains(\\\u0027jamessspanggg\\\u0027)\u0027)"},{"lineNumber":118,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":119,"author":{"gitId":"ckcherry23"},"content":"      .then(($el) \u003d\u003e {"},{"lineNumber":120,"author":{"gitId":"ckcherry23"},"content":"        const color \u003d $el.children().first().css(\u0027color\u0027);"},{"lineNumber":121,"author":{"gitId":"ckcherry23"},"content":"        cy.get(\u0027#tab-authorship .author-breakdown__legend:contains(\\\u0027jamessspanggg\\\u0027)\u0027)"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":"          .eq(1).children().first()"},{"lineNumber":123,"author":{"gitId":"ckcherry23"},"content":"          .should(\u0027have.css\u0027, \u0027color\u0027, color);"},{"lineNumber":124,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":125,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":126,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":127,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027author name shown on segment hover for known authors\u0027, () \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"ckcherry23"},"content":"    // group summary charts by repos"},{"lineNumber":129,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":130,"author":{"gitId":"ckcherry23"},"content":"      .select(\u0027groupByRepos\u0027);"},{"lineNumber":131,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":132,"author":{"gitId":"ckcherry23"},"content":"    // check merge group checkbox"},{"lineNumber":133,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input\u0027)"},{"lineNumber":134,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":135,"author":{"gitId":"ckcherry23"},"content":"      .check()"},{"lineNumber":136,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":137,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":138,"author":{"gitId":"ckcherry23"},"content":"    // open the code panel"},{"lineNumber":139,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":141,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":142,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":143,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":144,"author":{"gitId":"ckcherry23"},"content":"    // author name in html title attribute should be shown"},{"lineNumber":145,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .files .segment.active\u0027)"},{"lineNumber":146,"author":{"gitId":"ckcherry23"},"content":"      .not(\u0027.untouched\u0027)"},{"lineNumber":147,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":148,"author":{"gitId":"ckcherry23"},"content":"      .invoke(\u0027attr\u0027, \u0027title\u0027)"},{"lineNumber":149,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027contain\u0027, \u0027eugenepeh\u0027);"},{"lineNumber":150,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":151,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":152,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027author name shown as unknown for missing authors\u0027, () \u003d\u003e {"},{"lineNumber":153,"author":{"gitId":"ckcherry23"},"content":"    // group summary charts by repos"},{"lineNumber":154,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":155,"author":{"gitId":"ckcherry23"},"content":"      .select(\u0027groupByRepos\u0027);"},{"lineNumber":156,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":157,"author":{"gitId":"ckcherry23"},"content":"    // check merge group checkbox"},{"lineNumber":158,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input\u0027)"},{"lineNumber":159,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":160,"author":{"gitId":"ckcherry23"},"content":"      .check()"},{"lineNumber":161,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":162,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":163,"author":{"gitId":"ckcherry23"},"content":"    // open the code panel"},{"lineNumber":164,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":165,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":166,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":167,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":168,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":169,"author":{"gitId":"ckcherry23"},"content":"    // author name in html title attribute should be unknown"},{"lineNumber":170,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .files .segment.untouched\u0027)"},{"lineNumber":171,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":172,"author":{"gitId":"ckcherry23"},"content":"      .invoke(\u0027attr\u0027, \u0027title\u0027)"},{"lineNumber":173,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027contain\u0027, \u0027Unknown\u0027);"},{"lineNumber":174,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":175,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":176,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027code segment has same color as author legend\u0027, () \u003d\u003e {"},{"lineNumber":177,"author":{"gitId":"ckcherry23"},"content":"    // group summary charts by repos"},{"lineNumber":178,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":179,"author":{"gitId":"ckcherry23"},"content":"      .select(\u0027groupByRepos\u0027);"},{"lineNumber":180,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":181,"author":{"gitId":"ckcherry23"},"content":"    // check merge group checkbox"},{"lineNumber":182,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input\u0027)"},{"lineNumber":183,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":184,"author":{"gitId":"ckcherry23"},"content":"      .check()"},{"lineNumber":185,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":186,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":187,"author":{"gitId":"ckcherry23"},"content":"    // open the code panel"},{"lineNumber":188,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":190,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":191,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":192,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":193,"author":{"gitId":"ckcherry23"},"content":"    // segment color should be the same as author legend color"},{"lineNumber":194,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .files .segment.active\u0027)"},{"lineNumber":195,"author":{"gitId":"ckcherry23"},"content":"      .not(\u0027.untouched\u0027)"},{"lineNumber":196,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":197,"author":{"gitId":"ckcherry23"},"content":"      .then(($el) \u003d\u003e {"},{"lineNumber":198,"author":{"gitId":"ckcherry23"},"content":"        const color \u003d $el.css(\u0027border-left-color\u0027);"},{"lineNumber":199,"author":{"gitId":"ckcherry23"},"content":"        const author \u003d \u0027eugenepeh\u0027;"},{"lineNumber":200,"author":{"gitId":"ckcherry23"},"content":"        cy.get(\u0027#tab-authorship .files .file .title .author-breakdown\u0027)"},{"lineNumber":201,"author":{"gitId":"ckcherry23"},"content":"          .eq(2)"},{"lineNumber":202,"author":{"gitId":"ckcherry23"},"content":"          .children(\u0027.author-breakdown__legend\u0027)"},{"lineNumber":203,"author":{"gitId":"ckcherry23"},"content":"          .contains(author)"},{"lineNumber":204,"author":{"gitId":"ckcherry23"},"content":"          .prev()"},{"lineNumber":205,"author":{"gitId":"ckcherry23"},"content":"          .should(\u0027have.css\u0027, \u0027color\u0027, color);"},{"lineNumber":206,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":207,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":208,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":209,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027colors in author breakdown match assigned colors\u0027, () \u003d\u003e {"},{"lineNumber":210,"author":{"gitId":"ckcherry23"},"content":"    // group summary charts by repos"},{"lineNumber":211,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027div.mui-select.grouping \u003e select:visible\u0027)"},{"lineNumber":212,"author":{"gitId":"ckcherry23"},"content":"      .select(\u0027groupByRepos\u0027);"},{"lineNumber":213,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":214,"author":{"gitId":"ckcherry23"},"content":"    // check merge group checkbox"},{"lineNumber":215,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#summary label.merge-group \u003e input\u0027)"},{"lineNumber":216,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":217,"author":{"gitId":"ckcherry23"},"content":"      .check()"},{"lineNumber":218,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":219,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":220,"author":{"gitId":"ckcherry23"},"content":"    // open the code panel"},{"lineNumber":221,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":223,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":224,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":225,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":226,"author":{"gitId":"ckcherry23"},"content":"    // author breakdown contains assigned colors"},{"lineNumber":227,"author":{"gitId":"ckcherry23"},"content":"    const expectedResult \u003d [\u0027rgb(30, 144, 255)\u0027, \u0027rgb(240, 128, 128)\u0027, \u0027rgb(0, 255, 127)\u0027, \u0027rgb(255, 215, 0)\u0027];"},{"lineNumber":228,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-authorship .files .file .title .author-breakdown\u0027)"},{"lineNumber":229,"author":{"gitId":"ckcherry23"},"content":"      .eq(2)"},{"lineNumber":230,"author":{"gitId":"ckcherry23"},"content":"      .children(\u0027.author-breakdown__legend\u0027)"},{"lineNumber":231,"author":{"gitId":"ckcherry23"},"content":"      .each(($el, index) \u003d\u003e {"},{"lineNumber":232,"author":{"gitId":"ckcherry23"},"content":"        cy.wrap($el).children().first().should(\u0027have.css\u0027, \u0027color\u0027, expectedResult[index]);"},{"lineNumber":233,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":234,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":235,"author":{"gitId":"ckcherry23"},"content":"});"}],"authorContributionMap":{"ckcherry23":226,"-":9}},{"path":"frontend/cypress/tests/codeView/codeView_reload.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027reload page\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027reload page should restore all controls\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    // open the code panel"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    // change sort by"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-by \u003e select\u0027)"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      .select(\u0027LoC\u0027);"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // change sort order"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-order \u003e select\u0027)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      .select(\u0027Descending\u0027);"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // select radio-button"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes \u003e .radio-button--checkbox\u0027)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      .check()"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"all\"]\u0027)"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"gradle\"]\u0027)"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      .uncheck()"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"java\"]\u0027)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    cy.reload();"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-by \u003e select\u0027)"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.value\u0027, \u0027linesOfCode\u0027);"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-order \u003e select\u0027)"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      .should(\u0027have.value\u0027, \u0027true\u0027);"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes \u003e .radio-button--checkbox\u0027)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"all\"]\u0027)"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"gradle\"]\u0027)"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"java\"]\u0027)"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":53,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"vvidday":1,"-":52}},{"path":"frontend/cypress/tests/codeView/codeView_switchAuthorship.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027switch authorship\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027switch authorship view should restore all default controls\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    // open the code panel"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    // change sort by"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-by \u003e select\u0027)"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      .select(\u0027Path\u0027)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      .should(\u0027have.value\u0027, \u0027path\u0027);"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    // change sort order"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-order \u003e select\u0027)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      .select(\u0027Ascending\u0027)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      .should(\u0027have.value\u0027, \u0027false\u0027);"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // uncheck a file type"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"gradle\"]\u0027)"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      .uncheck()"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // switch authorship view"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-code\u0027)"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      .last()"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // check default controls"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-by \u003e select\u0027)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      .should(\u0027not.have.value\u0027, \u0027path\u0027)"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.value\u0027, \u0027linesOfCode\u0027);"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .sorting \u003e .sort-order \u003e select\u0027)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      .should(\u0027have.value\u0027, \u0027true\u0027);"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes \u003e .radio-button--checkbox\u0027)"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"all\"]\u0027)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"gradle\"]\u0027)"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"java\"]\u0027)"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .title \u003e .contribution \u003e .fileTypes input[id\u003d\"yml\"]\u0027)"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  it(\u0027switch authorship view should not retain information from previous visited tabs\u0027, () \u003d\u003e {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Assumptions:"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // The first repository has more than one person listed."},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // The first displayed file which the first and last person worked on is different."},{"lineNumber":58,"author":{"gitId":"-"},"content":"    const betweenBracketsRegex \u003d /\\((.*)\\)/;"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    let firstAuthor;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    let firstFilename;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    let lastAuthor;"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // open the first code panel"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-charts \u003e .summary-charts\u0027)"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      .find(\u0027.fa-code\u0027)"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .panel-heading \u003e .author \u003e span\u0027)"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      .last()"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      .then(($span) \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        firstAuthor \u003d $span.text().match(betweenBracketsRegex).pop();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        cy.url()"},{"lineNumber":77,"author":{"gitId":"-"},"content":"          .should(\u0027include\u0027, firstAuthor);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .files \u003e .file \u003e .title \u003e .path\u0027)"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      .then(($span) \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        firstFilename \u003d $span.text();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    // switch authorship view"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-charts \u003e .summary-charts\u0027)"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      .find(\u0027.fa-code\u0027)"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      .last()"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .panel-heading \u003e .author \u003e span\u0027)"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      .last()"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      .should(($span) \u003d\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        lastAuthor \u003d $span.text().match(betweenBracketsRegex).pop();"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expect(firstAuthor, \u0027First author to have different name from the last author\u0027)"},{"lineNumber":99,"author":{"gitId":"-"},"content":"          .to.not.equal(lastAuthor);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      .then(() \u003d\u003e {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        cy.url()"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          .should(\u0027not.include\u0027, firstAuthor)"},{"lineNumber":104,"author":{"gitId":"-"},"content":"          .should(\u0027include\u0027, lastAuthor);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-authorship \u003e .files \u003e .file \u003e .title \u003e .path\u0027)"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      .should(($span) \u003d\u003e {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        const lastFilename \u003d $span.text();"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        expect(firstFilename, \u0027First displayed filenames should be different for different authors\u0027)"},{"lineNumber":112,"author":{"gitId":"-"},"content":"          .to.not.equal(lastFilename);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":115,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"vvidday":1,"-":114}},{"path":"frontend/cypress/tests/zoomView/zoomView_hideCommitMessages.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027hide all commit messages \u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027check hide all commit messages hides the commit messages\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    // open the commit panel"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    // the messages of all the commits should be visible"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // hides all the commit messages"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // the messages of all the commits should be hidden"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  it(\u0027check show all commit messages show the commit messages\u0027, () \u003d\u003e {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // open the commit panel"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // hides all the commit messages"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // the messages of all the commits should be hidden"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // show the messages of all the commits"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"  it(\u0027should only display hide all commit messages when none are hidden\u0027, () \u003d\u003e {"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"    // open the commit panel"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"    // should only display \u0027hide all commit messages\u0027"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"      .children()"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.length\u0027, 1);"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      .should(\u0027have.text\u0027, \u0027hide all commit details\u0027);"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"  });"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"  it(\u0027should only display show all commit messages when all are hidden\u0027, () \u003d\u003e {"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"    // open the commit panel"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":81,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":84,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":85,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":86,"author":{"gitId":"vvidday"},"content":"    // hides all the commit messages"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":89,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":90,"author":{"gitId":"vvidday"},"content":"    // should only display \u0027show all commit messages\u0027"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"      .children()"},{"lineNumber":93,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.length\u0027, 1);"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      .should(\u0027have.text\u0027, \u0027show all commit details\u0027);"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"  });"},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"  it(\u0027should display both show and hide all commit messages when some are hidden\u0027, () \u003d\u003e {"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":"    // open the commit panel"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":107,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":108,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":109,"author":{"gitId":"vvidday"},"content":"    // hide the message body of the first commit"},{"lineNumber":110,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message \u003e a .tooltip\u0027)"},{"lineNumber":111,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":112,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":113,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":114,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":115,"author":{"gitId":"vvidday"},"content":"    // should now display both \u0027hide all \u0026 show all commit messages\u0027"},{"lineNumber":116,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":117,"author":{"gitId":"vvidday"},"content":"      .children()"},{"lineNumber":118,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.length\u0027, 2);"},{"lineNumber":119,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":120,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":121,"author":{"gitId":"vvidday"},"content":"      .eq(0)"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      .should(\u0027have.text\u0027, \u0027show all commit details\u0027);"},{"lineNumber":123,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":124,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":125,"author":{"gitId":"vvidday"},"content":"      .eq(1)"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      .should(\u0027have.text\u0027, \u0027hide all commit details\u0027);"},{"lineNumber":127,"author":{"gitId":"vvidday"},"content":"  });"},{"lineNumber":128,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":129,"author":{"gitId":"vvidday"},"content":"  it(\u0027check show all and hide all commit messages only toggle current commits\u0027, () \u003d\u003e {"},{"lineNumber":130,"author":{"gitId":"ckcherry23"},"content":"    // Assumptions: the fifth commit (19e3294) of the first author of the first repo"},{"lineNumber":131,"author":{"gitId":"vvidday"},"content":"    // contains changes in only .java files."},{"lineNumber":132,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":134,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":135,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":136,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":137,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":138,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":139,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":140,"author":{"gitId":"vvidday"},"content":"    // uncheck java file type"},{"lineNumber":141,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .fileTypes input[value\u003d\"java\"]\u0027)"},{"lineNumber":142,"author":{"gitId":"vvidday"},"content":"      .uncheck()"},{"lineNumber":143,"author":{"gitId":"vvidday"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":144,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":145,"author":{"gitId":"vvidday"},"content":"    // hides all the commit messages"},{"lineNumber":146,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":147,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":148,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":149,"author":{"gitId":"vvidday"},"content":"    // should only display \u0027show all commit messages\u0027"},{"lineNumber":150,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":151,"author":{"gitId":"vvidday"},"content":"      .children()"},{"lineNumber":152,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.length\u0027, 1);"},{"lineNumber":153,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":154,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      .should(\u0027have.text\u0027, \u0027show all commit details\u0027);"},{"lineNumber":156,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":157,"author":{"gitId":"vvidday"},"content":"    // check java file type"},{"lineNumber":158,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .fileTypes input[value\u003d\"java\"]\u0027)"},{"lineNumber":159,"author":{"gitId":"vvidday"},"content":"      .check()"},{"lineNumber":160,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":161,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":162,"author":{"gitId":"ckcherry23"},"content":"    // commit body of the merge commit should be visible"},{"lineNumber":163,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      .eq(0)"},{"lineNumber":165,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":166,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":167,"author":{"gitId":"ckcherry23"},"content":"    // commit body of the md commit should not be visible"},{"lineNumber":168,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      .eq(1)"},{"lineNumber":170,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":171,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":172,"author":{"gitId":"ckcherry23"},"content":"    // commit body of the java commit should be visible"},{"lineNumber":173,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":174,"author":{"gitId":"ckcherry23"},"content":"      .eq(4)"},{"lineNumber":175,"author":{"gitId":"ckcherry23"},"content":"      .scrollIntoView()"},{"lineNumber":176,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":177,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":178,"author":{"gitId":"vvidday"},"content":"    // should now display both \u0027hide all \u0026 show all commit messages\u0027"},{"lineNumber":179,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline\u0027)"},{"lineNumber":180,"author":{"gitId":"vvidday"},"content":"      .children()"},{"lineNumber":181,"author":{"gitId":"vvidday"},"content":"      .should(\u0027have.length\u0027, 2);"},{"lineNumber":182,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":183,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":184,"author":{"gitId":"vvidday"},"content":"      .eq(0)"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      .should(\u0027have.text\u0027, \u0027show all commit details\u0027);"},{"lineNumber":186,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":187,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .toolbar--multiline \u003e a\u0027)"},{"lineNumber":188,"author":{"gitId":"vvidday"},"content":"      .eq(1)"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      .should(\u0027have.text\u0027, \u0027hide all commit details\u0027);"},{"lineNumber":190,"author":{"gitId":"vvidday"},"content":"  });"},{"lineNumber":191,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":192,"author":{"gitId":"vvidday"},"content":"  it(\u0027check hidden commit message persists after sort\u0027, () \u003d\u003e {"},{"lineNumber":193,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":195,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":196,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":197,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":198,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027, { timeout: 90000 })"},{"lineNumber":199,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":200,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":201,"author":{"gitId":"vvidday"},"content":"    // hide the message body of the first commit"},{"lineNumber":202,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message \u003e a .tooltip\u0027)"},{"lineNumber":203,"author":{"gitId":"vvidday"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":204,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":205,"author":{"gitId":"vvidday"},"content":"      .click();"},{"lineNumber":206,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":207,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message .body\u0027)"},{"lineNumber":208,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":209,"author":{"gitId":"vvidday"},"content":"      .should(\u0027not.be.visible\u0027);"},{"lineNumber":210,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":211,"author":{"gitId":"vvidday"},"content":"    cy.get(\u0027#tab-zoom .commit-message .hash\u0027)"},{"lineNumber":212,"author":{"gitId":"vvidday"},"content":"      .first()"},{"lineNumber":213,"author":{"gitId":"vvidday"},"content":"      .invoke(\u0027text\u0027)"},{"lineNumber":214,"author":{"gitId":"vvidday"},"content":"    // keep track of first commit by hash so test doesn\u0027t rely on correctness of sort"},{"lineNumber":215,"author":{"gitId":"vvidday"},"content":"      .then((hash) \u003d\u003e {"},{"lineNumber":216,"author":{"gitId":"vvidday"},"content":"        // change sort by"},{"lineNumber":217,"author":{"gitId":"vvidday"},"content":"        cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-by \u003e select\u0027)"},{"lineNumber":218,"author":{"gitId":"vvidday"},"content":"          .select(\u0027LoC\u0027)"},{"lineNumber":219,"author":{"gitId":"ckcherry23"},"content":"          .should(\u0027have.value\u0027, \u0027linesOfCode\u0027);"},{"lineNumber":220,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":221,"author":{"gitId":"vvidday"},"content":"        // message body should still be hidden"},{"lineNumber":222,"author":{"gitId":"vvidday"},"content":"        cy.contains(\u0027#tab-zoom .commit-message\u0027, hash)"},{"lineNumber":223,"author":{"gitId":"vvidday"},"content":"          .children(\u0027.body\u0027)"},{"lineNumber":224,"author":{"gitId":"vvidday"},"content":"          .should(\u0027not.be.visible\u0027);"},{"lineNumber":225,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":226,"author":{"gitId":"vvidday"},"content":"        // change sort order"},{"lineNumber":227,"author":{"gitId":"vvidday"},"content":"        cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-order \u003e select:visible\u0027)"},{"lineNumber":228,"author":{"gitId":"vvidday"},"content":"          .select(\u0027Ascending\u0027)"},{"lineNumber":229,"author":{"gitId":"vvidday"},"content":"          .should(\u0027have.value\u0027, \u0027false\u0027);"},{"lineNumber":230,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":231,"author":{"gitId":"vvidday"},"content":"        // message body should still be hidden"},{"lineNumber":232,"author":{"gitId":"vvidday"},"content":"        cy.contains(\u0027#tab-zoom .commit-message\u0027, hash)"},{"lineNumber":233,"author":{"gitId":"vvidday"},"content":"          .children(\u0027.body\u0027)"},{"lineNumber":234,"author":{"gitId":"vvidday"},"content":"          .should(\u0027not.be.visible\u0027);"},{"lineNumber":235,"author":{"gitId":"vvidday"},"content":"      });"},{"lineNumber":236,"author":{"gitId":"vvidday"},"content":"  });"},{"lineNumber":237,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"vvidday":154,"ckcherry23":13,"-":70}},{"path":"frontend/cypress/tests/zoomView/zoomView_mergeCommits.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"describe(\u0027include merge commits in zoom view\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027show merge commits when all file types selected\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"    // open the commits panel"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"    // check if the icon for merge commits is visible"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.code-merge-icon\u0027)"},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027exist\u0027);"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027hide merge commits when some file types unselected\u0027, () \u003d\u003e {"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"    // open the commits panel"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"    // uncheck the java file type"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .fileTypes input[value\u003d\"java\"]\u0027)"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"      .uncheck()"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    // check if the icon for merge commits is not visible"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.code-merge-icon\u0027)"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027not.exist\u0027);"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"});"}],"authorContributionMap":{"ckcherry23":28,"-":2}},{"path":"frontend/cypress/tests/zoomView/zoomView_rampChart.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"describe(\u0027show ramp chart for period\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"  // Assumptions: The commit messages on the zoom view are"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"  // correctly filtered according to the selected period."},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027show ramp chart for all commits by default\u0027, () \u003d\u003e {"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"    // open the commit panel"},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":8,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":9,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":10,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"    // ramp chart should be visible"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom \u003e .ramp\u0027)"},{"lineNumber":13,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"    // ramp chart should have the same number of slices as commits"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027)"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"      .its(\u0027length\u0027).then(($length) \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"        cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":19,"author":{"gitId":"ckcherry23"},"content":"          .should(\u0027have.length\u0027, $length);"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"  // Assumptions: The commit messages on the zoom view are"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"  // correctly filtered according to the selected period."},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027show ramp chart for selected commits when date range changed\u0027, () \u003d\u003e {"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"    // change since date"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027input[name\u003d\"since\"]:visible\u0027)"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"      .type(\u00272018-06-10\u0027);"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"    // change until date"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027input[name\u003d\"until\"]:visible\u0027)"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"      .type(\u00272019-06-10\u0027);"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"    // open the commit panel"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"    // ramp chart should be visible"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom \u003e .ramp\u0027)"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":44,"author":{"gitId":"ckcherry23"},"content":"    // ramp chart should have the same number of slices as commits"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027)"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"      .its(\u0027length\u0027).then(($length) \u003d\u003e {"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"        cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"          .should(\u0027have.length\u0027, $length);"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"  // Assumptions: The commit messages on the zoom view are"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"  // correctly filtered according to the selected period."},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027show ramp chart for selected commits when zooming\u0027, () \u003d\u003e {"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"    const zoomKey \u003d Cypress.platform \u003d\u003d\u003d \u0027darwin\u0027 ? \u0027{meta}\u0027 : \u0027{ctrl}\u0027;"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"    // zoom into ramp on summary panel"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027body\u0027).type(zoomKey, { release: false })"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"      .get(\u0027#summary-charts .summary-chart__ramp .ramp\u0027)"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"      .click(10, 20)"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"      .click(50, 20);"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"    // commits panel should be visible"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom\u0027)"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"    // ramp chart should be visible"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom \u003e .ramp\u0027)"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027be.visible\u0027);"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"    // ramp chart should have the same number of slices as commits"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .commit-message\u0027)"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"      .its(\u0027length\u0027).then(($length) \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"        cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"          .should(\u0027have.length\u0027, $length);"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"  // Assumptions: The first author on the summary panel"},{"lineNumber":81,"author":{"gitId":"ckcherry23"},"content":"  // should be \u0027eugenepeh\u0027."},{"lineNumber":82,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027ramps should be between start date and end date\u0027, () \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"ckcherry23"},"content":"    // change since date"},{"lineNumber":84,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027input[name\u003d\"since\"]:visible\u0027)"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"      .type(\u00272018-06-10\u0027);"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":"    // change until date"},{"lineNumber":88,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027input[name\u003d\"until\"]:visible\u0027)"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"      .type(\u00272019-06-10\u0027);"},{"lineNumber":90,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":91,"author":{"gitId":"ckcherry23"},"content":"    // open the commit panel"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":94,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":95,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"    // first ramp should be for commit after start date"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"      .last()"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"      .invoke(\u0027attr\u0027, \u0027title\u0027)"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027eq\u0027, \u0027[2018-06-12] Setup AppVeyor CI (#142): +19 -0 lines \u0027);"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":103,"author":{"gitId":"ckcherry23"},"content":"    // last ramp should be for commit before end date"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":105,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":106,"author":{"gitId":"ckcherry23"},"content":"      .invoke(\u0027attr\u0027, \u0027title\u0027)"},{"lineNumber":107,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027eq\u0027, \u0027[2019-03-25] [#622] CsvParser#parse: fix error handling of `processLine` (#623): +30 -10 lines \u0027);"},{"lineNumber":108,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":109,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"  // Assumptions: The first author on the summary panel"},{"lineNumber":111,"author":{"gitId":"ckcherry23"},"content":"  // should be \u0027eugenepeh\u0027."},{"lineNumber":112,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027ramp should have expected properties\u0027, () \u003d\u003e {"},{"lineNumber":113,"author":{"gitId":"ckcherry23"},"content":"    // change until date"},{"lineNumber":114,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027input[name\u003d\"until\"]:visible\u0027)"},{"lineNumber":115,"author":{"gitId":"ckcherry23"},"content":"      .type(\u00272019-06-10\u0027);"},{"lineNumber":116,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":117,"author":{"gitId":"ckcherry23"},"content":"    // open the commit panel"},{"lineNumber":118,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":120,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":121,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":123,"author":{"gitId":"ckcherry23"},"content":"    // last ramp should have expected z-index"},{"lineNumber":124,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":125,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":126,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027have.css\u0027, \u0027z-index\u0027, \u002739\u0027);"},{"lineNumber":127,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":128,"author":{"gitId":"ckcherry23"},"content":"    // last ramp should have expected width"},{"lineNumber":129,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":130,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":131,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027have.css\u0027, \u0027border-left-width\u0027, \u00277px\u0027);"},{"lineNumber":132,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":133,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":134,"author":{"gitId":"ckcherry23"},"content":"  // Assumptions: The second author on the summary panel"},{"lineNumber":135,"author":{"gitId":"ckcherry23"},"content":"  // should be \u0027jamessspanggg\u0027."},{"lineNumber":136,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027deletes commit ramp should have expected properties\u0027, () \u003d\u003e {"},{"lineNumber":137,"author":{"gitId":"ckcherry23"},"content":"    // change since date"},{"lineNumber":138,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027input[name\u003d\"since\"]:visible\u0027)"},{"lineNumber":139,"author":{"gitId":"ckcherry23"},"content":"      .type(\u00272019-07-16\u0027);"},{"lineNumber":140,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":141,"author":{"gitId":"ckcherry23"},"content":"    // change until date"},{"lineNumber":142,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027input[name\u003d\"until\"]:visible\u0027)"},{"lineNumber":143,"author":{"gitId":"ckcherry23"},"content":"      .type(\u00272019-07-29\u0027);"},{"lineNumber":144,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":145,"author":{"gitId":"ckcherry23"},"content":"    // open the commit panel"},{"lineNumber":146,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":148,"author":{"gitId":"ckcherry23"},"content":"      .eq(1)"},{"lineNumber":149,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":150,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":151,"author":{"gitId":"ckcherry23"},"content":"    // deletes commit ramp should have expected color"},{"lineNumber":152,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027[title\u003d\"[2019-07-24] [#828] Revert \\\\\"v_summary.js: remove redundant calls \u0027"},{"lineNumber":153,"author":{"gitId":"ckcherry23"},"content":"     + \u0027to getFiltered() (#800)\\\\\" (#832): +0 -9 lines \"]\u0027)"},{"lineNumber":154,"author":{"gitId":"ckcherry23"},"content":"      .eq(1)"},{"lineNumber":155,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027have.class\u0027, \u0027ramp__slice\u0027)"},{"lineNumber":156,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027have.css\u0027, \u0027border-bottom\u0027, \u002748px solid rgba(244, 67, 54, 0.7)\u0027);"},{"lineNumber":157,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":158,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":159,"author":{"gitId":"ckcherry23"},"content":"  // Assumptions: The first author on the summary panel"},{"lineNumber":160,"author":{"gitId":"ckcherry23"},"content":"  // should be \u0027eugenepeh\u0027."},{"lineNumber":161,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027merge commit ramp should have expected properties\u0027, () \u003d\u003e {"},{"lineNumber":162,"author":{"gitId":"ckcherry23"},"content":"    // change until date"},{"lineNumber":163,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027input[name\u003d\"until\"]:visible\u0027)"},{"lineNumber":164,"author":{"gitId":"ckcherry23"},"content":"      .type(\u00272024-03-04\u0027);"},{"lineNumber":165,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":166,"author":{"gitId":"ckcherry23"},"content":"    // open the commit panel"},{"lineNumber":167,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":169,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":170,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":171,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":172,"author":{"gitId":"ckcherry23"},"content":"    // merge commit ramp should have expected color"},{"lineNumber":173,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":174,"author":{"gitId":"ckcherry23"},"content":"      .eq(1)"},{"lineNumber":175,"author":{"gitId":"ckcherry23"},"content":"      .then(($el) \u003d\u003e $el.css(\u0027border-bottom\u0027))"},{"lineNumber":176,"author":{"gitId":"ckcherry23"},"content":"      .then((border1) \u003d\u003e {"},{"lineNumber":177,"author":{"gitId":"ckcherry23"},"content":"        cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":178,"author":{"gitId":"ckcherry23"},"content":"          .first()"},{"lineNumber":179,"author":{"gitId":"ckcherry23"},"content":"          .then(($el) \u003d\u003e $el.css(\u0027border-bottom\u0027))"},{"lineNumber":180,"author":{"gitId":"ckcherry23"},"content":"          .then((border2) \u003d\u003e {"},{"lineNumber":181,"author":{"gitId":"ckcherry23"},"content":"            expect(border1).to.be.eq(border2);"},{"lineNumber":182,"author":{"gitId":"ckcherry23"},"content":"          });"},{"lineNumber":183,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":184,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":185,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":186,"author":{"gitId":"ckcherry23"},"content":"  // Assumptions: The first author on the summary panel"},{"lineNumber":187,"author":{"gitId":"ckcherry23"},"content":"  // should be \u0027eugenepeh\u0027."},{"lineNumber":188,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027ramps from different days should have expected relative properties\u0027, () \u003d\u003e {"},{"lineNumber":189,"author":{"gitId":"ckcherry23"},"content":"    // change until date"},{"lineNumber":190,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027input[name\u003d\"until\"]:visible\u0027)"},{"lineNumber":191,"author":{"gitId":"ckcherry23"},"content":"      .type(\u00272019-06-10\u0027);"},{"lineNumber":192,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":193,"author":{"gitId":"ckcherry23"},"content":"    // open the commit panel"},{"lineNumber":194,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":196,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":197,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":198,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":199,"author":{"gitId":"ckcherry23"},"content":"    // last 2 ramps should have expected relative z-indices"},{"lineNumber":200,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":201,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":202,"author":{"gitId":"ckcherry23"},"content":"      .then(($el) \u003d\u003e $el.css(\u0027z-index\u0027))"},{"lineNumber":203,"author":{"gitId":"ckcherry23"},"content":"      .then(parseInt) // get 1st z-index"},{"lineNumber":204,"author":{"gitId":"ckcherry23"},"content":"      .then((index1) \u003d\u003e {"},{"lineNumber":205,"author":{"gitId":"ckcherry23"},"content":"        cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":206,"author":{"gitId":"ckcherry23"},"content":"          .eq(1)"},{"lineNumber":207,"author":{"gitId":"ckcherry23"},"content":"          .then(($el) \u003d\u003e $el.css(\u0027z-index\u0027))"},{"lineNumber":208,"author":{"gitId":"ckcherry23"},"content":"          .then(parseInt) // get 2nd z-index"},{"lineNumber":209,"author":{"gitId":"ckcherry23"},"content":"          .then((index2) \u003d\u003e {"},{"lineNumber":210,"author":{"gitId":"ckcherry23"},"content":"            expect(index1).to.be.gt(index2);"},{"lineNumber":211,"author":{"gitId":"ckcherry23"},"content":"          });"},{"lineNumber":212,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":213,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":214,"author":{"gitId":"ckcherry23"},"content":"    // last 2 ramps should have expected relative distances from the right"},{"lineNumber":215,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":216,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":217,"author":{"gitId":"ckcherry23"},"content":"      .then(($el) \u003d\u003e $el.css(\u0027right\u0027))"},{"lineNumber":218,"author":{"gitId":"ckcherry23"},"content":"      .then(parseFloat) // get 1st distance"},{"lineNumber":219,"author":{"gitId":"ckcherry23"},"content":"      .then((distance1) \u003d\u003e {"},{"lineNumber":220,"author":{"gitId":"ckcherry23"},"content":"        cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":221,"author":{"gitId":"ckcherry23"},"content":"          .eq(1)"},{"lineNumber":222,"author":{"gitId":"ckcherry23"},"content":"          .then(($el) \u003d\u003e $el.css(\u0027right\u0027))"},{"lineNumber":223,"author":{"gitId":"ckcherry23"},"content":"          .then(parseFloat) // get 2nd distance"},{"lineNumber":224,"author":{"gitId":"ckcherry23"},"content":"          .then((distance2) \u003d\u003e {"},{"lineNumber":225,"author":{"gitId":"ckcherry23"},"content":"            expect(distance1).to.be.lt(distance2);"},{"lineNumber":226,"author":{"gitId":"ckcherry23"},"content":"          });"},{"lineNumber":227,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":228,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":229,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":230,"author":{"gitId":"ckcherry23"},"content":"  // Assumptions: The first author on the summary panel"},{"lineNumber":231,"author":{"gitId":"ckcherry23"},"content":"  // should be \u0027eugenepeh\u0027."},{"lineNumber":232,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027ramps from the same day should have expected relative properties\u0027, () \u003d\u003e {"},{"lineNumber":233,"author":{"gitId":"ckcherry23"},"content":"    // change until date"},{"lineNumber":234,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027input[name\u003d\"until\"]:visible\u0027)"},{"lineNumber":235,"author":{"gitId":"ckcherry23"},"content":"      .type(\u00272023-03-04\u0027);"},{"lineNumber":236,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":237,"author":{"gitId":"ckcherry23"},"content":"    // open the commit panel"},{"lineNumber":238,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":240,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":241,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":242,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":243,"author":{"gitId":"ckcherry23"},"content":"    // last 2 ramps should have expected relative z-indices"},{"lineNumber":244,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":245,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":246,"author":{"gitId":"ckcherry23"},"content":"      .then(($el) \u003d\u003e $el.css(\u0027z-index\u0027))"},{"lineNumber":247,"author":{"gitId":"ckcherry23"},"content":"      .then(parseInt) // get 1st z-index"},{"lineNumber":248,"author":{"gitId":"ckcherry23"},"content":"      .then((index1) \u003d\u003e {"},{"lineNumber":249,"author":{"gitId":"ckcherry23"},"content":"        cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":250,"author":{"gitId":"ckcherry23"},"content":"          .eq(1)"},{"lineNumber":251,"author":{"gitId":"ckcherry23"},"content":"          .then(($el) \u003d\u003e $el.css(\u0027z-index\u0027))"},{"lineNumber":252,"author":{"gitId":"ckcherry23"},"content":"          .then(parseInt) // get 2nd z-index"},{"lineNumber":253,"author":{"gitId":"ckcherry23"},"content":"          .then((index2) \u003d\u003e {"},{"lineNumber":254,"author":{"gitId":"ckcherry23"},"content":"            expect(index1).to.be.eq(index2);"},{"lineNumber":255,"author":{"gitId":"ckcherry23"},"content":"          });"},{"lineNumber":256,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":257,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":258,"author":{"gitId":"ckcherry23"},"content":"    // last 2 ramps should have expected relative distances from the right"},{"lineNumber":259,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":260,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":261,"author":{"gitId":"ckcherry23"},"content":"      .then(($el) \u003d\u003e $el.css(\u0027right\u0027))"},{"lineNumber":262,"author":{"gitId":"ckcherry23"},"content":"      .then(parseFloat) // get 1st distance"},{"lineNumber":263,"author":{"gitId":"ckcherry23"},"content":"      .then((distance1) \u003d\u003e {"},{"lineNumber":264,"author":{"gitId":"ckcherry23"},"content":"        cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":265,"author":{"gitId":"ckcherry23"},"content":"          .eq(1)"},{"lineNumber":266,"author":{"gitId":"ckcherry23"},"content":"          .then(($el) \u003d\u003e $el.css(\u0027right\u0027))"},{"lineNumber":267,"author":{"gitId":"ckcherry23"},"content":"          .then(parseFloat) // get 2nd distance"},{"lineNumber":268,"author":{"gitId":"ckcherry23"},"content":"          .then((distance2) \u003d\u003e {"},{"lineNumber":269,"author":{"gitId":"ckcherry23"},"content":"            expect(distance1).to.be.gt(distance2);"},{"lineNumber":270,"author":{"gitId":"ckcherry23"},"content":"          });"},{"lineNumber":271,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":272,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":273,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":274,"author":{"gitId":"ckcherry23"},"content":"  // Assumptions: The first author on the summary panel"},{"lineNumber":275,"author":{"gitId":"ckcherry23"},"content":"  // should be \u0027eugenepeh\u0027."},{"lineNumber":276,"author":{"gitId":"ckcherry23"},"content":"  it(\u0027ramp should link to commit webpage\u0027, () \u003d\u003e {"},{"lineNumber":277,"author":{"gitId":"ckcherry23"},"content":"    // change until date"},{"lineNumber":278,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027input[name\u003d\"until\"]:visible\u0027)"},{"lineNumber":279,"author":{"gitId":"ckcherry23"},"content":"      .type(\u00272019-06-10\u0027);"},{"lineNumber":280,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":281,"author":{"gitId":"ckcherry23"},"content":"    // open the commit panel"},{"lineNumber":282,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":284,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":285,"author":{"gitId":"ckcherry23"},"content":"      .click();"},{"lineNumber":286,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":287,"author":{"gitId":"ckcherry23"},"content":"    // last ramp should have expected link"},{"lineNumber":288,"author":{"gitId":"ckcherry23"},"content":"    cy.get(\u0027#tab-zoom .ramp .ramp__slice\u0027)"},{"lineNumber":289,"author":{"gitId":"ckcherry23"},"content":"      .first()"},{"lineNumber":290,"author":{"gitId":"ckcherry23"},"content":"      .invoke(\u0027attr\u0027, \u0027href\u0027)"},{"lineNumber":291,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027eq\u0027, \u0027https://github.com/reposense/RepoSense/commit/19e32944d4c67ed0b6bdc5697016536cc9e17ed9\u0027);"},{"lineNumber":292,"author":{"gitId":"ckcherry23"},"content":"  });"},{"lineNumber":293,"author":{"gitId":"ckcherry23"},"content":"});"}],"authorContributionMap":{"ckcherry23":284,"-":9}},{"path":"frontend/cypress/tests/zoomView/zoomView_reload.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027reload page\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027reload page should restore all controls\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    // open the commit panel"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    // change sort by"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-by \u003e select:visible\u0027)"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      .select(\u0027LoC\u0027);"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // change sort order"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-order \u003e select:visible\u0027)"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      .select(\u0027Ascending\u0027);"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"gradle\"]\u0027)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      .uncheck()"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"scss\"]\u0027)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      .uncheck()"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    cy.reload();"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-by \u003e select:visible\u0027)"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027have.value\u0027, \u0027linesOfCode\u0027);"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-order \u003e select:visible\u0027)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      .should(\u0027have.value\u0027, \u0027false\u0027);"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"all\"]\u0027)"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"gradle\"]\u0027)"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"scss\"]\u0027)"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":42,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"ckcherry23":1,"-":41}},{"path":"frontend/cypress/tests/zoomView/zoomView_selectFileTypes.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027check file types \u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027check if all file types are visible by default\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .zoom__day\u0027, { timeout: 90000 })"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027);"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .fileTypes input[value\u003d\"all\"]\u0027)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"  it(\u0027uncheck all file types should show no files\u0027, () \u003d\u003e {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .zoom__day\u0027)"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .fileTypes input[value\u003d\"all\"]\u0027)"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      .uncheck();"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .zoom__day\u0027)"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      .should(\u0027not.exist\u0027);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  it(\u0027uncheck file type should uncheck all option\u0027, () \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // Assumptions: the first author of the first repo"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // committed .java, .js and .gradle files."},{"lineNumber":34,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .fileTypes input[value\u003d\"java\"]\u0027)"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      .uncheck()"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .fileTypes input[value\u003d\"js\"]\u0027)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      .uncheck()"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .fileTypes input[value\u003d\"all\"]\u0027)"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  it(\u0027a commit should not be seen when all of its file types are unchecked\u0027, () \u003d\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Assumptions: the third commit (19e3294) of the first author of the first repo"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // contains changes in only .java files."},{"lineNumber":54,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    cy.get(\u0027.zoom__day \u003e .commit-message\u0027)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      .eq(2)"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      .within(() \u003d\u003e {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        cy.get(\u0027.hash\u0027)"},{"lineNumber":63,"author":{"gitId":"-"},"content":"          .should(\u0027have.text\u0027, \u002719e3294\u0027);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        cy.get(\u0027.fileTypeLabel\u0027)"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          .should(\u0027have.text\u0027, \u0027java\u0027);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .fileTypes input[value\u003d\"java\"]\u0027)"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      .uncheck()"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    cy.get(\u0027.zoom__day \u003e .commit-message\u0027)"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      .should(\u0027not.contain.text\u0027, \u002719e3294\u0027);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  it.only(\u0027unchecked file type label can still remain in a commit of multiple file types\u0027, () \u003d\u003e {"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"    // Assumptions: the eighth commit (5ab0322) of the first author of the first repo"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    // contains changes in both .java and .md files."},{"lineNumber":79,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    cy.get(\u0027.zoom__day \u003e .commit-message\u0027)"},{"lineNumber":85,"author":{"gitId":"ckcherry23"},"content":"      .eq(7)"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      .within(() \u003d\u003e {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        cy.get(\u0027.hash\u0027)"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          .should(\u0027have.text\u0027, \u00275ab0322\u0027);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        cy.get(\u0027.fileTypeLabel\u0027)"},{"lineNumber":90,"author":{"gitId":"-"},"content":"          .should(\u0027contain.text\u0027, \u0027java\u0027)"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          .should(\u0027contain.text\u0027, \u0027md\u0027);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom .fileTypes input[value\u003d\"java\"]\u0027)"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      .uncheck()"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    cy.get(\u0027.zoom__day \u003e .commit-message\u0027)"},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"    // note that the same commit is now of fourth order since other commits"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    // were filtered out"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"      .eq(3)"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      .within(() \u003d\u003e {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        cy.get(\u0027.hash\u0027)"},{"lineNumber":104,"author":{"gitId":"-"},"content":"          .should(\u0027have.text\u0027, \u00275ab0322\u0027);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        cy.get(\u0027.fileTypeLabel\u0027)"},{"lineNumber":106,"author":{"gitId":"-"},"content":"          .should(\u0027contain.text\u0027, \u0027java\u0027)"},{"lineNumber":107,"author":{"gitId":"-"},"content":"          .should(\u0027contain.text\u0027, \u0027md\u0027);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":110,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"ckcherry23":4,"-":106}},{"path":"frontend/cypress/tests/zoomView/zoomView_switchZoom.cy.js","fileType":"js","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"describe(\u0027switch zoom\u0027, () \u003d\u003e {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  it(\u0027switch zoom view should restore all default controls\u0027, () \u003d\u003e {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    // open the commit panel"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    // change sort by"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-by \u003e select:visible\u0027)"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      .select(\u0027LoC\u0027)"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027have.value\u0027, \u0027linesOfCode\u0027);"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    // change sort order"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-order \u003e select:visible\u0027)"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      .select(\u0027Ascending\u0027)"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      .should(\u0027have.value\u0027, \u0027false\u0027);"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // uncheck a file type"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"gradle\"]\u0027)"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      .uncheck()"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      .should(\u0027not.be.checked\u0027);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // switch zoom view"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    cy.get(\u0027.icon-button.fa-list-ul\u0027)"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      .last()"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    cy.get(\u0027#tabs-wrapper\u0027).scrollTo(\u0027top\u0027);"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // check default controls"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-by \u003e select:visible\u0027)"},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"      .should(\u0027not.have.value\u0027, \u0027linesOfCode\u0027)"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      .should(\u0027have.value\u0027, \u0027time\u0027);"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .sorting \u003e .sort-order \u003e select:visible\u0027)"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      .should(\u0027have.value\u0027, \u0027true\u0027);"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"all\"]\u0027)"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"gradle\"]\u0027)"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"java\"]\u0027)"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"md\"]\u0027)"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .fileTypes input[value\u003d\"yml\"]\u0027)"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      .should(\u0027be.checked\u0027);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  it(\u0027switch zoom view should not retain information from previous visited tabs\u0027, () \u003d\u003e {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Assumptions:"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // The first repository has more than one person listed."},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // The first day in which the first and last person contributed is different."},{"lineNumber":60,"author":{"gitId":"-"},"content":"    const betweenBracketsRegex \u003d /\\((.*)\\)/;"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    let firstAuthor;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    let firstDay;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    let lastAuthor;"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // open the commit panel"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-charts \u003e .summary-charts\u0027)"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      .should(\u0027exist\u0027)"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      .find(\u0027.fa-list-ul\u0027)"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .panel-heading \u003e .author \u003e span\u0027)"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      .last()"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      .then(($span) \u003d\u003e {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        firstAuthor \u003d $span.text().match(betweenBracketsRegex).pop();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        cy.url()"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          .should(\u0027include\u0027, firstAuthor);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .zoom__day \u003e h3\u0027)"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      .then(($h3) \u003d\u003e {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        firstDay \u003d $h3.text();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    // switch zoom view"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    cy.get(\u0027#summary-charts \u003e .summary-charts\u0027)"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      .should(\u0027be.visible\u0027)"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      .find(\u0027.fa-list-ul\u0027)"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      .last()"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      .click();"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .panel-heading \u003e .author \u003e span\u0027)"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      .last()"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      .should(($span) \u003d\u003e {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        lastAuthor \u003d $span.text().match(betweenBracketsRegex).pop();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expect(firstAuthor, \u0027First author to have different name from the last author\u0027)"},{"lineNumber":101,"author":{"gitId":"-"},"content":"          .to.not.equal(lastAuthor);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      })"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      .then(() \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        cy.url()"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          .should(\u0027not.include\u0027, firstAuthor)"},{"lineNumber":106,"author":{"gitId":"-"},"content":"          .should(\u0027include\u0027, lastAuthor);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    cy.get(\u0027#tab-zoom \u003e .zoom__day \u003e h3\u0027)"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      .first()"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      .should(($h3) \u003d\u003e {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        const lastDay \u003d $h3.text();"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        expect(firstDay, \u0027First displayed date should be different for different authors by assumptions\u0027)"},{"lineNumber":114,"author":{"gitId":"-"},"content":"          .to.not.equal(lastDay);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":117,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"ckcherry23":2,"MarcusTXK":2,"-":113}},{"path":"frontend/package-lock.json","fileType":"json","isIgnored":true,"lines":[],"authorContributionMap":{"vvidday":14,"ckcherry23":13345,"MarcusTXK":9096,"-":4375}},{"path":"frontend/package.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"name\": \"reposense\","},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"version\": \"1.0.0\","},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \"description\": \"[![Build Status](https://travis-ci.org/reposense/RepoSense.svg?branch\u003dmaster)](https://travis-ci.org/reposense/RepoSense) [![Build status](https://ci.appveyor.com/api/projects/status/gsbkj5qby3pjd6nw/branch/master?svg\u003dtrue)](https://ci.appveyor.com/project/eugenepeh/reposense/branch/master)\","},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \"author\": \"\","},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \"scripts\": {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"serve\": \"vue-cli-service serve\","},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"build\": \"vue-cli-service build\","},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"lint\": \"eslint src/**/*.{ts,vue} cypress/tests/**/*.js cypress/support.js \u0026\u0026 stylelint ./src/**/*.{vue,scss} \u0026\u0026 npm run puglint\","},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"devbuild\": \"vue-cli-service build --mode development\","},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"lintfix\": \"eslint --fix src/**/*.{ts,vue} cypress/tests/**/*.js cypress/support.js \u0026\u0026 stylelint --fix ./src/**/*.{vue,scss}\","},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"puglint\": \"pug-lint-vue src\","},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"serveOpen\": \"vue-cli-service serve --open\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \"main\": \"index.js\","},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \"dependencies\": {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"@fontsource/titillium-web\": \"^4.5.3\","},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"@fortawesome/fontawesome-svg-core\": \"^6.0.0\","},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"@fortawesome/free-brands-svg-icons\": \"^6.0.0\","},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"@fortawesome/free-solid-svg-icons\": \"^6.0.0\","},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"@fortawesome/vue-fontawesome\": \"^3.0.3\","},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"@types/markdown-it\": \"^13.0.7\","},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"    \"@types/minimatch\": \"^5.1.2\","},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"@types/seedrandom\": \"^3.0.5\","},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"core-js\": \"^3.6.5\","},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"highlight.js\": \"^10.5.0\","},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"jszip\": \"^3.5.0\","},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"markdown-it\": \"^14.0.0\","},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"minimatch\": \"^5.0.1\","},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"muicss\": \"^0.10.3\","},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"normalize.css\": \"^8.0.1\","},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"pug-lint-vue\": \"^0.4.0\","},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"seedrandom\": \"^3.0.5\","},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"vue\": \"^3.2.47\","},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"vue-loading-overlay\": \"^5.0.3\","},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"vue-observe-visibility\": \"^1.0.0\","},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    \"vue-router\": \"^4.1.6\","},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"    \"vuex\": \"^4.0.2\","},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"zod\": \"^3.22.3\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \"devDependencies\": {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"@babel/eslint-parser\": \"^7.17.0\","},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"@typescript-eslint/eslint-plugin\": \"^6.0.0\","},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"@typescript-eslint/parser\": \"^6.0.0\","},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"@vue/cli-plugin-babel\": \"^5.0.4\","},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"@vue/cli-plugin-eslint\": \"^5.0.4\","},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"@vue/cli-plugin-typescript\": \"^5.0.4\","},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \"@vue/cli-service\": \"^5.0.4\","},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"@vue/compiler-sfc\": \"^3.2.47\","},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"@vue/eslint-config-typescript\": \"^10.0.0\","},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"eslint\": \"^8.33.0\","},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"eslint-config-airbnb-base\": \"^15.0.0\","},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"    \"eslint-config-airbnb-typescript\": \"^17.0.0\","},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"eslint-plugin-import\": \"^2.26.0\","},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \"eslint-plugin-vue\": \"^8.4.1\","},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"postcss-html\": \"^1.4.1\","},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \"pug\": \"^3.0.2\","},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"pug-plain-loader\": \"^1.1.0\","},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"sass\": \"^1.58.0\","},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"sass-loader\": \"^12.6.0\","},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \"stylelint\": \"^14.7.1\","},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \"stylelint-config-recommended-scss\": \"^6.0.0\","},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \"stylelint-config-recommended-vue\": \"^1.4.0\","},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \"stylelint-order\": \"^5.0.0\","},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \"stylelint-scss\": \"^4.2.0\","},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \"stylelint-webpack-plugin\": \"^3.2.0\","},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \"typescript\": \"^4.9.5\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \"bugs\": {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \"url\": \"https://github.com/reposense/RepoSense/issues\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \"directories\": {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \"doc\": \"docs\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \"homepage\": \"https://github.com/reposense/RepoSense#readme\","},{"lineNumber":76,"author":{"gitId":"-"},"content":"  \"license\": \"ISC\","},{"lineNumber":77,"author":{"gitId":"-"},"content":"  \"repository\": {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \"type\": \"git\","},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \"url\": \"git+https://github.com/reposense/RepoSense.git\""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vvidday":3,"MarcusTXK":1,"-":77}},{"path":"frontend/src/app.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"#app"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  loading-overlay.overlay-loader("},{"lineNumber":4,"author":{"gitId":"-"},"content":"    v-bind:active\u003d\u0027loadingOverlayCount \u003e 0\u0027,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    v-bind:opacity\u003d\u0027loadingOverlayOpacity\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  )"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    template(v-slot:default)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      i.overlay-loading-icon.fa.fa-spinner.fa-spin()"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    template(v-slot:after)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      h3 {{ loadingOverlayMessage }}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"  router-view("},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:update-report-zip\u003d\"updateReportZip\","},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:repos\u003d\"repos\","},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:users\u003d\"users\","},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:user-updated\u003d\"userUpdated\","},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:loading-overlay-opacity\u003d\"loadingOverlayOpacity\","},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:tab-type\u003d\"tabType\","},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:creation-date\u003d\"creationDate\","},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:report-generation-time\u003d\"reportGenerationTime\","},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:error-messages\u003d\"errorMessages\""},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    )"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"\u003cscript lang\u003d\u0027ts\u0027\u003e"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"import { defineComponent } from \u0027vue\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import JSZip from \u0027jszip\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import LoadingOverlay from \u0027vue-loading-overlay\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"import { Repo } from \u0027./types/types\u0027;"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"import { ErrorMessage } from \u0027./types/zod/summary-type\u0027;"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"import { ZoomInfo, AuthorshipInfo } from \u0027./types/vuex.d\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"const loadingResourcesMessage \u003d \u0027Loading resources...\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"const app \u003d defineComponent({"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  name: \u0027app\u0027,"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"  components: {"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"    LoadingOverlay,"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"  },"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"      repos: {} as { [key: string]: Repo },"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      users: [] as Array\u003cRepo\u003e,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      userUpdated: false,"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"      loadingOverlayOpacity: 1,"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"      tabType: \u0027empty\u0027,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      creationDate: \u0027\u0027,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      reportGenerationTime: \u0027\u0027,"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"      errorMessages: {} as { [key: string]: ErrorMessage },"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"  computed: {"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"    ...mapState([\u0027loadingOverlayCount\u0027, \u0027loadingOverlayMessage\u0027, \u0027isTabActive\u0027]),"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"  },"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  watch: {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u0027$store.state.tabZoomInfo\u0027: function () {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      if (this.$store.state.tabZoomInfo.isRefreshing) {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      this.activateTab(\u0027zoom\u0027);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u0027$store.state.tabAuthorshipInfo\u0027: function () {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      this.activateTab(\u0027authorship\u0027);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"  created() {"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"    try {"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"      window.decodeHash();"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"    } catch (error) {"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"      this.userUpdated \u003d false;"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"    this.updateReportDir();"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"  },"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    // model functions //"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"    updateReportZip(evt: Event) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      this.users \u003d [];"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"      const target \u003d evt.target as HTMLInputElement;"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"      if (target.files \u003d\u003d\u003d null) {"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"        return;"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"      JSZip.loadAsync(target.files[0])"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"        .then((zip) \u003d\u003e {"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"          window.REPORT_ZIP \u003d zip;"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"        }, () \u003d\u003e {"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"          window.alert(\u0027Either the .zip file is corrupted, or you uploaded a .zip file that is not generated \u0027"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"              + \u0027by RepoSense.\u0027);"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"        })"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"        .then(() \u003d\u003e this.updateReportView());"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    updateReportDir() {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      window.REPORT_ZIP \u003d null;"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"      this.users \u003d [];"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      this.updateReportView();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    async updateReportView() {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateLoadingOverlayMessage\u0027, loadingResourcesMessage);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      this.userUpdated \u003d false;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      await this.$store.dispatch(\u0027incrementLoadingOverlayCountForceReload\u0027, 1);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      try {"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"        const summary \u003d await window.api.loadSummary();"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"        if (summary \u003d\u003d\u003d null) {"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"          return;"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        const {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"          creationDate,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          reportGenerationTime,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"          errorMessages,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"          names,"},{"lineNumber":116,"author":{"gitId":"MarcusTXK"},"content":"        } \u003d summary;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        this.creationDate \u003d creationDate;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        this.reportGenerationTime \u003d reportGenerationTime;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        this.errorMessages \u003d errorMessages;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        this.repos \u003d window.REPOS;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        await Promise.all(names.map((name) \u003d\u003e ("},{"lineNumber":122,"author":{"gitId":"-"},"content":"          window.api.loadCommits(name)"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        )));"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        this.loadingOverlayOpacity \u003d 0.5;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        this.getUsers();"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        this.renderTabHash();"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        this.userUpdated \u003d true;"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      } catch (error) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        window.alert(error);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      } finally {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, -1);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    getUsers() {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      const full: Array\u003cRepo\u003e \u003d [];"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      Object.keys(this.repos).forEach((repo) \u003d\u003e {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (this.repos[repo].users) {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"          full.push(this.repos[repo]);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      this.users \u003d full;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"    // handle opening of sidebar //"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":"    activateTab(tabName: string) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      if (this.$refs.tabWrapper) {"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"        (this.$refs.tabWrapper as HTMLElement).scrollTop \u003d 0;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"      this.tabType \u003d tabName;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabState\u0027, true);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      window.addHash(\u0027tabType\u0027, this.tabType);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"    renderAuthorShipTabHash(minDate: string, maxDate: string) {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"      const info: AuthorshipInfo \u003d {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        author: hash.tabAuthor,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        repo: hash.tabRepo,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        isMergeGroup: hash.authorshipIsMergeGroup \u003d\u003d\u003d \u0027true\u0027,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        isRefresh: true,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        minDate,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        maxDate,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        location: this.getRepoLink(),"},{"lineNumber":166,"author":{"gitId":"MarcusTXK"},"content":"        files: [],"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      const tabInfoLength \u003d Object.values(info).filter((x) \u003d\u003e x !\u003d\u003d null).length;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      if (Object.keys(info).length \u003d\u003d\u003d tabInfoLength) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateTabAuthorshipInfo\u0027, info);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      } else if (hash.tabOpen \u003d\u003d\u003d \u0027false\u0027 || tabInfoLength \u003e 2) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateTabState\u0027, false);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    renderZoomTabHash() {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":178,"author":{"gitId":"MarcusTXK"},"content":"      const zoomInfo: ZoomInfo \u003d {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        isRefreshing: true,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        zAuthor: hash.zA,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        zRepo: hash.zR,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        zAvgCommitSize: hash.zACS,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        zSince: hash.zS,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        zUntil: hash.zU,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        zFilterGroup: hash.zFGS,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        zFilterSearch: hash.zFS,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        zTimeFrame: hash.zFTF,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        zIsMerged: hash.zMG \u003d\u003d\u003d \u0027true\u0027,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        zFromRamp: hash.zFR \u003d\u003d\u003d \u0027true\u0027,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      const tabInfoLength \u003d Object.values(zoomInfo).filter((x) \u003d\u003e x !\u003d\u003d null).length;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (Object.keys(zoomInfo).length \u003d\u003d\u003d tabInfoLength) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateTabZoomInfo\u0027, zoomInfo);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      } else if (hash.tabOpen \u003d\u003d\u003d \u0027false\u0027 || tabInfoLength \u003e 2) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateTabState\u0027, false);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"    renderTabHash() {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      if (!hash.tabOpen) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabState\u0027, hash.tabOpen \u003d\u003d\u003d \u0027true\u0027);"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"      if (this.isTabActive) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (hash.tabType \u003d\u003d\u003d \u0027authorship\u0027) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"          let { since, until } \u003d hash;"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"          // get since and until dates from window if not found in hash"},{"lineNumber":211,"author":{"gitId":"-"},"content":"          since \u003d since || window.sinceDate;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"          until \u003d until || window.untilDate;"},{"lineNumber":213,"author":{"gitId":"-"},"content":"          this.renderAuthorShipTabHash(since, until);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          this.renderZoomTabHash();"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"    getRepoSenseHomeLink() {"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      const version \u003d window.repoSenseVersion;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      if (!version) {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        return `${window.HOME_PAGE_URL}/RepoSense/`;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      return `${window.HOME_PAGE_URL}`;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"    getRepoLink() {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"      const { REPOS, hashParams } \u003d window;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      const { location, branch } \u003d REPOS[hashParams.tabRepo];"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"      if (Object.prototype.hasOwnProperty.call(location, \u0027organization\u0027)) {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        return window.getBranchLink(hashParams.tabRepo, branch);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      return REPOS[hashParams.tabRepo].location.location;"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":238,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"export default app;"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003c/script\u003e"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003cstyle lang\u003d\"scss\"\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"@import \u0027./styles/style.scss\u0027;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"@import \u0027./styles/panels.scss\u0027;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"vvidday":4,"MarcusTXK":54,"-":188}},{"path":"frontend/src/components/c-ramp.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":".ramp"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  template(v-if\u003d\"tframe \u003d\u003d\u003d \u0027commit\u0027\")"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    template(v-for\u003d\"(slice, j) in user.commits\")"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"      template(v-for\u003d\"(commit, k) in slice.commitResults\")"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        a.ramp__slice("},{"lineNumber":7,"author":{"gitId":"-"},"content":"          draggable\u003d\"false\","},{"lineNumber":8,"author":{"gitId":"-"},"content":"          v-on:click\u003d\"rampClick\","},{"lineNumber":9,"author":{"gitId":"-"},"content":"          v-bind:href\u003d\"getLink(commit)\", target\u003d\"_blank\","},{"lineNumber":10,"author":{"gitId":"-"},"content":"          v-bind:title\u003d\"getContributionMessageByCommit(slice, commit)\","},{"lineNumber":11,"author":{"gitId":"ckcherry23"},"content":"          v-bind:class\u003d\"`ramp__slice--color${getRampColor(commit, slice)}`,\\"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            !isBrokenLink(getLink(commit)) ? \u0027\u0027 : \u0027broken-link\u0027\","},{"lineNumber":13,"author":{"gitId":"-"},"content":"          v-bind:style\u003d\"{\\"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            zIndex: user.commits.length - j,\\"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            borderLeftWidth: `${getWidth(commit)}em`,\\"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            right: `${((getSlicePos(slice.date)\\"},{"lineNumber":17,"author":{"gitId":"-"},"content":"              + (getCommitPos(k, slice.commitResults.length))) * 100)}%`\\"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            }\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  template(v-else)"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    a(v-bind:href\u003d\"getReportLink()\", target\u003d\"_blank\")"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"      .ramp__slice("},{"lineNumber":24,"author":{"gitId":"-"},"content":"        draggable\u003d\"false\","},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"        v-for\u003d\"(slice, j) in user.commits\","},{"lineNumber":26,"author":{"gitId":"-"},"content":"        v-bind:title\u003d\"getContributionMessage(slice)\","},{"lineNumber":27,"author":{"gitId":"-"},"content":"        v-on:click\u003d\"openTabZoom(user, slice, $event)\","},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":"        v-bind:class\u003d\"`ramp__slice--color${getSliceColor(slice)}`\","},{"lineNumber":29,"author":{"gitId":"-"},"content":"        v-bind:style\u003d\"{\\"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          zIndex: user.commits.length - j,\\"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          borderLeftWidth: `${getWidth(slice)}em`,\\"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          right: `${(getSlicePos(tframe \u003d\u003d\u003d \u0027day\u0027 ? slice.date : slice.endDate) * 100)}%` \\"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          }\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cscript lang\u003d\u0027ts\u0027\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { defineComponent, PropType } from \u0027vue\u0027;"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"import brokenLinkDisabler from \u0027../mixin/brokenLinkMixin\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import { Commit, CommitResult, User } from \u0027../types/types\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"export default defineComponent({"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  name: \u0027c-ramp\u0027,"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"  mixins: [brokenLinkDisabler],"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"  props: {"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"    groupby: {"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"      default: \u0027groupByRepos\u0027,"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"    user: {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      type: Object as PropType\u003cUser\u003e,"},{"lineNumber":52,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"    tframe: {"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"      default: \u0027commit\u0027,"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"    avgsize: {"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"      type: [Number, String],"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"    sdate: {"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":64,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":65,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":66,"author":{"gitId":"ckcherry23"},"content":"    udate: {"},{"lineNumber":67,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":68,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":69,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"    mergegroup: {"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"      type: Boolean,"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"      default: false,"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"    fromramp: {"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"      type: Boolean,"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"      default: false,"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"    filtersearch: {"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"      default: \u0027\u0027,"},{"lineNumber":81,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"    isWidgetMode: {"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"      type: Boolean,"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"      default: false,"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":86,"author":{"gitId":"ckcherry23"},"content":"  },"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      rampSize: 0.01 as number,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    mergeCommitRampSize(): number {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      return this.rampSize * 20;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    deletesContributionRampSize(): number {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      return this.rampSize * 20;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    getLink(commit: CommitResult) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      return window.getCommitLink(commit.repoId, commit.hash);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    getContributions(commit: CommitResult | Commit) {"},{"lineNumber":107,"author":{"gitId":"ckcherry23"},"content":"      return commit.insertions + commit.deletions;"},{"lineNumber":108,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    isDeletesContribution(commit: CommitResult | Commit) {"},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"      return commit.insertions \u003d\u003d\u003d 0 \u0026\u0026 commit.deletions \u003e 0;"},{"lineNumber":111,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    getWidth(slice: CommitResult | Commit) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      // Check if slice contains \u0027isMergeCommit\u0027 attribute"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      if (\u0027isMergeCommit\u0027 in slice \u0026\u0026 slice.isMergeCommit) {"},{"lineNumber":115,"author":{"gitId":"ckcherry23"},"content":"        return this.mergeCommitRampSize;"},{"lineNumber":116,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":117,"author":{"gitId":"ckcherry23"},"content":"      if (this.getContributions(slice) \u003d\u003d\u003d 0) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return 0;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":120,"author":{"gitId":"ckcherry23"},"content":"      if (this.isDeletesContribution(slice)) {"},{"lineNumber":121,"author":{"gitId":"ckcherry23"},"content":"        return this.deletesContributionRampSize;"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      // \u0027+\u0027 unary operator here attempts to convert this.avgsize to number, if it is not already one"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      const newSize \u003d 100 * (slice.insertions / +this.avgsize);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      return Math.max(newSize * this.rampSize, 0.5);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    getContributionMessageByCommit(slice: Commit, commit: CommitResult) {"},{"lineNumber":128,"author":{"gitId":"ckcherry23"},"content":"      return `[${slice.date}] ${commit.messageTitle}: +${commit.insertions} -${commit.deletions} lines `;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    getContributionMessage(slice: Commit) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      let title \u003d this.tframe \u003d\u003d\u003d \u0027day\u0027"},{"lineNumber":132,"author":{"gitId":"-"},"content":"          ? `[${slice.date}] Daily `"},{"lineNumber":133,"author":{"gitId":"-"},"content":"          : `[${slice.date} till ${slice.endDate}] Weekly `;"},{"lineNumber":134,"author":{"gitId":"ckcherry23"},"content":"      title +\u003d `contribution: +${slice.insertions} -${slice.deletions} lines`;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      return title;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    openTabZoom(user: User, slice: Commit, evt: MouseEvent) {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      // prevent opening of zoom tab when cmd/ctrl click"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      if (window.isMacintosh ? evt.metaKey : evt.ctrlKey) {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"      const zoomUser \u003d { ...user };"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      // Calculate total commit result insertion and deletion for the daily/weekly commit selected"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      zoomUser.commits \u003d user.dailyCommits.map("},{"lineNumber":146,"author":{"gitId":"-"},"content":"        (dailyCommit) \u003d\u003e ({"},{"lineNumber":147,"author":{"gitId":"-"},"content":"          insertions: dailyCommit.commitResults.reduce((acc, currCommitResult) \u003d\u003e acc + currCommitResult.insertions, 0),"},{"lineNumber":148,"author":{"gitId":"-"},"content":"          deletions: dailyCommit.commitResults.reduce((acc, currCommitResult) \u003d\u003e acc + currCommitResult.deletions, 0),"},{"lineNumber":149,"author":{"gitId":"-"},"content":"          ...dailyCommit,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"          commitResults: dailyCommit.commitResults.map((commitResult) \u003d\u003e ({ ...commitResult, isOpen: true })),"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      ) as Array\u003cCommit\u003e;"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"      const info \u003d {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        zRepo: user.repoName,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        zAuthor: user.name,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        zFilterGroup: this.groupby,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        zTimeFrame: \u0027commit\u0027,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        zAvgCommitSize: slice.insertions,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        zUser: zoomUser,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        zLocation: window.getRepoLink(user.repoId),"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        zSince: slice.date,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        zUntil: this.tframe \u003d\u003d\u003d \u0027day\u0027 ? slice.date : slice.endDate,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        zIsMerged: this.mergegroup,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        zFromRamp: true,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        zFilterSearch: this.filtersearch,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabZoomInfo\u0027, info);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"    // position for commit granularity"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    getCommitPos(i: number, total: number) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      return (((total - i - 1) * window.DAY_IN_MS) / total)"},{"lineNumber":176,"author":{"gitId":"-"},"content":"          / (this.getTotalForPos(this.sdate, this.udate) + window.DAY_IN_MS);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    // position for day granularity"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    getSlicePos(date: string) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      const total \u003d this.getTotalForPos(this.sdate, this.udate);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      return (new Date(this.udate).valueOf() - new Date(date).valueOf()) / (total + window.DAY_IN_MS);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"    // get duration in miliseconds between 2 date"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    getTotalForPos(sinceDate: string, untilDate: string) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      return new Date(untilDate).valueOf() - new Date(sinceDate).valueOf();"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    getRampColor(commit: CommitResult, slice: Commit) {"},{"lineNumber":189,"author":{"gitId":"ckcherry23"},"content":"      if (this.isDeletesContribution(commit)) {"},{"lineNumber":190,"author":{"gitId":"ckcherry23"},"content":"        return \u0027-deletes\u0027;"},{"lineNumber":191,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":192,"author":{"gitId":"ckcherry23"},"content":"      return this.getSliceColor(slice);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    getSliceColor(slice: Commit) {"},{"lineNumber":195,"author":{"gitId":"ckcherry23"},"content":"      if (this.isDeletesContribution(slice)) {"},{"lineNumber":196,"author":{"gitId":"ckcherry23"},"content":"        return \u0027-deletes\u0027;"},{"lineNumber":197,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      const timeMs \u003d this.fromramp"},{"lineNumber":199,"author":{"gitId":"-"},"content":"          ? (new Date(this.sdate)).getTime()"},{"lineNumber":200,"author":{"gitId":"ckcherry23"},"content":"          : (new Date(slice.date)).getTime();"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"      return (timeMs / window.DAY_IN_MS) % 5;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"    // Prevent browser from switching to new tab when clicking ramp"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    rampClick(evt: MouseEvent) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      const isKeyPressed \u003d window.isMacintosh ? evt.metaKey : evt.ctrlKey;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      if (isKeyPressed) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        evt.preventDefault();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":212,"author":{"gitId":"MarcusTXK"},"content":"    getReportLink() {"},{"lineNumber":213,"author":{"gitId":"MarcusTXK"},"content":"      if (this.isWidgetMode) {"},{"lineNumber":214,"author":{"gitId":"MarcusTXK"},"content":"        const url \u003d window.location.href;"},{"lineNumber":215,"author":{"gitId":"MarcusTXK"},"content":"        const regexToRemoveWidget \u003d /([?\u0026])((chartIndex|chartGroupIndex)\u003d\\d+)/g;"},{"lineNumber":216,"author":{"gitId":"MarcusTXK"},"content":"        return url.replace(regexToRemoveWidget, \u0027\u0027);"},{"lineNumber":217,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":218,"author":{"gitId":"MarcusTXK"},"content":"      return undefined;"},{"lineNumber":219,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":221,"author":{"gitId":"-"},"content":"});"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/script\u003e"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c!-- Add \"scoped\" attribute to limit CSS to this component only --\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cstyle scoped lang\u003d\"scss\"\u003e"},{"lineNumber":226,"author":{"gitId":"-"},"content":"@import \u0027../styles/_colors.scss\u0027;"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"/* Ramp */"},{"lineNumber":229,"author":{"gitId":"-"},"content":".ramp {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  $height: 3rem;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  background-color: mui-color(\u0027blue\u0027, \u002750\u0027);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  font-size: 100%;"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  height: $height;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  overflow: hidden;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  position: relative;"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"  \u0026__slice {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    border-left-color: rgba(0, 0, 0, 0);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    border-left-style: solid;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    display: block;"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    height: 0;"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    position: absolute;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    width: 0;"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    \u0026--color0 {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      border-bottom: $height rgba(mui-color(\u0027orange\u0027), .5) solid;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u0026--color1 {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      border-bottom: $height rgba(mui-color(\u0027light-blue\u0027), .5) solid;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"    \u0026--color2 {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      border-bottom: $height rgba(mui-color(\u0027green\u0027), .5) solid;"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u0026--color3 {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      border-bottom: $height rgba(mui-color(\u0027indigo\u0027), .5) solid;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u0026--color4 {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      border-bottom: $height rgba(mui-color(\u0027pink\u0027), .5) solid;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":264,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":265,"author":{"gitId":"ckcherry23"},"content":"    \u0026--color-deletes {"},{"lineNumber":266,"author":{"gitId":"ckcherry23"},"content":"      border-bottom: $height rgba(mui-color(\u0027red\u0027), .7) solid;"},{"lineNumber":267,"author":{"gitId":"ckcherry23"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}"},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"vvidday":2,"ckcherry23":65,"MarcusTXK":14,"-":189}},{"path":"frontend/src/components/c-resizer.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"#app-wrapper("},{"lineNumber":3,"author":{"gitId":"-"},"content":"  v-bind:style\u003d\"appStyles\","},{"lineNumber":4,"author":{"gitId":"-"},"content":"  @mousemove\u003d\"mouseMove\","},{"lineNumber":5,"author":{"gitId":"-"},"content":"  @mouseup\u003d\"deregisterMouseMove\","},{"lineNumber":6,"author":{"gitId":"-"},"content":"  @mouseleave\u003d\"deregisterMouseMove\""},{"lineNumber":7,"author":{"gitId":"-"},"content":")"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  #tab-resize-guide(v-bind:style\u003d\"guideStyles\")"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  .left-resize-container"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    slot(name\u003d\"left\")"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  #tab-resize("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @mousedown.left\u003d\"registerMouseMove\","},{"lineNumber":13,"author":{"gitId":"-"},"content":"    v-show\u003d\"isTabActive\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  )"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    .tab-close(v-on:click\u003d\"closeTab\")"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      i.fas.fa-caret-right"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  .right-resize-container("},{"lineNumber":18,"author":{"gitId":"-"},"content":"    v-bind:style\u003d\"rightContainerStyles\","},{"lineNumber":19,"author":{"gitId":"-"},"content":"    v-if\u003d\"isTabActive\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  )"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    slot(name\u003d\"right\")"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cscript lang\u003d\u0027ts\u0027\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { defineComponent } from \u0027vue\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"const DRAG_BAR_WIDTH \u003d 13.25;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"const SCROLL_BAR_WIDTH \u003d 17;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"const GUIDE_BAR_WIDTH \u003d 2;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"/** The following eslint suppression suppresses a rare false positive case where event cannot be accessed due to"},{"lineNumber":33,"author":{"gitId":"-"},"content":" *  handler being a lambda function parameter. The explicit lambda function here allows us to easily discern handler\u0027s"},{"lineNumber":34,"author":{"gitId":"-"},"content":" *  parameters, i.e. an event of type MouseEvent."},{"lineNumber":35,"author":{"gitId":"-"},"content":" */"},{"lineNumber":36,"author":{"gitId":"-"},"content":"// eslint-disable-next-line no-unused-vars"},{"lineNumber":37,"author":{"gitId":"-"},"content":"const throttledEvent \u003d (delay: number, handler: (event: MouseEvent) \u003d\u003e unknown) \u003d\u003e {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  let lastCalled \u003d 0;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  return (event: MouseEvent) \u003d\u003e {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    if (Date.now() - lastCalled \u003e delay) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      lastCalled \u003d Date.now();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      handler(event);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":45,"author":{"gitId":"-"},"content":"};"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"export default defineComponent({"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  name: \u0027c-resizer\u0027,"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      guideWidth: (0.5 * window.innerWidth - (GUIDE_BAR_WIDTH / 2)) / window.innerWidth,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      flexWidth: 0.5,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      isResizing: false,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    appStyles() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      return this.isResizing"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ? \u0027user-select: none; cursor: col-resize;\u0027"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        : \u0027\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    guideStyles() {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      return this.isResizing"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ? `display: block; right: ${this.guideWidth * 100}%;`"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        : \u0027\u0027;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    rightContainerStyles() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      return `flex: 0 0 ${this.flexWidth * 100}%;`;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    mouseMove() {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      if (this.isResizing) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return throttledEvent(25, (event: MouseEvent) \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"          this.guideWidth \u003d ("},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Math.min("},{"lineNumber":80,"author":{"gitId":"-"},"content":"              Math.max("},{"lineNumber":81,"author":{"gitId":"-"},"content":"                window.innerWidth - event.clientX,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                SCROLL_BAR_WIDTH + DRAG_BAR_WIDTH,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"              ),"},{"lineNumber":84,"author":{"gitId":"-"},"content":"              window.innerWidth - SCROLL_BAR_WIDTH,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            - (GUIDE_BAR_WIDTH / 2)"},{"lineNumber":87,"author":{"gitId":"-"},"content":"          ) / window.innerWidth;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      return () \u003d\u003e {};"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    ...mapState([\u0027isTabActive\u0027]),"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"  methods: {"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"    registerMouseMove() {"},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":"      this.isResizing \u003d true;"},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"    deregisterMouseMove() {"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"      this.isResizing \u003d false;"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"      this.flexWidth \u003d (this.guideWidth * window.innerWidth + (GUIDE_BAR_WIDTH / 2))"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"        / window.innerWidth;"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":107,"author":{"gitId":"vvidday"},"content":"    closeTab() {"},{"lineNumber":108,"author":{"gitId":"vvidday"},"content":"      this.$store.commit(\u0027updateTabState\u0027, false);"},{"lineNumber":109,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":110,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":111,"author":{"gitId":"-"},"content":"});"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/script\u003e"}],"authorContributionMap":{"vvidday":16,"-":96}},{"path":"frontend/src/components/c-segment-collection.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":".segment-collection(v-observe-visibility\u003d\"{ callback: visibilityChanged }\")"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  template(v-if\u003d\"isRendered\", v-for\u003d\"segment in segments\")"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    c-segment(v-bind:segment\u003d\"segment\", v-bind:path\u003d\"path\")"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cscript lang\u003d\u0027ts\u0027\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { defineComponent } from \u0027vue\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import cSegment from \u0027./c-segment.vue\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { AuthorshipFileSegment } from \u0027../types/types\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"export default defineComponent({"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  name: \u0027c-segment-collection\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    cSegment,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"  props: {"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":"    segments: {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      type: Array\u003cAuthorshipFileSegment\u003e,"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"    path: {"},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"  },"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      isRendered: false,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    visibilityChanged(isVisible: boolean) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      if (isVisible) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.isRendered \u003d true;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":39,"author":{"gitId":"-"},"content":"});"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/script\u003e"}],"authorContributionMap":{"ckcherry23":9,"-":31}},{"path":"frontend/src/components/c-segment.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":".segment("},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"  v-bind:class\u003d\"{ untouched: !segment.knownAuthor, active: isOpen }\","},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"  v-bind:style\u003d\"{ \u0027border-left\u0027: `0.25rem solid ${authorColors[segment.knownAuthor]}` }\","},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":"  v-bind:title\u003d\"`Author: ${segment.knownAuthor || \\\"Unknown\\\"}`\""},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":")"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  .closer(v-if\u003d\"canOpen\","},{"lineNumber":8,"author":{"gitId":"-"},"content":"    v-on:click\u003d\"toggleCode\", ref\u003d\"topButton\")"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    font-awesome-icon.icon("},{"lineNumber":10,"author":{"gitId":"-"},"content":"      v-show\u003d\"!isOpen\","},{"lineNumber":11,"author":{"gitId":"-"},"content":"      icon\u003d\"plus-circle\","},{"lineNumber":12,"author":{"gitId":"-"},"content":"      v-bind:title\u003d\"\u0027Click to open code\u0027\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    font-awesome-icon.icon("},{"lineNumber":15,"author":{"gitId":"-"},"content":"      v-show\u003d\"isOpen\","},{"lineNumber":16,"author":{"gitId":"-"},"content":"      icon\u003d\"chevron-circle-down\","},{"lineNumber":17,"author":{"gitId":"-"},"content":"      v-bind:title\u003d\"\u0027Click to hide code\u0027\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  div(v-if\u003d\"isOpen\", v-hljs\u003d\"path\")"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"    .code("},{"lineNumber":21,"author":{"gitId":"ckcherry23"},"content":"      v-for\u003d\"(line, index) in segment.lines\", v-bind:key\u003d\"index\","},{"lineNumber":22,"author":{"gitId":"ckcherry23"},"content":"      v-bind:style\u003d\"{ \u0027background-color\u0027: `${authorColors[segment.knownAuthor]}${transparencyValue}` }\""},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"    )"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      .line-number {{ `${segment.lineNumbers[index]}\\n` }}"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      .line-content {{ `${line}\\n` }}"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  .closer.bottom(v-if\u003d\"canOpen\", v-on:click\u003d\"toggleCode\")"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    font-awesome-icon.icon("},{"lineNumber":28,"author":{"gitId":"-"},"content":"      v-show\u003d\"isOpen\","},{"lineNumber":29,"author":{"gitId":"-"},"content":"      icon\u003d\"chevron-circle-up\","},{"lineNumber":30,"author":{"gitId":"-"},"content":"      v-bind:title\u003d\"\u0027Click to hide code\u0027\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cscript lang\u003d\u0027ts\u0027\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import { defineComponent, PropType } from \u0027vue\u0027;"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import { StoreState } from \u0027../types/vuex.d\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { AuthorshipFileSegment } from \u0027../types/types\u0027;"},{"lineNumber":39,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"export default defineComponent({"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  name: \u0027c-segment\u0027,"},{"lineNumber":42,"author":{"gitId":"ckcherry23"},"content":"  props: {"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"    segment: {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      type: Object as PropType\u003cAuthorshipFileSegment\u003e,"},{"lineNumber":45,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":47,"author":{"gitId":"ckcherry23"},"content":"    path: {"},{"lineNumber":48,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":49,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":50,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"  },"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      isOpen: (this.segment.knownAuthor !\u003d\u003d null) || this.segment.lines.length \u003c 5 as boolean,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      canOpen: (this.segment.knownAuthor \u003d\u003d\u003d null) \u0026\u0026 this.segment.lines.length \u003e 4 as boolean,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      transparencyValue: \u002730\u0027 as string,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"  computed: {"},{"lineNumber":60,"author":{"gitId":"ckcherry23"},"content":"    ...mapState({"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      authorColors: (state: unknown) \u003d\u003e (state as StoreState).tabAuthorColors,"},{"lineNumber":62,"author":{"gitId":"ckcherry23"},"content":"    }),"},{"lineNumber":63,"author":{"gitId":"ckcherry23"},"content":"  },"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    toggleCode() {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      this.isOpen \u003d !this.isOpen;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":69,"author":{"gitId":"-"},"content":"});"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/script\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cstyle lang\u003d\"scss\" scoped\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@import \u0027../styles/hightlight-js-style.css\u0027;"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"@import \u0027../styles/_colors.scss\u0027;"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":".segment {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  border-left: .25rem solid mui-color(\u0027green\u0027);"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  .code {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027github\u0027, \u0027authored-code-background\u0027);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    padding-left: 1rem;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  .line-number {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027grey\u0027);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    float: left;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    // Not allowing user to select text"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -webkit-touch-callout: none;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /* iOS Safari */"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -webkit-user-select: none;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /* Safari */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -khtml-user-select: none;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /* Konqueror HTML */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -moz-user-select: none;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /* Firefox */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -ms-user-select: none;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /* Internet Explorer/Edge */"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    user-select: none;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /* Non-prefixed version, currently supported by Chrome and Opera */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    width: 2rem;"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    // overwrite all hljs colors"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    [class^\u003d\u0027hljs\u0027] {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027grey\u0027);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  .line-content {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    padding-left: 2rem;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    word-break: break-word;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"  \u0026.untouched {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    $grey: mui-color(\u0027grey\u0027, \u0027400\u0027);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    border-left: .25rem solid $grey;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    height: 20px;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /* height of a single line of code */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    position: relative;"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u0026.active {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      height: auto;"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"      .code {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        background-color: mui-color(\u0027white\u0027);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    .closer {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      cursor: pointer;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      // custom margin for position of toggle icon"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      margin: .2rem 0 0 -.45rem;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      position: absolute;"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u0026.bottom {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        //custom margin for position of toggle icon at the bottom of segment"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        margin: -1.05rem 0 0 -.45rem;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"      .icon {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        background-color: mui-color(\u0027white\u0027);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        width: .75em;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"ckcherry23":25,"-":122}},{"path":"frontend/src/components/c-summary-charts.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"#summary-charts"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"  .summary-charts("},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"    v-for\u003d\"(repo, i) in filteredRepos\","},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:ref\u003d\"\u0027summary-charts-\u0027 + i\","},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:style\u003d\"isChartGroupWidgetMode ? {\u0027marginBottom\u0027: 0} : {}\""},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"    )"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    .summary-charts__title("},{"lineNumber":9,"author":{"gitId":"-"},"content":"      v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByNone\u0027\","},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"      v-bind:ref\u003d\"\u0027summary-charts-title-\u0027 + i\","},{"lineNumber":11,"author":{"gitId":"-"},"content":"      v-bind:class\u003d\"{ \u0027active-background\u0027: \\"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"        isSelectedGroup(repo[0].name, repo[0].repoName) \u0026\u0026 !isChartGroupWidgetMode}\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"      .summary-charts__title--index(v-if\u003d\"!isChartGroupWidgetMode\") {{ i+1 }}"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"      .summary-charts__title--groupname("},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"        v-bind:style\u003d\"isChartGroupWidgetMode ? {\u0027paddingLeft\u0027: 0} : {}\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        template(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027\") {{ repo[0].repoName }}"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        template("},{"lineNumber":20,"author":{"gitId":"-"},"content":"          v-else-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":21,"author":{"gitId":"-"},"content":"          v-bind:class\u003d\" { warn: repo[0].name \u003d\u003d\u003d \u0027-\u0027 }\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"        ) {{ getAuthorDisplayName(repo) }} ({{ repo[0].name }})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      .summary-charts__title--contribution"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        .tooltip("},{"lineNumber":25,"author":{"gitId":"-"},"content":"          v-on:mouseover\u003d\"onTooltipHover(`summary-charts-${i}-total-contribution`)\","},{"lineNumber":26,"author":{"gitId":"-"},"content":"          v-on:mouseout\u003d\"resetTooltip(`summary-charts-${i}-total-contribution`)\""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          | [{{ getGroupTotalContribution(repo) }} lines]"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          span.tooltip-text("},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"            v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027 \u0026\u0026 !isChartGroupWidgetMode\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"          )(v-bind:ref\u003d\"`summary-charts-${i}-total-contribution`\") Total contribution of group"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          span.tooltip-text("},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"            v-else-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027 \u0026\u0026 !isChartGroupWidgetMode\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"          )(v-bind:ref\u003d\"`summary-charts-${i}-total-contribution`\") Total contribution of author"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      a("},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        v-if\u003d\"!isGroupMerged(getGroupName(repo)) \u0026\u0026 !isChartGroupWidgetMode\","},{"lineNumber":37,"author":{"gitId":"-"},"content":"        v-on:click\u003d\"handleMergeGroup(getGroupName(repo))\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        .tooltip("},{"lineNumber":40,"author":{"gitId":"-"},"content":"          v-on:mouseover\u003d\"onTooltipHover(`summary-charts-${i}-merge-group`)\","},{"lineNumber":41,"author":{"gitId":"-"},"content":"          v-on:mouseout\u003d\"resetTooltip(`summary-charts-${i}-merge-group`)\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          font-awesome-icon.icon-button(:icon\u003d\"[\u0027fas\u0027, \u0027chevron-up\u0027]\")"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          span.tooltip-text(v-bind:ref\u003d\"`summary-charts-${i}-merge-group`\") Click to merge group"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      a("},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        v-if\u003d\"isGroupMerged(getGroupName(repo)) \u0026\u0026 !isChartGroupWidgetMode\","},{"lineNumber":47,"author":{"gitId":"-"},"content":"        v-on:click\u003d\"handleExpandGroup(getGroupName(repo))\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        .tooltip("},{"lineNumber":50,"author":{"gitId":"-"},"content":"          v-on:mouseover\u003d\"onTooltipHover(`summary-charts-${i}-expand-group`)\","},{"lineNumber":51,"author":{"gitId":"-"},"content":"          v-on:mouseout\u003d\"resetTooltip(`summary-charts-${i}-expand-group`)\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          font-awesome-icon.icon-button(:icon\u003d\"[\u0027fas\u0027, \u0027chevron-down\u0027]\")"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          span.tooltip-text(v-bind:ref\u003d\"`summary-charts-${i}-expand-group`\") Click to expand group"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      a("},{"lineNumber":56,"author":{"gitId":"-"},"content":"        v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027\","},{"lineNumber":57,"author":{"gitId":"-"},"content":"        v-bind:class\u003d\"!isBrokenLink(getRepoLink(repo[0])) ? \u0027\u0027 : \u0027broken-link\u0027\","},{"lineNumber":58,"author":{"gitId":"-"},"content":"        v-bind:href\u003d\"getRepoLink(repo[0])\", target\u003d\"_blank\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        .tooltip("},{"lineNumber":61,"author":{"gitId":"-"},"content":"          v-on:mouseover\u003d\"onTooltipHover(`summary-charts-${i}-repo-link`)\","},{"lineNumber":62,"author":{"gitId":"-"},"content":"          v-on:mouseout\u003d\"resetTooltip(`summary-charts-${i}-repo-link`)\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          font-awesome-icon.icon-button(:icon\u003d\"getRepoIcon(repo[0])\")"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"          span.tooltip-text("},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"            v-if\u003d\"!isChartGroupWidgetMode\","},{"lineNumber":67,"author":{"gitId":"-"},"content":"            v-bind:ref\u003d\"`summary-charts-${i}-repo-link`\""},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"          ) {{getGroupRepoLinkMessage(repo[0])}}"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      a("},{"lineNumber":70,"author":{"gitId":"-"},"content":"        v-else-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":71,"author":{"gitId":"-"},"content":"        v-bind:class\u003d\"!isBrokenLink(getAuthorProfileLink(repo[0], repo[0].name)) ? \u0027\u0027 : \u0027broken-link\u0027\","},{"lineNumber":72,"author":{"gitId":"-"},"content":"        v-bind:href\u003d\"getAuthorProfileLink(repo[0], repo[0].name)\", target\u003d\"_blank\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        .tooltip("},{"lineNumber":75,"author":{"gitId":"-"},"content":"          v-on:mouseover\u003d\"onTooltipHover(`summary-charts-${i}-author-link`)\","},{"lineNumber":76,"author":{"gitId":"-"},"content":"          v-on:mouseout\u003d\"resetTooltip(`summary-charts-${i}-author-link`)\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":78,"author":{"gitId":"-"},"content":"          font-awesome-icon.icon-button(icon\u003d\"user\")"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"          span.tooltip-text("},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"            v-if\u003d\"!isChartGroupWidgetMode\","},{"lineNumber":81,"author":{"gitId":"-"},"content":"            v-bind:ref\u003d\"`summary-charts-${i}-author-link`\""},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"          ) {{getAuthorProfileLinkMessage(repo[0])}}"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      template(v-if\u003d\"isGroupMerged(getGroupName(repo))\")"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"          v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByAuthors\u0027 \u0026\u0026 !isChartGroupWidgetMode\","},{"lineNumber":86,"author":{"gitId":"-"},"content":"          onclick\u003d\"deactivateAllOverlays()\","},{"lineNumber":87,"author":{"gitId":"-"},"content":"          v-on:click\u003d\"openTabAuthorship(repo[0], repo, 0, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":89,"author":{"gitId":"-"},"content":"          .tooltip("},{"lineNumber":90,"author":{"gitId":"-"},"content":"            v-on:mouseover\u003d\"onTooltipHover(`summary-charts-${i}-group-code`)\","},{"lineNumber":91,"author":{"gitId":"-"},"content":"            v-on:mouseout\u003d\"resetTooltip(`summary-charts-${i}-group-code`)\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":94,"author":{"gitId":"-"},"content":"              icon\u003d\"code\","},{"lineNumber":95,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{ \u0027active-icon\u0027: isSelectedTab(repo[0].name, repo[0].repoName, \u0027authorship\u0027, true) }\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            span.tooltip-text(v-bind:ref\u003d\"`summary-charts-${i}-group-code`\") Click to view group\u0027s code"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"          v-if\u003d\"!isChartGroupWidgetMode\","},{"lineNumber":100,"author":{"gitId":"-"},"content":"          onclick\u003d\"deactivateAllOverlays()\","},{"lineNumber":101,"author":{"gitId":"-"},"content":"          v-on:click\u003d\"openTabZoom(repo[0], filterSinceDate, filterUntilDate, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          .tooltip("},{"lineNumber":104,"author":{"gitId":"-"},"content":"            v-on:mouseover\u003d\"onTooltipHover(`summary-charts-${i}-commit-breakdown`)\","},{"lineNumber":105,"author":{"gitId":"-"},"content":"            v-on:mouseout\u003d\"resetTooltip(`summary-charts-${i}-commit-breakdown`)\""},{"lineNumber":106,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":108,"author":{"gitId":"-"},"content":"              icon\u003d\"list-ul\","},{"lineNumber":109,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{ \u0027active-icon\u0027: isSelectedTab(repo[0].name, repo[0].repoName, \u0027zoom\u0027, true) }\""},{"lineNumber":110,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            span.tooltip-text(v-bind:ref\u003d\"`summary-charts-${i}-commit-breakdown`\") Click to view breakdown of commits"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"      a("},{"lineNumber":113,"author":{"gitId":"MarcusTXK"},"content":"        v-if\u003d\"isChartGroupWidgetMode \u0026\u0026 !isChartWidgetMode\","},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"        v-bind:href\u003d\"getReportLink()\", target\u003d\"_blank\""},{"lineNumber":115,"author":{"gitId":"MarcusTXK"},"content":"      )"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        .tooltip("},{"lineNumber":117,"author":{"gitId":"-"},"content":"          v-on:mouseover\u003d\"onTooltipHover(`summary-charts-${i}-commit-breakdown-group-widget`)\","},{"lineNumber":118,"author":{"gitId":"-"},"content":"          v-on:mouseout\u003d\"resetTooltip(`summary-charts-${i}-commit-breakdown-group-widget`)\""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":120,"author":{"gitId":"MarcusTXK"},"content":"          font-awesome-icon.icon-button("},{"lineNumber":121,"author":{"gitId":"MarcusTXK"},"content":"            icon\u003d\"arrow-up-right-from-square\","},{"lineNumber":122,"author":{"gitId":"MarcusTXK"},"content":"          )"},{"lineNumber":123,"author":{"gitId":"MarcusTXK"},"content":"          span.tooltip-text("},{"lineNumber":124,"author":{"gitId":"MarcusTXK"},"content":"            v-if\u003d\"!isChartGroupWidgetMode\","},{"lineNumber":125,"author":{"gitId":"-"},"content":"            v-bind:ref\u003d\"`summary-charts-${i}-commit-breakdown-group-widget`\""},{"lineNumber":126,"author":{"gitId":"MarcusTXK"},"content":"          ) Click to view breakdown of commits on RepoSense"},{"lineNumber":127,"author":{"gitId":"MarcusTXK"},"content":"      a("},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"        v-if\u003d\"!isChartGroupWidgetMode\","},{"lineNumber":129,"author":{"gitId":"MarcusTXK"},"content":"        v-on:click\u003d\"getEmbeddedIframe(i)\""},{"lineNumber":130,"author":{"gitId":"MarcusTXK"},"content":"      )"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        .tooltip(v-bind:id\u003d\"\u0027tooltip-\u0027 + i\","},{"lineNumber":132,"author":{"gitId":"-"},"content":"          v-on:mouseover\u003d\"onTooltipHover(`summary-charts-${i}-copy-iframe`)\","},{"lineNumber":133,"author":{"gitId":"-"},"content":"          v-on:mouseout\u003d\"resetTooltip(`summary-charts-${i}-copy-iframe`)\""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"          font-awesome-icon.icon-button(icon\u003d\"clipboard\")"},{"lineNumber":136,"author":{"gitId":"-"},"content":"          span.tooltip-text(v-bind:ref\u003d\"`summary-charts-${i}-copy-iframe`\") Click to copy iframe link for group"},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"      .tooltip.summary-chart__title--percentile("},{"lineNumber":139,"author":{"gitId":"-"},"content":"          v-if\u003d\"sortGroupSelection.includes(\u0027totalCommits\u0027)\""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        ) {{ getPercentile(i) }} %\u0026nbsp"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        span.tooltip-text.right-aligned {{ getPercentileExplanation(i) }}"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    .summary-charts__fileType--breakdown(v-if\u003d\"filterBreakdown\")"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      template(v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByNone\u0027\")"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        .summary-charts__fileType--breakdown__legend("},{"lineNumber":145,"author":{"gitId":"-"},"content":"          v-for\u003d\"fileType in getFileTypes(repo)\","},{"lineNumber":146,"author":{"gitId":"-"},"content":"          v-bind:key\u003d\"fileType\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":148,"author":{"gitId":"-"},"content":"          font-awesome-icon("},{"lineNumber":149,"author":{"gitId":"-"},"content":"            icon\u003d\"circle\","},{"lineNumber":150,"author":{"gitId":"-"},"content":"            v-bind:style\u003d\"{ \u0027color\u0027: fileTypeColors[fileType] }\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":152,"author":{"gitId":"-"},"content":"          span \u0026nbsp; {{ fileType }} \u0026nbsp;"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":"    .summary-chart("},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":"      v-for\u003d\"(user, j) in getRepo(repo)\","},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":"      v-bind:style\u003d\"isChartGroupWidgetMode \u0026\u0026 j \u003d\u003d\u003d getRepo(repo).length - 1 ? {\u0027marginBottom\u0027: 0} : {}\","},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"      v-bind:ref\u003d\"\u0027summary-chart-\u0027 + j\""},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":"      )"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      .summary-chart__title("},{"lineNumber":159,"author":{"gitId":"-"},"content":"        v-if\u003d\"!isGroupMerged(getGroupName(repo))\","},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":"        v-bind:class\u003d\"{ \u0027active-background\u0027: user.name \u003d\u003d\u003d activeUser \u0026\u0026 user.repoName \u003d\u003d\u003d activeRepo \\"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":"          \u0026\u0026 !isChartGroupWidgetMode }\""},{"lineNumber":162,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":163,"author":{"gitId":"MarcusTXK"},"content":"        .summary-chart__title--index(v-if\u003d\"!isChartWidgetMode\") {{ j+1 }}"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        .summary-chart__title--repo(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027\") {{ user.repoName }}"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        .summary-chart__title--author-repo(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\") {{ user.repoName }}"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        .summary-chart__title--name("},{"lineNumber":167,"author":{"gitId":"-"},"content":"          v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":168,"author":{"gitId":"-"},"content":"          v-bind:class\u003d\"{ warn: user.name \u003d\u003d\u003d \u0027-\u0027 }\""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ) {{ user.displayName }} ({{ user.name }})"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        .summary-chart__title--contribution.mini-font [{{ user.checkedFileTypeContribution }} lines]"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":172,"author":{"gitId":"-"},"content":"          v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByRepos\u0027\","},{"lineNumber":173,"author":{"gitId":"MarcusTXK"},"content":"          v-bind:class\u003d\"!isBrokenLink(getRepoLink(user)) ? \u0027\u0027 : \u0027broken-link\u0027\","},{"lineNumber":174,"author":{"gitId":"MarcusTXK"},"content":"          v-bind:href\u003d\"getRepoLink(user)\", target\u003d\"_blank\""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":176,"author":{"gitId":"-"},"content":"          .tooltip("},{"lineNumber":177,"author":{"gitId":"-"},"content":"            v-on:mouseover\u003d\"onTooltipHover(`repo-${i}-author-${j}-repo-link`)\","},{"lineNumber":178,"author":{"gitId":"-"},"content":"            v-on:mouseout\u003d\"resetTooltip(`repo-${i}-author-${j}-repo-link`)\""},{"lineNumber":179,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button(:icon\u003d\"getRepoIcon(repo[0])\")"},{"lineNumber":181,"author":{"gitId":"MarcusTXK"},"content":"            span.tooltip-text("},{"lineNumber":182,"author":{"gitId":"MarcusTXK"},"content":"              v-if\u003d\"!isChartGroupWidgetMode\","},{"lineNumber":183,"author":{"gitId":"-"},"content":"              v-bind:ref\u003d\"`repo-${i}-author-${j}-repo-link`\""},{"lineNumber":184,"author":{"gitId":"MarcusTXK"},"content":"            ) {{getRepoLinkMessage(user)}}"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":186,"author":{"gitId":"-"},"content":"          v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByAuthors\u0027\","},{"lineNumber":187,"author":{"gitId":"MarcusTXK"},"content":"          v-bind:class\u003d\"!isBrokenLink(getAuthorProfileLink(user, user.name)) ? \u0027\u0027 : \u0027broken-link\u0027\","},{"lineNumber":188,"author":{"gitId":"MarcusTXK"},"content":"          v-bind:href\u003d\"getAuthorProfileLink(user, user.name)\", target\u003d\"_blank\""},{"lineNumber":189,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":190,"author":{"gitId":"-"},"content":"          .tooltip("},{"lineNumber":191,"author":{"gitId":"-"},"content":"            v-on:mouseover\u003d\"onTooltipHover(`repo-${i}-author-${j}-author-link`)\","},{"lineNumber":192,"author":{"gitId":"-"},"content":"            v-on:mouseout\u003d\"resetTooltip(`repo-${i}-author-${j}-author-link`)\""},{"lineNumber":193,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button(icon\u003d\"user\")"},{"lineNumber":195,"author":{"gitId":"MarcusTXK"},"content":"            span.tooltip-text("},{"lineNumber":196,"author":{"gitId":"MarcusTXK"},"content":"              v-if\u003d\"!isChartGroupWidgetMode\","},{"lineNumber":197,"author":{"gitId":"-"},"content":"              v-bind:ref\u003d\"`repo-${i}-author-${j}-author-link`\""},{"lineNumber":198,"author":{"gitId":"MarcusTXK"},"content":"            ) {{getAuthorProfileLinkMessage(user)}}"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":200,"author":{"gitId":"MarcusTXK"},"content":"          v-if\u003d\"!isChartGroupWidgetMode\","},{"lineNumber":201,"author":{"gitId":"-"},"content":"          onclick\u003d\"deactivateAllOverlays()\","},{"lineNumber":202,"author":{"gitId":"-"},"content":"          v-on:click\u003d\"openTabAuthorship(user, repo, j, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":204,"author":{"gitId":"-"},"content":"          .tooltip("},{"lineNumber":205,"author":{"gitId":"-"},"content":"            v-on:mouseover\u003d\"onTooltipHover(`repo-${i}-author-${j}-author-contribution`)\","},{"lineNumber":206,"author":{"gitId":"-"},"content":"            v-on:mouseout\u003d\"resetTooltip(`repo-${i}-author-${j}-author-contribution`)\""},{"lineNumber":207,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":209,"author":{"gitId":"-"},"content":"              icon\u003d\"code\","},{"lineNumber":210,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{ \u0027active-icon\u0027: isSelectedTab(user.name, user.repoName, \u0027authorship\u0027, false) }\""},{"lineNumber":211,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            span.tooltip-text("},{"lineNumber":213,"author":{"gitId":"-"},"content":"              v-bind:ref\u003d\"`repo-${i}-author-${j}-author-contribution`\""},{"lineNumber":214,"author":{"gitId":"-"},"content":"              ) Click to view author\u0027s contribution."},{"lineNumber":215,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":216,"author":{"gitId":"MarcusTXK"},"content":"          v-if\u003d\"!isChartGroupWidgetMode\","},{"lineNumber":217,"author":{"gitId":"-"},"content":"          onclick\u003d\"deactivateAllOverlays()\","},{"lineNumber":218,"author":{"gitId":"-"},"content":"          v-on:click\u003d\"openTabZoom(user, filterSinceDate, filterUntilDate, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":220,"author":{"gitId":"-"},"content":"          .tooltip("},{"lineNumber":221,"author":{"gitId":"-"},"content":"            v-on:mouseover\u003d\"onTooltipHover(`repo-${i}-author-${j}-commit-breakdown`)\","},{"lineNumber":222,"author":{"gitId":"-"},"content":"            v-on:mouseout\u003d\"resetTooltip(`repo-${i}-author-${j}-commit-breakdown`)\""},{"lineNumber":223,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":225,"author":{"gitId":"-"},"content":"              icon\u003d\"list-ul\","},{"lineNumber":226,"author":{"gitId":"-"},"content":"              v-bind:class\u003d\"{ \u0027active-icon\u0027: isSelectedTab(user.name, user.repoName, \u0027zoom\u0027, false) }\""},{"lineNumber":227,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            span.tooltip-text("},{"lineNumber":229,"author":{"gitId":"-"},"content":"              v-bind:ref\u003d\"`repo-${i}-author-${j}-commit-breakdown`\""},{"lineNumber":230,"author":{"gitId":"-"},"content":"            ) Click to view breakdown of commits"},{"lineNumber":231,"author":{"gitId":"MarcusTXK"},"content":"        a("},{"lineNumber":232,"author":{"gitId":"MarcusTXK"},"content":"          v-if\u003d\"isChartGroupWidgetMode\","},{"lineNumber":233,"author":{"gitId":"MarcusTXK"},"content":"          v-bind:href\u003d\"getReportLink()\", target\u003d\"_blank\""},{"lineNumber":234,"author":{"gitId":"MarcusTXK"},"content":"        )"},{"lineNumber":235,"author":{"gitId":"-"},"content":"          .tooltip("},{"lineNumber":236,"author":{"gitId":"-"},"content":"            v-on:mouseover\u003d\"onTooltipHover(`repo-${i}-author-${j}-commit-breakdown-group-widget`)\","},{"lineNumber":237,"author":{"gitId":"-"},"content":"            v-on:mouseout\u003d\"resetTooltip(`repo-${i}-author-${j}-commit-breakdown-group-widget`)\""},{"lineNumber":238,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":239,"author":{"gitId":"MarcusTXK"},"content":"            font-awesome-icon.icon-button("},{"lineNumber":240,"author":{"gitId":"MarcusTXK"},"content":"              icon\u003d\"arrow-up-right-from-square\","},{"lineNumber":241,"author":{"gitId":"MarcusTXK"},"content":"            )"},{"lineNumber":242,"author":{"gitId":"MarcusTXK"},"content":"            span.tooltip-text("},{"lineNumber":243,"author":{"gitId":"MarcusTXK"},"content":"              v-if\u003d\"!isChartGroupWidgetMode\","},{"lineNumber":244,"author":{"gitId":"-"},"content":"              v-bind:ref\u003d\"`repo-${i}-author-${j}-commit-breakdown-group-widget`\""},{"lineNumber":245,"author":{"gitId":"MarcusTXK"},"content":"            ) Click to view breakdown of commits on RepoSense"},{"lineNumber":246,"author":{"gitId":"MarcusTXK"},"content":"        a("},{"lineNumber":247,"author":{"gitId":"MarcusTXK"},"content":"          v-if\u003d\"!isChartGroupWidgetMode\","},{"lineNumber":248,"author":{"gitId":"MarcusTXK"},"content":"          v-on:click\u003d\"getEmbeddedIframe(i , j)\""},{"lineNumber":249,"author":{"gitId":"MarcusTXK"},"content":"        )"},{"lineNumber":250,"author":{"gitId":"-"},"content":"          .tooltip("},{"lineNumber":251,"author":{"gitId":"-"},"content":"            v-bind:id\u003d\"\u0027tooltip-\u0027 + i + \u0027-\u0027 + j\","},{"lineNumber":252,"author":{"gitId":"-"},"content":"            v-on:mouseover\u003d\"onTooltipHover(`repo-${i}-author-${j}-iframe-link`)\","},{"lineNumber":253,"author":{"gitId":"-"},"content":"            v-on:mouseout\u003d\"resetTooltip(`repo-${i}-author-${j}-iframe-link`)\""},{"lineNumber":254,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":255,"author":{"gitId":"MarcusTXK"},"content":"            font-awesome-icon.icon-button(icon\u003d\"clipboard\")"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            span.tooltip-text(v-bind:ref\u003d\"`repo-${i}-author-${j}-iframe-link`\") Click to copy iframe link"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        .tooltip.summary-chart__title--percentile("},{"lineNumber":258,"author":{"gitId":"-"},"content":"          v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 \u0026\u0026 sortGroupSelection.includes(\u0027totalCommits\u0027)\""},{"lineNumber":259,"author":{"gitId":"-"},"content":"        ) {{ getPercentile(j) }} %\u0026nbsp"},{"lineNumber":260,"author":{"gitId":"-"},"content":"          span.tooltip-text.right-aligned {{ getPercentileExplanation(j) }}"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"      .summary-chart__ramp("},{"lineNumber":263,"author":{"gitId":"-"},"content":"        v-on:click\u003d\"openTabZoomSubrange(user, $event, isGroupMerged(getGroupName(repo)))\""},{"lineNumber":264,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        c-ramp("},{"lineNumber":266,"author":{"gitId":"-"},"content":"          v-bind:groupby\u003d\"filterGroupSelection\","},{"lineNumber":267,"author":{"gitId":"-"},"content":"          v-bind:user\u003d\"user\","},{"lineNumber":268,"author":{"gitId":"-"},"content":"          v-bind:tframe\u003d\"filterTimeFrame\","},{"lineNumber":269,"author":{"gitId":"-"},"content":"          v-bind:sdate\u003d\"filterSinceDate\","},{"lineNumber":270,"author":{"gitId":"-"},"content":"          v-bind:udate\u003d\"filterUntilDate\","},{"lineNumber":271,"author":{"gitId":"-"},"content":"          v-bind:avgsize\u003d\"avgCommitSize\","},{"lineNumber":272,"author":{"gitId":"-"},"content":"          v-bind:mergegroup\u003d\"isGroupMerged(getGroupName(repo))\","},{"lineNumber":273,"author":{"gitId":"MarcusTXK"},"content":"          v-bind:filtersearch\u003d\"filterSearch\","},{"lineNumber":274,"author":{"gitId":"MarcusTXK"},"content":"          v-bind:is-widget-mode\u003d\"isChartGroupWidgetMode\")"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        .overlay"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"      .summary-chart__contribution"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        template(v-if\u003d\"filterBreakdown\")"},{"lineNumber":279,"author":{"gitId":"-"},"content":"          .summary-chart__contrib"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            c-stacked-bar-chart("},{"lineNumber":281,"author":{"gitId":"-"},"content":"              v-bind:bars\u003d\"getFileTypeContributionBars(user.fileTypeContribution, user.checkedFileTypeContribution)\""},{"lineNumber":282,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        template(v-else)"},{"lineNumber":284,"author":{"gitId":"-"},"content":"          .summary-chart__contrib("},{"lineNumber":285,"author":{"gitId":"-"},"content":"            v-bind:title\u003d\"`Total contribution from ${minDate} to ${maxDate}: \\"},{"lineNumber":286,"author":{"gitId":"-"},"content":"              ${user.checkedFileTypeContribution} lines`\""},{"lineNumber":287,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            c-stacked-bar-chart("},{"lineNumber":289,"author":{"gitId":"-"},"content":"              v-bind:bars\u003d\"getContributionBars(user.checkedFileTypeContribution)\""},{"lineNumber":290,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"vvidday"},"content":"\u003cscript lang\u003d\"ts\"\u003e"},{"lineNumber":294,"author":{"gitId":"vvidday"},"content":"import { defineComponent } from \u0027vue\u0027;"},{"lineNumber":295,"author":{"gitId":"-"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"vvidday"},"content":"import brokenLinkDisabler from \u0027../mixin/brokenLinkMixin\u0027;"},{"lineNumber":298,"author":{"gitId":"-"},"content":"import tooltipPositioner from \u0027../mixin/dynamicTooltipMixin\u0027;"},{"lineNumber":299,"author":{"gitId":"-"},"content":"import cRamp from \u0027./c-ramp.vue\u0027;"},{"lineNumber":300,"author":{"gitId":"-"},"content":"import cStackedBarChart from \u0027./c-stacked-bar-chart.vue\u0027;"},{"lineNumber":301,"author":{"gitId":"-"},"content":"import { Bar, Repo, User } from \u0027../types/types\u0027;"},{"lineNumber":302,"author":{"gitId":"vvidday"},"content":"import { FilterGroupSelection, FilterTimeFrame, SortGroupSelection } from \u0027../types/summary\u0027;"},{"lineNumber":303,"author":{"gitId":"vvidday"},"content":"import { StoreState, ZoomInfo } from \u0027../types/vuex.d\u0027;"},{"lineNumber":304,"author":{"gitId":"vvidday"},"content":"import { AuthorFileTypeContributions } from \u0027../types/zod/commits-type\u0027;"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"vvidday"},"content":"export default defineComponent({"},{"lineNumber":307,"author":{"gitId":"-"},"content":"  name: \u0027c-summary-charts\u0027,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    cRamp,"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    cStackedBarChart,"},{"lineNumber":311,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":312,"author":{"gitId":"-"},"content":"  mixins: [brokenLinkDisabler, tooltipPositioner],"},{"lineNumber":313,"author":{"gitId":"ckcherry23"},"content":"  props: {"},{"lineNumber":314,"author":{"gitId":"ckcherry23"},"content":"    checkedFileTypes: {"},{"lineNumber":315,"author":{"gitId":"vvidday"},"content":"      type: Array\u003cstring\u003e,"},{"lineNumber":316,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":317,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":318,"author":{"gitId":"ckcherry23"},"content":"    filtered: {"},{"lineNumber":319,"author":{"gitId":"vvidday"},"content":"      type: Array\u003cArray\u003cUser\u003e\u003e,"},{"lineNumber":320,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":321,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":322,"author":{"gitId":"ckcherry23"},"content":"    avgContributionSize: {"},{"lineNumber":323,"author":{"gitId":"ckcherry23"},"content":"      type: Number,"},{"lineNumber":324,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":325,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":326,"author":{"gitId":"ckcherry23"},"content":"    filterBreakdown: {"},{"lineNumber":327,"author":{"gitId":"ckcherry23"},"content":"      type: Boolean,"},{"lineNumber":328,"author":{"gitId":"ckcherry23"},"content":"      default: false,"},{"lineNumber":329,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":330,"author":{"gitId":"ckcherry23"},"content":"    filterGroupSelection: {"},{"lineNumber":331,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":332,"author":{"gitId":"vvidday"},"content":"      default: FilterGroupSelection.GroupByRepos,"},{"lineNumber":333,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":334,"author":{"gitId":"ckcherry23"},"content":"    filterTimeFrame: {"},{"lineNumber":335,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":336,"author":{"gitId":"vvidday"},"content":"      default: FilterTimeFrame.Commit,"},{"lineNumber":337,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":338,"author":{"gitId":"ckcherry23"},"content":"    filterSinceDate: {"},{"lineNumber":339,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":340,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":341,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":342,"author":{"gitId":"ckcherry23"},"content":"    filterUntilDate: {"},{"lineNumber":343,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":344,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":345,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":346,"author":{"gitId":"ckcherry23"},"content":"    isMergeGroup: {"},{"lineNumber":347,"author":{"gitId":"ckcherry23"},"content":"      type: Boolean,"},{"lineNumber":348,"author":{"gitId":"ckcherry23"},"content":"      default: false,"},{"lineNumber":349,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":350,"author":{"gitId":"ckcherry23"},"content":"    minDate: {"},{"lineNumber":351,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":352,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":353,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":354,"author":{"gitId":"ckcherry23"},"content":"    maxDate: {"},{"lineNumber":355,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":356,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":357,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":358,"author":{"gitId":"ckcherry23"},"content":"    filterSearch: {"},{"lineNumber":359,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":360,"author":{"gitId":"ckcherry23"},"content":"      default: \u0027\u0027,"},{"lineNumber":361,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":362,"author":{"gitId":"ckcherry23"},"content":"    sortGroupSelection: {"},{"lineNumber":363,"author":{"gitId":"ckcherry23"},"content":"      type: String,"},{"lineNumber":364,"author":{"gitId":"vvidday"},"content":"      default: SortGroupSelection.GroupTitle,"},{"lineNumber":365,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":366,"author":{"gitId":"MarcusTXK"},"content":"    chartGroupIndex: {"},{"lineNumber":367,"author":{"gitId":"MarcusTXK"},"content":"      type: Number,"},{"lineNumber":368,"author":{"gitId":"MarcusTXK"},"content":"      default: undefined,"},{"lineNumber":369,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":370,"author":{"gitId":"MarcusTXK"},"content":"    chartIndex: {"},{"lineNumber":371,"author":{"gitId":"MarcusTXK"},"content":"      type: Number,"},{"lineNumber":372,"author":{"gitId":"MarcusTXK"},"content":"      default: undefined,"},{"lineNumber":373,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":374,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":375,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      drags: [] as Array\u003cnumber\u003e,"},{"lineNumber":378,"author":{"gitId":"vvidday"},"content":"      activeRepo: null as string | null,"},{"lineNumber":379,"author":{"gitId":"vvidday"},"content":"      activeUser: null as string | null,"},{"lineNumber":380,"author":{"gitId":"vvidday"},"content":"      activeTabType: null as string | null,"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      isTabOnMergedGroup: false,"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":383,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":386,"author":{"gitId":"vvidday"},"content":"    avgCommitSize(): number {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"      let totalCommits \u003d 0;"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      let totalCount \u003d 0;"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      this.filteredRepos.forEach((repo) \u003d\u003e {"},{"lineNumber":390,"author":{"gitId":"MarcusTXK"},"content":"        repo.forEach((user: User) \u003d\u003e {"},{"lineNumber":391,"author":{"gitId":"vvidday"},"content":"          user.commits?.forEach((slice) \u003d\u003e {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            if (slice.insertions \u003e 0) {"},{"lineNumber":393,"author":{"gitId":"-"},"content":"              totalCount +\u003d 1;"},{"lineNumber":394,"author":{"gitId":"-"},"content":"              totalCommits +\u003d slice.insertions;"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":396,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      return totalCommits / totalCount;"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    filteredRepos() {"},{"lineNumber":402,"author":{"gitId":"MarcusTXK"},"content":"      const repos \u003d this.filtered.filter((repo) \u003d\u003e repo.length \u003e 0);"},{"lineNumber":403,"author":{"gitId":"MarcusTXK"},"content":"      if (this.isChartGroupWidgetMode \u0026\u0026 this.chartGroupIndex! \u003c repos.length) {"},{"lineNumber":404,"author":{"gitId":"MarcusTXK"},"content":"        return [repos[this.chartGroupIndex!]];"},{"lineNumber":405,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":406,"author":{"gitId":"MarcusTXK"},"content":"      return repos;"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":408,"author":{"gitId":"MarcusTXK"},"content":"    isChartGroupWidgetMode() {"},{"lineNumber":409,"author":{"gitId":"MarcusTXK"},"content":"      return this.chartGroupIndex !\u003d\u003d undefined \u0026\u0026 this.chartGroupIndex \u003e\u003d 0;"},{"lineNumber":410,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":411,"author":{"gitId":"MarcusTXK"},"content":"    isChartWidgetMode() {"},{"lineNumber":412,"author":{"gitId":"MarcusTXK"},"content":"      return this.chartIndex !\u003d\u003d undefined \u0026\u0026 this.chartIndex \u003e\u003d 0 \u0026\u0026 this.isChartGroupWidgetMode;"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":414,"author":{"gitId":"vvidday"},"content":"    ...mapState({"},{"lineNumber":415,"author":{"gitId":"vvidday"},"content":"      mergedGroups: (state: unknown) \u003d\u003e (state as StoreState).mergedGroups,"},{"lineNumber":416,"author":{"gitId":"vvidday"},"content":"      fileTypeColors: (state: unknown) \u003d\u003e (state as StoreState).fileTypeColors,"},{"lineNumber":417,"author":{"gitId":"vvidday"},"content":"    }),"},{"lineNumber":418,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":419,"author":{"gitId":"-"},"content":"  watch: {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    \u0027$store.state.isTabActive\u0027: function () {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      if (!this.$store.state.isTabActive) {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        this.removeSelectedTab();"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":425,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":426,"author":{"gitId":"vvidday"},"content":"  created() {"},{"lineNumber":427,"author":{"gitId":"vvidday"},"content":"    this.retrieveSelectedTabHash();"},{"lineNumber":428,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":429,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    getFileTypeContributionBars("},{"lineNumber":431,"author":{"gitId":"-"},"content":"      fileTypeContribution: AuthorFileTypeContributions,"},{"lineNumber":432,"author":{"gitId":"-"},"content":"      checkedFileTypeContribution: number | undefined,"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    ): Array\u003cBar\u003e {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"      let currentBarWidth \u003d 0;"},{"lineNumber":435,"author":{"gitId":"-"},"content":"      const fullBarWidth \u003d 100;"},{"lineNumber":436,"author":{"gitId":"-"},"content":"      const contributionPerFullBar \u003d (this.avgContributionSize * 2);"},{"lineNumber":437,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"      const allFileTypesContributionBars: Array\u003cBar\u003e \u003d [];"},{"lineNumber":439,"author":{"gitId":"MarcusTXK"},"content":"      if (contributionPerFullBar \u003d\u003d\u003d 0) {"},{"lineNumber":440,"author":{"gitId":"MarcusTXK"},"content":"        return allFileTypesContributionBars;"},{"lineNumber":441,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"      Object.keys(fileTypeContribution)"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        .filter((fileType) \u003d\u003e this.checkedFileTypes.includes(fileType))"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        .forEach((fileType) \u003d\u003e {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"          const contribution \u003d fileTypeContribution[fileType];"},{"lineNumber":447,"author":{"gitId":"-"},"content":"          let barWidth \u003d (contribution / contributionPerFullBar) * fullBarWidth;"},{"lineNumber":448,"author":{"gitId":"-"},"content":"          const contributionBars \u003d [];"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"          // if contribution bar for file type is able to fit on the current line"},{"lineNumber":451,"author":{"gitId":"-"},"content":"          if (currentBarWidth + barWidth \u003c fullBarWidth) {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"            contributionBars.push(barWidth);"},{"lineNumber":453,"author":{"gitId":"-"},"content":"            currentBarWidth +\u003d barWidth;"},{"lineNumber":454,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"            // take up all the space left on the current line"},{"lineNumber":456,"author":{"gitId":"-"},"content":"            contributionBars.push(fullBarWidth - currentBarWidth);"},{"lineNumber":457,"author":{"gitId":"-"},"content":"            barWidth -\u003d fullBarWidth - currentBarWidth;"},{"lineNumber":458,"author":{"gitId":"-"},"content":"            // additional bar width will start on a new line"},{"lineNumber":459,"author":{"gitId":"-"},"content":"            const numOfFullBars \u003d Math.floor(barWidth / fullBarWidth);"},{"lineNumber":460,"author":{"gitId":"-"},"content":"            for (let i \u003d 0; i \u003c numOfFullBars; i +\u003d 1) {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"              contributionBars.push(fullBarWidth);"},{"lineNumber":462,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            const remainingBarWidth \u003d barWidth % fullBarWidth;"},{"lineNumber":464,"author":{"gitId":"MarcusTXK"},"content":"            if (remainingBarWidth \u003e 0) {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"              contributionBars.push(remainingBarWidth);"},{"lineNumber":466,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":467,"author":{"gitId":"-"},"content":"            currentBarWidth \u003d remainingBarWidth;"},{"lineNumber":468,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"          contributionBars.forEach((width) \u003d\u003e {"},{"lineNumber":471,"author":{"gitId":"-"},"content":"            allFileTypesContributionBars.push({"},{"lineNumber":472,"author":{"gitId":"-"},"content":"              width,"},{"lineNumber":473,"author":{"gitId":"-"},"content":"              color: this.fileTypeColors[fileType],"},{"lineNumber":474,"author":{"gitId":"-"},"content":"              tooltipText: `${fileType}: ${fileTypeContribution[fileType]} lines, \\"},{"lineNumber":475,"author":{"gitId":"-"},"content":"                total: ${checkedFileTypeContribution} lines (contribution from ${this.minDate} to"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                  ${this.maxDate})`,"},{"lineNumber":477,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":478,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"      return allFileTypesContributionBars;"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"    getFileTypes(repo: Array\u003cUser\u003e): Array\u003cstring\u003e {"},{"lineNumber":485,"author":{"gitId":"-"},"content":"      const fileTypes: Array\u003cstring\u003e \u003d [];"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      repo.forEach((user) \u003d\u003e {"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        Object.keys(user.fileTypeContribution).forEach((fileType) \u003d\u003e {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"          if (this.checkedFileTypes.includes(fileType) \u0026\u0026 !fileTypes.includes(fileType)) {"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            fileTypes.push(fileType);"},{"lineNumber":490,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":492,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":493,"author":{"gitId":"-"},"content":"      return fileTypes;"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":495,"author":{"gitId":"-"},"content":""},{"lineNumber":496,"author":{"gitId":"-"},"content":"    getGroupTotalContribution(group: Array\u003cUser\u003e): number {"},{"lineNumber":497,"author":{"gitId":"vvidday"},"content":"      return group.reduce((acc, ele) \u003d\u003e acc + (ele.checkedFileTypeContribution ?? 0), 0);"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"-"},"content":"    getContributionBars(totalContribution: number): Array\u003cBar\u003e {"},{"lineNumber":501,"author":{"gitId":"-"},"content":"      const res: Array\u003cBar\u003e \u003d [];"},{"lineNumber":502,"author":{"gitId":"-"},"content":"      const contributionLimit \u003d (this.avgContributionSize * 2);"},{"lineNumber":503,"author":{"gitId":"MarcusTXK"},"content":"      if (contributionLimit \u003d\u003d\u003d 0) {"},{"lineNumber":504,"author":{"gitId":"MarcusTXK"},"content":"        return res;"},{"lineNumber":505,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":506,"author":{"gitId":"-"},"content":"      const cnt \u003d Math.floor(totalContribution / contributionLimit);"},{"lineNumber":507,"author":{"gitId":"-"},"content":"      for (let cntId \u003d 0; cntId \u003c cnt; cntId +\u003d 1) {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"        res.push({ width: 100 });"},{"lineNumber":509,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"      const last \u003d (totalContribution % contributionLimit) / contributionLimit;"},{"lineNumber":512,"author":{"gitId":"-"},"content":"      if (last !\u003d\u003d 0) {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        res.push({ width: last * 100 });"},{"lineNumber":514,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":515,"author":{"gitId":"-"},"content":""},{"lineNumber":516,"author":{"gitId":"-"},"content":"      return res;"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"vvidday"},"content":"    getAuthorProfileLink(repo: User, userName: string): string | undefined {"},{"lineNumber":520,"author":{"gitId":"-"},"content":"      return window.getAuthorLink(repo.repoId, userName);"},{"lineNumber":521,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":522,"author":{"gitId":"-"},"content":""},{"lineNumber":523,"author":{"gitId":"vvidday"},"content":"    getGroupRepoLinkMessage(repo: User): string {"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      return this.getLinkMessage(this.getRepoLink(repo), \u0027Click to view group\\\u0027s repo\u0027);"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"vvidday"},"content":"    getAuthorProfileLinkMessage(repo: User): string {"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      return this.getLinkMessage(this.getAuthorProfileLink(repo, repo.name), \u0027Click to view author\\\u0027s profile\u0027);"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"vvidday"},"content":"    getRepoLinkMessage(repo: User): string {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      return this.getLinkMessage(this.getRepoLink(repo), \u0027Click to view repo\u0027);"},{"lineNumber":533,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":534,"author":{"gitId":"-"},"content":""},{"lineNumber":535,"author":{"gitId":"vvidday"},"content":"    getRepoLink(repo: User): string | undefined {"},{"lineNumber":536,"author":{"gitId":"-"},"content":"      const { REPOS } \u003d window;"},{"lineNumber":537,"author":{"gitId":"-"},"content":"      const { location, branch } \u003d REPOS[repo.repoId];"},{"lineNumber":538,"author":{"gitId":"-"},"content":""},{"lineNumber":539,"author":{"gitId":"-"},"content":"      if (Object.prototype.hasOwnProperty.call(location, \u0027organization\u0027)) {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        return window.getBranchLink(repo.repoId, branch);"},{"lineNumber":541,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      this.removeSelectedTab();"},{"lineNumber":543,"author":{"gitId":"-"},"content":"      return repo.location;"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":545,"author":{"gitId":"-"},"content":""},{"lineNumber":546,"author":{"gitId":"-"},"content":"    getRepoIcon(repo: User): Array\u003cstring\u003e {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"      const domainName \u003d window.REPOS[repo.repoId].location.domainName;"},{"lineNumber":548,"author":{"gitId":"-"},"content":""},{"lineNumber":549,"author":{"gitId":"-"},"content":"      switch (domainName) {"},{"lineNumber":550,"author":{"gitId":"-"},"content":"      case \u0027github\u0027:"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        return [\u0027fab\u0027, \u0027github\u0027];"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      case \u0027gitlab\u0027:"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        return [\u0027fab\u0027, \u0027gitlab\u0027];"},{"lineNumber":554,"author":{"gitId":"-"},"content":"      case \u0027bitbucket\u0027:"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        return [\u0027fab\u0027, \u0027bitbucket\u0027];"},{"lineNumber":556,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        return [\u0027fas\u0027, \u0027database\u0027];"},{"lineNumber":558,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":560,"author":{"gitId":"-"},"content":""},{"lineNumber":561,"author":{"gitId":"-"},"content":"    // triggering opening of tabs //"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    openTabAuthorship(user: User, repo: Array\u003cUser\u003e, index: number, isMerged: boolean): void {"},{"lineNumber":563,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        minDate, maxDate, checkedFileTypes,"},{"lineNumber":565,"author":{"gitId":"-"},"content":"      } \u003d this;"},{"lineNumber":566,"author":{"gitId":"-"},"content":""},{"lineNumber":567,"author":{"gitId":"-"},"content":"      const info \u003d {"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        minDate,"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        maxDate,"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        checkedFileTypes,"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        author: user.name,"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        repo: user.repoName,"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        name: user.displayName,"},{"lineNumber":574,"author":{"gitId":"-"},"content":"        isMergeGroup: isMerged,"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        location: this.getRepoLink(repo[index]),"},{"lineNumber":576,"author":{"gitId":"vvidday"},"content":"        files: [],"},{"lineNumber":577,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      this.addSelectedTab(user.name, user.repoName, \u0027authorship\u0027, isMerged);"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabAuthorshipInfo\u0027, info);"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":581,"author":{"gitId":"-"},"content":""},{"lineNumber":582,"author":{"gitId":"vvidday"},"content":"    openTabZoomSubrange(user: User, evt: MouseEvent, isMerged: boolean): void {"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      const isKeyPressed \u003d window.isMacintosh ? evt.metaKey : evt.ctrlKey;"},{"lineNumber":584,"author":{"gitId":"-"},"content":""},{"lineNumber":585,"author":{"gitId":"-"},"content":"      if (isKeyPressed) {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"        if (this.drags.length \u003d\u003d\u003d 0) {"},{"lineNumber":587,"author":{"gitId":"-"},"content":"          this.dragViewDown(evt);"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":589,"author":{"gitId":"-"},"content":"          this.dragViewUp(evt);"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":591,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"      // skip if accidentally clicked on ramp chart"},{"lineNumber":594,"author":{"gitId":"-"},"content":"      if (this.drags.length \u003d\u003d\u003d 2 \u0026\u0026 this.drags[1] - this.drags[0]) {"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        // additional day was added to include the date represented by filterUntilDate"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        const tdiff \u003d (new Date(this.filterUntilDate)).valueOf() - (new Date(this.filterSinceDate)).valueOf()"},{"lineNumber":597,"author":{"gitId":"-"},"content":"            + window.DAY_IN_MS;"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        const idxs \u003d this.drags.map((x) \u003d\u003e (x * tdiff) / 100);"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        const tsince \u003d window.getDateStr(new Date(this.filterSinceDate).getTime() + idxs[0]);"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        const tuntil \u003d window.getDateStr(new Date(this.filterSinceDate).getTime() + idxs[1]);"},{"lineNumber":601,"author":{"gitId":"-"},"content":"        this.drags \u003d [];"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        this.openTabZoom(user, tsince, tuntil, isMerged);"},{"lineNumber":603,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":605,"author":{"gitId":"-"},"content":""},{"lineNumber":606,"author":{"gitId":"vvidday"},"content":"    openTabZoom(user: User, since: string, until: string, isMerged: boolean): void {"},{"lineNumber":607,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        avgCommitSize, filterGroupSelection, filterTimeFrame, filterSearch,"},{"lineNumber":609,"author":{"gitId":"-"},"content":"      } \u003d this;"},{"lineNumber":610,"author":{"gitId":"vvidday"},"content":"      // Deep copy to ensure changes in zoom (e.g. toggle state) won\u0027t affect summary, and vice versa"},{"lineNumber":611,"author":{"gitId":"vvidday"},"content":"      const clonedUser \u003d JSON.parse(JSON.stringify(user));"},{"lineNumber":612,"author":{"gitId":"vvidday"},"content":"      const info: ZoomInfo \u003d {"},{"lineNumber":613,"author":{"gitId":"-"},"content":"        zRepo: user.repoName,"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        zAuthor: user.name,"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        zFilterGroup: filterGroupSelection,"},{"lineNumber":616,"author":{"gitId":"-"},"content":"        zTimeFrame: filterTimeFrame,"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        zAvgCommitSize: avgCommitSize,"},{"lineNumber":618,"author":{"gitId":"-"},"content":"        zUser: clonedUser,"},{"lineNumber":619,"author":{"gitId":"-"},"content":"        zLocation: this.getRepoLink(user),"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        zSince: since,"},{"lineNumber":621,"author":{"gitId":"-"},"content":"        zUntil: until,"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        zIsMerged: isMerged,"},{"lineNumber":623,"author":{"gitId":"-"},"content":"        zFileTypeColors: this.fileTypeColors,"},{"lineNumber":624,"author":{"gitId":"-"},"content":"        zFromRamp: false,"},{"lineNumber":625,"author":{"gitId":"-"},"content":"        zFilterSearch: filterSearch,"},{"lineNumber":626,"author":{"gitId":"-"},"content":"        zAvgContributionSize: this.getAvgContributionSize(),"},{"lineNumber":627,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      this.addSelectedTab(user.name, user.repoName, \u0027zoom\u0027, isMerged);"},{"lineNumber":629,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabZoomInfo\u0027, info);"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":631,"author":{"gitId":"-"},"content":""},{"lineNumber":632,"author":{"gitId":"MarcusTXK"},"content":"    async getEmbeddedIframe(chartGroupIndex: number, chartIndex: number \u003d -1) {"},{"lineNumber":633,"author":{"gitId":"MarcusTXK"},"content":"      const isChartIndexProvided \u003d chartIndex !\u003d\u003d -1;"},{"lineNumber":634,"author":{"gitId":"MarcusTXK"},"content":"      // Set height of iframe according to number of charts to avoid scrolling"},{"lineNumber":635,"author":{"gitId":"MarcusTXK"},"content":"      let totalChartHeight \u003d 0;"},{"lineNumber":636,"author":{"gitId":"MarcusTXK"},"content":"      if (!isChartIndexProvided) {"},{"lineNumber":637,"author":{"gitId":"-"},"content":"        totalChartHeight +\u003d (this.$refs[`summary-charts-${chartGroupIndex}`] as Array\u003cHTMLElement\u003e)[0].clientHeight;"},{"lineNumber":638,"author":{"gitId":"MarcusTXK"},"content":"      } else {"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        totalChartHeight +\u003d (this.$refs[`summary-chart-${chartIndex}`] as Array\u003cHTMLElement\u003e)[0].clientHeight;"},{"lineNumber":640,"author":{"gitId":"MarcusTXK"},"content":"        totalChartHeight +\u003d this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027"},{"lineNumber":641,"author":{"gitId":"MarcusTXK"},"content":"          ? 0"},{"lineNumber":642,"author":{"gitId":"-"},"content":"          : (this.$refs[`summary-charts-title-${chartGroupIndex}`] as Array\u003cHTMLElement\u003e)[0].clientHeight;"},{"lineNumber":643,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":644,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":645,"author":{"gitId":"MarcusTXK"},"content":"      const margins \u003d 30;"},{"lineNumber":646,"author":{"gitId":"MarcusTXK"},"content":"      const iframeStart \u003d \u0027\u003ciframe src\u003d\"\u0027;"},{"lineNumber":647,"author":{"gitId":"MarcusTXK"},"content":"      const iframeEnd \u003d `\" frameBorder\u003d\"0\" width\u003d\"800px\" height\u003d\"${totalChartHeight + margins}px\"\u003e\u003c/iframe\u003e`;"},{"lineNumber":648,"author":{"gitId":"MarcusTXK"},"content":"      const [baseUrl, ...params] \u003d window.location.href.split(\u0027?\u0027);"},{"lineNumber":649,"author":{"gitId":"MarcusTXK"},"content":"      const groupIndexParam \u003d isChartIndexProvided ? `\u0026chartIndex\u003d${chartIndex}` : \u0027\u0027;"},{"lineNumber":650,"author":{"gitId":"MarcusTXK"},"content":"      const url \u003d `${baseUrl}#/widget/?${params.join(\u0027?\u0027)}\u0026chartGroupIndex\u003d${chartGroupIndex}${groupIndexParam}`;"},{"lineNumber":651,"author":{"gitId":"MarcusTXK"},"content":"      const iframe \u003d iframeStart + url + iframeEnd;"},{"lineNumber":652,"author":{"gitId":"MarcusTXK"},"content":"      if (navigator.clipboard) {"},{"lineNumber":653,"author":{"gitId":"MarcusTXK"},"content":"        navigator.clipboard.writeText(iframe);"},{"lineNumber":654,"author":{"gitId":"MarcusTXK"},"content":"      } else {"},{"lineNumber":655,"author":{"gitId":"MarcusTXK"},"content":"        // Clipboard API is not supported (non-secure origin of neither HTTPS nor localhost)"},{"lineNumber":656,"author":{"gitId":"MarcusTXK"},"content":"        const textarea \u003d document.createElement(\u0027textarea\u0027);"},{"lineNumber":657,"author":{"gitId":"MarcusTXK"},"content":"        textarea.value \u003d iframe;"},{"lineNumber":658,"author":{"gitId":"MarcusTXK"},"content":"        textarea.setAttribute(\u0027readonly\u0027, \u0027\u0027);"},{"lineNumber":659,"author":{"gitId":"MarcusTXK"},"content":"        textarea.style.position \u003d \u0027absolute\u0027;"},{"lineNumber":660,"author":{"gitId":"MarcusTXK"},"content":"        textarea.style.left \u003d \u0027-9999px\u0027;"},{"lineNumber":661,"author":{"gitId":"MarcusTXK"},"content":"        document.body.appendChild(textarea);"},{"lineNumber":662,"author":{"gitId":"MarcusTXK"},"content":"        textarea.select();"},{"lineNumber":663,"author":{"gitId":"MarcusTXK"},"content":"        document.execCommand(\u0027copy\u0027);"},{"lineNumber":664,"author":{"gitId":"MarcusTXK"},"content":"        document.body.removeChild(textarea);"},{"lineNumber":665,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":666,"author":{"gitId":"MarcusTXK"},"content":"      const tooltipId \u003d `tooltip-${chartGroupIndex}${isChartIndexProvided ? `-${chartIndex}` : \u0027\u0027}`;"},{"lineNumber":667,"author":{"gitId":"MarcusTXK"},"content":"      this.updateCopyTooltip(tooltipId, \u0027Copied iframe\u0027);"},{"lineNumber":668,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":669,"author":{"gitId":"MarcusTXK"},"content":"    updateCopyTooltip(tooltipId: string, text: string) {"},{"lineNumber":670,"author":{"gitId":"MarcusTXK"},"content":"      const tooltipElement \u003d document.getElementById(tooltipId);"},{"lineNumber":671,"author":{"gitId":"MarcusTXK"},"content":"      if (tooltipElement \u0026\u0026 tooltipElement.querySelector(\u0027.tooltip-text\u0027)) {"},{"lineNumber":672,"author":{"gitId":"MarcusTXK"},"content":"        const tooltipTextElement \u003d tooltipElement.querySelector(\u0027.tooltip-text\u0027);"},{"lineNumber":673,"author":{"gitId":"MarcusTXK"},"content":"        const originalText \u003d tooltipTextElement!.textContent;"},{"lineNumber":674,"author":{"gitId":"MarcusTXK"},"content":"        tooltipElement.querySelector(\u0027.tooltip-text\u0027)!.textContent \u003d text;"},{"lineNumber":675,"author":{"gitId":"MarcusTXK"},"content":"        setTimeout(() \u003d\u003e {"},{"lineNumber":676,"author":{"gitId":"MarcusTXK"},"content":"          tooltipTextElement!.textContent \u003d originalText;"},{"lineNumber":677,"author":{"gitId":"MarcusTXK"},"content":"        }, 2000);"},{"lineNumber":678,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":679,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":680,"author":{"gitId":"MarcusTXK"},"content":"    getReportLink() {"},{"lineNumber":681,"author":{"gitId":"MarcusTXK"},"content":"      const url \u003d window.location.href;"},{"lineNumber":682,"author":{"gitId":"MarcusTXK"},"content":"      const regexToRemoveWidget \u003d /([?\u0026])((chartIndex|chartGroupIndex)\u003d\\d+)/g;"},{"lineNumber":683,"author":{"gitId":"MarcusTXK"},"content":"      return url.replace(regexToRemoveWidget, \u0027\u0027);"},{"lineNumber":684,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":685,"author":{"gitId":"-"},"content":"    getRepo(repo: Array\u003cRepo\u003e) {"},{"lineNumber":686,"author":{"gitId":"MarcusTXK"},"content":"      if (this.isChartGroupWidgetMode \u0026\u0026 this.isChartWidgetMode) {"},{"lineNumber":687,"author":{"gitId":"MarcusTXK"},"content":"        return [repo[this.chartIndex!]];"},{"lineNumber":688,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":689,"author":{"gitId":"MarcusTXK"},"content":"      return repo;"},{"lineNumber":690,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":691,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":692,"author":{"gitId":"vvidday"},"content":"    getBaseTarget(target: HTMLElement | null): HTMLElement | null {"},{"lineNumber":693,"author":{"gitId":"vvidday"},"content":"      if (!target) {"},{"lineNumber":694,"author":{"gitId":"vvidday"},"content":"        // Should never reach here - function assumes that target is a child of the div with class \u0027summary-chart__ramp\u0027"},{"lineNumber":695,"author":{"gitId":"-"},"content":"        // eslint-disable-next-line no-console"},{"lineNumber":696,"author":{"gitId":"vvidday"},"content":"        console.error(\u0027Error: The getBaseTarget function in c-summary-charts.vue has been called on an element that is \u0027"},{"lineNumber":697,"author":{"gitId":"vvidday"},"content":"        + \u0027not a child of the div with class summary-chart__ramp. This might affect the drag view functionality.\u0027);"},{"lineNumber":698,"author":{"gitId":"vvidday"},"content":"        return null;"},{"lineNumber":699,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":700,"author":{"gitId":"-"},"content":"      return target.className \u003d\u003d\u003d \u0027summary-chart__ramp\u0027"},{"lineNumber":701,"author":{"gitId":"-"},"content":"          ? target"},{"lineNumber":702,"author":{"gitId":"-"},"content":"          : this.getBaseTarget(target.parentElement);"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":704,"author":{"gitId":"-"},"content":""},{"lineNumber":705,"author":{"gitId":"vvidday"},"content":"    dragViewDown(evt: MouseEvent): void {"},{"lineNumber":706,"author":{"gitId":"-"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":707,"author":{"gitId":"-"},"content":""},{"lineNumber":708,"author":{"gitId":"-"},"content":"      const pos \u003d evt.clientX;"},{"lineNumber":709,"author":{"gitId":"vvidday"},"content":"      const ramp \u003d this.getBaseTarget(evt.target as HTMLElement);"},{"lineNumber":710,"author":{"gitId":"vvidday"},"content":"      if (!ramp || !ramp.parentElement) {"},{"lineNumber":711,"author":{"gitId":"vvidday"},"content":"        return;"},{"lineNumber":712,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":713,"author":{"gitId":"-"},"content":"      this.drags \u003d [pos];"},{"lineNumber":714,"author":{"gitId":"-"},"content":""},{"lineNumber":715,"author":{"gitId":"-"},"content":"      const base \u003d ramp.offsetWidth;"},{"lineNumber":716,"author":{"gitId":"-"},"content":"      const offset \u003d ramp.parentElement.offsetLeft;"},{"lineNumber":717,"author":{"gitId":"-"},"content":""},{"lineNumber":718,"author":{"gitId":"vvidday"},"content":"      const overlay \u003d ramp.getElementsByClassName(\u0027overlay\u0027)[0] as HTMLElement;"},{"lineNumber":719,"author":{"gitId":"-"},"content":"      overlay.style.marginLeft \u003d \u00270\u0027;"},{"lineNumber":720,"author":{"gitId":"-"},"content":"      overlay.style.width \u003d `${((pos - offset) * 100) / base}%`;"},{"lineNumber":721,"author":{"gitId":"-"},"content":"      overlay.className +\u003d \u0027 edge\u0027;"},{"lineNumber":722,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":723,"author":{"gitId":"-"},"content":""},{"lineNumber":724,"author":{"gitId":"vvidday"},"content":"    dragViewUp(evt: MouseEvent): void {"},{"lineNumber":725,"author":{"gitId":"-"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":726,"author":{"gitId":"vvidday"},"content":"      const ramp \u003d this.getBaseTarget(evt.target as HTMLElement);"},{"lineNumber":727,"author":{"gitId":"vvidday"},"content":"      if (!ramp || !ramp.parentElement) {"},{"lineNumber":728,"author":{"gitId":"vvidday"},"content":"        return;"},{"lineNumber":729,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"-"},"content":"      const base \u003d ramp.offsetWidth;"},{"lineNumber":732,"author":{"gitId":"-"},"content":"      this.drags.push(evt.clientX);"},{"lineNumber":733,"author":{"gitId":"-"},"content":"      this.drags.sort((a, b) \u003d\u003e a - b);"},{"lineNumber":734,"author":{"gitId":"-"},"content":""},{"lineNumber":735,"author":{"gitId":"-"},"content":"      const offset \u003d ramp.parentElement.offsetLeft;"},{"lineNumber":736,"author":{"gitId":"-"},"content":"      this.drags \u003d this.drags.map((x) \u003d\u003e ((x - offset) * 100) / base);"},{"lineNumber":737,"author":{"gitId":"-"},"content":""},{"lineNumber":738,"author":{"gitId":"vvidday"},"content":"      const overlay \u003d ramp.getElementsByClassName(\u0027overlay\u0027)[0] as HTMLElement;"},{"lineNumber":739,"author":{"gitId":"-"},"content":"      overlay.style.marginLeft \u003d `${this.drags[0]}%`;"},{"lineNumber":740,"author":{"gitId":"-"},"content":"      overlay.style.width \u003d `${this.drags[1] - this.drags[0]}%`;"},{"lineNumber":741,"author":{"gitId":"-"},"content":"      overlay.className +\u003d \u0027 show\u0027;"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":743,"author":{"gitId":"-"},"content":""},{"lineNumber":744,"author":{"gitId":"vvidday"},"content":"    getPercentile(index: number): string {"},{"lineNumber":745,"author":{"gitId":"vvidday"},"content":"      if (this.filterGroupSelection \u003d\u003d\u003d FilterGroupSelection.GroupByNone) {"},{"lineNumber":746,"author":{"gitId":"-"},"content":"        return (Math.round(((index + 1) * 1000) / this.filtered[0].length) / 10).toFixed(1);"},{"lineNumber":747,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":748,"author":{"gitId":"-"},"content":"      return (Math.round(((index + 1) * 1000) / this.filtered.length) / 10).toFixed(1);"},{"lineNumber":749,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":750,"author":{"gitId":"-"},"content":""},{"lineNumber":751,"author":{"gitId":"-"},"content":"    getGroupName(group: Array\u003cUser\u003e): string {"},{"lineNumber":752,"author":{"gitId":"-"},"content":"      return window.getGroupName(group, this.filterGroupSelection);"},{"lineNumber":753,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":754,"author":{"gitId":"-"},"content":""},{"lineNumber":755,"author":{"gitId":"vvidday"},"content":"    isGroupMerged(groupName: string): boolean {"},{"lineNumber":756,"author":{"gitId":"-"},"content":"      return this.mergedGroups.includes(groupName);"},{"lineNumber":757,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":758,"author":{"gitId":"-"},"content":""},{"lineNumber":759,"author":{"gitId":"vvidday"},"content":"    handleMergeGroup(groupName: string): void {"},{"lineNumber":760,"author":{"gitId":"-"},"content":"      const info \u003d this.mergedGroups;"},{"lineNumber":761,"author":{"gitId":"-"},"content":"      info.push(groupName);"},{"lineNumber":762,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateMergedGroup\u0027, info);"},{"lineNumber":763,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"vvidday"},"content":"    handleExpandGroup(groupName: string): void {"},{"lineNumber":766,"author":{"gitId":"-"},"content":"      const info \u003d this.mergedGroups.filter((x) \u003d\u003e x !\u003d\u003d groupName);"},{"lineNumber":767,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateMergedGroup\u0027, info);"},{"lineNumber":768,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":769,"author":{"gitId":"-"},"content":""},{"lineNumber":770,"author":{"gitId":"-"},"content":"    getAuthorDisplayName(repo: Array\u003cUser\u003e): string {"},{"lineNumber":771,"author":{"gitId":"-"},"content":"      return window.getAuthorDisplayName(repo);"},{"lineNumber":772,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":773,"author":{"gitId":"-"},"content":""},{"lineNumber":774,"author":{"gitId":"vvidday"},"content":"    retrieveSelectedTabHash(): void {"},{"lineNumber":775,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":776,"author":{"gitId":"-"},"content":""},{"lineNumber":777,"author":{"gitId":"-"},"content":"      if (hash.tabAuthor) {"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        this.activeUser \u003d hash.tabAuthor;"},{"lineNumber":779,"author":{"gitId":"-"},"content":"      } else if (hash.zA) {"},{"lineNumber":780,"author":{"gitId":"-"},"content":"        this.activeUser \u003d hash.zA;"},{"lineNumber":781,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":782,"author":{"gitId":"-"},"content":""},{"lineNumber":783,"author":{"gitId":"-"},"content":"      if (hash.tabRepo) {"},{"lineNumber":784,"author":{"gitId":"-"},"content":"        this.activeRepo \u003d hash.tabRepo;"},{"lineNumber":785,"author":{"gitId":"-"},"content":"      } else if (hash.zR) {"},{"lineNumber":786,"author":{"gitId":"-"},"content":"        this.activeRepo \u003d hash.zR;"},{"lineNumber":787,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":788,"author":{"gitId":"-"},"content":""},{"lineNumber":789,"author":{"gitId":"-"},"content":"      if (hash.isTabOnMergedGroup) {"},{"lineNumber":790,"author":{"gitId":"vvidday"},"content":"        if (this.filterGroupSelection \u003d\u003d\u003d FilterGroupSelection.GroupByAuthors) {"},{"lineNumber":791,"author":{"gitId":"-"},"content":"          this.activeRepo \u003d null;"},{"lineNumber":792,"author":{"gitId":"vvidday"},"content":"        } else if (this.filterGroupSelection \u003d\u003d\u003d FilterGroupSelection.GroupByRepos) {"},{"lineNumber":793,"author":{"gitId":"-"},"content":"          this.activeUser \u003d null;"},{"lineNumber":794,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":795,"author":{"gitId":"-"},"content":"        this.isTabOnMergedGroup \u003d true;"},{"lineNumber":796,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":797,"author":{"gitId":"-"},"content":""},{"lineNumber":798,"author":{"gitId":"-"},"content":"      if (hash.tabType) {"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        this.activeTabType \u003d hash.tabType;"},{"lineNumber":800,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":801,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":802,"author":{"gitId":"-"},"content":""},{"lineNumber":803,"author":{"gitId":"vvidday"},"content":"    addSelectedTab(userName: string, repo: string, tabType: string, isMerged: boolean): void {"},{"lineNumber":804,"author":{"gitId":"vvidday"},"content":"      if (!isMerged || this.filterGroupSelection \u003d\u003d\u003d FilterGroupSelection.GroupByAuthors) {"},{"lineNumber":805,"author":{"gitId":"-"},"content":"        this.activeUser \u003d userName;"},{"lineNumber":806,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":807,"author":{"gitId":"-"},"content":"        this.activeUser \u003d null;"},{"lineNumber":808,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":809,"author":{"gitId":"-"},"content":""},{"lineNumber":810,"author":{"gitId":"vvidday"},"content":"      if (isMerged \u0026\u0026 this.filterGroupSelection \u003d\u003d\u003d FilterGroupSelection.GroupByAuthors) {"},{"lineNumber":811,"author":{"gitId":"-"},"content":"        this.activeRepo \u003d null;"},{"lineNumber":812,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":813,"author":{"gitId":"-"},"content":"        this.activeRepo \u003d repo;"},{"lineNumber":814,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":815,"author":{"gitId":"-"},"content":""},{"lineNumber":816,"author":{"gitId":"-"},"content":"      if (isMerged) {"},{"lineNumber":817,"author":{"gitId":"-"},"content":"        window.addHash(\u0027isTabOnMergedGroup\u0027, \u0027true\u0027);"},{"lineNumber":818,"author":{"gitId":"-"},"content":"        this.isTabOnMergedGroup \u003d true;"},{"lineNumber":819,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":820,"author":{"gitId":"-"},"content":"        window.removeHash(\u0027isTabOnMergedGroup\u0027);"},{"lineNumber":821,"author":{"gitId":"-"},"content":"        this.isTabOnMergedGroup \u003d false;"},{"lineNumber":822,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":823,"author":{"gitId":"-"},"content":""},{"lineNumber":824,"author":{"gitId":"-"},"content":"      this.activeTabType \u003d tabType;"},{"lineNumber":825,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":826,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":827,"author":{"gitId":"-"},"content":""},{"lineNumber":828,"author":{"gitId":"vvidday"},"content":"    removeSelectedTab(): void {"},{"lineNumber":829,"author":{"gitId":"-"},"content":"      this.activeUser \u003d null;"},{"lineNumber":830,"author":{"gitId":"-"},"content":"      this.activeRepo \u003d null;"},{"lineNumber":831,"author":{"gitId":"-"},"content":"      this.activeTabType \u003d null;"},{"lineNumber":832,"author":{"gitId":"-"},"content":""},{"lineNumber":833,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027isTabOnMergedGroup\u0027);"},{"lineNumber":834,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":835,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":836,"author":{"gitId":"-"},"content":""},{"lineNumber":837,"author":{"gitId":"vvidday"},"content":"    isSelectedTab(userName: string, repo: string, tabType: string, isMerged: boolean): boolean {"},{"lineNumber":838,"author":{"gitId":"-"},"content":"      if (!isMerged) {"},{"lineNumber":839,"author":{"gitId":"-"},"content":"        return this.activeUser \u003d\u003d\u003d userName \u0026\u0026 this.activeRepo \u003d\u003d\u003d repo"},{"lineNumber":840,"author":{"gitId":"-"},"content":"            \u0026\u0026 this.activeTabType \u003d\u003d\u003d tabType;"},{"lineNumber":841,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":842,"author":{"gitId":"-"},"content":""},{"lineNumber":843,"author":{"gitId":"vvidday"},"content":"      if (this.filterGroupSelection \u003d\u003d\u003d FilterGroupSelection.GroupByAuthors) {"},{"lineNumber":844,"author":{"gitId":"-"},"content":"        return this.isTabOnMergedGroup \u0026\u0026 this.activeUser \u003d\u003d\u003d userName"},{"lineNumber":845,"author":{"gitId":"-"},"content":"            \u0026\u0026 this.activeTabType \u003d\u003d\u003d tabType;"},{"lineNumber":846,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":847,"author":{"gitId":"-"},"content":""},{"lineNumber":848,"author":{"gitId":"-"},"content":"      return this.isTabOnMergedGroup \u0026\u0026 this.activeRepo \u003d\u003d\u003d repo"},{"lineNumber":849,"author":{"gitId":"-"},"content":"          \u0026\u0026 this.activeTabType \u003d\u003d\u003d tabType;"},{"lineNumber":850,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":851,"author":{"gitId":"-"},"content":""},{"lineNumber":852,"author":{"gitId":"vvidday"},"content":"    isSelectedGroup(userName: string, repo: string): boolean {"},{"lineNumber":853,"author":{"gitId":"-"},"content":"      return this.isTabOnMergedGroup"},{"lineNumber":854,"author":{"gitId":"vvidday"},"content":"          \u0026\u0026 ((this.filterGroupSelection \u003d\u003d\u003d FilterGroupSelection.GroupByRepos \u0026\u0026 this.activeRepo \u003d\u003d\u003d repo)"},{"lineNumber":855,"author":{"gitId":"vvidday"},"content":"          || (this.filterGroupSelection \u003d\u003d\u003d FilterGroupSelection.GroupByAuthors \u0026\u0026 this.activeUser \u003d\u003d\u003d userName));"},{"lineNumber":856,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":857,"author":{"gitId":"-"},"content":""},{"lineNumber":858,"author":{"gitId":"vvidday"},"content":"    getPercentileExplanation(j: number): string {"},{"lineNumber":859,"author":{"gitId":"-"},"content":"      const explanation \u003d `Based on the current sorting order, this item is in the top ${this.getPercentile(j)}%`;"},{"lineNumber":860,"author":{"gitId":"-"},"content":"      return explanation;"},{"lineNumber":861,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":862,"author":{"gitId":"-"},"content":""},{"lineNumber":863,"author":{"gitId":"-"},"content":"    getAvgContributionSize(): number {"},{"lineNumber":864,"author":{"gitId":"-"},"content":"      let totalContribution \u003d 0;"},{"lineNumber":865,"author":{"gitId":"-"},"content":"      let totalCommits \u003d 0;"},{"lineNumber":866,"author":{"gitId":"-"},"content":""},{"lineNumber":867,"author":{"gitId":"-"},"content":"      this.filteredRepos.forEach((repo) \u003d\u003e {"},{"lineNumber":868,"author":{"gitId":"-"},"content":"        repo.forEach((user) \u003d\u003e {"},{"lineNumber":869,"author":{"gitId":"-"},"content":"          user.commits?.forEach((commit) \u003d\u003e {"},{"lineNumber":870,"author":{"gitId":"-"},"content":"            totalCommits +\u003d 1;"},{"lineNumber":871,"author":{"gitId":"-"},"content":"            totalContribution +\u003d (commit.insertions + commit.deletions);"},{"lineNumber":872,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":873,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":874,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":875,"author":{"gitId":"-"},"content":""},{"lineNumber":876,"author":{"gitId":"-"},"content":"      return totalContribution / totalCommits;"},{"lineNumber":877,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":878,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":879,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":880,"author":{"gitId":"-"},"content":"\u003c/script\u003e"}],"authorContributionMap":{"vvidday":74,"ckcherry23":48,"MarcusTXK":158,"-":600}},{"path":"frontend/src/main.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { createApp, DirectiveBinding } from \u0027vue\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { dom } from \u0027@fortawesome/fontawesome-svg-core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FontAwesomeIcon } from \u0027@fortawesome/vue-fontawesome\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ObserveVisibility } from \u0027vue-observe-visibility\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import hljs from \u0027highlight.js\u0027;"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import router from \u0027./router/index\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import \u0027muicss/dist/css/mui.min.css\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import \u0027normalize.css/normalize.css\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import \u0027vue-loading-overlay/dist/vue-loading.css\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import \u0027@fontsource/titillium-web\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"// Need to import for side effects"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import \u0027./utils/api\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import \u0027./utils/safari_date\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import \u0027./utils/load-font-awesome-icons\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"import App from \u0027./app.vue\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import store from \u0027./store/store\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"dom.watch();"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"const app \u003d createApp(App);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"app.directive(\u0027hljs\u0027, {"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"  mounted: (ele: HTMLElement, binding: DirectiveBinding) \u003d\u003e {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    const element \u003d ele;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    element.className \u003d binding.value.split(\u0027.\u0027).pop();"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    hljs.highlightElement(element);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":31,"author":{"gitId":"-"},"content":"});"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"app.directive(\u0027observe-visibility\u0027, {"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"  beforeMount: (el: HTMLElement, binding: DirectiveBinding, vnode) \u003d\u003e {"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"    // From https://github.com/Akryum/vue-observe-visibility/issues/219"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"    // eslint-disable-next-line  @typescript-eslint/no-explicit-any"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    (vnode as any).context \u003d binding.instance;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObserveVisibility.bind(el, binding, vnode);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  updated: ObserveVisibility.update,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  unmounted: ObserveVisibility.unbind,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"});"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"app.component(\u0027font-awesome-icon\u0027, FontAwesomeIcon);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"app.use(store);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"app.use(router);"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"app.mount(\u0027#app\u0027);"}],"authorContributionMap":{"vvidday":4,"ckcherry23":1,"MarcusTXK":3,"-":41}},{"path":"frontend/src/mixin/brokenLinkMixin.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import { defineComponent } from \u0027vue\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"export default defineComponent({"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  data() {"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"    return {"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"      disabledLinkMessage: \u0027This remote link is unsupported\u0027,"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"    };"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"    isBrokenLink(link: string | undefined) {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      return link \u003d\u003d\u003d undefined;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"    getLinkMessage(link: string | undefined, linkMessage: string): string {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      if (this.isBrokenLink(link)) {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return this.disabledLinkMessage;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      return linkMessage;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"});"}],"authorContributionMap":{"vvidday":11,"-":9}},{"path":"frontend/src/router/index.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"import {"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"  createRouter, createWebHashHistory, Router, RouteRecordRaw,"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"} from \u0027vue-router\u0027;"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import Home from \u0027../views/c-home.vue\u0027;"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"const routes: RouteRecordRaw[] \u003d ["},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"  {"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"    path: \u0027/\u0027,"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    component: Home,"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"  },"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"  {"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    path: \u0027/widget\u0027,"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    // route level code-splitting"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    // this generates a separate chunk (about.[hash].js) for this route"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    // which is lazy-loaded when the route is visited."},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    component: () \u003d\u003e import(\u0027../views/c-widget.vue\u0027),"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"  },"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"];"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"const router: Router \u003d createRouter({"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"  history: createWebHashHistory(),"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"  routes,"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"});"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"export default router;"}],"authorContributionMap":{"MarcusTXK":24,"-":1}},{"path":"frontend/src/store/store.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { createStore } from \u0027vuex\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"import { AuthorshipFile, CommitResult, DailyCommit } from \u0027../types/types\u0027;"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import {"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  AuthorshipInfo,"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"  StoreState,"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"  SummaryDates,"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"  ZoomInfo,"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"} from \u0027../types/vuex.d\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"export default createStore\u003cStoreState\u003e({"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  state: {"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"    tabAuthorshipInfo: {} as AuthorshipInfo,"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"    tabZoomInfo: {} as ZoomInfo,"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"    summaryDates: {} as SummaryDates,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mergedGroups: [],"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    fileTypeColors: {},"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"    tabAuthorColors: {},"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    loadingOverlayCount: 0,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    loadingOverlayMessage: \u0027\u0027,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    isTabActive: true,"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"  } as StoreState,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  mutations: {"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"    updateTabZoomInfo(state: StoreState, info: ZoomInfo) {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      state.tabZoomInfo \u003d info;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"    updateTabAuthorshipInfo(state: StoreState, info: AuthorshipInfo) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      state.tabAuthorshipInfo \u003d info;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"    updateSummaryDates(state: StoreState, info: SummaryDates) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      state.summaryDates \u003d info;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"    updateFileTypeColors(state: StoreState, info: { [key: string]: string }) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      state.fileTypeColors \u003d info;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":35,"author":{"gitId":"ckcherry23"},"content":"    updateAuthorColors(state: StoreState, info: { [key: string]: string }) {"},{"lineNumber":36,"author":{"gitId":"ckcherry23"},"content":"      state.tabAuthorColors \u003d info;"},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"    updateMergedGroup(state: StoreState, info: string[]) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      state.mergedGroups \u003d info;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"    incrementLoadingOverlayCount(state: StoreState, increment: number) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      state.loadingOverlayCount +\u003d increment;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      if (state.loadingOverlayCount \u003d\u003d\u003d 0) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        state.loadingOverlayMessage \u003d \u0027Loading. Please wait...\u0027;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"    updateLoadingOverlayMessage(state: StoreState, message: string) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      state.loadingOverlayMessage \u003d message;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"    updateTabState(state: StoreState, isTabOpen: boolean) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      state.isTabActive \u003d isTabOpen;"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"      window.addHash(\u0027tabOpen\u0027, isTabOpen.toString());"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      if (!isTabOpen) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        window.removeHash(\u0027tabType\u0027);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"    toggleZoomCommitMessageBody(_, slice: CommitResult) {"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"      if (slice.isOpen !\u003d\u003d undefined) {"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"        slice.isOpen \u003d !slice.isOpen;"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"    setAllZoomCommitMessageBody(_, { isOpen, commits }: { isOpen: boolean; commits: DailyCommit[] }) {"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"      commits.forEach((commit) \u003d\u003e {"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"        commit.commitResults.forEach((slice) \u003d\u003e {"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"          if (slice.isOpen !\u003d\u003d undefined) {"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"            slice.isOpen \u003d isOpen;"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"          }"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"        });"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"      });"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"    updateTabAuthorshipFiles(state: StoreState, files: AuthorshipFile[]) {"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"      state.tabAuthorshipInfo.files.splice(0, state.tabAuthorshipInfo.files.length, ...files);"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":"    toggleAuthorshipFileActiveProperty(_, file: AuthorshipFile) {"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"      file.active \u003d !file.active;"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"      file.wasCodeLoaded \u003d file.wasCodeLoaded || file.active;"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"    setAllAuthorshipFileActiveProperty(_, { isActive, files }: { isActive: boolean; files: AuthorshipFile[] }) {"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"      files.forEach((file) \u003d\u003e {"},{"lineNumber":81,"author":{"gitId":"vvidday"},"content":"        file.active \u003d isActive;"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":"        file.wasCodeLoaded \u003d file.wasCodeLoaded || file.active;"},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"      });"},{"lineNumber":84,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  actions: {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    // Actions are called with dispatch"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"vvidday"},"content":"    async incrementLoadingOverlayCountForceReload({ commit }, increment: number) {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      commit(\u0027incrementLoadingOverlayCount\u0027, increment);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      await new Promise(window.requestAnimationFrame);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      await new Promise(window.requestAnimationFrame);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      // Needed as browsers render lazily by default"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      // https://stackoverflow.com/a/44146560"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":97,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"vvidday":49,"ckcherry23":4,"-":44}},{"path":"frontend/src/styles/_utils.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@function validate-map-key($map, $key) {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  @if map-has-key($map, $key) \u003d\u003d false {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    @error \u0027Key `#{$key}` not found\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    @return false;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  @return true;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"@mixin mini-font {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  font-size: .65rem;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  font-weight: normal;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"ckcherry23"},"content":"@mixin small-font {"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"  font-size: .8rem;"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"  font-weight: normal;"},{"lineNumber":17,"author":{"gitId":"ckcherry23"},"content":"}"},{"lineNumber":18,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"@mixin medium-font {"},{"lineNumber":20,"author":{"gitId":"ckcherry23"},"content":"  font-size: .9rem;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  font-weight: normal;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"@mixin large-font {"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"  font-size: 1.2rem;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  font-weight: bold;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"// GitHub\u0027s font family and font size"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"@mixin mono-font {"},{"lineNumber":31,"author":{"gitId":"ckcherry23"},"content":"  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;"},{"lineNumber":32,"author":{"gitId":"ckcherry23"},"content":"  font-size: .75rem;"},{"lineNumber":33,"author":{"gitId":"ckcherry23"},"content":"}"}],"authorContributionMap":{"ckcherry23":13,"-":20}},{"path":"frontend/src/styles/_z-indices.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@import \u0027utils\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"@function z-index($key) {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  @if validate-map-key($z-indices, $key) \u003d\u003d false {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    @return null;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"  $mapVal: map-get($z-indices, $key);"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  @return $mapVal;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"$z-indices: ("},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u0027app-wrapper\u0027: 50,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u0027center-divider\u0027: 100,"},{"lineNumber":15,"author":{"gitId":"ckcherry23"},"content":"  \u0027file-title\u0027: 10,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u0027header\u0027: 100,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u0027loader\u0027: 10,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u0027tooltip\u0027: 100,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u0027max-value\u0027: 250,"},{"lineNumber":20,"author":{"gitId":"-"},"content":");"}],"authorContributionMap":{"ckcherry23":1,"-":19}},{"path":"frontend/src/styles/panels.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@import \u0027colors\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@import \u0027z-indices\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":".panel-padding {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  padding: 2rem 1.5rem 2rem 2.2rem;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"#app-wrapper {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  height: 100vh;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  left: 0;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  top: 0;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  z-index: z-index(\u0027app-wrapper\u0027);"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  #tab-resize {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027black\u0027);"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    cursor: col-resize;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    height: 100%;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    width: 13.250px;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    z-index: z-index(\u0027center-divider\u0027);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  .tab-close {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    cursor: pointer;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    position: relative;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    top: calc(50vh - 3rem);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    z-index: z-index(\u0027center-divider\u0027);"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    svg {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      background-color: mui-color(\u0027grey\u0027, \u0027300\u0027);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027black\u0027);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      padding: 3rem .25rem;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  .left-resize-container {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    flex-grow: 1;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    height: 100%;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    min-width: 0;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  .right-resize-container {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    flex: 0 0 50%;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    height: 100%;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    min-width: 0;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  #tab-resize-guide {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    $tabs-width: 50%;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027black\u0027);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    cursor: col-resize;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    display: none;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    height: 100%;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    position: fixed;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    right: $tabs-width;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    width: 2px;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    z-index: z-index(\u0027center-divider\u0027);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"  #tabs-wrapper {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    height: 100%;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    overflow-y: scroll;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    position: relative;"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    .tab-content {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      display: flex;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"      .tab-pane {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        text-align: left;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        width: 100%;"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"        #tab-empty .title {"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"          @include small-font;"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"          h2 {"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"            @include large-font;"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":"          }"},{"lineNumber":80,"author":{"gitId":"ckcherry23"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":".hash {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  background-color: mui-color(\u0027grey\u0027, \u0027200\u0027);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  border-radius: 5px;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin: 0 5px 5px 0;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  padding: 0 5px;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  span {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    text-align: center;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":".fileTypes {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  margin: 5px 0 5px 0;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  text-align: left;"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  .checkboxes {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    label {"},{"lineNumber":106,"author":{"gitId":"ckcherry23"},"content":"      @include small-font;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      align-items: center;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      border-radius: 5px;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      display: inline-flex;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      margin: 0 5px 5px 0;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      padding: 0 5px;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    span {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      margin-left: .25rem;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":".fileTypeLabel {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  border-radius: 5px;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  margin: 0 5px 5px 0;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  padding: 0 5px;"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"  \u0026.binary {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027white\u0027);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    border: 1px solid mui-color(\u0027grey\u0027, \u0027800\u0027);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027grey\u0027, \u0027800\u0027);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":".toolbar {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  float: right;"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"  \u0026--multiline {"},{"lineNumber":138,"author":{"gitId":"ckcherry23"},"content":"    @include small-font;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    float: right;"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003e a {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      display: block;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      margin: 1px 0;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      text-align: end;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":".sorting {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  margin-top: 1.0rem;"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"  .mui-select {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    cursor: pointer;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    padding-right: 15px;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"  select {"},{"lineNumber":160,"author":{"gitId":"ckcherry23"},"content":"    @include small-font;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"  label {"},{"lineNumber":164,"author":{"gitId":"ckcherry23"},"content":"    @include small-font;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    overflow-y: hidden;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"  \u0026 \u003e label {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    margin-left: 10px;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  span {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    margin-left: .25rem;"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":".panel-title {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  @include large-font;"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  display: inline;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":".panel-heading {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  .group-name {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @include large-font;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    cursor: pointer;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"  .author {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @include medium-font;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    margin-left: .3rem;"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"  .period {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @include medium-font;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    margin-left: 2rem;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ckcherry23":12,"-":185}},{"path":"frontend/src/styles/style.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@import \u0027colors\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@import \u0027z-indices\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"/** global **/"},{"lineNumber":5,"author":{"gitId":"-"},"content":"body {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  font-family: \u0027Titillium Web\u0027, sans-serif;"},{"lineNumber":7,"author":{"gitId":"ckcherry23"},"content":"  @include medium-font;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"vuetemplate {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  display: none;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"a {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"a.broken-link {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  color: black;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  cursor: default;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  text-decoration: none;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"[v-cloak] {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  display: none;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":".wrapper {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":".content {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  max-width: 40rem;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  text-align: left;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":".empty {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  margin: 3rem 5rem;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":".overlay-loader {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":".overlay-loading-icon {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  font-size: 3em;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":".tab-padding {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  padding: 2rem 1.5rem;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":".widget-padding {"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"  padding: .5rem 1rem;"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"}"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":".warn {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  color: mui-color(\u0027red\u0027);"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  .summary-charts__title--contribution {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027black\u0027);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":".tooltip {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  position: relative;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"ckcherry23"},"content":"  %tooltip-tail {"},{"lineNumber":71,"author":{"gitId":"ckcherry23"},"content":"    border-color: mui-color(\u0027black\u0027) transparent transparent transparent;"},{"lineNumber":72,"author":{"gitId":"ckcherry23"},"content":"    border-style: solid;"},{"lineNumber":73,"author":{"gitId":"ckcherry23"},"content":"    border-width: .4rem;"},{"lineNumber":74,"author":{"gitId":"ckcherry23"},"content":"    content: \u0027\u0027;"},{"lineNumber":75,"author":{"gitId":"ckcherry23"},"content":"    left: 50%;"},{"lineNumber":76,"author":{"gitId":"ckcherry23"},"content":"    margin-left: -.4rem;"},{"lineNumber":77,"author":{"gitId":"ckcherry23"},"content":"    position: absolute;"},{"lineNumber":78,"author":{"gitId":"ckcherry23"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  .tooltip-text {"},{"lineNumber":81,"author":{"gitId":"ckcherry23"},"content":"    @include small-font;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    background-color: mui-color(\u0027black\u0027);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    border-radius: .25rem;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    bottom: 125%;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    color: mui-color(\u0027white\u0027);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    left: 50%;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    margin-left: -3.5rem;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    opacity: 0;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    padding: .25rem .5rem;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    position: absolute;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    text-align: center;"},{"lineNumber":92,"author":{"gitId":"ckcherry23"},"content":"    top: auto;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    transition: opacity .3s;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    visibility: hidden;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    width: 6rem;"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"    word-break: normal;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    z-index: z-index(\u0027tooltip\u0027);"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"ckcherry23"},"content":"    \u0026::before {"},{"lineNumber":100,"author":{"gitId":"ckcherry23"},"content":"      border: none;"},{"lineNumber":101,"author":{"gitId":"ckcherry23"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    \u0026::after {"},{"lineNumber":104,"author":{"gitId":"ckcherry23"},"content":"      @extend %tooltip-tail;"},{"lineNumber":105,"author":{"gitId":"ckcherry23"},"content":"      bottom: auto;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      top: 100%;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"ckcherry23"},"content":"    \u0026.bottom-aligned {"},{"lineNumber":110,"author":{"gitId":"ckcherry23"},"content":"      bottom: auto;"},{"lineNumber":111,"author":{"gitId":"ckcherry23"},"content":"      top: 125%;"},{"lineNumber":112,"author":{"gitId":"ckcherry23"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":114,"author":{"gitId":"ckcherry23"},"content":"    \u0026.bottom-aligned::before {"},{"lineNumber":115,"author":{"gitId":"ckcherry23"},"content":"      @extend %tooltip-tail;"},{"lineNumber":116,"author":{"gitId":"ckcherry23"},"content":"      bottom: 100%;"},{"lineNumber":117,"author":{"gitId":"ckcherry23"},"content":"      top: auto;"},{"lineNumber":118,"author":{"gitId":"ckcherry23"},"content":"      transform: rotate(180deg);"},{"lineNumber":119,"author":{"gitId":"ckcherry23"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":121,"author":{"gitId":"ckcherry23"},"content":"    \u0026.bottom-aligned::after {"},{"lineNumber":122,"author":{"gitId":"ckcherry23"},"content":"      border-style: none;"},{"lineNumber":123,"author":{"gitId":"ckcherry23"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u0026.right-aligned {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      @include mini-font;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      bottom: 135%;"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      margin-left: -5.5rem;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u0026.right-aligned:after {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      left: 75%;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      margin-left: -.15rem;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"  \u0026:hover {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    .tooltip-text {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      opacity: 1;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      visibility: visible;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"/** navigation bar **/"},{"lineNumber":146,"author":{"gitId":"-"},"content":"header {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  justify-content: center;"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  position: relative;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  z-index: z-index(\u0027header\u0027);"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"  .content {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    align-items: center;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    display: flex;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    flex-grow: 1;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    justify-content: space-between;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"  .repo,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  .logo {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    margin: 0;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"#file-upload {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"#app-wrapper {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  #summary-wrapper {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    height: 100%;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    overflow-y: scroll;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    text-align: center;"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    .timestamp-footer {"},{"lineNumber":176,"author":{"gitId":"ckcherry23"},"content":"      @include small-font;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027grey\u0027, \u0027700\u0027);"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      margin-bottom: 1em;"},{"lineNumber":179,"author":{"gitId":"-"},"content":"      margin-left: 1em;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    .error-message-box {"},{"lineNumber":183,"author":{"gitId":"ckcherry23"},"content":"      @include small-font;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      background-color: mui-color(\u0027red\u0027, \u0027100\u0027);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      border: .1rem solid mui-color(\u0027red\u0027, \u0027900\u0027);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      border-radius: .25rem;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027red\u0027, \u0027900\u0027);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      margin-bottom: .9rem;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      padding: .9rem;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      text-align: left;"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"      \u0026__close-button {"},{"lineNumber":193,"author":{"gitId":"ckcherry23"},"content":"        @include large-font;"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        cursor: pointer;"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        float: right;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        font-weight: bold;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        line-height: .625rem;"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        \u0026:hover {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"          color: mui-color(\u0027white\u0027);"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"      \u0026__message {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        border-bottom: .1rem solid;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        font-weight: bolder;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        padding-bottom: .5rem;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"      .icon {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        padding-right: .4rem;"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        padding-top: .2rem;"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        width: 1rem;"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"      \u0026__failed-repo {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        .fa-exclamation {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"          @include mini-font;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"        \u0026--name {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"          font-weight: bolder;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"          padding-left: .2rem;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"        \u0026--reason {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"          padding-left: 3rem;"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ckcherry23":39,"MarcusTXK":4,"-":189}},{"path":"frontend/src/styles/summary-chart.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"@import \u0027colors\u0027;"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"@import \u0027z-indices\u0027;"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"/* Summary */"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"#summary {"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"  .summary-status {"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"    text-align: center;"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"  }"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"  @mixin icon-button-config {"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"    color: mui-color(\u0027grey\u0027);"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    padding: 0 1.2px 0 1.2px;"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    text-decoration: none;"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"  }"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"  .icon-button {"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    @include icon-button-config;"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    cursor: pointer;"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"  }"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"  .broken-link {"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    .icon-button {"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"      cursor: default;"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"  .summary-picker {"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    align-items: center;"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    display: flex;"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    flex-flow: row wrap;"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    justify-content: center;"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    margin-bottom: 2rem;"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    \u0026__section {"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"      align-items: inherit;"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"      display: flex;"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"      flex: 0 1 auto;"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"      flex-flow: inherit;"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"      justify-content: inherit;"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    \u0026__checkboxes {"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"      label {"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        margin-left: .5rem;"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"      span {"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        margin-left: .25rem;"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    .mui-textfield,"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"    .mui-select {"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"      @include small-font;"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"      margin: .5rem;"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"      padding-right: 10px;"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"    .mui-btn {"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"      @include small-font;"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"      background: transparent;"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"      box-shadow: none;"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"      color: mui-color(\u0027grey\u0027);"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"      font-weight: bold;"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"      left: -8px;"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"      margin: 0;"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"      padding: 0;"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"      vertical-align: middle;"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"    .search_box {"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"      align-items: center;"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"      display: flex;"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"    input {"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"      @include small-font;"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"      padding-right: 10px;"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"    label {"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"      @include small-font;"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"      overflow-y: hidden;"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"      text-align: left;"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"      width: fit-content;"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"    input,"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"    select {"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"      @include small-font;"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"  }"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"  .summary-charts {"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"    margin-bottom: 1.4rem;"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"    \u0026__title {"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"      align-items: center;"},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"      display: flex;"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"      font-weight: bold;"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"      text-align: left;"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"      \u0026 \u003e * {"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"        padding-right: .5rem;"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"      \u0026--index {"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"        background: mui-color(\u0027black\u0027);"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"        color: mui-color(\u0027white\u0027);"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"        @include medium-font;"},{"lineNumber":111,"author":{"gitId":"MarcusTXK"},"content":"        overflow: hidden;"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"        padding: .1em .25em;"},{"lineNumber":113,"author":{"gitId":"MarcusTXK"},"content":"        vertical-align: middle;"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":115,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":116,"author":{"gitId":"MarcusTXK"},"content":"      \u0026--groupname {"},{"lineNumber":117,"author":{"gitId":"MarcusTXK"},"content":"        @include medium-font;"},{"lineNumber":118,"author":{"gitId":"MarcusTXK"},"content":"        padding: .5rem;"},{"lineNumber":119,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":120,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":121,"author":{"gitId":"MarcusTXK"},"content":"      \u0026--percentile {"},{"lineNumber":122,"author":{"gitId":"MarcusTXK"},"content":"        @include mini-font;"},{"lineNumber":123,"author":{"gitId":"MarcusTXK"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":124,"author":{"gitId":"MarcusTXK"},"content":"        margin-left: auto;"},{"lineNumber":125,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":126,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":127,"author":{"gitId":"MarcusTXK"},"content":"      \u0026--contribution {"},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"        @include mini-font;"},{"lineNumber":129,"author":{"gitId":"MarcusTXK"},"content":"        display: inline;"},{"lineNumber":130,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":131,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":133,"author":{"gitId":"MarcusTXK"},"content":"    \u0026__fileType--breakdown {"},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"      overflow-y: hidden;"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"      \u0026__legend {"},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":"        @include small-font;"},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"        display: inline;"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"        float: left;"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"MarcusTXK"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"  .summary-chart {"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":"    display: inline-block;"},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"    margin-bottom: 1rem;"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"    position: relative;"},{"lineNumber":148,"author":{"gitId":"MarcusTXK"},"content":"    text-align: left;"},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"    width: 100%;"},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"    \u0026__title {"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"      align-items: center;"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":"      clear: left;"},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":"      display: flex;"},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"      \u0026 \u003e * {"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":"        padding-right: .5rem;"},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":159,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":"      \u0026--index {"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":"        margin-left: 3px;"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":163,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":164,"author":{"gitId":"MarcusTXK"},"content":"      \u0026--repo {"},{"lineNumber":165,"author":{"gitId":"MarcusTXK"},"content":"        font-weight: bold;"},{"lineNumber":166,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":168,"author":{"gitId":"MarcusTXK"},"content":"      \u0026--index::after {"},{"lineNumber":169,"author":{"gitId":"MarcusTXK"},"content":"        content: \u0027.\u0027;"},{"lineNumber":170,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":171,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":172,"author":{"gitId":"MarcusTXK"},"content":"      \u0026--repo {"},{"lineNumber":173,"author":{"gitId":"MarcusTXK"},"content":"        padding-right: .25rem;"},{"lineNumber":174,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":175,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":176,"author":{"gitId":"MarcusTXK"},"content":"      \u0026--contribution {"},{"lineNumber":177,"author":{"gitId":"MarcusTXK"},"content":"        @include mini-font;"},{"lineNumber":178,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":179,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":180,"author":{"gitId":"MarcusTXK"},"content":"      \u0026--percentile {"},{"lineNumber":181,"author":{"gitId":"MarcusTXK"},"content":"        @include mini-font;"},{"lineNumber":182,"author":{"gitId":"MarcusTXK"},"content":"        color: mui-color(\u0027grey\u0027);"},{"lineNumber":183,"author":{"gitId":"MarcusTXK"},"content":"        margin-left: auto;"},{"lineNumber":184,"author":{"gitId":"MarcusTXK"},"content":"        padding-right: 0;"},{"lineNumber":185,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":186,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":188,"author":{"gitId":"MarcusTXK"},"content":"    \u0026__ramp {"},{"lineNumber":189,"author":{"gitId":"MarcusTXK"},"content":"      position: relative;"},{"lineNumber":190,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":191,"author":{"gitId":"MarcusTXK"},"content":"      .overlay {"},{"lineNumber":192,"author":{"gitId":"MarcusTXK"},"content":"        height: 100%;"},{"lineNumber":193,"author":{"gitId":"MarcusTXK"},"content":"        position: absolute;"},{"lineNumber":194,"author":{"gitId":"MarcusTXK"},"content":"        top: 0;"},{"lineNumber":195,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":196,"author":{"gitId":"MarcusTXK"},"content":"        \u0026.show {"},{"lineNumber":197,"author":{"gitId":"MarcusTXK"},"content":"          background-color: rgba(mui-color(\u0027white\u0027), .5);"},{"lineNumber":198,"author":{"gitId":"MarcusTXK"},"content":"          border: 1px dashed mui-color(\u0027black\u0027);"},{"lineNumber":199,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":201,"author":{"gitId":"MarcusTXK"},"content":"        \u0026.edge {"},{"lineNumber":202,"author":{"gitId":"MarcusTXK"},"content":"          border-right: 1px dashed mui-color(\u0027black\u0027);"},{"lineNumber":203,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":205,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"MarcusTXK"},"content":"  }"},{"lineNumber":207,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":208,"author":{"gitId":"MarcusTXK"},"content":"  .active-icon {"},{"lineNumber":209,"author":{"gitId":"MarcusTXK"},"content":"    background-color: mui-color(\u0027green\u0027);"},{"lineNumber":210,"author":{"gitId":"MarcusTXK"},"content":"    border-radius: 2px;"},{"lineNumber":211,"author":{"gitId":"MarcusTXK"},"content":"    color: mui-color(\u0027white\u0027);"},{"lineNumber":212,"author":{"gitId":"MarcusTXK"},"content":"  }"},{"lineNumber":213,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":214,"author":{"gitId":"MarcusTXK"},"content":"  .active-background {"},{"lineNumber":215,"author":{"gitId":"MarcusTXK"},"content":"    background-color: mui-color(\u0027yellow\u0027, \u0027200\u0027);"},{"lineNumber":216,"author":{"gitId":"MarcusTXK"},"content":"  }"},{"lineNumber":217,"author":{"gitId":"MarcusTXK"},"content":"}"}],"authorContributionMap":{"MarcusTXK":217}},{"path":"frontend/src/types/authorship.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"export enum FilesSortType {"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"  LinesOfCode \u003d \u0027linesOfCode\u0027,"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"  Path \u003d \u0027path\u0027,"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  FileName \u003d \u0027fileName\u0027,"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"  FileType \u003d \u0027fileType\u0027,"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"export enum FilterType {"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"  Checkboxes \u003d \u0027checkboxes\u0027,"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"  Search \u003d \u0027search\u0027,"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"}"}],"authorContributionMap":{"vvidday":11}},{"path":"frontend/src/types/summary.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"export enum FilterGroupSelection {"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"  GroupByNone \u003d \u0027groupByNone\u0027,"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"  GroupByRepos \u003d \u0027groupByRepos\u0027,"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  GroupByAuthors \u003d \u0027groupByAuthors\u0027,"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"export enum SortGroupSelection {"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"  GroupTitle \u003d \u0027groupTitle\u0027,"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"  GroupTitleDsc \u003d \u0027groupTitle dsc\u0027,"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"  TotalCommits \u003d \u0027totalCommits\u0027,"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"  TotalCommitsDsc \u003d \u0027totalCommits dsc\u0027,"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"  Variance \u003d \u0027variance\u0027,"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"  VarianceDsc \u003d \u0027variance dsc\u0027,"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"export enum SortWithinGroupSelection {"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"  Title \u003d \u0027title\u0027,"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"  TitleDsc \u003d \u0027title dsc\u0027,"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"  TotalCommits \u003d \u0027totalCommits\u0027,"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"  TotalCommitsDsc \u003d \u0027totalCommits dsc\u0027,"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"  Variance \u003d \u0027variance\u0027,"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"  VarianceDsc \u003d \u0027variance dsc\u0027,"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"export enum FilterTimeFrame {"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"  Commit \u003d \u0027commit\u0027,"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"  Day \u003d \u0027day\u0027,"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"  Week \u003d \u0027week\u0027,"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"}"}],"authorContributionMap":{"vvidday":29}},{"path":"frontend/src/types/types.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import { FileResult } from \u0027./zod/authorship-type\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"  AuthorFileTypeContributions,"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  CommitResultRaw,"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"  Commits,"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"} from \u0027./zod/commits-type\u0027;"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import { RepoRaw } from \u0027./zod/summary-type\u0027;"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"// We add these three fields in setContributionOfCommitResultsAndInsertRepoId of utils/api.ts"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"export interface CommitResult extends CommitResultRaw {"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"  repoId: string;"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"  insertions: number;"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"  deletions: number;"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"  isOpen?: boolean;"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"// Similar to AuthorDailyContributions, but uses the updated CommitResult with the three new fields"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"export interface DailyCommit {"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"  commitResults: CommitResult[];"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"  date: string;"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":23,"author":{"gitId":"ckcherry23"},"content":"export interface WeeklyCommit {"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"  commitResults: CommitResult[];"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"  date: string;"},{"lineNumber":26,"author":{"gitId":"ckcherry23"},"content":"  endDate: string;"},{"lineNumber":27,"author":{"gitId":"ckcherry23"},"content":"}"},{"lineNumber":28,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"// Similar to DailyCommit, but contains the total insertions and deletions for all CommitResults"},{"lineNumber":30,"author":{"gitId":"ckcherry23"},"content":"export interface Commit extends DailyCommit, WeeklyCommit {"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"  deletions: number;"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"  insertions: number;"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"// This type predicate distinguishes between Commit and DailyCommit"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"// https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"export function isCommit(commit: Commit | DailyCommit): commit is Commit {"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"  return (commit as Commit).deletions !\u003d\u003d undefined;"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"export interface User {"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"  checkedFileTypeContribution: number | undefined;"},{"lineNumber":43,"author":{"gitId":"ckcherry23"},"content":"  commits: Commit[];"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"  dailyCommits: DailyCommit[];"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"  displayName: string;"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"  fileTypeContribution: AuthorFileTypeContributions;"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"  location: string;"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"  name: string;"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"  repoId: string;"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"  repoName: string;"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"  searchPath: string;"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"  variance: number;"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"// We add these three fields in loadCommits and loadAuthorship of utils/api.ts"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"export interface Repo extends RepoRaw {"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"  commits?: Commits;"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"  files?: FileResult[];"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"  users?: User[];"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"export interface AuthorshipFileSegment {"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"  knownAuthor: string | null;"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"  lineNumbers: number[];"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"  lines: string[];"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"export interface AuthorshipFile {"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"  active: boolean;"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"  blankLineCount?: number;"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"  charCount?: number;"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"  fileType: string;"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"  isBinary: boolean;"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"  isIgnored: boolean;"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":"  lineCount: number;"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"  path: string;"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"  segments?: AuthorshipFileSegment[];"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"  wasCodeLoaded: boolean;"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"export interface Bar {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  width: number;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  color?: string;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  tooltipText?: string;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"vvidday":70,"ckcherry23":8,"MarcusTXK":1,"-":6}},{"path":"frontend/src/types/vuex.d.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import { Store } from \u0027vuex\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AuthorshipFile, User } from \u0027./types\u0027;"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"interface AuthorshipInfo {"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"  author: string;"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"  checkedFileTypes?: string[];"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"  files: AuthorshipFile[];"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"  isMergeGroup: boolean;"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"  isRefresh?: boolean;"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"  location: string | undefined;"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"  maxDate: string;"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"  minDate: string;"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"  name?: string;"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"  repo: string;"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"interface ZoomInfo {"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"  isRefreshing?: boolean;"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"  zAuthor: string;"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"  zAvgCommitSize: number | string;"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"  zFileTypeColors?: { [key: string]: string };"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"  zFilterGroup: string;"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"  zFilterSearch: string;"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"  zFromRamp: boolean;"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"  zIsMerged: boolean;"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"  zLocation?: string | undefined;"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"  zRepo: string;"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"  zSince: string;"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"  zTimeFrame: string;"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"  zUntil: string;"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"  zUser?: User;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  zAvgContributionSize?: number;"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"interface SummaryDates {"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"  since: string;"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"  until: string;"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"interface StoreState {"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"  tabAuthorshipInfo: AuthorshipInfo;"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"  tabZoomInfo: ZoomInfo;"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"  summaryDates: SummaryDates;"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"  mergedGroups: string[];"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"  fileTypeColors: { [key: string]: string };"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"  tabAuthorColors: { [key: string]: string };"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"  loadingOverlayCount: number;"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"  loadingOverlayMessage: string;"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"  isTabActive: boolean;"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"declare module \u0027@vue/runtime-core\u0027 {"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"  // eslint-disable-next-line @typescript-eslint/no-empty-interface"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"  interface State extends StoreState {"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"  interface ComponentCustomProperties {"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"    $store: Store\u003cState\u003e;"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"  }"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"}"}],"authorContributionMap":{"vvidday":56,"ckcherry23":1,"-":2}},{"path":"frontend/src/types/window.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import JSZip from \u0027jszip\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Repo, User } from \u0027./types\u0027;"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import { AuthorshipSchema } from \u0027./zod/authorship-type\u0027;"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import { AuthorDailyContributions } from \u0027./zod/commits-type\u0027;"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import { DomainUrlMap, ErrorMessage } from \u0027./zod/summary-type\u0027;"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"// Declares the types for all the global variables under the window object"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"export {};"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"interface ComparatorFunction\u003cT\u003e {"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"  (a: T, b: T): -1 | 0 | 1;"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"type ComparablePrimitive \u003d string | number;"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"interface SortingFunction\u003cT\u003e {"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"  (item: T, sortingOption?: string): ComparablePrimitive;"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"interface Api {"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"  loadJSON: (fname: string) \u003d\u003e Promise\u003cunknown\u003e;"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"  loadSummary: () \u003d\u003e Promise\u003c{"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"    creationDate: string;"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"    reportGenerationTime: string;"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"    errorMessages: { [key: string]: ErrorMessage };"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"    names: string[];"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"  } | null\u003e;"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"  loadCommits: (repoName: string) \u003d\u003e Promise\u003cUser[]\u003e;"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"  loadAuthorship: (repoName: string) \u003d\u003e Promise\u003cAuthorshipSchema\u003e;"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"  setContributionOfCommitResultsAndInsertRepoId: (dailyCommits: AuthorDailyContributions[], repoId: string) \u003d\u003e void;"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"}"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"declare global {"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"  interface Window {"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"    $: (id: string) \u003d\u003e HTMLElement | null;"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"    enquery: (key: string, val: string) \u003d\u003e string;"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"    REPOSENSE_REPO_URL: string;"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"    HOME_PAGE_URL: string;"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"    UNSUPPORTED_INDICATOR: string;"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"    DAY_IN_MS: number;"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"    HASH_DELIMITER: string;"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"    REPOS: { [key: string]: Repo };"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"    hashParams: { [key: string]: string };"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"    isMacintosh: boolean;"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"    REPORT_ZIP: JSZip | null;"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"    deactivateAllOverlays: () \u003d\u003e void;"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"    getDateStr: (date: number) \u003d\u003e string;"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"    getHexToRGB: (color: string) \u003d\u003e number[];"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"    getFontColor: (color: string) \u003d\u003e string;"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"    addHash: (newKey: string, newVal: string | boolean) \u003d\u003e void;"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"    removeHash: (key: string) \u003d\u003e void;"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"    encodeHash: () \u003d\u003e void;"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"    decodeHash: () \u003d\u003e void;"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"    comparator: \u003cT\u003e (fn: SortingFunction\u003cT\u003e, sortingOption?: string) \u003d\u003e ComparatorFunction\u003cT\u003e;"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"    filterUnsupported: (string: string) \u003d\u003e string | undefined;"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"    getAuthorLink: (repoId: string, author: string) \u003d\u003e string | undefined;"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"    getRepoLinkUnfiltered: (repoId: string) \u003d\u003e string;"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"    getRepoLink: (repoId: string) \u003d\u003e string | undefined;"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"    getBranchLink: (repoId: string, branch: string) \u003d\u003e string | undefined;"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"    getCommitLink: (repoId: string, commitHash: string) \u003d\u003e string | undefined;"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"    getBlameLink: (repoId: string, branch: string, filepath: string) \u003d\u003e string | undefined;"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"    getHistoryLink: (repoId: string, branch: string, filepath: string) \u003d\u003e string | undefined;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    getGroupName: (group: User[], filterGroupSelection: string) \u003d\u003e string;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    getAuthorDisplayName: (authorRepos: User[]) \u003d\u003e string;"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"    api: Api;"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"    sinceDate: string;"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"    untilDate: string;"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"    repoSenseVersion: string;"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"    isSinceDateProvided: boolean;"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"    isUntilDateProvided: boolean;"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"    DOMAIN_URL_MAP: DomainUrlMap;"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"    // eslint-disable-next-line  @typescript-eslint/no-explicit-any"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"    app: any;"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":"}"}],"authorContributionMap":{"vvidday":72,"-":3}},{"path":"frontend/src/types/zod/authorship-type.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import { z } from \u0027zod\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"const lineSchema \u003d z.object({"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  lineNumber: z.number(),"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"  author: z.object({ gitId: z.string() }),"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"  content: z.string(),"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"const fileResult \u003d z.object({"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"  path: z.string(),"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"  fileType: z.string(),"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"  lines: z.array(lineSchema),"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"  authorContributionMap: z.record(z.number()),"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"  isBinary: z.boolean().optional(),"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"  isIgnored: z.boolean().optional(),"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"// Contains the zod validation schema for the authorship.json file"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"export const authorshipSchema \u003d z.array(fileResult);"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"// Export typescript types"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"export type AuthorshipSchema \u003d z.infer\u003ctypeof authorshipSchema\u003e;"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"export type FileResult \u003d z.infer\u003ctypeof fileResult\u003e;"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"export type Line \u003d z.infer\u003ctypeof lineSchema\u003e;"}],"authorContributionMap":{"vvidday":25}},{"path":"frontend/src/types/zod/commits-type.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import { z } from \u0027zod\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"const fileTypesAndContributionSchema \u003d z.object({"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  insertions: z.number(),"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"  deletions: z.number(),"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"const commitResult \u003d z.object({"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"  hash: z.string(),"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"  messageTitle: z.string(),"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"  messageBody: z.string(),"},{"lineNumber":12,"author":{"gitId":"ckcherry23"},"content":"  isMergeCommit: z.boolean(),"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"  tags: z.array(z.string()).optional(),"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"  fileTypesAndContributionMap: z.record(fileTypesAndContributionSchema),"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"const authorDailyContributionsSchema \u003d z.object({"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"  date: z.string(),"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"  commitResults: z.array(commitResult),"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"const authorFileTypeContributionsSchema \u003d z.record(z.number());"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"// Contains the zod validation schema for the commits.json file"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"export const commitsSchema \u003d z.object({"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"  authorDailyContributionsMap: z.record(z.array(authorDailyContributionsSchema)),"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"  authorFileTypeContributionMap: z.record(authorFileTypeContributionsSchema),"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"  authorContributionVariance: z.record(z.number()),"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"  authorDisplayNameMap: z.record(z.string()),"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"// Export typescript types"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"export type Commits \u003d z.infer\u003ctypeof commitsSchema\u003e;"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"export type CommitResultRaw \u003d z.infer\u003ctypeof commitResult\u003e;"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"export type AuthorDailyContributions \u003d z.infer\u003ctypeof authorDailyContributionsSchema\u003e;"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"export type AuthorFileTypeContributions \u003d z.infer\u003ctypeof authorFileTypeContributionsSchema\u003e;"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"export type FileTypeAndContribution \u003d z.infer\u003ctypeof fileTypesAndContributionSchema\u003e;"}],"authorContributionMap":{"vvidday":37,"ckcherry23":1}},{"path":"frontend/src/types/zod/summary-type.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"import { z } from \u0027zod\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"const locationSchema \u003d z.object({"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"  location: z.string(),"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"  repoName: z.string(),"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"  organization: z.string(),"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"  domainName: z.string(),"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"const repoSchema \u003d z.object({"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"  location: locationSchema,"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"  branch: z.string(),"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"  displayName: z.string(),"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"  outputFolderName: z.string(),"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"const errorSchema \u003d z.object({"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"  repoName: z.string(),"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"  errorMessage: z.string(),"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"const urlSchema \u003d z.object({"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"  BASE_URL: z.string(),"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"  BLAME_PATH: z.string(),"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"  BRANCH: z.string(),"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"  COMMIT_PATH: z.string(),"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"  HISTORY_PATH: z.string(),"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"  REPO_URL: z.string(),"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"const supportedDomainUrlMapSchema \u003d z.record(urlSchema);"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"// Contains the zod validation schema for the summary.json file"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"export const summarySchema \u003d z.object({"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"  repoSenseVersion: z.string(),"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"  reportGeneratedTime: z.string(),"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"  reportGenerationTime: z.string(),"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"  zoneId: z.string(),"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"  reportTitle: z.string(),"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"  repos: z.array(repoSchema),"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"  errorSet: z.array(errorSchema),"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"  sinceDate: z.string(),"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"  untilDate: z.string(),"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"  isSinceDateProvided: z.boolean(),"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"  isUntilDateProvided: z.boolean(),"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"  supportedDomainUrlMap: supportedDomainUrlMapSchema,"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"// Export typescript types"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"export type DomainUrlMap \u003d z.infer\u003ctypeof supportedDomainUrlMapSchema\u003e;"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"export type RepoRaw \u003d z.infer\u003ctypeof repoSchema\u003e;"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"export type ErrorMessage \u003d z.infer\u003ctypeof errorSchema\u003e;"}],"authorContributionMap":{"vvidday":53}},{"path":"frontend/src/types/zoom.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"ckcherry23"},"content":"enum CommitsSortType {"},{"lineNumber":2,"author":{"gitId":"ckcherry23"},"content":"  Time \u003d \u0027time\u0027,"},{"lineNumber":3,"author":{"gitId":"ckcherry23"},"content":"  Loc \u003d \u0027linesOfCode\u0027,"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"}"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":6,"author":{"gitId":"ckcherry23"},"content":"export default CommitsSortType;"}],"authorContributionMap":{"ckcherry23":6}},{"path":"frontend/src/utils/api.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DailyCommit, CommitResult, User } from \u0027../types/types\u0027;"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"import { authorshipSchema } from \u0027../types/zod/authorship-type\u0027;"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import { commitsSchema } from \u0027../types/zod/commits-type\u0027;"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import { ErrorMessage, summarySchema } from \u0027../types/zod/summary-type\u0027;"},{"lineNumber":5,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"// utility functions //"},{"lineNumber":7,"author":{"gitId":"-"},"content":"window.$ \u003d (id) \u003d\u003e document.getElementById(id);"},{"lineNumber":8,"author":{"gitId":"-"},"content":"window.enquery \u003d (key, val) \u003d\u003e `${key}\u003d${encodeURIComponent(val)}`;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"window.REPOSENSE_REPO_URL \u003d \u0027https://github.com/reposense/RepoSense\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"window.HOME_PAGE_URL \u003d \u0027https://reposense.org\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"window.UNSUPPORTED_INDICATOR \u003d \u0027UNSUPPORTED\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"window.DAY_IN_MS \u003d (1000 * 60 * 60 * 24);"},{"lineNumber":13,"author":{"gitId":"-"},"content":"window.HASH_DELIMITER \u003d \u0027~\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"window.REPOS \u003d {};"},{"lineNumber":15,"author":{"gitId":"-"},"content":"window.hashParams \u003d {};"},{"lineNumber":16,"author":{"gitId":"-"},"content":"window.isMacintosh \u003d navigator.platform.includes(\u0027Mac\u0027);"},{"lineNumber":17,"author":{"gitId":"-"},"content":"window.REPORT_ZIP \u003d null;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"const HASH_ANCHOR \u003d \u0027?\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"const REPORT_DIR \u003d \u0027.\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"window.deactivateAllOverlays \u003d function deactivateAllOverlays() {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  document.querySelectorAll(\u0027.summary-chart__ramp .overlay\u0027)"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    .forEach((x) \u003d\u003e {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      x.className \u003d \u0027overlay\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":27,"author":{"gitId":"-"},"content":"};"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"window.getDateStr \u003d function getDateStr(date) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  return (new Date(date)).toISOString().split(\u0027T\u0027)[0];"},{"lineNumber":31,"author":{"gitId":"-"},"content":"};"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"window.getHexToRGB \u003d function getHexToRGB(color) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  // to convert color from hex code to rgb format"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  const arr \u003d /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"  return arr ? arr.slice(1).map((val) \u003d\u003e parseInt(val, 16)) : [];"},{"lineNumber":37,"author":{"gitId":"-"},"content":"};"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"window.getFontColor \u003d function getFontColor(color) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  const result \u003d window.getHexToRGB(color);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  const red \u003d result[0];"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  const green \u003d result[1];"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  const blue \u003d result[2];"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  const luminosity \u003d 0.2126 * red + 0.7152 * green + 0.0722 * blue; // per ITU-R BT.709"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  return luminosity \u003c 120 ? \u0027#ffffff\u0027 : \u0027#000000\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"};"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"window.addHash \u003d function addHash(newKey, newVal) {"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"  window.hashParams[newKey] \u003d newVal.toString();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"};"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"window.removeHash \u003d function removeHash(key) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  delete window.hashParams[key];"},{"lineNumber":56,"author":{"gitId":"-"},"content":"};"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"window.encodeHash \u003d function encodeHash() {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  const { hashParams } \u003d window;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  const hash \u003d Object.keys(hashParams)"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    .map((key) \u003d\u003e `${key}\u003d${encodeURIComponent(hashParams[key])}`)"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    .join(\u0027\u0026\u0027);"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"  const newUrl \u003d `${window.location.protocol}//${window.location.host}${window.location.pathname}${HASH_ANCHOR}${hash}`;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  window.history.replaceState(null, \u0027\u0027, newUrl);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"};"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"window.decodeHash \u003d function decodeHash() {"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"  const hashParams: { [key: string]: string } \u003d {};"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  const hashIndex \u003d window.location.href.indexOf(HASH_ANCHOR);"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  // split by # to remove \"#/\" string at the end of URLs generated by Vue Hash Router"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  const parameterString \u003d hashIndex \u003d\u003d\u003d -1 ? \u0027\u0027 : window.location.href.slice(hashIndex + 1).split(\u0027#\u0027)[0];"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  parameterString.split(\u0027\u0026\u0027)"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    .forEach((param) \u003d\u003e {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      const [key, val] \u003d param.split(\u0027\u003d\u0027);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      if (key) {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        hashParams[key] \u003d decodeURIComponent(val);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  window.hashParams \u003d hashParams;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"};"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"window.comparator \u003d (fn, sortingOption \u003d \u0027\u0027) \u003d\u003e function compare(a, b) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  let a1;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  let b1;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  if (sortingOption) {"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"    a1 \u003d fn(a, sortingOption);"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"    b1 \u003d fn(b, sortingOption);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  } else {"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":"    a1 \u003d fn(a);"},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":"    b1 \u003d fn(b);"},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"  if (typeof a1 \u003d\u003d\u003d \u0027string\u0027) {"},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":"    a1 \u003d a1.toLowerCase();"},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"  }"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":"  if (typeof b1 \u003d\u003d\u003d \u0027string\u0027) {"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"    b1 \u003d b1.toLowerCase();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  if (a1 \u003d\u003d\u003d b1) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    return 0;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  } if (a1 \u003c b1) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    return -1;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  return 1;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"};"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"window.filterUnsupported \u003d function filterUnsupported(string) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  // checks for a pre-defined unsupported tag"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  return string.includes(window.UNSUPPORTED_INDICATOR) ? undefined : string;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"};"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"window.getAuthorLink \u003d function getAuthorLink(repoId, author) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  const domainName \u003d window.REPOS[repoId].location.domainName;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  return window.filterUnsupported(`${window.DOMAIN_URL_MAP[domainName].BASE_URL}${author}`);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"};"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"window.getRepoLinkUnfiltered \u003d function getRepoLink(repoId) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  // abstraction for repo link construction. Not supposed to be used by other files"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  const domainName \u003d window.REPOS[repoId].location.domainName;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  return window.DOMAIN_URL_MAP[domainName].REPO_URL"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    .replace(\u0027$ORGANIZATION\u0027, window.REPOS[repoId].location.organization)"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    .replace(\u0027$REPO_NAME\u0027, window.REPOS[repoId].location.repoName);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"};"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"window.getRepoLink \u003d function getRepoLink(repoId) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  return window.filterUnsupported(window.getRepoLinkUnfiltered(repoId));"},{"lineNumber":131,"author":{"gitId":"-"},"content":"};"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"window.getBranchLink \u003d function getBranchLink(repoId, branch) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  const domainName \u003d window.REPOS[repoId].location.domainName;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  return window.filterUnsupported(`${window.getRepoLinkUnfiltered(repoId)}${window.DOMAIN_URL_MAP[domainName].BRANCH}`"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    .replace(\u0027$BRANCH\u0027, branch));"},{"lineNumber":137,"author":{"gitId":"-"},"content":"};"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"window.getCommitLink \u003d function getCommitLink(repoId, commitHash) {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  const domainName \u003d window.REPOS[repoId].location.domainName;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  return window.filterUnsupported(`${window.getRepoLinkUnfiltered(repoId)}${window.DOMAIN_URL_MAP[domainName]"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    .COMMIT_PATH}`"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    .replace(\u0027$COMMIT_HASH\u0027, commitHash));"},{"lineNumber":144,"author":{"gitId":"-"},"content":"};"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"window.getBlameLink \u003d function getBlameLink(repoId, branch, filepath) {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  const domainName \u003d window.REPOS[repoId].location.domainName;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  return window.filterUnsupported(`${window.getRepoLinkUnfiltered(repoId)}${window.DOMAIN_URL_MAP[domainName]"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    .BLAME_PATH}`"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    .replace(\u0027$BRANCH\u0027, branch)"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    .replace(\u0027$FILE_PATH\u0027, filepath));"},{"lineNumber":152,"author":{"gitId":"-"},"content":"};"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"window.getHistoryLink \u003d function getHistoryLink(repoId, branch, filepath) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  const domainName \u003d window.REPOS[repoId].location.domainName;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  return window.filterUnsupported(`${window.getRepoLinkUnfiltered(repoId)}${window.DOMAIN_URL_MAP[domainName]"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    .HISTORY_PATH}`"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    .replace(\u0027$BRANCH\u0027, branch)"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    .replace(\u0027$FILE_PATH\u0027, filepath));"},{"lineNumber":160,"author":{"gitId":"-"},"content":"};"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"window.getGroupName \u003d function getGroupName(group, filterGroupSelection) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  switch (filterGroupSelection) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  case \u0027groupByRepos\u0027:"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    return group[0].repoName;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  case \u0027groupByAuthors\u0027:"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    return group[0].name;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  default:"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    return \u0027\u0027;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"};"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"window.getAuthorDisplayName \u003d function getAuthorDisplayName(authorRepos) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  return authorRepos.reduce((displayName, user) \u003d\u003e ("},{"lineNumber":175,"author":{"gitId":"-"},"content":"    user.displayName \u003e displayName ? user.displayName : displayName"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  ), authorRepos[0].displayName);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"};"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"window.api \u003d {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  async loadJSON(fname) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    if (window.REPORT_ZIP) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      const zipObject \u003d window.REPORT_ZIP.file(fname);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      if (zipObject) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"          return JSON.parse(await zipObject.async(\u0027text\u0027));"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        } catch (e) {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"          throw new Error(\u0027Uploaded JSON is invalid.\u0027);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        throw new Error(\u0027Uploaded zip file is invalid.\u0027);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    try {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      const response \u003d await fetch(`${REPORT_DIR}/${fname}`);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      // Not directly returned in case response is not actually json."},{"lineNumber":196,"author":{"gitId":"-"},"content":"      const json \u003d await response.json();"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      return json;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    } catch (e) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      throw new Error(`Unable to read ${fname}.`);"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  async loadSummary() {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    window.REPOS \u003d {};"},{"lineNumber":204,"author":{"gitId":"vvidday"},"content":"    let data;"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {"},{"lineNumber":206,"author":{"gitId":"vvidday"},"content":"      const json \u003d await this.loadJSON(\u0027summary.json\u0027);"},{"lineNumber":207,"author":{"gitId":"vvidday"},"content":"      data \u003d summarySchema.parse(json);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    } catch (error) {"},{"lineNumber":209,"author":{"gitId":"vvidday"},"content":"      if (error instanceof Error \u0026\u0026 error.message \u003d\u003d\u003d \u0027Unable to read summary.json.\u0027) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      throw error;"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    const { reportGeneratedTime, reportGenerationTime } \u003d data;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    window.sinceDate \u003d data.sinceDate;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    window.untilDate \u003d data.untilDate;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    window.repoSenseVersion \u003d data.repoSenseVersion;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    window.isSinceDateProvided \u003d data.isSinceDateProvided;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    window.isUntilDateProvided \u003d data.isUntilDateProvided;"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    document.title \u003d data.reportTitle || document.title;"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"vvidday"},"content":"    const errorMessages: { [key: string]: ErrorMessage } \u003d {};"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    Object.entries(data.errorSet).forEach(([repoName, message]) \u003d\u003e {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      errorMessages[repoName] \u003d message;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"    window.DOMAIN_URL_MAP \u003d data.supportedDomainUrlMap;"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"vvidday"},"content":"    const names: string[] \u003d [];"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    data.repos.forEach((repo) \u003d\u003e {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      const repoName \u003d `${repo.displayName}`;"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      window.REPOS[repoName] \u003d repo;"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      names.push(repoName);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      creationDate: reportGeneratedTime,"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      reportGenerationTime,"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      errorMessages,"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      names,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"  async loadCommits(repoName) {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    const folderName \u003d window.REPOS[repoName].outputFolderName;"},{"lineNumber":245,"author":{"gitId":"vvidday"},"content":"    const json \u003d await this.loadJSON(`${folderName}/commits.json`);"},{"lineNumber":246,"author":{"gitId":"vvidday"},"content":"    const commits \u003d commitsSchema.parse(json);"},{"lineNumber":247,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":248,"author":{"gitId":"vvidday"},"content":"    const res: User[] \u003d [];"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    const repo \u003d window.REPOS[repoName];"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"    Object.keys(commits.authorDisplayNameMap).forEach((author) \u003d\u003e {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      if (author) {"},{"lineNumber":253,"author":{"gitId":"vvidday"},"content":"        this.setContributionOfCommitResultsAndInsertRepoId(commits.authorDailyContributionsMap[author], repoName);"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"        const searchParams \u003d ["},{"lineNumber":256,"author":{"gitId":"-"},"content":"          repo.displayName,"},{"lineNumber":257,"author":{"gitId":"vvidday"},"content":"          commits.authorDisplayNameMap[author],"},{"lineNumber":258,"author":{"gitId":"vvidday"},"content":"          author,"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        ];"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"vvidday"},"content":"        // commits and checkedFileTypeContribution are set in c-summary"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        const user: User \u003d {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"          name: author,"},{"lineNumber":264,"author":{"gitId":"-"},"content":"          repoId: repoName,"},{"lineNumber":265,"author":{"gitId":"-"},"content":"          variance: commits.authorContributionVariance[author],"},{"lineNumber":266,"author":{"gitId":"-"},"content":"          displayName: commits.authorDisplayNameMap[author],"},{"lineNumber":267,"author":{"gitId":"vvidday"},"content":"          commits: [],"},{"lineNumber":268,"author":{"gitId":"vvidday"},"content":"          dailyCommits: commits.authorDailyContributionsMap[author] as DailyCommit[],"},{"lineNumber":269,"author":{"gitId":"-"},"content":"          fileTypeContribution: commits.authorFileTypeContributionMap[author],"},{"lineNumber":270,"author":{"gitId":"vvidday"},"content":"          searchPath: searchParams.join(\u0027_\u0027).toLowerCase(),"},{"lineNumber":271,"author":{"gitId":"vvidday"},"content":"          repoName: `${repo.displayName}`,"},{"lineNumber":272,"author":{"gitId":"vvidday"},"content":"          location: `${repo.location.location}`,"},{"lineNumber":273,"author":{"gitId":"MarcusTXK"},"content":"          checkedFileTypeContribution: undefined,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"ckcherry23"},"content":"        res.push(user);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"    repo.commits \u003d commits;"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    repo.users \u003d res;"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"    return res;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"  loadAuthorship(repoName) {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    const folderName \u003d window.REPOS[repoName].outputFolderName;"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    return this.loadJSON(`${folderName}/authorship.json`)"},{"lineNumber":289,"author":{"gitId":"vvidday"},"content":"      .then((json) \u003d\u003e {"},{"lineNumber":290,"author":{"gitId":"vvidday"},"content":"        const files \u003d authorshipSchema.parse(json);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        window.REPOS[repoName].files \u003d files;"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        return files;"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"  // calculate and set the contribution of each commitResult and insert repoId into commitResult,"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  // since not provided in json file"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  setContributionOfCommitResultsAndInsertRepoId(dailyCommits, repoId) {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    dailyCommits.forEach((commit) \u003d\u003e {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      commit.commitResults.forEach((result) \u003d\u003e {"},{"lineNumber":301,"author":{"gitId":"vvidday"},"content":"        (result as CommitResult).repoId \u003d repoId;"},{"lineNumber":302,"author":{"gitId":"vvidday"},"content":"        (result as CommitResult).insertions \u003d Object.values(result.fileTypesAndContributionMap)"},{"lineNumber":303,"author":{"gitId":"-"},"content":"          .reduce((acc, fileType) \u003d\u003e acc + fileType.insertions, 0);"},{"lineNumber":304,"author":{"gitId":"vvidday"},"content":"        (result as CommitResult).deletions \u003d Object.values(result.fileTypesAndContributionMap)"},{"lineNumber":305,"author":{"gitId":"-"},"content":"          .reduce((acc, fileType) \u003d\u003e acc + fileType.deletions, 0);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":309,"author":{"gitId":"-"},"content":"};"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"export default \u0027test\u0027;"}],"authorContributionMap":{"vvidday":40,"ckcherry23":2,"MarcusTXK":1,"-":268}},{"path":"frontend/src/utils/load-font-awesome-icons.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { library } from \u0027@fortawesome/fontawesome-svg-core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  faCaretDown, faCaretRight, faChevronCircleDown, faChevronCircleUp,"},{"lineNumber":4,"author":{"gitId":"ckcherry23"},"content":"  faChevronDown, faChevronUp, faCircle, faCode, faCodeMerge,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  faEllipsisH, faExclamation, faHistory, faListUl,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  faPlusCircle, faSpinner, faTags, faUser, faUserEdit,"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"  faDatabase, faClipboard, faArrowUpRightFromSquare,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"} from \u0027@fortawesome/free-solid-svg-icons\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  faGithub, faGitlab, faBitbucket,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027@fortawesome/free-brands-svg-icons\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"// app"},{"lineNumber":15,"author":{"gitId":"-"},"content":"library.add(faExclamation, faSpinner, faCode, faListUl);"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"// c-resizer"},{"lineNumber":18,"author":{"gitId":"-"},"content":"library.add(faCaretRight);"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"// c-summary"},{"lineNumber":21,"author":{"gitId":"-"},"content":"library.add(faExclamation);"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"// c-summary-charts"},{"lineNumber":24,"author":{"gitId":"-"},"content":"library.add("},{"lineNumber":25,"author":{"gitId":"-"},"content":"  faChevronUp,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  faChevronDown,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  faDatabase,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  faUser,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  faCode,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  faListUl,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  faCircle,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  faGithub,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  faGitlab,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  faBitbucket,"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"  faClipboard,"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"  faArrowUpRightFromSquare,"},{"lineNumber":37,"author":{"gitId":"-"},"content":");"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"// c-zoom"},{"lineNumber":40,"author":{"gitId":"ckcherry23"},"content":"library.add(faCodeMerge, faEllipsisH, faTags);"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"// c-authorship"},{"lineNumber":43,"author":{"gitId":"-"},"content":"library.add(faCaretDown, faCaretRight, faHistory, faUserEdit);"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"// c-segment"},{"lineNumber":46,"author":{"gitId":"-"},"content":"library.add(faPlusCircle, faChevronCircleUp, faChevronCircleDown);"}],"authorContributionMap":{"ckcherry23":2,"MarcusTXK":3,"-":41}},{"path":"frontend/src/views/c-authorship.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"#authorship"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  .panel-title"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    span Code Panel"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  .toolbar--multiline"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    a("},{"lineNumber":7,"author":{"gitId":"-"},"content":"      v-if\u003d\"activeFilesCount \u003c selectedFiles.length\","},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"      v-on:click\u003d\"toggleAllFileActiveProperty(true)\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    ) show all file details"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"    a(v-if\u003d\"activeFilesCount \u003e 0\", v-on:click\u003d\"toggleAllFileActiveProperty(false)\") hide all file details"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  .panel-heading"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    a.group-name("},{"lineNumber":13,"author":{"gitId":"-"},"content":"      v-bind:href\u003d\"info.location\", target\u003d\"_blank\","},{"lineNumber":14,"author":{"gitId":"-"},"content":"      v-bind:title\u003d\"\u0027Click to open the repo\u0027\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ) {{ info.repo }}"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    .author(v-if\u003d\"!info.isMergeGroup\")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      span \u0026#8627; \u0026nbsp;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      span {{ authorDisplayName }} ({{ info.author }})"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    .period"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      span \u0026#8627; \u0026nbsp;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      span {{ info.minDate }} to {{ info.maxDate }}"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        |\u0026nbsp;\u0026nbsp; ({{ selectedFiles.length }} files changed)"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  .title"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"    .contribution(v-if\u003d\"isLoaded \u0026\u0026 info.files.length!\u003d0\")"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      .sorting.mui-form--inline"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        .mui-select.sort-by"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          select(v-model\u003d\"filesSortType\")"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"            option(value\u003d\"linesOfCode\") LoC"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            option(value\u003d\"path\") Path"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            option(value\u003d\"fileName\") File Name"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            option(value\u003d\"fileType\") File Type"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          label sort by"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .mui-select.sort-order"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          select(v-model\u003d\"toReverseSortFiles\")"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            option(v-bind:value\u003d\u0027true\u0027) Descending"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            option(v-bind:value\u003d\u0027false\u0027) Ascending"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          label order"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      .searchbox"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        input.radio-button--search("},{"lineNumber":40,"author":{"gitId":"-"},"content":"          type\u003d\"radio\","},{"lineNumber":41,"author":{"gitId":"-"},"content":"          value\u003d\"search\","},{"lineNumber":42,"author":{"gitId":"-"},"content":"          v-model\u003d\"filterType\","},{"lineNumber":43,"author":{"gitId":"-"},"content":"          v-on:change\u003d\"indicateSearchBar\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        .mui-form--inline"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          input#search("},{"lineNumber":47,"author":{"gitId":"-"},"content":"            type\u003d\"search\","},{"lineNumber":48,"author":{"gitId":"-"},"content":"            placeholder\u003d\"Filter by glob\","},{"lineNumber":49,"author":{"gitId":"-"},"content":"            ref\u003d\"searchBar\","},{"lineNumber":50,"author":{"gitId":"-"},"content":"            v-bind:value\u003d\"searchBarValue\","},{"lineNumber":51,"author":{"gitId":"-"},"content":"            v-on:keyup.enter\u003d\"indicateSearchBar(); updateSearchBarValue();\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          button#submit-button("},{"lineNumber":54,"author":{"gitId":"-"},"content":"            type\u003d\"button\","},{"lineNumber":55,"author":{"gitId":"-"},"content":"            v-on:click\u003d\"indicateSearchBar(); updateSearchBarValue();\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"          ) Filter"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      .fileTypes"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        input.radio-button--checkbox("},{"lineNumber":59,"author":{"gitId":"-"},"content":"          type\u003d\"radio\","},{"lineNumber":60,"author":{"gitId":"-"},"content":"          value\u003d\"checkboxes\","},{"lineNumber":61,"author":{"gitId":"-"},"content":"          v-model\u003d\"filterType\","},{"lineNumber":62,"author":{"gitId":"-"},"content":"          v-on:change\u003d\"indicateCheckBoxes\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"        .checkboxes.mui-form--inline(v-if\u003d\"info.files.length \u003e 0\")"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          label(style\u003d\u0027background-color: #000000; color: #ffffff\u0027)"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            input.mui-checkbox--fileType#all(type\u003d\"checkbox\", v-model\u003d\"isSelectAllChecked\")"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            span(v-bind:title\u003d\"getTotalFileBlankLineInfo()\")"},{"lineNumber":68,"author":{"gitId":"-"},"content":"              span All\u0026nbsp;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"              span {{ totalLineCount }}\u0026nbsp;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"              span ({{ totalLineCount - totalBlankLineCount }})\u0026nbsp;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          template(v-for\u003d\"fileType in Object.keys(fileTypeLinesObj)\", v-bind:key\u003d\"fileType\")"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            label("},{"lineNumber":73,"author":{"gitId":"-"},"content":"              v-bind:style\u003d\"{\\"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0027background-color\u0027: fileTypeColors[fileType],\\"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0027color\u0027: getFontColor(fileTypeColors[fileType])\\"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                }\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":78,"author":{"gitId":"-"},"content":"              input.mui-checkbox--fileType(type\u003d\"checkbox\","},{"lineNumber":79,"author":{"gitId":"-"},"content":"                v-bind:id\u003d\"fileType\", v-bind:value\u003d\"fileType\","},{"lineNumber":80,"author":{"gitId":"-"},"content":"                v-on:change\u003d\"indicateCheckBoxes\", v-model\u003d\"selectedFileTypes\")"},{"lineNumber":81,"author":{"gitId":"-"},"content":"              span(v-bind:title\u003d\"getFileTypeBlankLineInfo(fileType)\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                span {{ fileType }}\u0026nbsp;{{ fileTypeLinesObj[fileType] }}\u0026nbsp;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                span ({{ fileTypeLinesObj[fileType] - fileTypeBlankLinesObj[fileType] }})\u0026nbsp;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"          br"},{"lineNumber":85,"author":{"gitId":"-"},"content":"          label.binary-fileType(v-if\u003d\"binaryFilesCount \u003e 0\")"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            input.mui-checkbox--fileType(type\u003d\"checkbox\", v-model\u003d\"isBinaryChecked\")"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            span("},{"lineNumber":88,"author":{"gitId":"-"},"content":"              v-bind:title\u003d\"`${binaryFilesCount} \\"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              binary files (not included in total line count)`\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":91,"author":{"gitId":"-"},"content":"              span {{ binaryFilesCount }} binary file(s)"},{"lineNumber":92,"author":{"gitId":"-"},"content":"          label.ignored-fileType(v-if\u003d\"ignoredFilesCount \u003e 0\")"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            input.mui-checkbox--fileType(type\u003d\"checkbox\", v-model\u003d\"isIgnoredChecked\")"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            span("},{"lineNumber":95,"author":{"gitId":"-"},"content":"              v-bind:title\u003d\"`${ignoredFilesCount} \\"},{"lineNumber":96,"author":{"gitId":"-"},"content":"              ignored files (included in total line count)`\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":98,"author":{"gitId":"-"},"content":"              span {{ ignoredFilesCount }} ignored file(s)"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  .files(v-if\u003d\"isLoaded\")"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"    .empty(v-if\u003d\"info.files.length \u003d\u003d\u003d 0\") nothing to see here :("},{"lineNumber":102,"author":{"gitId":"-"},"content":"    template(v-for\u003d\"(file, index) in selectedFiles\", v-bind:key\u003d\"file.path\")"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      c-authorship-file(v-bind:file\u003d\"file\", v-bind:index\u003d\"index\","},{"lineNumber":104,"author":{"gitId":"-"},"content":"        v-bind:files-sort-type\u003d\"this.filesSortType\", v-bind:info\u003d\"this.info\","},{"lineNumber":105,"author":{"gitId":"-"},"content":"        v-bind:author-colors\u003d\"this.authorColors\", v-bind:file-type-colors\u003d\"this.fileTypeColors\","},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @toggle-file-active-property\u003d\"toggleFileActiveProperty\")"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"vvidday"},"content":"\u003cscript lang\u003d\"ts\"\u003e"},{"lineNumber":110,"author":{"gitId":"vvidday"},"content":"import { defineComponent } from \u0027vue\u0027;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"import minimatch from \u0027minimatch\u0027;"},{"lineNumber":113,"author":{"gitId":"vvidday"},"content":"import brokenLinkDisabler from \u0027../mixin/brokenLinkMixin\u0027;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"import cAuthorshipFile from \u0027../components/c-authorship-file.vue\u0027;"},{"lineNumber":115,"author":{"gitId":"ckcherry23"},"content":"import getNonRepeatingColor from \u0027../utils/random-color-generator\u0027;"},{"lineNumber":116,"author":{"gitId":"vvidday"},"content":"import { StoreState } from \u0027../types/vuex.d\u0027;"},{"lineNumber":117,"author":{"gitId":"vvidday"},"content":"import { FileResult, Line } from \u0027../types/zod/authorship-type\u0027;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"import { AuthorshipFile, AuthorshipFileSegment } from \u0027../types/types\u0027;"},{"lineNumber":119,"author":{"gitId":"vvidday"},"content":"import { FilesSortType, FilterType } from \u0027../types/authorship\u0027;"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"const filesSortDict \u003d {"},{"lineNumber":122,"author":{"gitId":"vvidday"},"content":"  linesOfCode: (file: AuthorshipFile) \u003d\u003e file.lineCount,"},{"lineNumber":123,"author":{"gitId":"vvidday"},"content":"  path: (file: AuthorshipFile) \u003d\u003e file.path,"},{"lineNumber":124,"author":{"gitId":"vvidday"},"content":"  fileName: (file: AuthorshipFile) \u003d\u003e file.path.split(/[/]+/).pop() || \u0027\u0027,"},{"lineNumber":125,"author":{"gitId":"vvidday"},"content":"  fileType: (file: AuthorshipFile) \u003d\u003e file.fileType,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"};"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"function authorshipInitialState() {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  return {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    isLoaded: false,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    selectedFiles: [] as Array\u003cAuthorshipFile\u003e,"},{"lineNumber":132,"author":{"gitId":"vvidday"},"content":"    filterType: FilterType.Checkboxes,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    selectedFileTypes: [] as Array\u003cstring\u003e,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    fileTypes: [] as Array\u003cstring\u003e,"},{"lineNumber":135,"author":{"gitId":"vvidday"},"content":"    filesLinesObj: {} as { [key: string]: number },"},{"lineNumber":136,"author":{"gitId":"vvidday"},"content":"    fileTypeBlankLinesObj: {} as { [key: string]: number },"},{"lineNumber":137,"author":{"gitId":"vvidday"},"content":"    filesSortType: FilesSortType.LinesOfCode,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    toReverseSortFiles: true,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    isBinaryFilesChecked: false,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    isIgnoredFilesChecked: false,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    searchBarValue: \u0027\u0027,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    authorDisplayName: \u0027\u0027,"},{"lineNumber":143,"author":{"gitId":"vvidday"},"content":"    authors: new Set\u003cstring\u003e(),"},{"lineNumber":144,"author":{"gitId":"ckcherry23"},"content":"    selectedColors: [\u0027#1e90ff\u0027, \u0027#f08080\u0027, \u0027#00ff7f\u0027, \u0027#ffd700\u0027, \u0027#ba55d3\u0027, \u0027#adff2f\u0027, \u0027#808000\u0027, \u0027#800000\u0027,"},{"lineNumber":145,"author":{"gitId":"ckcherry23"},"content":"      \u0027#ff8c00\u0027, \u0027#c71585\u0027],"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"const repoCache: Array\u003cstring\u003e \u003d [];"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"vvidday"},"content":"export default defineComponent({"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  name: \u0027c-authorship\u0027,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    cAuthorshipFile,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  mixins: [brokenLinkDisabler],"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  emits: ["},{"lineNumber":158,"author":{"gitId":"-"},"content":"    \u0027deactivate-tab\u0027,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    return authorshipInitialState();"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"vvidday"},"content":"  computed: {"},{"lineNumber":165,"author":{"gitId":"vvidday"},"content":"    sortingFunction() {"},{"lineNumber":166,"author":{"gitId":"vvidday"},"content":"      return (a: AuthorshipFile, b: AuthorshipFile) \u003d\u003e (this.toReverseSortFiles ? -1 : 1)"},{"lineNumber":167,"author":{"gitId":"vvidday"},"content":"        * window.comparator(filesSortDict[this.filesSortType])(a, b);"},{"lineNumber":168,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":169,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":170,"author":{"gitId":"vvidday"},"content":"    isSelectAllChecked: {"},{"lineNumber":171,"author":{"gitId":"vvidday"},"content":"      get(): boolean {"},{"lineNumber":172,"author":{"gitId":"vvidday"},"content":"        return this.selectedFileTypes.length \u003d\u003d\u003d this.fileTypes.length;"},{"lineNumber":173,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":174,"author":{"gitId":"vvidday"},"content":"      set(value: boolean) {"},{"lineNumber":175,"author":{"gitId":"vvidday"},"content":"        if (value) {"},{"lineNumber":176,"author":{"gitId":"vvidday"},"content":"          this.selectedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":177,"author":{"gitId":"vvidday"},"content":"        } else {"},{"lineNumber":178,"author":{"gitId":"vvidday"},"content":"          this.selectedFileTypes \u003d [];"},{"lineNumber":179,"author":{"gitId":"vvidday"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":181,"author":{"gitId":"vvidday"},"content":"        this.indicateCheckBoxes();"},{"lineNumber":182,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":183,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":184,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":185,"author":{"gitId":"vvidday"},"content":"    isBinaryChecked: {"},{"lineNumber":186,"author":{"gitId":"vvidday"},"content":"      get(): boolean {"},{"lineNumber":187,"author":{"gitId":"vvidday"},"content":"        return this.isBinaryFilesChecked;"},{"lineNumber":188,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":189,"author":{"gitId":"vvidday"},"content":"      set(value: boolean) {"},{"lineNumber":190,"author":{"gitId":"vvidday"},"content":"        if (value) {"},{"lineNumber":191,"author":{"gitId":"vvidday"},"content":"          this.isBinaryFilesChecked \u003d true;"},{"lineNumber":192,"author":{"gitId":"vvidday"},"content":"        } else {"},{"lineNumber":193,"author":{"gitId":"vvidday"},"content":"          this.isBinaryFilesChecked \u003d false;"},{"lineNumber":194,"author":{"gitId":"vvidday"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":196,"author":{"gitId":"vvidday"},"content":"        this.updateSelectedFiles();"},{"lineNumber":197,"author":{"gitId":"vvidday"},"content":"        this.indicateCheckBoxes();"},{"lineNumber":198,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":199,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":200,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":201,"author":{"gitId":"vvidday"},"content":"    isIgnoredChecked: {"},{"lineNumber":202,"author":{"gitId":"vvidday"},"content":"      get(): boolean {"},{"lineNumber":203,"author":{"gitId":"vvidday"},"content":"        return this.isIgnoredFilesChecked;"},{"lineNumber":204,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":205,"author":{"gitId":"vvidday"},"content":"      set(value: boolean) {"},{"lineNumber":206,"author":{"gitId":"vvidday"},"content":"        if (value) {"},{"lineNumber":207,"author":{"gitId":"vvidday"},"content":"          this.isIgnoredFilesChecked \u003d true;"},{"lineNumber":208,"author":{"gitId":"vvidday"},"content":"        } else {"},{"lineNumber":209,"author":{"gitId":"vvidday"},"content":"          this.isIgnoredFilesChecked \u003d false;"},{"lineNumber":210,"author":{"gitId":"vvidday"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":212,"author":{"gitId":"vvidday"},"content":"        this.updateSelectedFiles();"},{"lineNumber":213,"author":{"gitId":"vvidday"},"content":"        this.indicateCheckBoxes();"},{"lineNumber":214,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":215,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":216,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":217,"author":{"gitId":"vvidday"},"content":"    activeFilesCount(): number {"},{"lineNumber":218,"author":{"gitId":"vvidday"},"content":"      return this.selectedFiles.filter((file) \u003d\u003e file.active).length;"},{"lineNumber":219,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":220,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":221,"author":{"gitId":"vvidday"},"content":"    totalLineCount(): number {"},{"lineNumber":222,"author":{"gitId":"vvidday"},"content":"      return Object.values(this.fileTypeLinesObj).reduce((acc, val) \u003d\u003e acc + val, 0);"},{"lineNumber":223,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":224,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":225,"author":{"gitId":"vvidday"},"content":"    totalBlankLineCount(): number {"},{"lineNumber":226,"author":{"gitId":"vvidday"},"content":"      return Object.values(this.fileTypeBlankLinesObj).reduce((acc, val) \u003d\u003e acc + val, 0);"},{"lineNumber":227,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":228,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":229,"author":{"gitId":"vvidday"},"content":"    fileTypeLinesObj(): { [key: string]: number } {"},{"lineNumber":230,"author":{"gitId":"vvidday"},"content":"      const numLinesModified: { [key: string]: number } \u003d {};"},{"lineNumber":231,"author":{"gitId":"vvidday"},"content":"      Object.entries(this.filesLinesObj)"},{"lineNumber":232,"author":{"gitId":"vvidday"},"content":"        .filter(([, value]) \u003d\u003e value \u003e 0)"},{"lineNumber":233,"author":{"gitId":"vvidday"},"content":"        .forEach(([langType, value]) \u003d\u003e {"},{"lineNumber":234,"author":{"gitId":"vvidday"},"content":"          numLinesModified[langType] \u003d value;"},{"lineNumber":235,"author":{"gitId":"vvidday"},"content":"        });"},{"lineNumber":236,"author":{"gitId":"vvidday"},"content":"      return numLinesModified;"},{"lineNumber":237,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":238,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":239,"author":{"gitId":"vvidday"},"content":"    binaryFilesCount(): number {"},{"lineNumber":240,"author":{"gitId":"vvidday"},"content":"      return this.info.files.filter((file) \u003d\u003e file.isBinary).length;"},{"lineNumber":241,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":242,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":243,"author":{"gitId":"vvidday"},"content":"    ignoredFilesCount(): number {"},{"lineNumber":244,"author":{"gitId":"vvidday"},"content":"      return this.info.files.filter((file) \u003d\u003e file.isIgnored).length;"},{"lineNumber":245,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":246,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":247,"author":{"gitId":"vvidday"},"content":"    ...mapState({"},{"lineNumber":248,"author":{"gitId":"vvidday"},"content":"      fileTypeColors: (state: unknown) \u003d\u003e (state as StoreState).fileTypeColors,"},{"lineNumber":249,"author":{"gitId":"vvidday"},"content":"      info: (state: unknown) \u003d\u003e (state as StoreState).tabAuthorshipInfo,"},{"lineNumber":250,"author":{"gitId":"vvidday"},"content":"      authorColors: (state: unknown) \u003d\u003e (state as StoreState).tabAuthorColors,"},{"lineNumber":251,"author":{"gitId":"vvidday"},"content":"    }),"},{"lineNumber":252,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":253,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"  watch: {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    filesSortType() {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      window.addHash(\u0027authorshipSortBy\u0027, this.filesSortType);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles();"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    searchBarValue() {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles();"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"    selectedFileTypes: {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      deep: true,"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      handler() {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        this.updateSelectedFiles();"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"    toReverseSortFiles() {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      window.addHash(\u0027reverseAuthorshipOrder\u0027, this.toReverseSortFiles);"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles();"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"    info() {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      Object.assign(this.$data, authorshipInitialState());"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      this.initiate();"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"vvidday"},"content":"  created() {"},{"lineNumber":285,"author":{"gitId":"vvidday"},"content":"    this.initiate();"},{"lineNumber":286,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":287,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":288,"author":{"gitId":"vvidday"},"content":"  beforeUnmount() {"},{"lineNumber":289,"author":{"gitId":"vvidday"},"content":"    this.removeAuthorshipHashes();"},{"lineNumber":290,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":291,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":293,"author":{"gitId":"vvidday"},"content":"    retrieveHashes(): void {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"      switch (hash.authorshipSortBy) {"},{"lineNumber":297,"author":{"gitId":"vvidday"},"content":"      case FilesSortType.Path:"},{"lineNumber":298,"author":{"gitId":"vvidday"},"content":"      case FilesSortType.FileName:"},{"lineNumber":299,"author":{"gitId":"vvidday"},"content":"      case FilesSortType.FileType:"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        this.filesSortType \u003d hash.authorshipSortBy;"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":303,"author":{"gitId":"vvidday"},"content":"      // Invalid value, use the default value of \u0027linesOfCode\u0027"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"      this.toReverseSortFiles \u003d hash.reverseAuthorshipOrder !\u003d\u003d \u0027false\u0027;"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"      if (hash.authorshipFileTypes) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        this.selectedFileTypes \u003d hash.authorshipFileTypes"},{"lineNumber":310,"author":{"gitId":"-"},"content":"          .split(window.HASH_DELIMITER)"},{"lineNumber":311,"author":{"gitId":"-"},"content":"          .filter((fileType) \u003d\u003e this.fileTypes.includes(fileType));"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        this.resetSelectedFileTypes();"},{"lineNumber":314,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"      if (hash.authorshipIsBinaryFileTypeChecked) {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        this.isBinaryFilesChecked \u003d hash.authorshipIsBinaryFileTypeChecked \u003d\u003d\u003d \u0027true\u0027;"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"      if (hash.authorshipIsIgnoredFilesChecked) {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        this.isIgnoredFilesChecked \u003d hash.authorshipIsIgnoredFilesChecked \u003d\u003d\u003d \u0027true\u0027;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"      if (\u0027authorshipFilesGlob\u0027 in hash) {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        this.indicateSearchBar();"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        this.searchBarValue \u003d hash.authorshipFilesGlob;"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"vvidday"},"content":"    resetSelectedFileTypes(): void {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      this.selectedFileTypes \u003d this.info.checkedFileTypes"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        ? this.info.checkedFileTypes.filter((fileType) \u003d\u003e this.fileTypes.includes(fileType))"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        : [];"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"vvidday"},"content":"    setInfoHash(): void {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      const { addHash } \u003d window;"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      // We only set these hashes as they are propagated from summary_charts"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      addHash(\u0027tabAuthor\u0027, this.info.author);"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      addHash(\u0027tabRepo\u0027, this.info.repo);"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      addHash(\u0027authorshipIsMergeGroup\u0027, this.info.isMergeGroup);"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      this.updateFileTypeHash();"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"vvidday"},"content":"    removeAuthorshipHashes(): void {"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipFileTypes\u0027);"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipIsBinaryFileTypeChecked\u0027);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipIsIgnoredFilesChecked\u0027);"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipFilesGlob\u0027);"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipSortBy\u0027);"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027reverseAuthorshipOrder\u0027);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027tabAuthor\u0027);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027tabRepo\u0027);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipIsMergeGroup\u0027);"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"vvidday"},"content":"    async initiate(): Promise\u003cvoid\u003e {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      const repo \u003d window.REPOS[this.info.repo];"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"      if (!repo || !this.info.author) {"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateTabState\u0027, false);"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":364,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":365,"author":{"gitId":"-"},"content":"      if (repoCache.length \u003d\u003d\u003d 2) {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        const toRemove \u003d repoCache.shift();"},{"lineNumber":367,"author":{"gitId":"vvidday"},"content":"        if (toRemove \u0026\u0026 toRemove !\u003d\u003d this.info.repo) {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"          delete window.REPOS[toRemove].files;"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      repoCache.push(this.info.repo);"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"      let { files } \u003d repo;"},{"lineNumber":374,"author":{"gitId":"-"},"content":"      if (!files) {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        files \u003d await window.api.loadAuthorship(this.info.repo);"},{"lineNumber":376,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"vvidday"},"content":"      const author \u003d repo.users?.find((user) \u003d\u003e user.name \u003d\u003d\u003d this.info.author);"},{"lineNumber":379,"author":{"gitId":"-"},"content":"      if (author) {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        this.authorDisplayName \u003d author.displayName;"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":382,"author":{"gitId":"-"},"content":""},{"lineNumber":383,"author":{"gitId":"-"},"content":"      this.processFiles(files);"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"      if (this.info.isRefresh) {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        this.retrieveHashes();"},{"lineNumber":387,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        this.resetSelectedFileTypes();"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"      this.setInfoHash();"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"    getAuthors(file: AuthorshipFile): Array\u003cstring | null\u003e {"},{"lineNumber":395,"author":{"gitId":"vvidday"},"content":"      return Array.from(new Set(file.segments?.map((segment) \u003d\u003e segment.knownAuthor)"},{"lineNumber":396,"author":{"gitId":"ckcherry23"},"content":"        .filter(Boolean))).sort().slice(0, 50);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"vvidday"},"content":"    toggleAllFileActiveProperty(isActive: boolean): void {"},{"lineNumber":400,"author":{"gitId":"vvidday"},"content":"      this.$store.commit(\u0027setAllAuthorshipFileActiveProperty\u0027, { isActive, files: this.selectedFiles });"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"vvidday"},"content":"    toggleFileActiveProperty(file: AuthorshipFile): void {"},{"lineNumber":404,"author":{"gitId":"vvidday"},"content":"      this.$store.commit(\u0027toggleAuthorshipFileActiveProperty\u0027, file);"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":406,"author":{"gitId":"-"},"content":""},{"lineNumber":407,"author":{"gitId":"vvidday"},"content":"    isUnknownAuthor(name: string): boolean {"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      return name \u003d\u003d\u003d \u0027-\u0027;"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"    splitSegments(lines: Array\u003cLine\u003e): { segments: Array\u003cAuthorshipFileSegment\u003e; blankLineCount: number; } {"},{"lineNumber":412,"author":{"gitId":"ckcherry23"},"content":"      // split into segments separated by knownAuthor"},{"lineNumber":413,"author":{"gitId":"vvidday"},"content":"      let lastState: string | null;"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      let lastId \u003d -1;"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      const segments: Array\u003cAuthorshipFileSegment\u003e \u003d [];"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      let blankLineCount \u003d 0;"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"      lines.forEach((line, lineCount) \u003d\u003e {"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        const isAuthorMatched \u003d this.info.isMergeGroup"},{"lineNumber":420,"author":{"gitId":"-"},"content":"          ? !this.isUnknownAuthor(line.author.gitId)"},{"lineNumber":421,"author":{"gitId":"-"},"content":"          : line.author.gitId \u003d\u003d\u003d this.info.author;"},{"lineNumber":422,"author":{"gitId":"ckcherry23"},"content":"        const knownAuthor \u003d (line.author \u0026\u0026 isAuthorMatched) ? line.author.gitId : null;"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"ckcherry23"},"content":"        if (knownAuthor !\u003d\u003d lastState || lastId \u003d\u003d\u003d -1) {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"          segments.push({"},{"lineNumber":426,"author":{"gitId":"ckcherry23"},"content":"            knownAuthor,"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            lineNumbers: [],"},{"lineNumber":428,"author":{"gitId":"-"},"content":"            lines: [],"},{"lineNumber":429,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"          lastId +\u003d 1;"},{"lineNumber":432,"author":{"gitId":"ckcherry23"},"content":"          lastState \u003d knownAuthor;"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":434,"author":{"gitId":"-"},"content":""},{"lineNumber":435,"author":{"gitId":"-"},"content":"        const content \u003d line.content || \u0027 \u0027;"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        segments[lastId].lines.push(content);"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"        segments[lastId].lineNumbers.push(lineCount + 1);"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"ckcherry23"},"content":"        if (line.content \u003d\u003d\u003d \u0027\u0027 \u0026\u0026 knownAuthor) {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"          blankLineCount +\u003d 1;"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":443,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":444,"author":{"gitId":"ckcherry23"},"content":"        if (knownAuthor) {"},{"lineNumber":445,"author":{"gitId":"ckcherry23"},"content":"          this.authors.add(knownAuthor);"},{"lineNumber":446,"author":{"gitId":"ckcherry23"},"content":"        }"},{"lineNumber":447,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"      return {"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        segments,"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        blankLineCount,"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":454,"author":{"gitId":"-"},"content":""},{"lineNumber":455,"author":{"gitId":"vvidday"},"content":"    assignAuthorColors(): void {"},{"lineNumber":456,"author":{"gitId":"ckcherry23"},"content":"      let authorColorIndex \u003d 0;"},{"lineNumber":457,"author":{"gitId":"vvidday"},"content":"      const authorColors: { [key: string]: string } \u003d {};"},{"lineNumber":458,"author":{"gitId":"ckcherry23"},"content":"      if (this.info.isMergeGroup) {"},{"lineNumber":459,"author":{"gitId":"ckcherry23"},"content":"        this.authors.forEach((author) \u003d\u003e {"},{"lineNumber":460,"author":{"gitId":"ckcherry23"},"content":"          if (authorColorIndex \u003c this.selectedColors.length) {"},{"lineNumber":461,"author":{"gitId":"ckcherry23"},"content":"            authorColors[author] \u003d this.selectedColors[authorColorIndex];"},{"lineNumber":462,"author":{"gitId":"ckcherry23"},"content":"            authorColorIndex +\u003d 1;"},{"lineNumber":463,"author":{"gitId":"ckcherry23"},"content":"          } else {"},{"lineNumber":464,"author":{"gitId":"ckcherry23"},"content":"            authorColors[author] \u003d getNonRepeatingColor(Object.values(authorColors));"},{"lineNumber":465,"author":{"gitId":"ckcherry23"},"content":"          }"},{"lineNumber":466,"author":{"gitId":"ckcherry23"},"content":"        });"},{"lineNumber":467,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":468,"author":{"gitId":"ckcherry23"},"content":"      this.$store.commit(\u0027updateAuthorColors\u0027, authorColors);"},{"lineNumber":469,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":470,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":471,"author":{"gitId":"-"},"content":"    processFiles(files: Array\u003cFileResult\u003e): void {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      const SINGLE_FILE_LINE_COUNT_THRESHOLD \u003d 2000;"},{"lineNumber":473,"author":{"gitId":"-"},"content":"      const SINGLE_FILE_CHAR_COUNT_THRESHOLD \u003d 1000000;"},{"lineNumber":474,"author":{"gitId":"-"},"content":"      const res: Array\u003cAuthorshipFile\u003e \u003d [];"},{"lineNumber":475,"author":{"gitId":"vvidday"},"content":"      const fileTypeBlanksInfoObj: { [key: string]: number } \u003d {};"},{"lineNumber":476,"author":{"gitId":"-"},"content":""},{"lineNumber":477,"author":{"gitId":"-"},"content":"      files.filter((file) \u003d\u003e this.isValidFile(file)).forEach((file) \u003d\u003e {"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        const contributionMap \u003d file.authorContributionMap;"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"-"},"content":"        const lineCnt \u003d this.info.isMergeGroup"},{"lineNumber":481,"author":{"gitId":"-"},"content":"          ? this.getContributionFromAllAuthors(contributionMap)"},{"lineNumber":482,"author":{"gitId":"-"},"content":"          : contributionMap[this.info.author];"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"vvidday"},"content":"        const out: AuthorshipFile \u003d {"},{"lineNumber":485,"author":{"gitId":"vvidday"},"content":"          path: file.path,"},{"lineNumber":486,"author":{"gitId":"vvidday"},"content":"          lineCount: lineCnt,"},{"lineNumber":487,"author":{"gitId":"vvidday"},"content":"          active: lineCnt \u003c\u003d SINGLE_FILE_LINE_COUNT_THRESHOLD \u0026\u0026 !file.isBinary,"},{"lineNumber":488,"author":{"gitId":"vvidday"},"content":"          wasCodeLoaded: lineCnt \u003c\u003d SINGLE_FILE_LINE_COUNT_THRESHOLD,"},{"lineNumber":489,"author":{"gitId":"vvidday"},"content":"          fileType: file.fileType,"},{"lineNumber":490,"author":{"gitId":"vvidday"},"content":"          isIgnored: !!file.isIgnored,"},{"lineNumber":491,"author":{"gitId":"vvidday"},"content":"          isBinary: !!file.isBinary,"},{"lineNumber":492,"author":{"gitId":"vvidday"},"content":"        };"},{"lineNumber":493,"author":{"gitId":"-"},"content":""},{"lineNumber":494,"author":{"gitId":"-"},"content":"        if (this.filesLinesObj[out.fileType]) {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"          this.filesLinesObj[out.fileType] +\u003d lineCnt;"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"          this.filesLinesObj[out.fileType] \u003d lineCnt;"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"-"},"content":"        if (!out.isBinary \u0026\u0026 !out.isIgnored) {"},{"lineNumber":501,"author":{"gitId":"-"},"content":"          out.charCount \u003d file.lines.reduce("},{"lineNumber":502,"author":{"gitId":"-"},"content":"            (count, line) \u003d\u003e count + (line ? line.content.length : 0),"},{"lineNumber":503,"author":{"gitId":"-"},"content":"            0,"},{"lineNumber":504,"author":{"gitId":"-"},"content":"          );"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"        if (!file.isBinary) {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"          const segmentInfo \u003d this.splitSegments(file.lines);"},{"lineNumber":509,"author":{"gitId":"-"},"content":"          out.segments \u003d segmentInfo.segments;"},{"lineNumber":510,"author":{"gitId":"-"},"content":"          out.blankLineCount \u003d segmentInfo.blankLineCount;"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"          this.addBlankLineCount(file.fileType, segmentInfo.blankLineCount, fileTypeBlanksInfoObj);"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"        res.push(out);"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"      res.sort((a, b) \u003d\u003e b.lineCount - a.lineCount).forEach((file) \u003d\u003e {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        // hide files over total char count limit"},{"lineNumber":520,"author":{"gitId":"vvidday"},"content":"        if (!file.isIgnored \u0026\u0026 !file.isBinary \u0026\u0026 file.active \u0026\u0026 file.charCount !\u003d\u003d undefined) {"},{"lineNumber":521,"author":{"gitId":"-"},"content":"          file.active \u003d file.charCount \u003c\u003d SINGLE_FILE_CHAR_COUNT_THRESHOLD;"},{"lineNumber":522,"author":{"gitId":"-"},"content":"          file.wasCodeLoaded \u003d file.active;"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"-"},"content":"      Object.keys(this.filesLinesObj).forEach((file) \u003d\u003e {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        if (this.filesLinesObj[file] !\u003d\u003d 0) {"},{"lineNumber":528,"author":{"gitId":"-"},"content":"          this.fileTypes.push(file);"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":531,"author":{"gitId":"-"},"content":""},{"lineNumber":532,"author":{"gitId":"ckcherry23"},"content":"      this.assignAuthorColors();"},{"lineNumber":533,"author":{"gitId":"-"},"content":"      this.fileTypeBlankLinesObj \u003d fileTypeBlanksInfoObj;"},{"lineNumber":534,"author":{"gitId":"vvidday"},"content":"      this.$store.commit(\u0027updateTabAuthorshipFiles\u0027, res);"},{"lineNumber":535,"author":{"gitId":"-"},"content":"      this.updateSelectedFiles(true);"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"vvidday"},"content":"    isValidFile(file: FileResult): boolean {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"      return this.info.isMergeGroup"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        ? Object.entries(file.authorContributionMap)"},{"lineNumber":541,"author":{"gitId":"-"},"content":"          .some((authorCount) \u003d\u003e !this.isUnknownAuthor(authorCount[0]))"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        : this.info.author in file.authorContributionMap;"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":544,"author":{"gitId":"-"},"content":""},{"lineNumber":545,"author":{"gitId":"vvidday"},"content":"    getContributionFromAllAuthors(contributionMap: Record\u003cstring, number\u003e): number {"},{"lineNumber":546,"author":{"gitId":"-"},"content":"      return Object.entries(contributionMap).reduce((acc, [author, cnt]) \u003d\u003e ("},{"lineNumber":547,"author":{"gitId":"-"},"content":"        (!this.isUnknownAuthor(author) ? acc + cnt : acc)"},{"lineNumber":548,"author":{"gitId":"-"},"content":"      ), 0);"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"vvidday"},"content":"    addBlankLineCount(fileType: string, lineCount: number, filesInfoObj: { [key: string]: number }): void {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      if (!filesInfoObj[fileType]) {"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        filesInfoObj[fileType] \u003d 0;"},{"lineNumber":554,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":555,"author":{"gitId":"-"},"content":""},{"lineNumber":556,"author":{"gitId":"-"},"content":"      filesInfoObj[fileType] +\u003d lineCount;"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":558,"author":{"gitId":"-"},"content":""},{"lineNumber":559,"author":{"gitId":"vvidday"},"content":"    updateSearchBarValue(): void {"},{"lineNumber":560,"author":{"gitId":"vvidday"},"content":"      this.searchBarValue \u003d (this.$refs.searchBar as HTMLInputElement).value;"},{"lineNumber":561,"author":{"gitId":"-"},"content":""},{"lineNumber":562,"author":{"gitId":"-"},"content":"      window.addHash(\u0027authorshipFilesGlob\u0027, this.searchBarValue);"},{"lineNumber":563,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipFileTypes\u0027);"},{"lineNumber":564,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipIsBinaryFileTypeChecked\u0027);"},{"lineNumber":565,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipIsIgnoredFilesChecked\u0027);"},{"lineNumber":566,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":568,"author":{"gitId":"-"},"content":""},{"lineNumber":569,"author":{"gitId":"vvidday"},"content":"    updateFileTypeHash(): void {"},{"lineNumber":570,"author":{"gitId":"-"},"content":"      const fileTypeHash \u003d this.selectedFileTypes.length \u003e 0"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        ? this.selectedFileTypes.reduce((a, b) \u003d\u003e `${a}~${b}`)"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        : \u0027\u0027;"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"-"},"content":"      window.addHash(\u0027authorshipFileTypes\u0027, fileTypeHash);"},{"lineNumber":575,"author":{"gitId":"-"},"content":"      window.addHash(\u0027authorshipIsBinaryFileTypeChecked\u0027, this.isBinaryFilesChecked);"},{"lineNumber":576,"author":{"gitId":"-"},"content":"      window.addHash(\u0027authorshipIsIgnoredFilesChecked\u0027, this.isIgnoredFilesChecked);"},{"lineNumber":577,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027authorshipFilesGlob\u0027);"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"vvidday"},"content":"    async updateSelectedFiles(setIsLoaded \u003d false): Promise\u003cvoid\u003e {"},{"lineNumber":582,"author":{"gitId":"-"},"content":"      await this.$store.dispatch(\u0027incrementLoadingOverlayCountForceReload\u0027, 1);"},{"lineNumber":583,"author":{"gitId":"vvidday"},"content":"      this.selectedFiles \u003d this.info.files.filter("},{"lineNumber":584,"author":{"gitId":"-"},"content":"        (file) \u003d\u003e ((this.selectedFileTypes.includes(file.fileType) \u0026\u0026 !file.isBinary \u0026\u0026 !file.isIgnored)"},{"lineNumber":585,"author":{"gitId":"-"},"content":"          || (file.isBinary \u0026\u0026 this.isBinaryFilesChecked) || (file.isIgnored \u0026\u0026 this.isIgnoredFilesChecked))"},{"lineNumber":586,"author":{"gitId":"-"},"content":"          \u0026\u0026 minimatch(file.path, this.searchBarValue || \u0027*\u0027, { matchBase: true, dot: true }),"},{"lineNumber":587,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        .sort(this.sortingFunction);"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      if (setIsLoaded) {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        this.isLoaded \u003d true;"},{"lineNumber":591,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":592,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, -1);"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":594,"author":{"gitId":"-"},"content":""},{"lineNumber":595,"author":{"gitId":"vvidday"},"content":"    indicateSearchBar(): void {"},{"lineNumber":596,"author":{"gitId":"-"},"content":"      this.selectedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":597,"author":{"gitId":"-"},"content":"      this.isBinaryFilesChecked \u003d true;"},{"lineNumber":598,"author":{"gitId":"-"},"content":"      this.isIgnoredFilesChecked \u003d true;"},{"lineNumber":599,"author":{"gitId":"vvidday"},"content":"      this.filterType \u003d FilterType.Search;"},{"lineNumber":600,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":601,"author":{"gitId":"-"},"content":""},{"lineNumber":602,"author":{"gitId":"vvidday"},"content":"    indicateCheckBoxes(): void {"},{"lineNumber":603,"author":{"gitId":"-"},"content":"      this.searchBarValue \u003d \u0027\u0027;"},{"lineNumber":604,"author":{"gitId":"vvidday"},"content":"      this.filterType \u003d FilterType.Checkboxes;"},{"lineNumber":605,"author":{"gitId":"-"},"content":"      this.updateFileTypeHash();"},{"lineNumber":606,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":607,"author":{"gitId":"-"},"content":""},{"lineNumber":608,"author":{"gitId":"vvidday"},"content":"    getFileTypeBlankLineInfo(fileType: string): string {"},{"lineNumber":609,"author":{"gitId":"-"},"content":"      return `${fileType}: Blank: ${this.fileTypeBlankLinesObj[fileType]},"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        Non-Blank: ${this.filesLinesObj[fileType] - this.fileTypeBlankLinesObj[fileType]}`;"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":612,"author":{"gitId":"-"},"content":""},{"lineNumber":613,"author":{"gitId":"vvidday"},"content":"    getTotalFileBlankLineInfo(): string {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"      return `Total: Blank: ${this.totalBlankLineCount}, Non-Blank: ${this.totalLineCount - this.totalBlankLineCount}`;"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"-"},"content":"    getFontColor(color: string) {"},{"lineNumber":618,"author":{"gitId":"-"},"content":"      return window.getFontColor(color);"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":620,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":621,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":622,"author":{"gitId":"-"},"content":"\u003c/script\u003e"},{"lineNumber":623,"author":{"gitId":"-"},"content":""},{"lineNumber":624,"author":{"gitId":"-"},"content":"\u003cstyle lang\u003d\"scss\"\u003e"},{"lineNumber":625,"author":{"gitId":"-"},"content":"@import \u0027../styles/_colors.scss\u0027;"},{"lineNumber":626,"author":{"gitId":"ckcherry23"},"content":"@import \u0027../styles/z-indices.scss\u0027;"},{"lineNumber":627,"author":{"gitId":"-"},"content":""},{"lineNumber":628,"author":{"gitId":"-"},"content":"/* Authorship */"},{"lineNumber":629,"author":{"gitId":"-"},"content":"#tab-authorship {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"  .title {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    .contribution {"},{"lineNumber":632,"author":{"gitId":"-"},"content":"      .radio-button--search {"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        float: left;"},{"lineNumber":634,"author":{"gitId":"-"},"content":"        margin: 1.75rem 2.0rem 0 0;"},{"lineNumber":635,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"      .radio-button--checkbox {"},{"lineNumber":638,"author":{"gitId":"-"},"content":"        float: left;"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        margin: 0 2.0rem 0 0;"},{"lineNumber":640,"author":{"gitId":"-"},"content":"        vertical-align: middle;"},{"lineNumber":641,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":642,"author":{"gitId":"-"},"content":""},{"lineNumber":643,"author":{"gitId":"-"},"content":"      .mui-form--inline {"},{"lineNumber":644,"author":{"gitId":"ckcherry23"},"content":"        @include small-font;"},{"lineNumber":645,"author":{"gitId":"-"},"content":"        align-items: flex-end;"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        display: flex;"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        flex-wrap: wrap;"},{"lineNumber":648,"author":{"gitId":"-"},"content":""},{"lineNumber":649,"author":{"gitId":"-"},"content":"        #search {"},{"lineNumber":650,"author":{"gitId":"ckcherry23"},"content":"          @include small-font;"},{"lineNumber":651,"author":{"gitId":"-"},"content":"          margin-top: 1.25rem;"},{"lineNumber":652,"author":{"gitId":"-"},"content":"          min-width: 130px;"},{"lineNumber":653,"author":{"gitId":"-"},"content":"          padding: .5rem 1.0rem .25rem 1.0rem;"},{"lineNumber":654,"author":{"gitId":"-"},"content":"          width: 70%;"},{"lineNumber":655,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":656,"author":{"gitId":"-"},"content":""},{"lineNumber":657,"author":{"gitId":"-"},"content":"        #submit-button {"},{"lineNumber":658,"author":{"gitId":"ckcherry23"},"content":"          @include small-font;"},{"lineNumber":659,"author":{"gitId":"-"},"content":"          background-color: mui-color(\u0027blue\u0027);"},{"lineNumber":660,"author":{"gitId":"-"},"content":"          color: mui-color(\u0027white\u0027);"},{"lineNumber":661,"author":{"gitId":"-"},"content":"          margin: 1.0rem 0 0 .25rem;"},{"lineNumber":662,"author":{"gitId":"-"},"content":"          padding: .5rem 1.0rem .25rem 1.0rem;"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":664,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":665,"author":{"gitId":"-"},"content":""},{"lineNumber":666,"author":{"gitId":"-"},"content":"      .searchbox {"},{"lineNumber":667,"author":{"gitId":"-"},"content":"        margin-bottom: 1em;"},{"lineNumber":668,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":669,"author":{"gitId":"-"},"content":""},{"lineNumber":670,"author":{"gitId":"-"},"content":"      .select {"},{"lineNumber":671,"author":{"gitId":"-"},"content":"        font-weight: bold;"},{"lineNumber":672,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":673,"author":{"gitId":"-"},"content":""},{"lineNumber":674,"author":{"gitId":"-"},"content":"      .loc {"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        font-weight: bolder;"},{"lineNumber":676,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":677,"author":{"gitId":"-"},"content":""},{"lineNumber":678,"author":{"gitId":"-"},"content":"      .mui-checkbox--fileType {"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        vertical-align: middle;"},{"lineNumber":680,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":681,"author":{"gitId":"-"},"content":""},{"lineNumber":682,"author":{"gitId":"-"},"content":"      .binary-fileType {"},{"lineNumber":683,"author":{"gitId":"-"},"content":"        background-color: mui-color(\u0027white\u0027);"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027, \u0027800\u0027);"},{"lineNumber":685,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":686,"author":{"gitId":"-"},"content":""},{"lineNumber":687,"author":{"gitId":"-"},"content":"      .ignored-fileType {"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        background-color: mui-color(\u0027white\u0027);"},{"lineNumber":689,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027grey\u0027, \u0027800\u0027);"},{"lineNumber":690,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":691,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":692,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":693,"author":{"gitId":"-"},"content":""},{"lineNumber":694,"author":{"gitId":"-"},"content":"  .files {"},{"lineNumber":695,"author":{"gitId":"-"},"content":"    clear: left;"},{"lineNumber":696,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":697,"author":{"gitId":"-"},"content":""},{"lineNumber":698,"author":{"gitId":"-"},"content":"  .empty {"},{"lineNumber":699,"author":{"gitId":"-"},"content":"    text-align: center;"},{"lineNumber":700,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":701,"author":{"gitId":"-"},"content":"}"},{"lineNumber":702,"author":{"gitId":"-"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"vvidday":167,"ckcherry23":33,"-":502}},{"path":"frontend/src/views/c-home.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"#home"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"  template(v-if\u003d\"userUpdated\")"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"    c-resizer"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"      template(v-slot:left)"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"        #summary-wrapper"},{"lineNumber":7,"author":{"gitId":"-"},"content":"          c-title(ref\u003d\"cTitle\")"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"          c-summary.tab-padding("},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"            ref\u003d\"summary\","},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"            v-bind:repos\u003d\"users\","},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"            v-bind:error-messages\u003d\"errorMessages\""},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"          )"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"          .timestamp-footer"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"            span Generated by\u0026nbsp;"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"            a("},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"              v-bind:href\u003d\"getSpecificCommitLink()\", target\u003d\"_blank\""},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"            )"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"              strong this version"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"            span \u0026nbsp;of\u0026nbsp;"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"            a("},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"              v-bind:href\u003d\"getRepoSenseHomeLink()\", target\u003d\"_blank\""},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"            )"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"              strong RepoSense"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"            span \u0026nbsp;("},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"            a("},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"              v-bind:href\u003d\"getUserGuideLink()\", target \u003d\"_blank\""},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"            )"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"              strong User Guide"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"            span ) on {{ creationDate }}"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"          .report-generation-time(style\u003d\"display: none;\")"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"            span {{ reportGenerationTime }}"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"      template(v-slot:right)"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        #tabs-wrapper(ref\u003d\"tabWrapper\")"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"          .tab-content.panel-padding"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"            .tab-pane"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"              c-authorship#tab-authorship(v-if\u003d\"tabType \u003d\u003d\u003d \u0027authorship\u0027\")"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"              c-zoom#tab-zoom(v-else-if\u003d\"tabType \u003d\u003d\u003d \u0027zoom\u0027\")"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"              #tab-empty(v-else)"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"                .title"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"                  h2 Welcome to this RepoSense report!"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"                  p The charts on the left show the contribution activities, grouped by repository and author."},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"                  p"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"                    | To view the code attributed to a specific author, click the \u0026nbsp;"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"                    font-awesome-icon(icon\u003d\"code\")"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"                    | \u0026nbsp; icon next to that author\u0027s name."},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"                    br"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"                    | To view the breakdown of commits made by a specific author, click the \u0026nbsp;"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"                    font-awesome-icon(icon\u003d\"list-ul\")"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"                    | \u0026nbsp; icon next to that author\u0027s name."},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"                    br"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"                    | To hide the code view and show only the activity charts, click the \u0026nbsp;"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"                    font-awesome-icon(icon\u003d\"caret-right\")"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"                    | \u0026nbsp; icon on the centre divider."},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"                  p"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"                    | See the \u0026nbsp;"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"                    a("},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"                      v-bind:href\u003d\"getUsingReportsUserGuideLink()\", target\u003d\"_blank\""},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"                    )"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"                      strong User Guide"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"                    | \u0026nbsp; to get a better understanding of how to interpret the report."},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"  template(v-else)"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"    .empty Please upload a .zip file generated by RepoSense."},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"    form#file-upload(onsubmit\u003d\"return false;\")"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"      input(type\u003d\"file\", accept\u003d\".zip\", v-on:change\u003d\"updateReportZip\")"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"\u003c/template\u003e"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"\u003cscript lang\u003d\u0027ts\u0027\u003e"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"import { defineComponent } from \u0027vue\u0027;"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"import cTitle from \u0027../components/c-title.vue\u0027;"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"import cResizer from \u0027../components/c-resizer.vue\u0027;"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"import cZoom from \u0027./c-zoom.vue\u0027;"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"import cSummary from \u0027./c-summary.vue\u0027;"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"import cAuthorship from \u0027./c-authorship.vue\u0027;"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"const home \u003d defineComponent({"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"  name: \u0027c-home\u0027,"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"  components: {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    cTitle,"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"    cResizer,"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"    cZoom,"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"    cSummary,"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"    cAuthorship,"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"  },"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"  props: {"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"    updateReportZip: {"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"      type: Function,"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"    repos: {"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"      type: Object,"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"    users: {"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"      type: Array,"},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"    userUpdated: {"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"      type: Boolean,"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"    loadingOverlayOpacity: {"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"      type: Number,"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"    tabType: {"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"      type: String,"},{"lineNumber":111,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":113,"author":{"gitId":"MarcusTXK"},"content":"    creationDate: {"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"      type: String,"},{"lineNumber":115,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":116,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":117,"author":{"gitId":"MarcusTXK"},"content":"    reportGenerationTime: {"},{"lineNumber":118,"author":{"gitId":"MarcusTXK"},"content":"      type: String,"},{"lineNumber":119,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":120,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":121,"author":{"gitId":"MarcusTXK"},"content":"    errorMessages: {"},{"lineNumber":122,"author":{"gitId":"MarcusTXK"},"content":"      type: Object,"},{"lineNumber":123,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":124,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":125,"author":{"gitId":"MarcusTXK"},"content":"  },"},{"lineNumber":126,"author":{"gitId":"MarcusTXK"},"content":"  methods: {"},{"lineNumber":127,"author":{"gitId":"MarcusTXK"},"content":"    getRepoSenseHomeLink() {"},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"      const version \u003d window.repoSenseVersion;"},{"lineNumber":129,"author":{"gitId":"MarcusTXK"},"content":"      if (!version) {"},{"lineNumber":130,"author":{"gitId":"MarcusTXK"},"content":"        return `${window.HOME_PAGE_URL}/RepoSense/`;"},{"lineNumber":131,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"      return `${window.HOME_PAGE_URL}`;"},{"lineNumber":133,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"    getSpecificCommitLink() {"},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"      const version \u003d window.repoSenseVersion;"},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":"      if (!version) {"},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"        return `${window.REPOSENSE_REPO_URL}`;"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"      if (version.startsWith(\u0027v\u0027)) {"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"        return `${window.REPOSENSE_REPO_URL}/releases/tag/${version}`;"},{"lineNumber":142,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":143,"author":{"gitId":"MarcusTXK"},"content":"      return `${window.REPOSENSE_REPO_URL}/commit/${version}`;"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"    getUserGuideLink() {"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"      const version \u003d window.repoSenseVersion;"},{"lineNumber":148,"author":{"gitId":"MarcusTXK"},"content":"      if (!version) {"},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"        return `${window.HOME_PAGE_URL}/RepoSense/ug/index.html`;"},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"      return `${window.HOME_PAGE_URL}/ug/index.html`;"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":"    getUsingReportsUserGuideLink() {"},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":"      const version \u003d window.repoSenseVersion;"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"      if (!version) {"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":"        return `${window.HOME_PAGE_URL}/RepoSense/ug/usingReports.html`;"},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":159,"author":{"gitId":"MarcusTXK"},"content":"      return `${window.HOME_PAGE_URL}/ug/usingReports.html`;"},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":"  },"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":"});"},{"lineNumber":163,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":164,"author":{"gitId":"MarcusTXK"},"content":"export default home;"},{"lineNumber":165,"author":{"gitId":"MarcusTXK"},"content":"\u003c/script\u003e"}],"authorContributionMap":{"MarcusTXK":162,"-":3}},{"path":"frontend/src/views/c-summary.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"#summary"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"  form.summary-picker.mui-form--inline(v-if\u003d\"!isWidgetMode\", onsubmit\u003d\"return false;\")"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    .summary-picker__section"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      .mui-textfield.search_box"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        input(type\u003d\"text\", v-on:change\u003d\"updateFilterSearch\", v-model\u003d\"filterSearch\")"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        label search"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        button.mui-btn.mui-btn--raised(type\u003d\"button\", v-on:click.prevent\u003d\"resetFilterSearch\") x"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      .mui-select.grouping"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        select(v-model\u003d\"filterGroupSelection\")"},{"lineNumber":11,"author":{"gitId":"-"},"content":"          option(value\u003d\"groupByNone\") None"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          option(value\u003d\"groupByRepos\") Repo/Branch"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          option(value\u003d\"groupByAuthors\") Author"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        label group by"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      .mui-select.sort-group"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        select(v-model\u003d\"sortGroupSelection\", v-on:change\u003d\"getFiltered\")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"          option(value\u003d\"groupTitle\") \u0026uarr; group title"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          option(value\u003d\"groupTitle dsc\") \u0026darr; group title"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          option(value\u003d\"totalCommits\") \u0026uarr; contribution"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          option(value\u003d\"totalCommits dsc\") \u0026darr; contribution"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          option(value\u003d\"variance\") \u0026uarr; variance"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          option(value\u003d\"variance dsc\") \u0026darr; variance"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        label sort groups by"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      .mui-select.sort-within-group"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        select("},{"lineNumber":26,"author":{"gitId":"-"},"content":"          v-model\u003d\"sortWithinGroupSelection\","},{"lineNumber":27,"author":{"gitId":"-"},"content":"          v-bind:disabled\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 || allGroupsMerged\","},{"lineNumber":28,"author":{"gitId":"-"},"content":"          v-on:change\u003d\"getFiltered\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          option(value\u003d\"title\") \u0026uarr; title"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          option(value\u003d\"title dsc\") \u0026darr; title"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          option(value\u003d\"totalCommits\") \u0026uarr; contribution"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          option(value\u003d\"totalCommits dsc\") \u0026darr; contribution"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          option(value\u003d\"variance\") \u0026uarr; variance"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          option(value\u003d\"variance dsc\") \u0026darr; variance"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        label sort within groups by"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      .mui-select.granularity"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        select(v-model\u003d\"filterTimeFrame\", v-on:change\u003d\"getFiltered\")"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          option(value\u003d\"commit\") Commit"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          option(value\u003d\"day\") Day"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          option(value\u003d\"week\") Week"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        label granularity"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      .mui-textfield"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        input(v-if\u003d\"isSafariBrowser\", type\u003d\"text\", placeholder\u003d\"yyyy-mm-dd\","},{"lineNumber":45,"author":{"gitId":"-"},"content":"          v-bind:value\u003d\"filterSinceDate\", v-on:keyup.enter\u003d\"updateTmpFilterSinceDate\","},{"lineNumber":46,"author":{"gitId":"-"},"content":"          onkeydown\u003d\"formatInputDateOnKeyDown(event)\", oninput\u003d\"appendDashInputDate(event)\", maxlength\u003d10)"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        input(v-else, type\u003d\"date\", name\u003d\"since\", v-bind:value\u003d\"filterSinceDate\", v-on:input\u003d\"updateTmpFilterSinceDate\","},{"lineNumber":48,"author":{"gitId":"-"},"content":"          v-bind:min\u003d\"minDate\", v-bind:max\u003d\"filterUntilDate\")"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        label since"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      .mui-textfield"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        input(v-if\u003d\"isSafariBrowser\", type\u003d\"text\", placeholder\u003d\"yyyy-mm-dd\","},{"lineNumber":52,"author":{"gitId":"-"},"content":"          v-bind:value\u003d\"filterUntilDate\", v-on:keyup.enter\u003d\"updateTmpFilterUntilDate\","},{"lineNumber":53,"author":{"gitId":"-"},"content":"          onkeydown\u003d\"formatInputDateOnKeyDown(event)\", oninput\u003d\"appendDashInputDate(event)\", maxlength\u003d10)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        input(v-else, type\u003d\"date\", name\u003d\"until\", v-bind:value\u003d\"filterUntilDate\", v-on:input\u003d\"updateTmpFilterUntilDate\","},{"lineNumber":55,"author":{"gitId":"-"},"content":"          v-bind:min\u003d\"filterSinceDate\", v-bind:max\u003d\"maxDate\")"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        label until"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      .mui-textfield"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        a(v-on:click\u003d\"resetDateRange\") Reset date range"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      .summary-picker__checkboxes.summary-picker__section"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        label.filter-breakdown"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          input.mui-checkbox("},{"lineNumber":62,"author":{"gitId":"-"},"content":"            type\u003d\"checkbox\","},{"lineNumber":63,"author":{"gitId":"-"},"content":"            v-model\u003d\"filterBreakdown\","},{"lineNumber":64,"author":{"gitId":"-"},"content":"            v-on:change\u003d\"toggleBreakdown\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          span breakdown by file type"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        label.merge-group("},{"lineNumber":68,"author":{"gitId":"-"},"content":"          v-bind:style\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 ? { opacity:0.5 } : { opacity:1.0 }\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          input.mui-checkbox("},{"lineNumber":71,"author":{"gitId":"-"},"content":"            type\u003d\"checkbox\","},{"lineNumber":72,"author":{"gitId":"-"},"content":"            v-model\u003d\"allGroupsMerged\","},{"lineNumber":73,"author":{"gitId":"-"},"content":"            v-bind:disabled\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          span merge all groups"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"  .error-message-box(v-if\u003d\"Object.entries(errorMessages).length \u0026\u0026 !isWidgetMode\")"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    .error-message-box__close-button(v-on:click\u003d\"dismissTab($event)\") \u0026times;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    .error-message-box__message The following issues occurred when analyzing the following repositories:"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    .error-message-box__failed-repo("},{"lineNumber":80,"author":{"gitId":"-"},"content":"        v-for\u003d\"errorBlock in errorIsShowingMore\\"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          ? errorMessages\\"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          : Object.values(errorMessages).slice(0, numberOfErrorMessagesToShow)\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      font-awesome-icon(icon\u003d\"exclamation\")"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      span.error-message-box__failed-repo--name {{ errorBlock.repoName }}"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      .error-message-box__failed-repo--reason("},{"lineNumber":87,"author":{"gitId":"-"},"content":"        v-if\u003d\"errorBlock.errorMessage.startsWith(\u0027Unexpected error stack trace\u0027)\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        span Oops, an unexpected error occurred. If this is due to a problem in RepoSense, please report in\u0026nbsp;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":91,"author":{"gitId":"-"},"content":"          v-bind:href\u003d\"getReportIssueGitHubLink(errorBlock.errorMessage)\", target\u003d\"_blank\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          strong our issue tracker\u0026nbsp;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        span or email us at\u0026nbsp;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        a("},{"lineNumber":96,"author":{"gitId":"-"},"content":"          v-bind:href\u003d\"getReportIssueEmailLink(errorBlock.errorMessage)\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          span {{ getReportIssueEmailAddress() }}"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      .error-message-box__failed-repo--reason(v-else) {{ errorBlock.errorMessage }}\\"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    .error-message-box__show-more-container(v-if\u003d\"Object.keys(errorMessages).length \u003e numberOfErrorMessagesToShow\")"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      span(v-if\u003d\"!errorIsShowingMore\") Remaining error messages omitted to save space.\u0026nbsp;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      a(v-if\u003d\"!errorIsShowingMore\", v-on:click\u003d\"toggleErrorShowMore()\") SHOW ALL..."},{"lineNumber":103,"author":{"gitId":"-"},"content":"      a(v-else, v-on:click\u003d\"toggleErrorShowMore()\") SHOW LESS..."},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"  .fileTypes(v-if\u003d\"filterBreakdown \u0026\u0026 !isWidgetMode\")"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    .checkboxes.mui-form--inline(v-if\u003d\"Object.keys(fileTypeColors).length \u003e 0\")"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      label(style\u003d\u0027background-color: #000000; color: #ffffff\u0027)"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        input.mui-checkbox--fileType#all(type\u003d\"checkbox\", v-model\u003d\"checkAllFileTypes\")"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        span All:\u0026nbsp;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      template(v-for\u003d\"fileType in Object.keys(fileTypeColors)\", v-bind:key\u003d\"fileType\")"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        label("},{"lineNumber":111,"author":{"gitId":"-"},"content":"          v-bind:style\u003d\"{ \u0027background-color\u0027: fileTypeColors[fileType], \\"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            \u0027color\u0027: getFontColor(fileTypeColors[fileType])}\""},{"lineNumber":113,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":114,"author":{"gitId":"-"},"content":"          input.mui-checkbox--fileType("},{"lineNumber":115,"author":{"gitId":"-"},"content":"            type\u003d\"checkbox\","},{"lineNumber":116,"author":{"gitId":"-"},"content":"            v-bind:id\u003d\"fileType\","},{"lineNumber":117,"author":{"gitId":"-"},"content":"            v-bind:value\u003d\"fileType\","},{"lineNumber":118,"author":{"gitId":"-"},"content":"            v-model\u003d\"checkedFileTypes\","},{"lineNumber":119,"author":{"gitId":"-"},"content":"            v-on:change\u003d\"getFiltered\""},{"lineNumber":120,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":121,"author":{"gitId":"-"},"content":"          span {{ fileType }}"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  c-summary-charts("},{"lineNumber":123,"author":{"gitId":"-"},"content":"    v-bind:filtered\u003d\"filtered\","},{"lineNumber":124,"author":{"gitId":"-"},"content":"    v-bind:checked-file-types\u003d\"checkedFileTypes\","},{"lineNumber":125,"author":{"gitId":"-"},"content":"    v-bind:avg-contribution-size\u003d\"avgContributionSize\","},{"lineNumber":126,"author":{"gitId":"-"},"content":"    v-bind:filter-group-selection\u003d\"filterGroupSelection\","},{"lineNumber":127,"author":{"gitId":"-"},"content":"    v-bind:filter-breakdown\u003d\"filterBreakdown\","},{"lineNumber":128,"author":{"gitId":"-"},"content":"    v-bind:filter-time-frame\u003d\"filterTimeFrame\","},{"lineNumber":129,"author":{"gitId":"-"},"content":"    v-bind:filter-since-date\u003d\"filterSinceDate\","},{"lineNumber":130,"author":{"gitId":"-"},"content":"    v-bind:filter-until-date\u003d\"filterUntilDate\","},{"lineNumber":131,"author":{"gitId":"-"},"content":"    v-bind:filter-search\u003d\"filterSearch\","},{"lineNumber":132,"author":{"gitId":"-"},"content":"    v-bind:min-date\u003d\"minDate\","},{"lineNumber":133,"author":{"gitId":"-"},"content":"    v-bind:max-date\u003d\"maxDate\","},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:sort-group-selection\u003d\"sortGroupSelection\","},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:chart-group-index\u003d\"chartGroupIndex\","},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"    v-bind:chart-index\u003d\"chartIndex\""},{"lineNumber":137,"author":{"gitId":"-"},"content":"  )"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"vvidday"},"content":"\u003cscript lang\u003d\u0027ts\u0027\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":142,"author":{"gitId":"vvidday"},"content":"import { PropType, defineComponent } from \u0027vue\u0027;"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"import cSummaryCharts from \u0027../components/c-summary-charts.vue\u0027;"},{"lineNumber":145,"author":{"gitId":"ckcherry23"},"content":"import getNonRepeatingColor from \u0027../utils/random-color-generator\u0027;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"import sortFiltered from \u0027../utils/repo-sorter\u0027;"},{"lineNumber":147,"author":{"gitId":"vvidday"},"content":"import {"},{"lineNumber":148,"author":{"gitId":"vvidday"},"content":"  Commit,"},{"lineNumber":149,"author":{"gitId":"vvidday"},"content":"  DailyCommit,"},{"lineNumber":150,"author":{"gitId":"vvidday"},"content":"  Repo,"},{"lineNumber":151,"author":{"gitId":"vvidday"},"content":"  User,"},{"lineNumber":152,"author":{"gitId":"vvidday"},"content":"  isCommit,"},{"lineNumber":153,"author":{"gitId":"vvidday"},"content":"  CommitResult,"},{"lineNumber":154,"author":{"gitId":"vvidday"},"content":"} from \u0027../types/types\u0027;"},{"lineNumber":155,"author":{"gitId":"vvidday"},"content":"import { ErrorMessage } from \u0027../types/zod/summary-type\u0027;"},{"lineNumber":156,"author":{"gitId":"ckcherry23"},"content":"import { AuthorFileTypeContributions, FileTypeAndContribution } from \u0027../types/zod/commits-type\u0027;"},{"lineNumber":157,"author":{"gitId":"vvidday"},"content":"import { ZoomInfo } from \u0027../types/vuex.d\u0027;"},{"lineNumber":158,"author":{"gitId":"vvidday"},"content":"import {"},{"lineNumber":159,"author":{"gitId":"vvidday"},"content":"  FilterGroupSelection, FilterTimeFrame, SortGroupSelection, SortWithinGroupSelection,"},{"lineNumber":160,"author":{"gitId":"vvidday"},"content":"} from \u0027../types/summary\u0027;"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"const dateFormatRegex \u003d /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$/;"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"vvidday"},"content":"export default defineComponent({"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  name: \u0027c-summary\u0027,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    cSummaryCharts,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":169,"author":{"gitId":"ckcherry23"},"content":"  props: {"},{"lineNumber":170,"author":{"gitId":"ckcherry23"},"content":"    repos: {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      type: Array\u003cRepo\u003e,"},{"lineNumber":172,"author":{"gitId":"ckcherry23"},"content":"      required: true,"},{"lineNumber":173,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":174,"author":{"gitId":"ckcherry23"},"content":"    errorMessages: {"},{"lineNumber":175,"author":{"gitId":"vvidday"},"content":"      type: Object as PropType\u003cErrorMessage\u003e,"},{"lineNumber":176,"author":{"gitId":"ckcherry23"},"content":"      default() {"},{"lineNumber":177,"author":{"gitId":"ckcherry23"},"content":"        return {};"},{"lineNumber":178,"author":{"gitId":"ckcherry23"},"content":"      },"},{"lineNumber":179,"author":{"gitId":"ckcherry23"},"content":"    },"},{"lineNumber":180,"author":{"gitId":"MarcusTXK"},"content":"    isWidgetMode: {"},{"lineNumber":181,"author":{"gitId":"MarcusTXK"},"content":"      type: Boolean,"},{"lineNumber":182,"author":{"gitId":"MarcusTXK"},"content":"      default: false,"},{"lineNumber":183,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":184,"author":{"gitId":"ckcherry23"},"content":"  },"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      checkedFileTypes: [] as Array\u003cstring\u003e,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      fileTypes: [] as Array\u003cstring\u003e,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      filtered: [] as Array\u003cArray\u003cUser\u003e\u003e,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      filterSearch: \u0027\u0027,"},{"lineNumber":191,"author":{"gitId":"vvidday"},"content":"      filterGroupSelection: FilterGroupSelection.GroupByRepos,"},{"lineNumber":192,"author":{"gitId":"vvidday"},"content":"      sortGroupSelection: SortGroupSelection.GroupTitleDsc, // UI for sorting groups"},{"lineNumber":193,"author":{"gitId":"vvidday"},"content":"      sortWithinGroupSelection: SortWithinGroupSelection.Title, // UI for sorting within groups"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      sortingOption: \u0027\u0027,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      isSortingDsc: \u0027\u0027,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      sortingWithinOption: \u0027\u0027,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      isSortingWithinDsc: \u0027\u0027,"},{"lineNumber":198,"author":{"gitId":"vvidday"},"content":"      filterTimeFrame: FilterTimeFrame.Commit,"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      filterBreakdown: false,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      tmpFilterSinceDate: \u0027\u0027,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      tmpFilterUntilDate: \u0027\u0027,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      hasModifiedSinceDate: window.isSinceDateProvided,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      hasModifiedUntilDate: window.isUntilDateProvided,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      filterHash: \u0027\u0027,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      minDate: window.sinceDate,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      maxDate: window.untilDate,"},{"lineNumber":207,"author":{"gitId":"vvidday"},"content":"      fileTypeColors: {} as { [key: string]: string },"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      isSafariBrowser: /.*Version.*Safari.*/.test(navigator.userAgent),"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      filterGroupSelectionWatcherFlag: false,"},{"lineNumber":210,"author":{"gitId":"MarcusTXK"},"content":"      chartGroupIndex: undefined as number | undefined,"},{"lineNumber":211,"author":{"gitId":"MarcusTXK"},"content":"      chartIndex: undefined as number | undefined,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      errorIsShowingMore: false,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      numberOfErrorMessagesToShow: 4,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    checkAllFileTypes: {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      get() {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return this.checkedFileTypes.length \u003d\u003d\u003d this.fileTypes.length;"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":221,"author":{"gitId":"vvidday"},"content":"      set(value: boolean) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        if (value) {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"          this.checkedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"          this.checkedFileTypes \u003d [];"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    avgContributionSize() {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      let totalLines \u003d 0;"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      let totalCount \u003d 0;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      this.repos.forEach((repo) \u003d\u003e {"},{"lineNumber":235,"author":{"gitId":"vvidday"},"content":"        repo.users?.forEach((user) \u003d\u003e {"},{"lineNumber":236,"author":{"gitId":"MarcusTXK"},"content":"          if (user.checkedFileTypeContribution \u003d\u003d\u003d undefined || user.checkedFileTypeContribution \u003d\u003d\u003d 0) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            this.updateCheckedFileTypeContribution(user);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":239,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":240,"author":{"gitId":"MarcusTXK"},"content":"          if (user.checkedFileTypeContribution \u0026\u0026 user.checkedFileTypeContribution \u003e 0) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            totalCount +\u003d 1;"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            totalLines +\u003d user.checkedFileTypeContribution;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":246,"author":{"gitId":"MarcusTXK"},"content":"      if (totalCount \u003d\u003d\u003d 0) {"},{"lineNumber":247,"author":{"gitId":"MarcusTXK"},"content":"        return 0;"},{"lineNumber":248,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      return totalLines / totalCount;"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"    allGroupsMerged: {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      get() {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        if (this.mergedGroups.length \u003d\u003d\u003d 0) {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"          return false;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        return this.mergedGroups.length \u003d\u003d\u003d this.filtered.length;"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":259,"author":{"gitId":"vvidday"},"content":"      set(value: boolean) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        if (value) {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"          const mergedGroups: Array\u003cstring\u003e \u003d [];"},{"lineNumber":262,"author":{"gitId":"-"},"content":"          this.filtered.forEach((group) \u003d\u003e {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            mergedGroups.push(this.getGroupName(group));"},{"lineNumber":264,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":265,"author":{"gitId":"-"},"content":"          this.filtered \u003d [];"},{"lineNumber":266,"author":{"gitId":"-"},"content":"          this.$store.commit(\u0027updateMergedGroup\u0027, mergedGroups);"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"          this.$store.commit(\u0027updateMergedGroup\u0027, []);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    filterSinceDate() {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      if (this.tmpFilterSinceDate \u0026\u0026 this.tmpFilterSinceDate \u003e\u003d this.minDate) {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        return this.tmpFilterSinceDate;"},{"lineNumber":276,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      // If user clears the since date field"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      return this.minDate;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"    filterUntilDate() {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      if (this.tmpFilterUntilDate \u0026\u0026 this.tmpFilterUntilDate \u003c\u003d this.maxDate) {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        return this.tmpFilterUntilDate;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      return this.maxDate;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"    ...mapState([\u0027mergedGroups\u0027]),"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":290,"author":{"gitId":"vvidday"},"content":"  watch: {"},{"lineNumber":291,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":292,"author":{"gitId":"vvidday"},"content":"    filterGroupSelection() {"},{"lineNumber":293,"author":{"gitId":"vvidday"},"content":"      // Deactivates watcher"},{"lineNumber":294,"author":{"gitId":"vvidday"},"content":"      if (!this.filterGroupSelectionWatcherFlag) {"},{"lineNumber":295,"author":{"gitId":"vvidday"},"content":"        return;"},{"lineNumber":296,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":297,"author":{"gitId":"vvidday"},"content":"      const { allGroupsMerged } \u003d this;"},{"lineNumber":298,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":299,"author":{"gitId":"vvidday"},"content":"      this.$store.dispatch(\u0027incrementLoadingOverlayCountForceReload\u0027, 1).then(() \u003d\u003e {"},{"lineNumber":300,"author":{"gitId":"vvidday"},"content":"        this.getFilteredRepos();"},{"lineNumber":301,"author":{"gitId":"vvidday"},"content":"        this.updateMergedGroup(allGroupsMerged);"},{"lineNumber":302,"author":{"gitId":"vvidday"},"content":"        this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, -1);"},{"lineNumber":303,"author":{"gitId":"vvidday"},"content":"      });"},{"lineNumber":304,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":305,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":306,"author":{"gitId":"vvidday"},"content":"    \u0027$store.state.summaryDates\u0027: function () {"},{"lineNumber":307,"author":{"gitId":"vvidday"},"content":"      this.hasModifiedSinceDate \u003d true;"},{"lineNumber":308,"author":{"gitId":"vvidday"},"content":"      this.hasModifiedUntilDate \u003d true;"},{"lineNumber":309,"author":{"gitId":"vvidday"},"content":"      this.tmpFilterSinceDate \u003d this.$store.state.summaryDates.since;"},{"lineNumber":310,"author":{"gitId":"vvidday"},"content":"      this.tmpFilterUntilDate \u003d this.$store.state.summaryDates.until;"},{"lineNumber":311,"author":{"gitId":"vvidday"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":312,"author":{"gitId":"vvidday"},"content":"      this.getFiltered();"},{"lineNumber":313,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":314,"author":{"gitId":"vvidday"},"content":""},{"lineNumber":315,"author":{"gitId":"vvidday"},"content":"    mergedGroups: {"},{"lineNumber":316,"author":{"gitId":"vvidday"},"content":"      deep: true,"},{"lineNumber":317,"author":{"gitId":"vvidday"},"content":"      handler() {"},{"lineNumber":318,"author":{"gitId":"vvidday"},"content":"        this.getFiltered();"},{"lineNumber":319,"author":{"gitId":"vvidday"},"content":"      },"},{"lineNumber":320,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":321,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":322,"author":{"gitId":"vvidday"},"content":"  created() {"},{"lineNumber":323,"author":{"gitId":"vvidday"},"content":"    this.processFileTypes();"},{"lineNumber":324,"author":{"gitId":"vvidday"},"content":"    this.renderFilterHash();"},{"lineNumber":325,"author":{"gitId":"vvidday"},"content":"    this.getFiltered();"},{"lineNumber":326,"author":{"gitId":"vvidday"},"content":"    if (this.$store.state.tabZoomInfo.isRefreshing) {"},{"lineNumber":327,"author":{"gitId":"vvidday"},"content":"      const zoomInfo \u003d Object.assign({}, this.$store.state.tabZoomInfo);"},{"lineNumber":328,"author":{"gitId":"vvidday"},"content":"      this.restoreZoomFiltered(zoomInfo);"},{"lineNumber":329,"author":{"gitId":"vvidday"},"content":"    }"},{"lineNumber":330,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":331,"author":{"gitId":"vvidday"},"content":"  mounted() {"},{"lineNumber":332,"author":{"gitId":"vvidday"},"content":"    // Delay execution of filterGroupSelection watcher"},{"lineNumber":333,"author":{"gitId":"vvidday"},"content":"    // to prevent clearing of merged groups"},{"lineNumber":334,"author":{"gitId":"vvidday"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":335,"author":{"gitId":"vvidday"},"content":"      this.filterGroupSelectionWatcherFlag \u003d true;"},{"lineNumber":336,"author":{"gitId":"vvidday"},"content":"    }, 0);"},{"lineNumber":337,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":338,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":339,"author":{"gitId":"vvidday"},"content":"    dismissTab(event: Event) {"},{"lineNumber":340,"author":{"gitId":"vvidday"},"content":"      if (event.target instanceof Element \u0026\u0026 event.target.parentNode instanceof HTMLElement) {"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        event.target.parentNode.style.display \u003d \u0027none\u0027;"},{"lineNumber":342,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"    // view functions //"},{"lineNumber":346,"author":{"gitId":"vvidday"},"content":"    getReportIssueGitHubLink(stackTrace: string) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      return `${window.REPOSENSE_REPO_URL}/issues/new?title\u003d${this.getReportIssueTitle()"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      }\u0026body\u003d${this.getReportIssueMessage(stackTrace)}`;"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"    getReportIssueEmailAddress() {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      return \u0027seer@comp.nus.edu.sg\u0027;"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"vvidday"},"content":"    getReportIssueEmailLink(stackTrace: string) {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      return `mailto:${this.getReportIssueEmailAddress()}?subject\u003d${this.getReportIssueTitle()"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      }\u0026body\u003d${this.getReportIssueMessage(stackTrace)}`;"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"    getReportIssueTitle() {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      return `${encodeURI(\u0027Unexpected error with RepoSense version \u0027)}${window.repoSenseVersion}`;"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"vvidday"},"content":"    getReportIssueMessage(message: string) {"},{"lineNumber":365,"author":{"gitId":"-"},"content":"      return encodeURI(message);"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"    // model functions //"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    resetFilterSearch() {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      this.filterSearch \u003d \u0027\u0027;"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      this.getFiltered();"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":373,"author":{"gitId":"vvidday"},"content":"    updateFilterSearch(evt: Event) {"},{"lineNumber":374,"author":{"gitId":"vvidday"},"content":"      // Only called from an input onchange event, target guaranteed to be input element"},{"lineNumber":375,"author":{"gitId":"vvidday"},"content":"      this.filterSearch \u003d (evt.target as HTMLInputElement).value;"},{"lineNumber":376,"author":{"gitId":"-"},"content":"      this.getFiltered();"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"    setSummaryHash() {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      const { addHash, encodeHash } \u003d window;"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"      addHash(\u0027search\u0027, this.filterSearch);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"      addHash(\u0027sort\u0027, this.sortGroupSelection);"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      addHash(\u0027sortWithin\u0027, this.sortWithinGroupSelection);"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"      if (this.hasModifiedSinceDate) {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        addHash(\u0027since\u0027, this.filterSinceDate);"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"      if (this.hasModifiedUntilDate) {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        addHash(\u0027until\u0027, this.filterUntilDate);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"      addHash(\u0027timeframe\u0027, this.filterTimeFrame);"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"      let mergedGroupsHash \u003d this.mergedGroups.join(window.HASH_DELIMITER);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"      if (mergedGroupsHash.length \u003d\u003d\u003d 0) {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        mergedGroupsHash \u003d \u0027\u0027;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      addHash(\u0027mergegroup\u0027, mergedGroupsHash);"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"      addHash(\u0027groupSelect\u0027, this.filterGroupSelection);"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      addHash(\u0027breakdown\u0027, this.filterBreakdown);"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"      if (this.filterBreakdown) {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        const checkedFileTypesHash \u003d this.checkedFileTypes.length \u003e 0"},{"lineNumber":407,"author":{"gitId":"-"},"content":"          ? this.checkedFileTypes.join(window.HASH_DELIMITER)"},{"lineNumber":408,"author":{"gitId":"-"},"content":"          : \u0027\u0027;"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        addHash(\u0027checkedFileTypes\u0027, checkedFileTypesHash);"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        window.removeHash(\u0027checkedFileTypes\u0027);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"      encodeHash();"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":416,"author":{"gitId":"-"},"content":""},{"lineNumber":417,"author":{"gitId":"-"},"content":"    renderFilterHash() {"},{"lineNumber":418,"author":{"gitId":"vvidday"},"content":"      const convertBool \u003d (txt: string) \u003d\u003e (txt \u003d\u003d\u003d \u0027true\u0027);"},{"lineNumber":419,"author":{"gitId":"-"},"content":"      const hash \u003d Object.assign({}, window.hashParams);"},{"lineNumber":420,"author":{"gitId":"-"},"content":""},{"lineNumber":421,"author":{"gitId":"-"},"content":"      if (hash.search) { this.filterSearch \u003d hash.search; }"},{"lineNumber":422,"author":{"gitId":"vvidday"},"content":"      if (hash.sort \u0026\u0026 Object.values(SortGroupSelection).includes(hash.sort as SortGroupSelection)) {"},{"lineNumber":423,"author":{"gitId":"vvidday"},"content":"        this.sortGroupSelection \u003d hash.sort as SortGroupSelection;"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":425,"author":{"gitId":"MarcusTXK"},"content":"      if (hash.sortWithin"},{"lineNumber":426,"author":{"gitId":"MarcusTXK"},"content":"        \u0026\u0026 Object.values(SortWithinGroupSelection).includes(hash.sortWithin as SortWithinGroupSelection)) {"},{"lineNumber":427,"author":{"gitId":"vvidday"},"content":"        this.sortWithinGroupSelection \u003d hash.sortWithin as SortWithinGroupSelection;"},{"lineNumber":428,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":429,"author":{"gitId":"-"},"content":""},{"lineNumber":430,"author":{"gitId":"vvidday"},"content":"      if (hash.timeframe \u0026\u0026 Object.values(FilterTimeFrame).includes(hash.timeframe as FilterTimeFrame)) {"},{"lineNumber":431,"author":{"gitId":"vvidday"},"content":"        this.filterTimeFrame \u003d hash.timeframe as FilterTimeFrame;"},{"lineNumber":432,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":433,"author":{"gitId":"-"},"content":"      if (hash.mergegroup) {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        this.$store.commit("},{"lineNumber":435,"author":{"gitId":"-"},"content":"          \u0027updateMergedGroup\u0027,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"          hash.mergegroup.split(window.HASH_DELIMITER),"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":439,"author":{"gitId":"-"},"content":"      if (hash.since \u0026\u0026 dateFormatRegex.test(hash.since)) {"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        this.tmpFilterSinceDate \u003d hash.since;"},{"lineNumber":441,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":442,"author":{"gitId":"-"},"content":"      if (hash.until \u0026\u0026 dateFormatRegex.test(hash.until)) {"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        this.tmpFilterUntilDate \u003d hash.until;"},{"lineNumber":444,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"vvidday"},"content":"      if (hash.groupSelect \u0026\u0026 Object.values(FilterGroupSelection).includes(hash.groupSelect as FilterGroupSelection)) {"},{"lineNumber":447,"author":{"gitId":"vvidday"},"content":"        this.filterGroupSelection \u003d hash.groupSelect as FilterGroupSelection;"},{"lineNumber":448,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      if (hash.breakdown) {"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        this.filterBreakdown \u003d convertBool(hash.breakdown);"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":452,"author":{"gitId":"MarcusTXK"},"content":"      if (hash.checkedFileTypes || hash.checkedFileTypes \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        const parsedFileTypes \u003d hash.checkedFileTypes.split(window.HASH_DELIMITER);"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        this.checkedFileTypes \u003d parsedFileTypes.filter((type) \u003d\u003e this.fileTypes.includes(type));"},{"lineNumber":455,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":456,"author":{"gitId":"MarcusTXK"},"content":"      if (hash.chartGroupIndex) {"},{"lineNumber":457,"author":{"gitId":"MarcusTXK"},"content":"        this.chartGroupIndex \u003d parseInt(hash.chartGroupIndex, 10);"},{"lineNumber":458,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":459,"author":{"gitId":"MarcusTXK"},"content":"      if (hash.chartIndex) {"},{"lineNumber":460,"author":{"gitId":"MarcusTXK"},"content":"        this.chartIndex \u003d parseInt(hash.chartIndex, 10);"},{"lineNumber":461,"author":{"gitId":"MarcusTXK"},"content":"      }"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"    getGroupName(group: Array\u003cUser\u003e) {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      return window.getGroupName(group, this.filterGroupSelection);"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"vvidday"},"content":"    isMatchSearchedUser(filterSearch: string, user: User) {"},{"lineNumber":469,"author":{"gitId":"-"},"content":"      return !filterSearch || filterSearch.toLowerCase()"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        .split(\u0027 \u0027)"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        .filter(Boolean)"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        .some((param) \u003d\u003e user.searchPath.includes(param));"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"    toggleBreakdown() {"},{"lineNumber":476,"author":{"gitId":"-"},"content":"      // Reset the file type filter"},{"lineNumber":477,"author":{"gitId":"-"},"content":"      if (this.checkedFileTypes.length !\u003d\u003d this.fileTypes.length) {"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        this.checkedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":479,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":480,"author":{"gitId":"-"},"content":"      this.getFiltered();"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"    async getFiltered() {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"      this.setSummaryHash();"},{"lineNumber":485,"author":{"gitId":"-"},"content":"      window.deactivateAllOverlays();"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"      await this.$store.dispatch(\u0027incrementLoadingOverlayCountForceReload\u0027, 1);"},{"lineNumber":488,"author":{"gitId":"-"},"content":"      this.getFilteredRepos();"},{"lineNumber":489,"author":{"gitId":"-"},"content":"      this.getMergedRepos();"},{"lineNumber":490,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027incrementLoadingOverlayCount\u0027, -1);"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"    getFilteredRepos() {"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      // array of array, sorted by repo"},{"lineNumber":495,"author":{"gitId":"-"},"content":"      const full: Array\u003cArray\u003cUser\u003e\u003e \u003d [];"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"      // create deep clone of this.repos to not modify the original content of this.repos"},{"lineNumber":498,"author":{"gitId":"-"},"content":"      // when merging groups"},{"lineNumber":499,"author":{"gitId":"-"},"content":"      const groups \u003d this.hasMergedGroups() ? JSON.parse(JSON.stringify(this.repos)) as Array\u003cRepo\u003e : this.repos;"},{"lineNumber":500,"author":{"gitId":"-"},"content":"      groups.forEach((repo) \u003d\u003e {"},{"lineNumber":501,"author":{"gitId":"ckcherry23"},"content":"        const res: Array\u003cUser\u003e \u003d [];"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"        // filtering"},{"lineNumber":504,"author":{"gitId":"vvidday"},"content":"        repo.users?.forEach((user) \u003d\u003e {"},{"lineNumber":505,"author":{"gitId":"-"},"content":"          if (this.isMatchSearchedUser(this.filterSearch, user)) {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"            this.getUserCommits(user, this.filterSinceDate, this.filterUntilDate);"},{"lineNumber":507,"author":{"gitId":"-"},"content":"            if (this.filterTimeFrame \u003d\u003d\u003d \u0027week\u0027) {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"              this.splitCommitsWeek(user, this.filterSinceDate, this.filterUntilDate);"},{"lineNumber":509,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":510,"author":{"gitId":"-"},"content":"            this.updateCheckedFileTypeContribution(user);"},{"lineNumber":511,"author":{"gitId":"-"},"content":"            res.push(user);"},{"lineNumber":512,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"        if (res.length) {"},{"lineNumber":516,"author":{"gitId":"-"},"content":"          full.push(res);"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":518,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":519,"author":{"gitId":"-"},"content":"      this.filtered \u003d full;"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"      this.getOptionWithOrder();"},{"lineNumber":522,"author":{"gitId":"-"},"content":""},{"lineNumber":523,"author":{"gitId":"-"},"content":"      const filterControl \u003d {"},{"lineNumber":524,"author":{"gitId":"-"},"content":"        filterGroupSelection: this.filterGroupSelection,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        sortingOption: this.sortingOption,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        sortingWithinOption: this.sortingWithinOption,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        isSortingDsc: this.isSortingDsc,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        isSortingWithinDsc: this.isSortingWithinDsc,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      this.getOptionWithOrder();"},{"lineNumber":531,"author":{"gitId":"-"},"content":"      this.filtered \u003d sortFiltered(this.filtered, filterControl);"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":533,"author":{"gitId":"-"},"content":""},{"lineNumber":534,"author":{"gitId":"vvidday"},"content":"    updateMergedGroup(allGroupsMerged: boolean) {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"      // merge group is not allowed when group by none"},{"lineNumber":536,"author":{"gitId":"-"},"content":"      // also reset merged groups"},{"lineNumber":537,"author":{"gitId":"-"},"content":"      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027 || !allGroupsMerged) {"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateMergedGroup\u0027, []);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        const mergedGroups: Array\u003cstring\u003e \u003d [];"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        this.filtered.forEach((group) \u003d\u003e {"},{"lineNumber":542,"author":{"gitId":"-"},"content":"          mergedGroups.push(this.getGroupName(group));"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        this.$store.commit(\u0027updateMergedGroup\u0027, mergedGroups);"},{"lineNumber":545,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"    getMergedRepos() {"},{"lineNumber":549,"author":{"gitId":"-"},"content":"      this.filtered.forEach((group, groupIndex) \u003d\u003e {"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        if (this.mergedGroups.includes(this.getGroupName(group))) {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"          this.mergeGroupByIndex(this.filtered, groupIndex);"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":553,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":555,"author":{"gitId":"-"},"content":""},{"lineNumber":556,"author":{"gitId":"-"},"content":"    mergeGroupByIndex(filtered: Array\u003cArray\u003cUser\u003e\u003e, groupIndex: number) {"},{"lineNumber":557,"author":{"gitId":"vvidday"},"content":"      const dateToIndexMap: { [key: string]: number } \u003d {};"},{"lineNumber":558,"author":{"gitId":"vvidday"},"content":"      const dailyIndexMap: { [key: string]: number } \u003d {};"},{"lineNumber":559,"author":{"gitId":"-"},"content":"      const mergedCommits: Array\u003cCommit\u003e \u003d [];"},{"lineNumber":560,"author":{"gitId":"-"},"content":"      const mergedDailyCommits: Array\u003cDailyCommit\u003e \u003d [];"},{"lineNumber":561,"author":{"gitId":"vvidday"},"content":"      const mergedFileTypeContribution: AuthorFileTypeContributions \u003d {};"},{"lineNumber":562,"author":{"gitId":"-"},"content":"      let mergedVariance \u003d 0;"},{"lineNumber":563,"author":{"gitId":"-"},"content":"      let totalMergedCheckedFileTypeCommits \u003d 0;"},{"lineNumber":564,"author":{"gitId":"-"},"content":"      filtered[groupIndex].forEach((user) \u003d\u003e {"},{"lineNumber":565,"author":{"gitId":"vvidday"},"content":"        user.commits?.forEach((commit) \u003d\u003e {"},{"lineNumber":566,"author":{"gitId":"-"},"content":"          this.mergeCommits(commit, user, dateToIndexMap, mergedCommits);"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        user.dailyCommits.forEach((commit) \u003d\u003e {"},{"lineNumber":569,"author":{"gitId":"-"},"content":"          this.mergeCommits(commit, user, dailyIndexMap, mergedDailyCommits);"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":571,"author":{"gitId":"-"},"content":""},{"lineNumber":572,"author":{"gitId":"-"},"content":"        this.mergeFileTypeContribution(user, mergedFileTypeContribution);"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"MarcusTXK"},"content":"        totalMergedCheckedFileTypeCommits +\u003d user.checkedFileTypeContribution || 0;"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        mergedVariance +\u003d user.variance;"},{"lineNumber":576,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":577,"author":{"gitId":"-"},"content":"      mergedCommits.sort(window.comparator((ele) \u003d\u003e ele.date));"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      filtered[groupIndex][0].commits \u003d mergedCommits;"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      filtered[groupIndex][0].dailyCommits \u003d mergedDailyCommits;"},{"lineNumber":580,"author":{"gitId":"-"},"content":"      filtered[groupIndex][0].fileTypeContribution \u003d mergedFileTypeContribution;"},{"lineNumber":581,"author":{"gitId":"-"},"content":"      filtered[groupIndex][0].variance \u003d mergedVariance;"},{"lineNumber":582,"author":{"gitId":"-"},"content":"      filtered[groupIndex][0].checkedFileTypeContribution \u003d totalMergedCheckedFileTypeCommits;"},{"lineNumber":583,"author":{"gitId":"-"},"content":""},{"lineNumber":584,"author":{"gitId":"-"},"content":"      // only take the merged group"},{"lineNumber":585,"author":{"gitId":"-"},"content":"      filtered[groupIndex] \u003d filtered[groupIndex].slice(0, 1);"},{"lineNumber":586,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":587,"author":{"gitId":"-"},"content":""},{"lineNumber":588,"author":{"gitId":"-"},"content":"    hasMergedGroups() {"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      return this.mergedGroups.length \u003e 0;"},{"lineNumber":590,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":591,"author":{"gitId":"-"},"content":""},{"lineNumber":592,"author":{"gitId":"vvidday"},"content":"    mergeCommits("},{"lineNumber":593,"author":{"gitId":"vvidday"},"content":"      commit: Commit | DailyCommit,"},{"lineNumber":594,"author":{"gitId":"vvidday"},"content":"      user: User,"},{"lineNumber":595,"author":{"gitId":"vvidday"},"content":"      dateToIndexMap: { [key: string]: number },"},{"lineNumber":596,"author":{"gitId":"-"},"content":"      merged: Array\u003cCommit\u003e | Array\u003cDailyCommit\u003e,"},{"lineNumber":597,"author":{"gitId":"vvidday"},"content":"    ) {"},{"lineNumber":598,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":599,"author":{"gitId":"vvidday"},"content":"        commitResults, date,"},{"lineNumber":600,"author":{"gitId":"-"},"content":"      } \u003d commit;"},{"lineNumber":601,"author":{"gitId":"-"},"content":""},{"lineNumber":602,"author":{"gitId":"-"},"content":"      // bind repoId to each commit"},{"lineNumber":603,"author":{"gitId":"-"},"content":"      commitResults.forEach((commitResult) \u003d\u003e {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        commitResult.repoId \u003d user.repoId;"},{"lineNumber":605,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":606,"author":{"gitId":"-"},"content":""},{"lineNumber":607,"author":{"gitId":"-"},"content":"      if (Object.prototype.hasOwnProperty.call(dateToIndexMap, date)) {"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        const commitWithSameDate \u003d merged[dateToIndexMap[date]];"},{"lineNumber":609,"author":{"gitId":"-"},"content":""},{"lineNumber":610,"author":{"gitId":"-"},"content":"        commitResults.forEach((commitResult) \u003d\u003e {"},{"lineNumber":611,"author":{"gitId":"-"},"content":"          commitWithSameDate.commitResults.push(commitResult);"},{"lineNumber":612,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":613,"author":{"gitId":"vvidday"},"content":"        if (isCommit(commit) \u0026\u0026 isCommit(commitWithSameDate)) {"},{"lineNumber":614,"author":{"gitId":"vvidday"},"content":"          const { insertions, deletions } \u003d commit;"},{"lineNumber":615,"author":{"gitId":"-"},"content":"          commitWithSameDate.insertions +\u003d insertions;"},{"lineNumber":616,"author":{"gitId":"-"},"content":"          commitWithSameDate.deletions +\u003d deletions;"},{"lineNumber":617,"author":{"gitId":"vvidday"},"content":"        }"},{"lineNumber":618,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":619,"author":{"gitId":"-"},"content":"        dateToIndexMap[date] \u003d Object.keys(dateToIndexMap).length;"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        merged.push(JSON.parse(JSON.stringify(commit)));"},{"lineNumber":621,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":623,"author":{"gitId":"-"},"content":""},{"lineNumber":624,"author":{"gitId":"vvidday"},"content":"    mergeFileTypeContribution(user: User, merged: AuthorFileTypeContributions) {"},{"lineNumber":625,"author":{"gitId":"-"},"content":"      Object.entries(user.fileTypeContribution).forEach((fileType) \u003d\u003e {"},{"lineNumber":626,"author":{"gitId":"-"},"content":"        const key \u003d fileType[0];"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        const value \u003d fileType[1];"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"-"},"content":"        if (!Object.prototype.hasOwnProperty.call(merged, key)) {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"          merged[key] \u003d 0;"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        merged[key] +\u003d value;"},{"lineNumber":633,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":634,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":635,"author":{"gitId":"-"},"content":""},{"lineNumber":636,"author":{"gitId":"-"},"content":"    processFileTypes() {"},{"lineNumber":637,"author":{"gitId":"-"},"content":"      const selectedColors \u003d [\u0027#ffe119\u0027, \u0027#4363d8\u0027, \u0027#3cb44b\u0027, \u0027#f58231\u0027, \u0027#911eb4\u0027, \u0027#46f0f0\u0027, \u0027#f032e6\u0027,"},{"lineNumber":638,"author":{"gitId":"-"},"content":"        \u0027#bcf60c\u0027, \u0027#fabebe\u0027, \u0027#008080\u0027, \u0027#e6beff\u0027, \u0027#9a6324\u0027, \u0027#fffac8\u0027, \u0027#800000\u0027, \u0027#aaffc3\u0027, \u0027#808000\u0027, \u0027#ffd8b1\u0027,"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        \u0027#000075\u0027, \u0027#808080\u0027];"},{"lineNumber":640,"author":{"gitId":"vvidday"},"content":"      const fileTypeColors \u003d {} as { [key: string]: string };"},{"lineNumber":641,"author":{"gitId":"-"},"content":"      let i \u003d 0;"},{"lineNumber":642,"author":{"gitId":"-"},"content":""},{"lineNumber":643,"author":{"gitId":"-"},"content":"      this.repos.forEach((repo) \u003d\u003e {"},{"lineNumber":644,"author":{"gitId":"vvidday"},"content":"        repo.users?.forEach((user) \u003d\u003e {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"          Object.keys(user.fileTypeContribution).forEach((fileType) \u003d\u003e {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"            if (!Object.prototype.hasOwnProperty.call(fileTypeColors, fileType)) {"},{"lineNumber":647,"author":{"gitId":"-"},"content":"              if (i \u003c selectedColors.length) {"},{"lineNumber":648,"author":{"gitId":"-"},"content":"                fileTypeColors[fileType] \u003d selectedColors[i];"},{"lineNumber":649,"author":{"gitId":"-"},"content":"                i +\u003d 1;"},{"lineNumber":650,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":651,"author":{"gitId":"-"},"content":"                fileTypeColors[fileType] \u003d getNonRepeatingColor(Object.values(fileTypeColors));"},{"lineNumber":652,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":653,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":654,"author":{"gitId":"-"},"content":"            if (!this.fileTypes.includes(fileType)) {"},{"lineNumber":655,"author":{"gitId":"-"},"content":"              this.fileTypes.push(fileType);"},{"lineNumber":656,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":657,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        this.fileTypeColors \u003d fileTypeColors;"},{"lineNumber":660,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":661,"author":{"gitId":"-"},"content":""},{"lineNumber":662,"author":{"gitId":"-"},"content":"      this.checkedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":663,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateFileTypeColors\u0027, this.fileTypeColors);"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":665,"author":{"gitId":"-"},"content":""},{"lineNumber":666,"author":{"gitId":"vvidday"},"content":"    splitCommitsWeek(user: User, sinceDate: string, untilDate: string) {"},{"lineNumber":667,"author":{"gitId":"-"},"content":"      const { commits } \u003d user;"},{"lineNumber":668,"author":{"gitId":"vvidday"},"content":"      if (commits \u003d\u003d\u003d undefined) {"},{"lineNumber":669,"author":{"gitId":"vvidday"},"content":"        return;"},{"lineNumber":670,"author":{"gitId":"vvidday"},"content":"      }"},{"lineNumber":671,"author":{"gitId":"-"},"content":""},{"lineNumber":672,"author":{"gitId":"-"},"content":"      const res: Array\u003cCommit\u003e \u003d [];"},{"lineNumber":673,"author":{"gitId":"-"},"content":""},{"lineNumber":674,"author":{"gitId":"-"},"content":"      const nextMondayDate \u003d this.dateRounding(sinceDate, 0); // round up for the next monday"},{"lineNumber":675,"author":{"gitId":"-"},"content":""},{"lineNumber":676,"author":{"gitId":"-"},"content":"      const nextMondayMs \u003d (new Date(nextMondayDate)).getTime();"},{"lineNumber":677,"author":{"gitId":"-"},"content":"      const sinceMs \u003d new Date(sinceDate).getTime();"},{"lineNumber":678,"author":{"gitId":"-"},"content":"      const untilMs \u003d (new Date(untilDate)).getTime();"},{"lineNumber":679,"author":{"gitId":"-"},"content":""},{"lineNumber":680,"author":{"gitId":"-"},"content":"      if (nextMondayDate \u003c\u003d untilDate) {"},{"lineNumber":681,"author":{"gitId":"-"},"content":"        this.pushCommitsWeek(sinceMs, nextMondayMs - 1, res, commits);"},{"lineNumber":682,"author":{"gitId":"-"},"content":"        this.pushCommitsWeek(nextMondayMs, untilMs, res, commits);"},{"lineNumber":683,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        this.pushCommitsWeek(sinceMs, untilMs, res, commits);"},{"lineNumber":685,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":686,"author":{"gitId":"-"},"content":"      user.commits \u003d res;"},{"lineNumber":687,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":688,"author":{"gitId":"-"},"content":""},{"lineNumber":689,"author":{"gitId":"-"},"content":"    pushCommitsWeek(sinceMs: number, untilMs: number, res: Array\u003cCommit\u003e, commits: Array\u003cCommit\u003e) {"},{"lineNumber":690,"author":{"gitId":"-"},"content":"      const diff \u003d Math.round(Math.abs((untilMs - sinceMs) / window.DAY_IN_MS));"},{"lineNumber":691,"author":{"gitId":"-"},"content":"      const weekInMS \u003d window.DAY_IN_MS * 7;"},{"lineNumber":692,"author":{"gitId":"-"},"content":""},{"lineNumber":693,"author":{"gitId":"-"},"content":"      for (let weekId \u003d 0; weekId \u003c diff / 7; weekId +\u003d 1) {"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        const startOfWeekMs \u003d sinceMs + (weekId * weekInMS);"},{"lineNumber":695,"author":{"gitId":"-"},"content":"        const endOfWeekMs \u003d startOfWeekMs + weekInMS - window.DAY_IN_MS;"},{"lineNumber":696,"author":{"gitId":"-"},"content":"        const endOfWeekMsWithinUntilMs \u003d endOfWeekMs \u003c\u003d untilMs ? endOfWeekMs : untilMs;"},{"lineNumber":697,"author":{"gitId":"-"},"content":""},{"lineNumber":698,"author":{"gitId":"vvidday"},"content":"        const week: Commit \u003d {"},{"lineNumber":699,"author":{"gitId":"-"},"content":"          insertions: 0,"},{"lineNumber":700,"author":{"gitId":"-"},"content":"          deletions: 0,"},{"lineNumber":701,"author":{"gitId":"-"},"content":"          date: window.getDateStr(startOfWeekMs),"},{"lineNumber":702,"author":{"gitId":"-"},"content":"          endDate: window.getDateStr(endOfWeekMsWithinUntilMs),"},{"lineNumber":703,"author":{"gitId":"-"},"content":"          commitResults: [],"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":705,"author":{"gitId":"-"},"content":""},{"lineNumber":706,"author":{"gitId":"-"},"content":"        this.addLineContributionWeek(endOfWeekMsWithinUntilMs, week, commits);"},{"lineNumber":707,"author":{"gitId":"-"},"content":"        if (week.commitResults.length \u003e 0) {"},{"lineNumber":708,"author":{"gitId":"-"},"content":"          res.push(week);"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":710,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":711,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":712,"author":{"gitId":"-"},"content":""},{"lineNumber":713,"author":{"gitId":"-"},"content":"    addLineContributionWeek(endOfWeekMs: number, week: Commit, commits: Array\u003cCommit\u003e) {"},{"lineNumber":714,"author":{"gitId":"-"},"content":"      // commits are not contiguous, meaning there are gaps of days without"},{"lineNumber":715,"author":{"gitId":"-"},"content":"      // commits, so we are going to check each commit\u0027s date and make sure"},{"lineNumber":716,"author":{"gitId":"-"},"content":"      // it is within the duration of a week"},{"lineNumber":717,"author":{"gitId":"-"},"content":"      while (commits.length \u003e 0"},{"lineNumber":718,"author":{"gitId":"-"},"content":"          \u0026\u0026 (new Date(commits[0].date)).getTime() \u003c\u003d endOfWeekMs) {"},{"lineNumber":719,"author":{"gitId":"-"},"content":"        const commit \u003d commits.shift();"},{"lineNumber":720,"author":{"gitId":"vvidday"},"content":"        // shift() never returns undefined here because we check for commits.length \u003e 0,"},{"lineNumber":721,"author":{"gitId":"vvidday"},"content":"        // but TypeScript is unable to infer this"},{"lineNumber":722,"author":{"gitId":"vvidday"},"content":"        if (commit \u003d\u003d\u003d undefined) {"},{"lineNumber":723,"author":{"gitId":"vvidday"},"content":"          break;"},{"lineNumber":724,"author":{"gitId":"vvidday"},"content":"        }"},{"lineNumber":725,"author":{"gitId":"-"},"content":"        week.insertions +\u003d commit.insertions;"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        week.deletions +\u003d commit.deletions;"},{"lineNumber":727,"author":{"gitId":"-"},"content":"        commit.commitResults.forEach((commitResult) \u003d\u003e week.commitResults.push(commitResult));"},{"lineNumber":728,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"vvidday"},"content":"    getUserCommits(user: User, sinceDate: string, untilDate: string) {"},{"lineNumber":732,"author":{"gitId":"-"},"content":"      user.commits \u003d [];"},{"lineNumber":733,"author":{"gitId":"-"},"content":"      const userFirst \u003d user.dailyCommits[0];"},{"lineNumber":734,"author":{"gitId":"-"},"content":"      const userLast \u003d user.dailyCommits[user.dailyCommits.length - 1];"},{"lineNumber":735,"author":{"gitId":"-"},"content":""},{"lineNumber":736,"author":{"gitId":"-"},"content":"      if (!userFirst) {"},{"lineNumber":737,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":738,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":739,"author":{"gitId":"-"},"content":""},{"lineNumber":740,"author":{"gitId":"-"},"content":"      if (!sinceDate || sinceDate \u003d\u003d\u003d \u0027undefined\u0027) {"},{"lineNumber":741,"author":{"gitId":"-"},"content":"        sinceDate \u003d userFirst.date;"},{"lineNumber":742,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":743,"author":{"gitId":"-"},"content":""},{"lineNumber":744,"author":{"gitId":"-"},"content":"      if (!untilDate) {"},{"lineNumber":745,"author":{"gitId":"-"},"content":"        untilDate \u003d userLast.date;"},{"lineNumber":746,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":747,"author":{"gitId":"-"},"content":""},{"lineNumber":748,"author":{"gitId":"-"},"content":"      user.dailyCommits.forEach((commit) \u003d\u003e {"},{"lineNumber":749,"author":{"gitId":"-"},"content":"        const { date } \u003d commit;"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        if (date \u003e\u003d sinceDate \u0026\u0026 date \u003c\u003d untilDate) {"},{"lineNumber":751,"author":{"gitId":"vvidday"},"content":"          const filteredCommit: DailyCommit \u003d JSON.parse(JSON.stringify(commit));"},{"lineNumber":752,"author":{"gitId":"-"},"content":"          this.filterCommitByCheckedFileTypes(filteredCommit);"},{"lineNumber":753,"author":{"gitId":"-"},"content":""},{"lineNumber":754,"author":{"gitId":"-"},"content":"          if (filteredCommit.commitResults.length \u003e 0) {"},{"lineNumber":755,"author":{"gitId":"vvidday"},"content":"            filteredCommit.commitResults.forEach((commitResult) \u003d\u003e {"},{"lineNumber":756,"author":{"gitId":"vvidday"},"content":"              if (commitResult.messageBody !\u003d\u003d \u0027\u0027) {"},{"lineNumber":757,"author":{"gitId":"vvidday"},"content":"                commitResult.isOpen \u003d true;"},{"lineNumber":758,"author":{"gitId":"vvidday"},"content":"              }"},{"lineNumber":759,"author":{"gitId":"vvidday"},"content":"            });"},{"lineNumber":760,"author":{"gitId":"vvidday"},"content":"            // The typecast is safe here as we add the insertions and deletions fields"},{"lineNumber":761,"author":{"gitId":"vvidday"},"content":"            // in the filterCommitByCheckedFileTypes method above"},{"lineNumber":762,"author":{"gitId":"vvidday"},"content":"            user.commits?.push(filteredCommit as Commit);"},{"lineNumber":763,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":764,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":765,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":766,"author":{"gitId":"-"},"content":""},{"lineNumber":767,"author":{"gitId":"-"},"content":"      return null;"},{"lineNumber":768,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":769,"author":{"gitId":"-"},"content":""},{"lineNumber":770,"author":{"gitId":"vvidday"},"content":"    filterCommitByCheckedFileTypes(commit: DailyCommit) {"},{"lineNumber":771,"author":{"gitId":"ckcherry23"},"content":"      let commitResults \u003d commit.commitResults.map((result) \u003d\u003e {"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        const filteredFileTypes \u003d this.getFilteredFileTypes(result);"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        this.updateCommitResultWithFileTypes(result, filteredFileTypes);"},{"lineNumber":774,"author":{"gitId":"-"},"content":"        return result;"},{"lineNumber":775,"author":{"gitId":"ckcherry23"},"content":"      });"},{"lineNumber":776,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":777,"author":{"gitId":"ckcherry23"},"content":"      if (!this.checkAllFileTypes) {"},{"lineNumber":778,"author":{"gitId":"ckcherry23"},"content":"        commitResults \u003d commitResults.filter("},{"lineNumber":779,"author":{"gitId":"ckcherry23"},"content":"          (result) \u003d\u003e Object.values(result.fileTypesAndContributionMap).length \u003e 0,"},{"lineNumber":780,"author":{"gitId":"ckcherry23"},"content":"        );"},{"lineNumber":781,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":782,"author":{"gitId":"-"},"content":""},{"lineNumber":783,"author":{"gitId":"vvidday"},"content":"      // Typecast from DailyCommit to Commit as we add insertions and deletions fields"},{"lineNumber":784,"author":{"gitId":"vvidday"},"content":"      (commit as Commit).insertions \u003d commitResults.reduce((acc, result) \u003d\u003e acc + result.insertions, 0);"},{"lineNumber":785,"author":{"gitId":"vvidday"},"content":"      (commit as Commit).deletions \u003d commitResults.reduce((acc, result) \u003d\u003e acc + result.deletions, 0);"},{"lineNumber":786,"author":{"gitId":"ckcherry23"},"content":"      commit.commitResults \u003d commitResults;"},{"lineNumber":787,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":788,"author":{"gitId":"-"},"content":""},{"lineNumber":789,"author":{"gitId":"vvidday"},"content":"    getFilteredFileTypes(commitResult: CommitResult) {"},{"lineNumber":790,"author":{"gitId":"-"},"content":"      return Object.keys(commitResult.fileTypesAndContributionMap)"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        .filter(this.isFileTypeChecked)"},{"lineNumber":792,"author":{"gitId":"vvidday"},"content":"        .reduce((obj: { [key: string]: FileTypeAndContribution }, fileType) \u003d\u003e {"},{"lineNumber":793,"author":{"gitId":"-"},"content":"          obj[fileType] \u003d commitResult.fileTypesAndContributionMap[fileType];"},{"lineNumber":794,"author":{"gitId":"-"},"content":"          return obj;"},{"lineNumber":795,"author":{"gitId":"-"},"content":"        }, {});"},{"lineNumber":796,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":797,"author":{"gitId":"-"},"content":""},{"lineNumber":798,"author":{"gitId":"vvidday"},"content":"    isFileTypeChecked(fileType: string) {"},{"lineNumber":799,"author":{"gitId":"-"},"content":"      if (this.filterBreakdown) {"},{"lineNumber":800,"author":{"gitId":"-"},"content":"        return this.checkedFileTypes.includes(fileType);"},{"lineNumber":801,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":802,"author":{"gitId":"-"},"content":"      return true;"},{"lineNumber":803,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":804,"author":{"gitId":"-"},"content":""},{"lineNumber":805,"author":{"gitId":"vvidday"},"content":"    updateCommitResultWithFileTypes("},{"lineNumber":806,"author":{"gitId":"vvidday"},"content":"      commitResult: CommitResult,"},{"lineNumber":807,"author":{"gitId":"vvidday"},"content":"      filteredFileTypes: { [key: string]: FileTypeAndContribution },"},{"lineNumber":808,"author":{"gitId":"vvidday"},"content":"    ) {"},{"lineNumber":809,"author":{"gitId":"-"},"content":"      commitResult.insertions \u003d Object.values(filteredFileTypes)"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        .reduce((acc, fileType) \u003d\u003e acc + fileType.insertions, 0);"},{"lineNumber":811,"author":{"gitId":"-"},"content":"      commitResult.deletions \u003d Object.values(filteredFileTypes)"},{"lineNumber":812,"author":{"gitId":"-"},"content":"        .reduce((acc, fileType) \u003d\u003e acc + fileType.deletions, 0);"},{"lineNumber":813,"author":{"gitId":"-"},"content":"      commitResult.fileTypesAndContributionMap \u003d filteredFileTypes;"},{"lineNumber":814,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":815,"author":{"gitId":"-"},"content":""},{"lineNumber":816,"author":{"gitId":"-"},"content":"    getOptionWithOrder() {"},{"lineNumber":817,"author":{"gitId":"-"},"content":"      [this.sortingOption, this.isSortingDsc] \u003d this.sortGroupSelection.split(\u0027 \u0027);"},{"lineNumber":818,"author":{"gitId":"-"},"content":"      [this.sortingWithinOption, this.isSortingWithinDsc] \u003d this.sortWithinGroupSelection.split(\u0027 \u0027);"},{"lineNumber":819,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":820,"author":{"gitId":"-"},"content":""},{"lineNumber":821,"author":{"gitId":"-"},"content":"    // updating filters programically //"},{"lineNumber":822,"author":{"gitId":"-"},"content":"    resetDateRange() {"},{"lineNumber":823,"author":{"gitId":"-"},"content":"      this.hasModifiedSinceDate \u003d false;"},{"lineNumber":824,"author":{"gitId":"-"},"content":"      this.hasModifiedUntilDate \u003d false;"},{"lineNumber":825,"author":{"gitId":"-"},"content":"      this.tmpFilterSinceDate \u003d \u0027\u0027;"},{"lineNumber":826,"author":{"gitId":"-"},"content":"      this.tmpFilterUntilDate \u003d \u0027\u0027;"},{"lineNumber":827,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027since\u0027);"},{"lineNumber":828,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027until\u0027);"},{"lineNumber":829,"author":{"gitId":"-"},"content":"      this.getFiltered();"},{"lineNumber":830,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":831,"author":{"gitId":"-"},"content":""},{"lineNumber":832,"author":{"gitId":"vvidday"},"content":"    updateTmpFilterSinceDate(event: Event) {"},{"lineNumber":833,"author":{"gitId":"vvidday"},"content":"      // Only called from an input onchange event, target guaranteed to be input element"},{"lineNumber":834,"author":{"gitId":"vvidday"},"content":"      const since \u003d (event.target as HTMLInputElement).value;"},{"lineNumber":835,"author":{"gitId":"-"},"content":"      this.hasModifiedSinceDate \u003d true;"},{"lineNumber":836,"author":{"gitId":"-"},"content":""},{"lineNumber":837,"author":{"gitId":"-"},"content":"      if (!this.isSafariBrowser) {"},{"lineNumber":838,"author":{"gitId":"-"},"content":"        this.tmpFilterSinceDate \u003d since;"},{"lineNumber":839,"author":{"gitId":"vvidday"},"content":"        (event.target as HTMLInputElement).value \u003d this.filterSinceDate;"},{"lineNumber":840,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":841,"author":{"gitId":"-"},"content":"      } else if (dateFormatRegex.test(since) \u0026\u0026 since \u003e\u003d this.minDate) {"},{"lineNumber":842,"author":{"gitId":"-"},"content":"        this.tmpFilterSinceDate \u003d since;"},{"lineNumber":843,"author":{"gitId":"vvidday"},"content":"        (event.currentTarget as HTMLInputElement).style.removeProperty(\u0027border-bottom-color\u0027);"},{"lineNumber":844,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":845,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":846,"author":{"gitId":"-"},"content":"        // invalid since date detected"},{"lineNumber":847,"author":{"gitId":"vvidday"},"content":"        (event.currentTarget as HTMLInputElement).style.borderBottomColor \u003d \u0027red\u0027;"},{"lineNumber":848,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":849,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":850,"author":{"gitId":"-"},"content":""},{"lineNumber":851,"author":{"gitId":"vvidday"},"content":"    updateTmpFilterUntilDate(event: Event) {"},{"lineNumber":852,"author":{"gitId":"vvidday"},"content":"      // Only called from an input onchange event, target guaranteed to be input element"},{"lineNumber":853,"author":{"gitId":"vvidday"},"content":"      const until \u003d (event.target as HTMLInputElement).value;"},{"lineNumber":854,"author":{"gitId":"-"},"content":"      this.hasModifiedUntilDate \u003d true;"},{"lineNumber":855,"author":{"gitId":"-"},"content":""},{"lineNumber":856,"author":{"gitId":"-"},"content":"      if (!this.isSafariBrowser) {"},{"lineNumber":857,"author":{"gitId":"-"},"content":"        this.tmpFilterUntilDate \u003d until;"},{"lineNumber":858,"author":{"gitId":"vvidday"},"content":"        (event.target as HTMLInputElement).value \u003d this.filterUntilDate;"},{"lineNumber":859,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":860,"author":{"gitId":"-"},"content":"      } else if (dateFormatRegex.test(until) \u0026\u0026 until \u003c\u003d this.maxDate) {"},{"lineNumber":861,"author":{"gitId":"-"},"content":"        this.tmpFilterUntilDate \u003d until;"},{"lineNumber":862,"author":{"gitId":"vvidday"},"content":"        (event.currentTarget as HTMLInputElement).style.removeProperty(\u0027border-bottom-color\u0027);"},{"lineNumber":863,"author":{"gitId":"-"},"content":"        this.getFiltered();"},{"lineNumber":864,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":865,"author":{"gitId":"-"},"content":"        // invalid until date detected"},{"lineNumber":866,"author":{"gitId":"vvidday"},"content":"        (event.currentTarget as HTMLInputElement).style.borderBottomColor \u003d \u0027red\u0027;"},{"lineNumber":867,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":868,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":869,"author":{"gitId":"-"},"content":""},{"lineNumber":870,"author":{"gitId":"vvidday"},"content":"    updateCheckedFileTypeContribution(ele: User) {"},{"lineNumber":871,"author":{"gitId":"-"},"content":"      let validCommits \u003d 0;"},{"lineNumber":872,"author":{"gitId":"-"},"content":"      Object.keys(ele.fileTypeContribution).forEach((fileType) \u003d\u003e {"},{"lineNumber":873,"author":{"gitId":"-"},"content":"        if (!this.filterBreakdown) {"},{"lineNumber":874,"author":{"gitId":"-"},"content":"          validCommits +\u003d ele.fileTypeContribution[fileType];"},{"lineNumber":875,"author":{"gitId":"-"},"content":"        } else if (this.checkedFileTypes.includes(fileType)) {"},{"lineNumber":876,"author":{"gitId":"-"},"content":"          validCommits +\u003d ele.fileTypeContribution[fileType];"},{"lineNumber":877,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":878,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":879,"author":{"gitId":"-"},"content":"      ele.checkedFileTypeContribution \u003d validCommits;"},{"lineNumber":880,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":881,"author":{"gitId":"-"},"content":""},{"lineNumber":882,"author":{"gitId":"vvidday"},"content":"    restoreZoomFiltered(info: ZoomInfo) {"},{"lineNumber":883,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":884,"author":{"gitId":"-"},"content":"        zSince, zUntil, zTimeFrame, zIsMerged, zFilterSearch,"},{"lineNumber":885,"author":{"gitId":"-"},"content":"      } \u003d info;"},{"lineNumber":886,"author":{"gitId":"-"},"content":"      const filtered: Array\u003cArray\u003cUser\u003e\u003e \u003d [];"},{"lineNumber":887,"author":{"gitId":"-"},"content":""},{"lineNumber":888,"author":{"gitId":"-"},"content":"      const groups: Array\u003cRepo\u003e \u003d JSON.parse(JSON.stringify(this.repos));"},{"lineNumber":889,"author":{"gitId":"-"},"content":""},{"lineNumber":890,"author":{"gitId":"-"},"content":"      const res: Array\u003cUser\u003e \u003d [];"},{"lineNumber":891,"author":{"gitId":"-"},"content":"      groups.forEach((repo) \u003d\u003e {"},{"lineNumber":892,"author":{"gitId":"vvidday"},"content":"        repo.users?.forEach((user) \u003d\u003e {"},{"lineNumber":893,"author":{"gitId":"-"},"content":"          // only filter users that match with zoom user and previous searched user"},{"lineNumber":894,"author":{"gitId":"-"},"content":"          if (this.matchZoomUser(info, user) \u0026\u0026 this.isMatchSearchedUser(zFilterSearch, user)) {"},{"lineNumber":895,"author":{"gitId":"-"},"content":"            this.getUserCommits(user, zSince, zUntil);"},{"lineNumber":896,"author":{"gitId":"-"},"content":"            if (zTimeFrame \u003d\u003d\u003d \u0027week\u0027) {"},{"lineNumber":897,"author":{"gitId":"-"},"content":"              this.splitCommitsWeek(user, zSince, zUntil);"},{"lineNumber":898,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":899,"author":{"gitId":"-"},"content":"            this.updateCheckedFileTypeContribution(user);"},{"lineNumber":900,"author":{"gitId":"-"},"content":"            res.push(user);"},{"lineNumber":901,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":902,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":903,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":904,"author":{"gitId":"-"},"content":""},{"lineNumber":905,"author":{"gitId":"-"},"content":"      if (res.length) {"},{"lineNumber":906,"author":{"gitId":"-"},"content":"        filtered.push(res);"},{"lineNumber":907,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":908,"author":{"gitId":"-"},"content":""},{"lineNumber":909,"author":{"gitId":"-"},"content":"      if (zIsMerged) {"},{"lineNumber":910,"author":{"gitId":"-"},"content":"        this.mergeGroupByIndex(filtered, 0);"},{"lineNumber":911,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":912,"author":{"gitId":"-"},"content":""},{"lineNumber":913,"author":{"gitId":"-"},"content":"      if (filtered.length) [[info.zUser]] \u003d filtered;"},{"lineNumber":914,"author":{"gitId":"-"},"content":""},{"lineNumber":915,"author":{"gitId":"-"},"content":"      info.zFileTypeColors \u003d this.fileTypeColors;"},{"lineNumber":916,"author":{"gitId":"-"},"content":"      info.isRefreshing \u003d false;"},{"lineNumber":917,"author":{"gitId":"-"},"content":"      this.$store.commit(\u0027updateTabZoomInfo\u0027, info);"},{"lineNumber":918,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":919,"author":{"gitId":"vvidday"},"content":"    matchZoomUser(info: ZoomInfo, user: User) {"},{"lineNumber":920,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":921,"author":{"gitId":"-"},"content":"        zIsMerged, zFilterGroup, zRepo, zAuthor,"},{"lineNumber":922,"author":{"gitId":"-"},"content":"      } \u003d info;"},{"lineNumber":923,"author":{"gitId":"-"},"content":"      if (zIsMerged) {"},{"lineNumber":924,"author":{"gitId":"-"},"content":"        return zFilterGroup \u003d\u003d\u003d \u0027groupByRepos\u0027"},{"lineNumber":925,"author":{"gitId":"-"},"content":"          ? user.repoName \u003d\u003d\u003d zRepo"},{"lineNumber":926,"author":{"gitId":"-"},"content":"          : user.name \u003d\u003d\u003d zAuthor;"},{"lineNumber":927,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":928,"author":{"gitId":"-"},"content":"      return user.repoName \u003d\u003d\u003d zRepo \u0026\u0026 user.name \u003d\u003d\u003d zAuthor;"},{"lineNumber":929,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":930,"author":{"gitId":"-"},"content":""},{"lineNumber":931,"author":{"gitId":"vvidday"},"content":"    dateRounding(datestr: string, roundDown: number) {"},{"lineNumber":932,"author":{"gitId":"-"},"content":"      // rounding up to nearest monday"},{"lineNumber":933,"author":{"gitId":"-"},"content":"      const date \u003d new Date(datestr);"},{"lineNumber":934,"author":{"gitId":"-"},"content":"      const day \u003d date.getUTCDay();"},{"lineNumber":935,"author":{"gitId":"-"},"content":"      let datems \u003d date.getTime();"},{"lineNumber":936,"author":{"gitId":"-"},"content":"      if (roundDown) {"},{"lineNumber":937,"author":{"gitId":"-"},"content":"        datems -\u003d ((day + 6) % 7) * window.DAY_IN_MS;"},{"lineNumber":938,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":939,"author":{"gitId":"-"},"content":"        datems +\u003d ((8 - day) % 7) * window.DAY_IN_MS;"},{"lineNumber":940,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":941,"author":{"gitId":"-"},"content":""},{"lineNumber":942,"author":{"gitId":"-"},"content":"      return window.getDateStr(datems);"},{"lineNumber":943,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":944,"author":{"gitId":"-"},"content":""},{"lineNumber":945,"author":{"gitId":"-"},"content":"    getFontColor(color: string) {"},{"lineNumber":946,"author":{"gitId":"-"},"content":"      return window.getFontColor(color);"},{"lineNumber":947,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":948,"author":{"gitId":"-"},"content":""},{"lineNumber":949,"author":{"gitId":"-"},"content":"    toggleErrorShowMore() {"},{"lineNumber":950,"author":{"gitId":"-"},"content":"      this.errorIsShowingMore \u003d !this.errorIsShowingMore;"},{"lineNumber":951,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":952,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":953,"author":{"gitId":"vvidday"},"content":"});"},{"lineNumber":954,"author":{"gitId":"-"},"content":"\u003c/script\u003e"},{"lineNumber":955,"author":{"gitId":"-"},"content":""},{"lineNumber":956,"author":{"gitId":"-"},"content":"\u003c!-- Add \"scoped\" attribute to limit CSS to this component only --\u003e"},{"lineNumber":957,"author":{"gitId":"-"},"content":"\u003cstyle lang\u003d\"scss\"\u003e"},{"lineNumber":958,"author":{"gitId":"-"},"content":"@import \u0027../styles/_colors.scss\u0027;"},{"lineNumber":959,"author":{"gitId":"MarcusTXK"},"content":"@import \u0027../styles/summary-chart.scss\u0027;"},{"lineNumber":960,"author":{"gitId":"-"},"content":""},{"lineNumber":961,"author":{"gitId":"-"},"content":".error-message-box__show-more-container {"},{"lineNumber":962,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":963,"author":{"gitId":"-"},"content":"  justify-content: flex-end;"},{"lineNumber":964,"author":{"gitId":"-"},"content":"  margin-top: .3rem;"},{"lineNumber":965,"author":{"gitId":"-"},"content":"}"},{"lineNumber":966,"author":{"gitId":"-"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"vvidday":159,"ckcherry23":22,"MarcusTXK":30,"-":755}},{"path":"frontend/src/views/c-widget.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"template(v-if\u003d\"userUpdated\")"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"  #summary-wrapper"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"    c-summary.widget-padding("},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"      ref\u003d\"summary\","},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"      v-bind:repos\u003d\"users\","},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"      v-bind:error-messages\u003d\"errorMessages\","},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"      v-bind:is-widget-mode\u003d\"true\""},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    )"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"template(v-else)"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"  .empty Widget does not support uploading of .zip file generated by RepoSense."},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"\u003c/template\u003e"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"\u003cscript\u003e"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import cSummary from \u0027./c-summary.vue\u0027;"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"export default {"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"  name: \u0027c-widget\u0027,"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"  components: {"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    cSummary,"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"  },"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"  props: {"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    updateReportZip: {"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"      type: Function,"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    repos: {"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"      type: Object,"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    users: {"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"      type: Array,"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    userUpdated: {"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"      type: Boolean,"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"    loadingOverlayOpacity: {"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"      type: Number,"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"    tabType: {"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"      type: String,"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"    creationDate: {"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"      type: String,"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    reportGenerationTime: {"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"      type: String,"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"    errorMessages: {"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"      type: Object,"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"      required: true,"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"  },"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"};"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"\u003c/script\u003e"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"\u003cstyle lang\u003d\"scss\"\u003e"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"@import \u0027../styles/_colors.scss\u0027;"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"@import \u0027../styles/summary-chart.scss\u0027;"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"MarcusTXK":66}},{"path":"frontend/src/views/c-zoom.vue","fileType":"vue","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctemplate lang\u003d\"pug\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"#zoom(v-if\u003d\"filteredUser\")"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  .panel-title"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    span Commits Panel"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  .toolbar--multiline(v-if\u003d\"filteredUser.commits.length \u0026\u0026 totalCommitMessageBodyCount\")"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    a("},{"lineNumber":7,"author":{"gitId":"-"},"content":"      v-if\u003d\"expandedCommitMessagesCount \u003c totalCommitMessageBodyCount\","},{"lineNumber":8,"author":{"gitId":"-"},"content":"      v-on:click\u003d\"toggleAllCommitMessagesBody(true); toggleDiffstatView(true);\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    ) show all commit details"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    a("},{"lineNumber":11,"author":{"gitId":"-"},"content":"      v-if\u003d\"expandedCommitMessagesCount \u003e 0\","},{"lineNumber":12,"author":{"gitId":"-"},"content":"      v-on:click\u003d\"toggleAllCommitMessagesBody(false); toggleDiffstatView(false);\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    ) hide all commit details"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  .panel-heading"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    .group-name"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      span("},{"lineNumber":17,"author":{"gitId":"-"},"content":"        v-if\u003d\"info.zFilterGroup \u003d\u003d\u003d \u0027groupByAuthors\u0027\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"      ) {{ filteredUser.displayName }} ({{ filteredUser.name }})"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      a("},{"lineNumber":20,"author":{"gitId":"-"},"content":"        v-else,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        v-bind:href\u003d\"info.zLocation\", target\u003d\"_blank\","},{"lineNumber":22,"author":{"gitId":"-"},"content":"        v-bind:title\u003d\"\u0027Click to open the repo\u0027\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        span {{ filteredUser.repoName }}"},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"    .author(v-if\u003d\"!info.zIsMerged\")"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      span \u0026#8627; \u0026nbsp;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      span(v-if\u003d\"info.zFilterGroup \u003d\u003d\u003d \u0027groupByAuthors\u0027\") {{ filteredUser.repoName }}"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      span(v-else) {{ filteredUser.displayName }} ({{ filteredUser.name }})"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    .period"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      span \u0026#8627; \u0026nbsp;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      span {{ info.zSince }} to {{ info.zUntil }} \u0026nbsp;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  .zoom__title"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    .zoom__title--granularity granularity: one ramp per {{ info.zTimeFrame }}"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    .zoom__title--tags"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      template(v-for\u003d\"commit in filteredUser.commits\")"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        template(v-for\u003d\"commitResult in commit.commitResults\")"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          template(v-if\u003d\"commitResult.tags\")"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .tag("},{"lineNumber":39,"author":{"gitId":"-"},"content":"              v-for\u003d\"tag in commitResult.tags\","},{"lineNumber":40,"author":{"gitId":"-"},"content":"              vbind:key\u003d\"tag\","},{"lineNumber":41,"author":{"gitId":"-"},"content":"              v-on:click\u003d\"scrollToCommit(tag, `tag ${commitResult.hash}`)\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"            )"},{"lineNumber":43,"author":{"gitId":"-"},"content":"              font-awesome-icon(icon\u003d\"tags\")"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              span \u0026nbsp;{{ tag }}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  c-ramp("},{"lineNumber":47,"author":{"gitId":"-"},"content":"    v-bind:groupby\u003d\"info.zFilterGroup\","},{"lineNumber":48,"author":{"gitId":"-"},"content":"    v-bind:user\u003d\"filteredUser\","},{"lineNumber":49,"author":{"gitId":"-"},"content":"    v-bind:tframe\u003d\"info.zTimeFrame\","},{"lineNumber":50,"author":{"gitId":"-"},"content":"    v-bind:sdate\u003d\"info.zSince\","},{"lineNumber":51,"author":{"gitId":"-"},"content":"    v-bind:udate\u003d\"info.zUntil\","},{"lineNumber":52,"author":{"gitId":"-"},"content":"    v-bind:avgsize\u003d\"info.zAvgCommitSize\","},{"lineNumber":53,"author":{"gitId":"-"},"content":"    v-bind:mergegroup\u003d\"info.zIsMerge\","},{"lineNumber":54,"author":{"gitId":"-"},"content":"    v-bind:fromramp\u003d\"info.zFromRamp\","},{"lineNumber":55,"author":{"gitId":"-"},"content":"    v-bind:filtersearch\u003d\"info.zFilterSearch\")"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  .sorting.mui-form--inline"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    .mui-select.sort-by"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      select(v-model\u003d\"commitsSortType\")"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        option(value\u003d\"time\") Time"},{"lineNumber":61,"author":{"gitId":"ckcherry23"},"content":"        option(value\u003d\"linesOfCode\") LoC"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      label sort by"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    .mui-select.sort-order"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      select(v-model\u003d\"toReverseSortedCommits\")"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        option(v-bind:value\u003d\u0027true\u0027) Descending"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        option(v-bind:value\u003d\u0027false\u0027) Ascending"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      label order"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  .fileTypes"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    .checkboxes.mui-form--inline(v-if\u003d\"fileTypes.length \u003e 0\")"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      label(style\u003d\u0027background-color: #000000; color: #ffffff\u0027)"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        input.mui-checkbox--fileType(type\u003d\"checkbox\", v-model\u003d\"isSelectAllChecked\", value\u003d\"all\")"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        span All\u0026nbsp;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      label("},{"lineNumber":75,"author":{"gitId":"-"},"content":"        v-for\u003d\"fileType in fileTypes\","},{"lineNumber":76,"author":{"gitId":"-"},"content":"        v-bind:key\u003d\"fileType\","},{"lineNumber":77,"author":{"gitId":"-"},"content":"        v-bind:style\u003d\"{\\"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0027background-color\u0027: fileTypeColors[fileType],\\"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0027color\u0027: getFontColor(fileTypeColors[fileType])\\"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                }\""},{"lineNumber":81,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        input.mui-checkbox--fileType(type\u003d\"checkbox\", v-bind:value\u003d\"fileType\","},{"lineNumber":83,"author":{"gitId":"-"},"content":"          v-on:change\u003d\"updateSelectedFileTypesHash\", v-model\u003d\"selectedFileTypes\")"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        span {{ fileType }} \u0026nbsp;"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"  .zoom__day(v-for\u003d\"day in selectedCommits\", v-bind:key\u003d\"day.date\")"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    h3(v-if\u003d\"info.zTimeFrame \u003d\u003d\u003d \u0027week\u0027\") Week of {{ day.date }}"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    h3(v-else) {{ day.date }}"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    //- use tabindex to enable focus property on div"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    .commit-message("},{"lineNumber":91,"author":{"gitId":"-"},"content":"      tabindex\u003d\"-1\","},{"lineNumber":92,"author":{"gitId":"-"},"content":"      v-for\u003d\"slice in day.commitResults\","},{"lineNumber":93,"author":{"gitId":"-"},"content":"      v-bind:key\u003d\"slice.hash\","},{"lineNumber":94,"author":{"gitId":"-"},"content":"      v-bind:class\u003d\"{ \u0027message-body active\u0027: slice.messageBody !\u003d\u003d \u0027\u0027 }\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":96,"author":{"gitId":"ckcherry23"},"content":"      span.code-merge-icon(v-if\u003d\"slice.isMergeCommit\")"},{"lineNumber":97,"author":{"gitId":"ckcherry23"},"content":"        font-awesome-icon(icon\u003d\"code-merge\")"},{"lineNumber":98,"author":{"gitId":"ckcherry23"},"content":"        span \u0026nbsp;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      a.message-title(v-bind:href\u003d\"getSliceLink(slice)\","},{"lineNumber":100,"author":{"gitId":"-"},"content":"        v-bind:class\u003d\"!isBrokenLink(getSliceLink(slice)) ? \u0027\u0027 : \u0027broken-link\u0027\", target\u003d\"_blank\")"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        .within-border {{ slice.messageTitle.substr(0, 50) }}"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        .not-within-border(v-if\u003d\"slice.messageTitle.length \u003e 50\")"},{"lineNumber":103,"author":{"gitId":"-"},"content":"          |{{ slice.messageTitle.substr(50) }}"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      span(data-cy\u003d\"changes\") \u0026nbsp; (+{{ slice.insertions }} -{{ slice.deletions }} lines) \u0026nbsp;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      .hash"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        span {{ slice.hash.substr(0, 7) }}"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      span.fileTypeLabel("},{"lineNumber":108,"author":{"gitId":"-"},"content":"        v-if\u003d\"containsAtLeastOneSelected(Object.keys(slice.fileTypesAndContributionMap))\","},{"lineNumber":109,"author":{"gitId":"-"},"content":"        v-for\u003d\"fileType in\\"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          Object.keys(slice.fileTypesAndContributionMap)\","},{"lineNumber":111,"author":{"gitId":"-"},"content":"        vbind:key\u003d\"fileType\","},{"lineNumber":112,"author":{"gitId":"-"},"content":"        v-bind:style\u003d\"{\\"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          \u0027background-color\u0027: fileTypeColors[fileType],\\"},{"lineNumber":114,"author":{"gitId":"-"},"content":"          \u0027color\u0027: getFontColor(fileTypeColors[fileType])\\"},{"lineNumber":115,"author":{"gitId":"-"},"content":"          }\""},{"lineNumber":116,"author":{"gitId":"-"},"content":"      ) {{ fileType }}"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      template(v-if\u003d\"slice.tags\")"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        .tag("},{"lineNumber":119,"author":{"gitId":"-"},"content":"          v-for\u003d\"tag in slice.tags\","},{"lineNumber":120,"author":{"gitId":"-"},"content":"          vbind:key\u003d\"tag\","},{"lineNumber":121,"author":{"gitId":"-"},"content":"          tabindex\u003d\"-1\", v-bind:class\u003d\"[`${slice.hash}`, tag]\""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":123,"author":{"gitId":"-"},"content":"          font-awesome-icon(icon\u003d\"tags\")"},{"lineNumber":124,"author":{"gitId":"-"},"content":"          span \u0026nbsp;{{ tag }}"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      a("},{"lineNumber":126,"author":{"gitId":"-"},"content":"        v-if\u003d\"slice.messageBody !\u003d\u003d \u0027\u0027\","},{"lineNumber":127,"author":{"gitId":"vvidday"},"content":"        v-on:click\u003d\"toggleSelectedCommitMessageBody(slice)\""},{"lineNumber":128,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        .tooltip("},{"lineNumber":130,"author":{"gitId":"-"},"content":"          v-on:mouseover\u003d\"onTooltipHover(`${slice.hash}-show-hide-message-body`)\","},{"lineNumber":131,"author":{"gitId":"-"},"content":"          v-on:mouseout\u003d\"resetTooltip(`${slice.hash}-show-hide-message-body`)\""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":133,"author":{"gitId":"-"},"content":"          font-awesome-icon.commit-message--button(icon\u003d\"ellipsis-h\")"},{"lineNumber":134,"author":{"gitId":"-"},"content":"          span.tooltip-text("},{"lineNumber":135,"author":{"gitId":"-"},"content":"            v-bind:ref\u003d\"`${slice.hash}-show-hide-message-body`\""},{"lineNumber":136,"author":{"gitId":"-"},"content":"            ) Click to show/hide the commit message body"},{"lineNumber":137,"author":{"gitId":"vvidday"},"content":"      .body(v-if\u003d\"slice.messageBody !\u003d\u003d \u0027\u0027\", v-show\u003d\"slice.isOpen\")"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        pre {{ slice.messageBody }}"},{"lineNumber":139,"author":{"gitId":"-"},"content":"          .dashed-border"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      template("},{"lineNumber":141,"author":{"gitId":"-"},"content":"        v-if\u003d\"showDiffstat\""},{"lineNumber":142,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        c-stacked-bar-chart("},{"lineNumber":144,"author":{"gitId":"-"},"content":"          v-bind:bars\u003d\"getContributionBars(slice)\""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003c/template\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"ckcherry23"},"content":"\u003cscript lang\u003d\"ts\"\u003e"},{"lineNumber":149,"author":{"gitId":"ckcherry23"},"content":"import { defineComponent } from \u0027vue\u0027;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"import { mapState } from \u0027vuex\u0027;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"import { FontAwesomeIcon } from \u0027@fortawesome/vue-fontawesome\u0027;"},{"lineNumber":152,"author":{"gitId":"vvidday"},"content":"import brokenLinkDisabler from \u0027../mixin/brokenLinkMixin\u0027;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"import tooltipPositioner from \u0027../mixin/dynamicTooltipMixin\u0027;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"import cRamp from \u0027../components/c-ramp.vue\u0027;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"import cStackedBarChart from \u0027../components/c-stacked-bar-chart.vue\u0027;"},{"lineNumber":156,"author":{"gitId":"ckcherry23"},"content":"import {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  Bar,"},{"lineNumber":158,"author":{"gitId":"ckcherry23"},"content":"  Commit,"},{"lineNumber":159,"author":{"gitId":"ckcherry23"},"content":"  CommitResult,"},{"lineNumber":160,"author":{"gitId":"ckcherry23"},"content":"  DailyCommit,"},{"lineNumber":161,"author":{"gitId":"ckcherry23"},"content":"  WeeklyCommit,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  User,"},{"lineNumber":163,"author":{"gitId":"ckcherry23"},"content":"} from \u0027../types/types\u0027;"},{"lineNumber":164,"author":{"gitId":"ckcherry23"},"content":"import CommitsSortType from \u0027../types/zoom\u0027;"},{"lineNumber":165,"author":{"gitId":"ckcherry23"},"content":"import { StoreState } from \u0027../types/vuex.d\u0027;"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"function zoomInitialState() {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  return {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    showAllCommitMessageBody: true,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    showDiffstat: true,"},{"lineNumber":171,"author":{"gitId":"ckcherry23"},"content":"    commitsSortType: CommitsSortType.Time,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    toReverseSortedCommits: true,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    isCommitsFinalized: false,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    selectedFileTypes: [] as Array\u003cstring\u003e,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    fileTypes: [] as Array\u003cstring\u003e,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"ckcherry23"},"content":"export default defineComponent({"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  name: \u0027c-zoom\u0027,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  components: {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    FontAwesomeIcon,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    cRamp,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    cStackedBarChart,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  mixins: [brokenLinkDisabler, tooltipPositioner],"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  data() {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      ...zoomInitialState(),"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"  computed: {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    sortingFunction() {"},{"lineNumber":195,"author":{"gitId":"ckcherry23"},"content":"      const commitSortFunction \u003d this.commitsSortType \u003d\u003d\u003d CommitsSortType.Time"},{"lineNumber":196,"author":{"gitId":"ckcherry23"},"content":"        ? (commit: Commit) \u003d\u003e commit.date"},{"lineNumber":197,"author":{"gitId":"ckcherry23"},"content":"        : (commit: Commit) \u003d\u003e commit.insertions;"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"ckcherry23"},"content":"      return (a: Commit, b: Commit) \u003d\u003e (this.toReverseSortedCommits ? -1 : 1)"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        * window.comparator(commitSortFunction)(a, b);"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    filteredUser(): User | undefined {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        zUser, zSince, zUntil, zTimeFrame,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      } \u003d this.info;"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"ckcherry23"},"content":"      if (!zUser) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return undefined;"},{"lineNumber":209,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":210,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":211,"author":{"gitId":"ckcherry23"},"content":"      const filteredUser: User \u003d Object.assign({}, zUser);"},{"lineNumber":212,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":213,"author":{"gitId":"ckcherry23"},"content":"      if (zTimeFrame \u003d\u003d\u003d \u0027week\u0027) {"},{"lineNumber":214,"author":{"gitId":"ckcherry23"},"content":"        filteredUser.commits \u003d zUser.commits.filter("},{"lineNumber":215,"author":{"gitId":"ckcherry23"},"content":"          (commit: WeeklyCommit) \u003d\u003e commit.endDate \u003e\u003d zSince \u0026\u0026 commit.endDate \u003c\u003d zUntil,"},{"lineNumber":216,"author":{"gitId":"ckcherry23"},"content":"        ).sort(this.sortingFunction);"},{"lineNumber":217,"author":{"gitId":"ckcherry23"},"content":"      } else {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        filteredUser.commits \u003d zUser.commits.filter("},{"lineNumber":219,"author":{"gitId":"ckcherry23"},"content":"          (commit: DailyCommit) \u003d\u003e commit.date \u003e\u003d zSince \u0026\u0026 commit.date \u003c\u003d zUntil,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        ).sort(this.sortingFunction);"},{"lineNumber":221,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"      const tempUser: User \u003d { ...filteredUser };"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      tempUser.commits \u003d [];"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      filteredUser.commits.forEach((commit) \u003d\u003e {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        const newCommit \u003d { ...commit };"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        newCommit.commitResults \u003d [];"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        if (this.commitsSortType \u003d\u003d\u003d CommitsSortType.Time) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          newCommit.commitResults \u003d this.toReverseSortedCommits"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            ? commit.commitResults.slice().reverse()"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            : commit.commitResults.slice();"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"          const cResultsSortingFunction \u003d (a: CommitResult, b: CommitResult) \u003d\u003e (this.toReverseSortedCommits ? -1 : 1)"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            * window.comparator((cResult: CommitResult) \u003d\u003e cResult.insertions)(a, b);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"          newCommit.commitResults \u003d commit.commitResults.slice().sort(cResultsSortingFunction);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        tempUser.commits.push(newCommit);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      return tempUser;"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":242,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"    selectedCommits(): Array\u003cCommit\u003e {"},{"lineNumber":244,"author":{"gitId":"ckcherry23"},"content":"      if (this.isSelectAllChecked) {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return this.filteredUser?.commits ?? [];"},{"lineNumber":246,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":247,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"      const commits \u003d [] as Array\u003cCommit\u003e;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      this.filteredUser?.commits.forEach((commit) \u003d\u003e {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        const filteredCommit \u003d { ...commit };"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        filteredCommit.commitResults \u003d [];"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        commit.commitResults.forEach((slice) \u003d\u003e {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"          if (Object.keys(slice.fileTypesAndContributionMap).some("},{"lineNumber":254,"author":{"gitId":"-"},"content":"            (fileType) \u003d\u003e this.selectedFileTypes.indexOf(fileType) !\u003d\u003d -1,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"          )) {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            filteredCommit.commitResults.push(slice);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        if (filteredCommit.commitResults.length \u003e 0) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"          commits.push(filteredCommit);"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":263,"author":{"gitId":"-"},"content":"      return commits;"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":265,"author":{"gitId":"ckcherry23"},"content":"    totalCommitMessageBodyCount(): number {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      let nonEmptyCommitMessageCount \u003d 0;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      this.selectedCommits.forEach((commit) \u003d\u003e {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        commit.commitResults.forEach((commitResult) \u003d\u003e {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"          if (commitResult.messageBody !\u003d\u003d \u0027\u0027) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            nonEmptyCommitMessageCount +\u003d 1;"},{"lineNumber":271,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"      return nonEmptyCommitMessageCount;"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":277,"author":{"gitId":"ckcherry23"},"content":"    expandedCommitMessagesCount(): number {"},{"lineNumber":278,"author":{"gitId":"vvidday"},"content":"      return this.selectedCommits.reduce((prev, commit) \u003d\u003e ("},{"lineNumber":279,"author":{"gitId":"vvidday"},"content":"        prev + commit.commitResults.filter((slice) \u003d\u003e slice.isOpen).length"},{"lineNumber":280,"author":{"gitId":"vvidday"},"content":"      ), 0);"},{"lineNumber":281,"author":{"gitId":"vvidday"},"content":"    },"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    isSelectAllChecked: {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      get() {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        return this.selectedFileTypes.length \u003d\u003d\u003d this.fileTypes.length;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":286,"author":{"gitId":"ckcherry23"},"content":"      set(value: boolean) {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        if (value) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"          this.selectedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"          this.selectedFileTypes \u003d [];"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        this.updateSelectedFileTypesHash();"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"    ...mapState({"},{"lineNumber":297,"author":{"gitId":"ckcherry23"},"content":"      fileTypeColors: (state: unknown) \u003d\u003e (state as StoreState).fileTypeColors,"},{"lineNumber":298,"author":{"gitId":"ckcherry23"},"content":"      info: (state: unknown) \u003d\u003e (state as StoreState).tabZoomInfo,"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }),"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"  watch: {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    info() {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      const newData \u003d {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        ...zoomInitialState(),"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      Object.assign(this.$data, newData);"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      this.initiate();"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      this.setInfoHash();"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    commitsSortType() {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      window.addHash(\u0027zCST\u0027, this.commitsSortType);"},{"lineNumber":313,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    toReverseSortedCommits() {"},{"lineNumber":316,"author":{"gitId":"ckcherry23"},"content":"      window.addHash(\u0027zRSC\u0027, this.toReverseSortedCommits.toString());"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":320,"author":{"gitId":"vvidday"},"content":"  created() {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    // return if filteredUser is undefined since it won\u0027t make sense to render zoom tab"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    // #zoom-tab is also rendered only if filteredUser is defined"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    if (!this.filteredUser) {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      this.removeZoomHashes();"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":327,"author":{"gitId":"vvidday"},"content":"    this.initiate();"},{"lineNumber":328,"author":{"gitId":"vvidday"},"content":"    this.retrieveHashes();"},{"lineNumber":329,"author":{"gitId":"vvidday"},"content":"    this.setInfoHash();"},{"lineNumber":330,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":331,"author":{"gitId":"vvidday"},"content":"  beforeUnmount() {"},{"lineNumber":332,"author":{"gitId":"vvidday"},"content":"    this.removeZoomHashes();"},{"lineNumber":333,"author":{"gitId":"vvidday"},"content":"  },"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"  methods: {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    initiate() {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      this.updateFileTypes();"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      this.selectedFileTypes \u003d this.fileTypes.slice();"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"    getContributionBars(slice: CommitResult): Array\u003cBar\u003e {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      let currentBarWidth \u003d 0;"},{"lineNumber":343,"author":{"gitId":"-"},"content":"      const fullBarWidth \u003d 100;"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"      let avgContributionSize \u003d this.info.zAvgContributionSize;"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      if (avgContributionSize \u003d\u003d\u003d undefined || avgContributionSize \u003e 1000) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        avgContributionSize \u003d 1000;"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"      const contributionPerFullBar \u003d avgContributionSize;"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"      const diffstatMappings: { [key: string]: number } \u003d { limegreen: slice.insertions, red: slice.deletions };"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      const allContributionBars: Array\u003cBar\u003e \u003d [];"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"      if (contributionPerFullBar \u003d\u003d\u003d 0) {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        return allContributionBars;"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":358,"author":{"gitId":"-"},"content":""},{"lineNumber":359,"author":{"gitId":"-"},"content":"      Object.keys(diffstatMappings)"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        .forEach((color) \u003d\u003e {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"          const contribution \u003d diffstatMappings[color];"},{"lineNumber":362,"author":{"gitId":"-"},"content":"          let barWidth \u003d (contribution / contributionPerFullBar) * fullBarWidth;"},{"lineNumber":363,"author":{"gitId":"-"},"content":"          const contributionBars \u003d [];"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"          // if contribution bar for file type is able to fit on the current line"},{"lineNumber":366,"author":{"gitId":"-"},"content":"          if (currentBarWidth + barWidth \u003c fullBarWidth) {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            contributionBars.push(barWidth);"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            currentBarWidth +\u003d barWidth;"},{"lineNumber":369,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            // take up all the space left on the current line"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            contributionBars.push(fullBarWidth - currentBarWidth);"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            barWidth -\u003d fullBarWidth - currentBarWidth;"},{"lineNumber":373,"author":{"gitId":"-"},"content":"            // additional bar width will start on a new line"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            const numOfFullBars \u003d Math.floor(barWidth / fullBarWidth);"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            for (let i \u003d 0; i \u003c numOfFullBars; i +\u003d 1) {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"              contributionBars.push(fullBarWidth);"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            const remainingBarWidth \u003d barWidth % fullBarWidth;"},{"lineNumber":379,"author":{"gitId":"-"},"content":"            if (remainingBarWidth \u003e 0) {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"              contributionBars.push(remainingBarWidth);"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":382,"author":{"gitId":"-"},"content":"            currentBarWidth \u003d remainingBarWidth;"},{"lineNumber":383,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"          contributionBars.forEach((width) \u003d\u003e {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"            const bar \u003d {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"              color,"},{"lineNumber":388,"author":{"gitId":"-"},"content":"              width,"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            allContributionBars.push(bar);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"      return allContributionBars;"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"ckcherry23"},"content":"    getSliceLink(slice: CommitResult): string | undefined {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"      if (this.info.zIsMerged) {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        return window.getCommitLink(slice.repoId, slice.hash);"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":401,"author":{"gitId":"ckcherry23"},"content":"      return window.getCommitLink(this.info.zUser!.repoId, slice.hash);"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"ckcherry23"},"content":"    scrollToCommit(tag: string, commit: string) {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"      const el \u003d this.$el.getElementsByClassName(`${commit} ${tag}`)[0];"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      if (el) {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        el.focus();"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"    updateFileTypes() {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      if (!this.filteredUser) return;"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"ckcherry23"},"content":"      const commitsFileTypes \u003d new Set\u003cstring\u003e();"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      this.filteredUser.commits.forEach((commit) \u003d\u003e {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        commit.commitResults.forEach((slice) \u003d\u003e {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"          Object.keys(slice.fileTypesAndContributionMap).forEach((fileType) \u003d\u003e {"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            commitsFileTypes.add(fileType);"},{"lineNumber":419,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      this.fileTypes \u003d Object.keys(this.filteredUser.fileTypeContribution).filter("},{"lineNumber":423,"author":{"gitId":"-"},"content":"        (fileType) \u003d\u003e commitsFileTypes.has(fileType),"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"    retrieveHashes() {"},{"lineNumber":428,"author":{"gitId":"-"},"content":"      this.retrieveSortHash();"},{"lineNumber":429,"author":{"gitId":"-"},"content":"      this.retrieveSelectedFileTypesHash();"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":431,"author":{"gitId":"-"},"content":""},{"lineNumber":432,"author":{"gitId":"-"},"content":"    retrieveSortHash() {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":434,"author":{"gitId":"ckcherry23"},"content":"      if (hash.zCST \u0026\u0026 Object.values(CommitsSortType).includes(hash.zCST as CommitsSortType)) {"},{"lineNumber":435,"author":{"gitId":"ckcherry23"},"content":"        this.commitsSortType \u003d hash.zCST as CommitsSortType;"},{"lineNumber":436,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      if (hash.zRSC) {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        this.toReverseSortedCommits \u003d (hash.zRSC \u003d\u003d\u003d \u0027true\u0027);"},{"lineNumber":439,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":441,"author":{"gitId":"-"},"content":""},{"lineNumber":442,"author":{"gitId":"-"},"content":"    retrieveSelectedFileTypesHash() {"},{"lineNumber":443,"author":{"gitId":"-"},"content":"      const hash \u003d window.hashParams;"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"MarcusTXK"},"content":"      if (hash.zFT || hash.zFT \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        this.selectedFileTypes \u003d hash.zFT"},{"lineNumber":447,"author":{"gitId":"-"},"content":"          .split(window.HASH_DELIMITER)"},{"lineNumber":448,"author":{"gitId":"-"},"content":"          .filter((fileType) \u003d\u003e this.fileTypes.includes(fileType));"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"    updateSelectedFileTypesHash() {"},{"lineNumber":453,"author":{"gitId":"-"},"content":"      const fileTypeHash \u003d this.selectedFileTypes.length \u003e 0"},{"lineNumber":454,"author":{"gitId":"-"},"content":"          ? this.selectedFileTypes.reduce((a, b) \u003d\u003e `${a}~${b}`)"},{"lineNumber":455,"author":{"gitId":"-"},"content":"          : \u0027\u0027;"},{"lineNumber":456,"author":{"gitId":"-"},"content":""},{"lineNumber":457,"author":{"gitId":"-"},"content":"      window.addHash(\u0027zFT\u0027, fileTypeHash);"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":460,"author":{"gitId":"-"},"content":""},{"lineNumber":461,"author":{"gitId":"-"},"content":"    setInfoHash() {"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      const { addHash, encodeHash } \u003d window;"},{"lineNumber":463,"author":{"gitId":"-"},"content":"      const {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        zAvgCommitSize, zSince, zUntil, zFilterGroup,"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        zTimeFrame, zIsMerged, zAuthor, zRepo, zFromRamp, zFilterSearch,"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      } \u003d this.info;"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      addHash(\u0027zA\u0027, zAuthor);"},{"lineNumber":468,"author":{"gitId":"-"},"content":"      addHash(\u0027zR\u0027, zRepo);"},{"lineNumber":469,"author":{"gitId":"ckcherry23"},"content":"      addHash(\u0027zACS\u0027, zAvgCommitSize.toString());"},{"lineNumber":470,"author":{"gitId":"-"},"content":"      addHash(\u0027zS\u0027, zSince);"},{"lineNumber":471,"author":{"gitId":"-"},"content":"      addHash(\u0027zFS\u0027, zFilterSearch);"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      addHash(\u0027zU\u0027, zUntil);"},{"lineNumber":473,"author":{"gitId":"ckcherry23"},"content":"      addHash(\u0027zMG\u0027, zIsMerged.toString());"},{"lineNumber":474,"author":{"gitId":"-"},"content":"      addHash(\u0027zFTF\u0027, zTimeFrame);"},{"lineNumber":475,"author":{"gitId":"-"},"content":"      addHash(\u0027zFGS\u0027, zFilterGroup);"},{"lineNumber":476,"author":{"gitId":"ckcherry23"},"content":"      addHash(\u0027zFR\u0027, zFromRamp.toString());"},{"lineNumber":477,"author":{"gitId":"-"},"content":"      encodeHash();"},{"lineNumber":478,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"ckcherry23"},"content":"    toggleSelectedCommitMessageBody(slice: CommitResult) {"},{"lineNumber":481,"author":{"gitId":"vvidday"},"content":"      this.$store.commit(\u0027toggleZoomCommitMessageBody\u0027, slice);"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"ckcherry23"},"content":"    toggleAllCommitMessagesBody(isOpen: boolean) {"},{"lineNumber":485,"author":{"gitId":"vvidday"},"content":"      this.showAllCommitMessageBody \u003d isOpen;"},{"lineNumber":486,"author":{"gitId":"vvidday"},"content":"      this.$store.commit(\u0027setAllZoomCommitMessageBody\u0027, {"},{"lineNumber":487,"author":{"gitId":"vvidday"},"content":"        isOpen,"},{"lineNumber":488,"author":{"gitId":"vvidday"},"content":"        commits: this.selectedCommits,"},{"lineNumber":489,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":491,"author":{"gitId":"-"},"content":""},{"lineNumber":492,"author":{"gitId":"-"},"content":"    toggleDiffstatView(isVisible: boolean) {"},{"lineNumber":493,"author":{"gitId":"-"},"content":"      this.showDiffstat \u003d isVisible;"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":495,"author":{"gitId":"-"},"content":""},{"lineNumber":496,"author":{"gitId":"-"},"content":"    removeZoomHashes() {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zA\u0027);"},{"lineNumber":498,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zR\u0027);"},{"lineNumber":499,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zFS\u0027);"},{"lineNumber":500,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zACS\u0027);"},{"lineNumber":501,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zS\u0027);"},{"lineNumber":502,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zU\u0027);"},{"lineNumber":503,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zFGS\u0027);"},{"lineNumber":504,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zFTF\u0027);"},{"lineNumber":505,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zMG\u0027);"},{"lineNumber":506,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zFT\u0027);"},{"lineNumber":507,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zCST\u0027);"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zRSC\u0027);"},{"lineNumber":509,"author":{"gitId":"-"},"content":"      window.removeHash(\u0027zFR\u0027);"},{"lineNumber":510,"author":{"gitId":"-"},"content":"      window.encodeHash();"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"    containsAtLeastOneSelected(fileTypes: Array\u003cstring\u003e): boolean {"},{"lineNumber":514,"author":{"gitId":"-"},"content":"      for (let i \u003d 0; i \u003c fileTypes.length; i +\u003d 1) {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        if (this.selectedFileTypes.includes(fileTypes[i])) {"},{"lineNumber":516,"author":{"gitId":"-"},"content":"          return true;"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":518,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":519,"author":{"gitId":"-"},"content":"      return false;"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"-"},"content":"    getFontColor(color: string) {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"      return window.getFontColor(color);"},{"lineNumber":524,"author":{"gitId":"MarcusTXK"},"content":"    },"},{"lineNumber":525,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":526,"author":{"gitId":"ckcherry23"},"content":"});"},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"\u003c/script\u003e"},{"lineNumber":529,"author":{"gitId":"-"},"content":""},{"lineNumber":530,"author":{"gitId":"-"},"content":"\u003cstyle lang\u003d\"scss\" scoped\u003e"},{"lineNumber":531,"author":{"gitId":"-"},"content":"@import \u0027../styles/_colors.scss\u0027;"},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"#tab-zoom {"},{"lineNumber":534,"author":{"gitId":"-"},"content":"  .zoom {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    \u0026__title {"},{"lineNumber":536,"author":{"gitId":"-"},"content":"      \u0026--granularity {"},{"lineNumber":537,"author":{"gitId":"-"},"content":"        @include mini-font;"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        margin-top: .5rem;"},{"lineNumber":539,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"-"},"content":"      \u0026--tags {"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        margin: .25rem 0 .25rem 0;"},{"lineNumber":543,"author":{"gitId":"-"},"content":""},{"lineNumber":544,"author":{"gitId":"-"},"content":"        .tag {"},{"lineNumber":545,"author":{"gitId":"-"},"content":"          cursor: pointer;"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":547,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":548,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":549,"author":{"gitId":"-"},"content":""},{"lineNumber":550,"author":{"gitId":"-"},"content":"    \u0026__toggle-commit-message-body {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"      padding-top: 10px;"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":553,"author":{"gitId":"-"},"content":""},{"lineNumber":554,"author":{"gitId":"-"},"content":"    \u0026__day,"},{"lineNumber":555,"author":{"gitId":"-"},"content":"    \u0026__title {"},{"lineNumber":556,"author":{"gitId":"ckcherry23"},"content":"      @include small-font;"},{"lineNumber":557,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":558,"author":{"gitId":"ckcherry23"},"content":"      h3 {"},{"lineNumber":559,"author":{"gitId":"ckcherry23"},"content":"        @include large-font;"},{"lineNumber":560,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":561,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":562,"author":{"gitId":"-"},"content":"      /* Tags in commits */"},{"lineNumber":563,"author":{"gitId":"-"},"content":"      .tag {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        @include mini-font;"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        background: mui-color(\u0027grey\u0027, \u0027600\u0027);"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        border-radius: 5px;"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        color: mui-color(\u0027white\u0027);"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        display: inline-block;"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        margin: .2rem .2rem .2rem 0;"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        padding: 0 3px 0 3px;"},{"lineNumber":571,"author":{"gitId":"-"},"content":""},{"lineNumber":572,"author":{"gitId":"-"},"content":"        .fa-tags {"},{"lineNumber":573,"author":{"gitId":"-"},"content":"          width: .65rem;"},{"lineNumber":574,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":575,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":577,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":578,"author":{"gitId":"-"},"content":""},{"lineNumber":579,"author":{"gitId":"-"},"content":"  /* Commit Message Body in Zoom Tab */"},{"lineNumber":580,"author":{"gitId":"-"},"content":"  .commit-message {"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    border: 1px solid transparent;"},{"lineNumber":582,"author":{"gitId":"-"},"content":"    padding: 5px;"},{"lineNumber":583,"author":{"gitId":"-"},"content":""},{"lineNumber":584,"author":{"gitId":"-"},"content":"    \u0026:focus,"},{"lineNumber":585,"author":{"gitId":"-"},"content":"    \u0026:focus-within {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"      border: 1px solid mui-color(\u0027blue\u0027, \u0027500\u0027);"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":588,"author":{"gitId":"-"},"content":""},{"lineNumber":589,"author":{"gitId":"-"},"content":"    \u0026.active {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"      .body {"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        background-color: mui-color(\u0027white\u0027);"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        border: 1px solid mui-color(\u0027grey\u0027, \u0027700\u0027);"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        display: grid;"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        margin: .25rem 0 .25rem 0;"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        overflow-x: auto;"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        padding: .4rem;"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        resize: none;"},{"lineNumber":598,"author":{"gitId":"-"},"content":""},{"lineNumber":599,"author":{"gitId":"-"},"content":"        pre {"},{"lineNumber":600,"author":{"gitId":"ckcherry23"},"content":"          @include mono-font;"},{"lineNumber":601,"author":{"gitId":"-"},"content":"          position: relative;"},{"lineNumber":602,"author":{"gitId":"-"},"content":""},{"lineNumber":603,"author":{"gitId":"-"},"content":"          .dashed-border {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"            border-right: 1px dashed mui-color(\u0027grey\u0027, \u0027500\u0027); // 72nd character line"},{"lineNumber":605,"author":{"gitId":"-"},"content":"            height: 100%;"},{"lineNumber":606,"author":{"gitId":"-"},"content":"            pointer-events: none;"},{"lineNumber":607,"author":{"gitId":"-"},"content":"            position: absolute;"},{"lineNumber":608,"author":{"gitId":"-"},"content":"            top: 0;"},{"lineNumber":609,"author":{"gitId":"-"},"content":"            width: 72ch;"},{"lineNumber":610,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":611,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":612,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":614,"author":{"gitId":"-"},"content":""},{"lineNumber":615,"author":{"gitId":"ckcherry23"},"content":"    .code-merge-icon {"},{"lineNumber":616,"author":{"gitId":"ckcherry23"},"content":"      color: mui-color(\u0027grey\u0027);"},{"lineNumber":617,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":618,"author":{"gitId":"ckcherry23"},"content":"      .fa-code-merge {"},{"lineNumber":619,"author":{"gitId":"ckcherry23"},"content":"        width: .65rem;"},{"lineNumber":620,"author":{"gitId":"ckcherry23"},"content":"      }"},{"lineNumber":621,"author":{"gitId":"ckcherry23"},"content":"    }"},{"lineNumber":622,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":623,"author":{"gitId":"-"},"content":"    .body {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      display: none;"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":626,"author":{"gitId":"-"},"content":""},{"lineNumber":627,"author":{"gitId":"-"},"content":"    .tag {"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      cursor: pointer;"},{"lineNumber":629,"author":{"gitId":"-"},"content":""},{"lineNumber":630,"author":{"gitId":"-"},"content":"      \u0026:focus {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        border: 1px solid mui-color(\u0027blue\u0027, \u0027500\u0027);"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        outline: none;"},{"lineNumber":633,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":634,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":635,"author":{"gitId":"-"},"content":""},{"lineNumber":636,"author":{"gitId":"-"},"content":"    \u0026--button {"},{"lineNumber":637,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027grey\u0027);"},{"lineNumber":638,"author":{"gitId":"-"},"content":"      padding-left: .5rem;"},{"lineNumber":639,"author":{"gitId":"-"},"content":""},{"lineNumber":640,"author":{"gitId":"-"},"content":"      \u0026:hover {"},{"lineNumber":641,"author":{"gitId":"-"},"content":"        cursor: pointer;"},{"lineNumber":642,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":643,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":644,"author":{"gitId":"-"},"content":""},{"lineNumber":645,"author":{"gitId":"-"},"content":"    pre {"},{"lineNumber":646,"author":{"gitId":"-"},"content":"      margin: 0;"},{"lineNumber":647,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":648,"author":{"gitId":"-"},"content":""},{"lineNumber":649,"author":{"gitId":"-"},"content":"    span.loc {"},{"lineNumber":650,"author":{"gitId":"-"},"content":"      color: mui-color(\u0027grey\u0027);"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":652,"author":{"gitId":"-"},"content":""},{"lineNumber":653,"author":{"gitId":"-"},"content":"    .message-title {"},{"lineNumber":654,"author":{"gitId":"ckcherry23"},"content":"      @include mono-font;"},{"lineNumber":655,"author":{"gitId":"-"},"content":"      display: inline;"},{"lineNumber":656,"author":{"gitId":"-"},"content":""},{"lineNumber":657,"author":{"gitId":"-"},"content":"      .within-border {"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        display: inline;"},{"lineNumber":659,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":660,"author":{"gitId":"-"},"content":""},{"lineNumber":661,"author":{"gitId":"-"},"content":"      .not-within-border {"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        border-left: 1px dashed mui-color(\u0027grey\u0027, \u0027500\u0027); // 50th character line"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        display: inline;"},{"lineNumber":664,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":665,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":666,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":667,"author":{"gitId":"-"},"content":"}"},{"lineNumber":668,"author":{"gitId":"-"},"content":""},{"lineNumber":669,"author":{"gitId":"-"},"content":"\u003c/style\u003e"}],"authorContributionMap":{"vvidday":20,"ckcherry23":71,"MarcusTXK":2,"-":576}},{"path":"src/main/java/reposense/RepoSense.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.helper.HelpScreenException;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.git.GitConfig;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import reposense.model.RunConfigurationDecider;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidCsvException;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidHeaderException;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.ParseException;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.report.ReportGenerator;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.system.ReportServer;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The main RepoSense class."},{"lineNumber":29,"author":{"gitId":"-"},"content":" */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class RepoSense {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(RepoSense.class);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final int SERVER_PORT_NUMBER \u003d 9000;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"E MMM d HH:mm:ss yyyy z\");"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VERSION_UNSPECIFIED \u003d \"unspecified\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * The entry point of the program."},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Additional flags are provided by the user in {@code args}."},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            TimeUtil.startTimer();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            CliArguments cliArguments \u003d ArgsParser.parse(args);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs \u003d null;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            ReportConfiguration reportConfig \u003d new ReportConfiguration();"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"            if (cliArguments.isViewModeOnly()) {"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"                ReportServer.startServer(SERVER_PORT_NUMBER, cliArguments.getReportDirectoryPath().toAbsolutePath());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"            configs \u003d RunConfigurationDecider.getRunConfiguration(cliArguments).getRepoConfigurations();"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"            reportConfig \u003d cliArguments.getReportConfiguration();"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"            RepoConfiguration.setFormatsToRepoConfigs(configs, cliArguments.getFormats());"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            RepoConfiguration.setDatesToRepoConfigs(configs, cliArguments.getSinceDate(), cliArguments.getUntilDate());"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            RepoConfiguration.setZoneIdToRepoConfigs(configs, cliArguments.getZoneId());"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(configs,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    cliArguments.isStandaloneConfigIgnored());"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            RepoConfiguration.setFileSizeLimitIgnoredToRepoConfigs(configs,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    cliArguments.isFileSizeLimitIgnored());"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            RepoConfiguration.setIsLastModifiedDateIncludedToRepoConfigs(configs,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    cliArguments.isLastModifiedDateIncluded());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(configs,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                    cliArguments.isShallowCloningPerformed());"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            RepoConfiguration.setIsFindingPreviousAuthorsPerformedToRepoConfigs(configs,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    cliArguments.isFindingPreviousAuthorsPerformed());"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"            List\u003cString[]\u003e globalGitConfig \u003d GitConfig.getGlobalGitLfsConfig();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            if (globalGitConfig.size() !\u003d 0) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                GitConfig.setGlobalGitLfsConfig(GitConfig.SKIP_SMUDGE_CONFIG_SETTINGS);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"            ReportGenerator reportGenerator \u003d new ReportGenerator();"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"            List\u003cPath\u003e reportFoldersAndFiles \u003d reportGenerator.generateReposReport(configs,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    cliArguments.getOutputFilePath().toAbsolutePath().toString(),"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                    cliArguments.getAssetsFilePath().toAbsolutePath().toString(), reportConfig,"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    formatter.format(ZonedDateTime.now(cliArguments.getZoneId())),"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    cliArguments.getSinceDate(), cliArguments.getUntilDate(),"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    cliArguments.isSinceDateProvided(), cliArguments.isUntilDateProvided(),"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    cliArguments.getNumCloningThreads(), cliArguments.getNumAnalysisThreads(),"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    TimeUtil::getElapsedTime, cliArguments.getZoneId(), cliArguments.isFreshClonePerformed());"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"            FileUtil.zipFoldersAndFiles(reportFoldersAndFiles, cliArguments.getOutputFilePath().toAbsolutePath(),"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    \".json\");"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"            // Set back to user\u0027s initial global git lfs config"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            GitConfig.setGlobalGitLfsConfig(globalGitConfig);"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.info(TimeUtil.getElapsedTimeMessage());"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"            if (cliArguments.isAutomaticallyLaunching()) {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                ReportServer.startServer(SERVER_PORT_NUMBER, cliArguments.getOutputFilePath().toAbsolutePath());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException | ParseException | InvalidCsvException | InvalidHeaderException e) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, e.getMessage(), e);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (HelpScreenException e) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            // help message was printed by the ArgumentParser; it is safe to exit."},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"        LogsManager.moveLogFileToOutputFolder();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static String getVersion() {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String version \u003d RepoSense.class.getPackage().getImplementationVersion();"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (version \u003d\u003d null || version.equals(VERSION_UNSPECIFIED)) {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            version \u003d System.getProperty(\"version\");"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return version;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MarcusTXK":7,"sikai00":2,"-":104}},{"path":"src/main/java/reposense/authorship/AuthorshipReporter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Objects;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.authorship.model.AuthorshipSummary;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Generates the authorship summary data for each repository."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AuthorshipReporter {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(AuthorshipReporter.class);"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int HIGH_NUMBER_LINES_THRESHOLD \u003d 500000;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String HIGH_NUMBER_LINES_MESSAGE \u003d \"There are a large number (%s) of text files to be \""},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"analyzed, comprising a total of %s lines. As such, RepoSense may take a long time to generate the \""},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"report. Performance may be improved by setting values for the \\\"File formats\\\" and \""},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \" \\\"Ignore Glob List\\\" columns in the repo-config.csv so as to reduce the number of files to be \""},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \" analyzed.\";"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    private final FileInfoExtractor fileInfoExtractor \u003d new FileInfoExtractor();"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    private final FileInfoAnalyzer fileInfoAnalyzer \u003d new FileInfoAnalyzer();"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    private final FileResultAggregator fileResultAggregator \u003d new FileResultAggregator();"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Generates and returns the authorship summary for each repo in {@code config}."},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"    public AuthorshipSummary generateAuthorshipSummary(RepoConfiguration config) {"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e textFileInfos \u003d fileInfoExtractor.extractTextFileInfos(config);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        int numFiles \u003d textFileInfos.size();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        int totalNumLines \u003d textFileInfos.stream()"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .mapToInt(fileInfo -\u003e fileInfo.getNumOfLines())"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .sum();"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (totalNumLines \u003e HIGH_NUMBER_LINES_THRESHOLD) {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            logger.warning(String.format(HIGH_NUMBER_LINES_MESSAGE, numFiles, totalNumLines));"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cFileResult\u003e fileResults \u003d textFileInfos.stream()"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"                .map(fileInfo -\u003e fileInfoAnalyzer.analyzeTextFile(config, fileInfo))"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .filter(Objects::nonNull)"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e binaryFileInfos \u003d fileInfoExtractor.extractBinaryFileInfos(config);"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cFileResult\u003e binaryFileResults \u003d binaryFileInfos.stream()"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"                .map(fileInfo -\u003e fileInfoAnalyzer.analyzeBinaryFile(config, fileInfo))"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .filter(Objects::nonNull)"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        fileResults.addAll(binaryFileResults);"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"        return fileResultAggregator.aggregateFileResult(fileResults, config.getAuthorList(),"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                config.getAllFileTypes());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":11,"-":54}},{"path":"src/main/java/reposense/authorship/FileInfoAnalyzer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.authorship.analyzer.AnnotatorAnalyzer;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.git.GitBlame;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.git.GitLog;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.util.StringsUtil;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Analyzes the target and information given in the {@link FileInfo}."},{"lineNumber":29,"author":{"gitId":"-"},"content":" */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FileInfoAnalyzer {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(FileInfoAnalyzer.class);"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final int AUTHOR_NAME_OFFSET \u003d \"author \".length();"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final int AUTHOR_EMAIL_OFFSET \u003d \"author-mail \".length();"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final int AUTHOR_TIME_OFFSET \u003d \"author-time \".length();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final int AUTHOR_TIMEZONE_OFFSET \u003d \"author-tz \".length();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final int FULL_COMMIT_HASH_LENGTH \u003d 40;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FILE_MISSING \u003d \"Unable to analyze the file located at \\\"%s\\\" \""},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"as the file is missing from your system. Skipping this file.\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SHALLOW_CLONING_LAST_MODIFIED_DATE_CONFLICT \u003d \"Repo %s was cloned using \""},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"shallow cloning. As such, the \\\"last modified date\\\" values may be incorrect.\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Analyzes the lines of the file, given in the {@code fileInfo}, that has changed in the time period provided"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * by {@code config}."},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns null if the file is missing from the local system, or none of the"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@link Author} specified in {@code config} contributed to the file in {@code fileInfo}."},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"    public FileResult analyzeTextFile(RepoConfiguration config, FileInfo fileInfo) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String relativePath \u003d fileInfo.getPath();"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (Files.notExists(Paths.get(config.getRepoRoot(), relativePath))) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            logger.severe(String.format(MESSAGE_FILE_MISSING, relativePath));"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (FileUtil.isEmptyFile(config.getRepoRoot(), relativePath)) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        aggregateBlameAuthorModifiedAndDateInfo(config, fileInfo);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        fileInfo.setFileType(config.getFileType(fileInfo.getPath()));"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AnnotatorAnalyzer.aggregateAnnotationAuthorInfo(fileInfo, config.getAuthorConfig());"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!config.getAuthorList().isEmpty() \u0026\u0026 fileInfo.isAllAuthorsIgnored(config.getAuthorList())) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return generateTextFileResult(fileInfo);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Analyzes the binary file, given in the {@code fileInfo}, that has changed in the time period provided"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * by {@code config}."},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns null if the file is missing from the local system, or none of the"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@link Author} specified in {@code config} contributed to the file in {@code fileInfo}."},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"    public FileResult analyzeBinaryFile(RepoConfiguration config, FileInfo fileInfo) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String relativePath \u003d fileInfo.getPath();"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (Files.notExists(Paths.get(config.getRepoRoot(), relativePath))) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.severe(String.format(MESSAGE_FILE_MISSING, relativePath));"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        fileInfo.setFileType(config.getFileType(fileInfo.getPath()));"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return generateBinaryFileResult(config, fileInfo);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Generates and returns a {@link FileResult} with the authorship results from {@code fileInfo} consolidated."},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"    private FileResult generateTextFileResult(FileInfo fileInfo) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        HashMap\u003cAuthor, Integer\u003e authorContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        for (LineInfo line : fileInfo.getLines()) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Author author \u003d line.getAuthor();"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            authorContributionMap.put(author, authorContributionMap.getOrDefault(author, 0) + 1);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return FileResult.createTextFileResult("},{"lineNumber":105,"author":{"gitId":"-"},"content":"            fileInfo.getPath(), fileInfo.getFileType(), fileInfo.getLines(), authorContributionMap,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            fileInfo.exceedsFileLimit());"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Generates and returns a {@link FileResult} with the authorship results from binary {@code fileInfo} consolidated."},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Authorship results are indicated in the {@code authorContributionMap} as contributions with zero line counts."},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns {@code null} if none of the {@link Author} specified in {@code config} contributed to the file in"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code fileInfo}."},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"sikai00"},"content":"    private FileResult generateBinaryFileResult(RepoConfiguration config, FileInfo fileInfo) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        List\u003cString[]\u003e authorsString \u003d GitLog.getFileAuthors(config, fileInfo.getPath());"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (authorsString.size() \u003d\u003d 0) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Set\u003cAuthor\u003e authors \u003d new HashSet\u003c\u003e();"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        HashMap\u003cAuthor, Integer\u003e authorContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        for (String[] lineDetails : authorsString) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String authorName \u003d lineDetails[0];"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String authorEmail \u003d lineDetails[1];"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            authors.add(config.getAuthor(authorName, authorEmail));"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        for (Author author : authors) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            authorContributionMap.put(author, 0);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return FileResult.createBinaryFileResult(fileInfo.getPath(), fileInfo.getFileType(), authorContributionMap);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the {@link Author} and {@link LocalDateTime} for each line in {@code fileInfo} based on the git blame"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * analysis of the file."},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * The {@code config} is used to obtain the root directory for running git blame as well as other parameters used"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * in determining which author to assign to each line and whether to set the last modified date for a"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * {@code lineInfo}."},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"sikai00"},"content":"    private void aggregateBlameAuthorModifiedAndDateInfo(RepoConfiguration config, FileInfo fileInfo) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String blameResults;"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!config.isFindingPreviousAuthorsPerformed()) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            blameResults \u003d getGitBlameResult(config, fileInfo.getPath());"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            blameResults \u003d getGitBlameWithPreviousAuthorsResult(config, fileInfo.getPath());"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String[] blameResultLines \u003d StringsUtil.NEWLINE.split(blameResults);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Path filePath \u003d Paths.get(fileInfo.getPath());"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        LocalDateTime sinceDate \u003d config.getSinceDate();"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        LocalDateTime untilDate \u003d config.getUntilDate();"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        for (int lineCount \u003d 0; lineCount \u003c blameResultLines.length; lineCount +\u003d 5) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            String commitHash \u003d blameResultLines[lineCount].substring(0, FULL_COMMIT_HASH_LENGTH);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            String authorName \u003d blameResultLines[lineCount + 1].substring(AUTHOR_NAME_OFFSET);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            String authorEmail \u003d blameResultLines[lineCount + 2]"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    .substring(AUTHOR_EMAIL_OFFSET).replaceAll(\"\u003c|\u003e\", \"\");"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            Long commitDateInMs \u003d Long.parseLong(blameResultLines[lineCount + 3].substring(AUTHOR_TIME_OFFSET)) * 1000;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            LocalDateTime commitDate \u003d LocalDateTime.ofInstant(Instant.ofEpochMilli(commitDateInMs),"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    config.getZoneId());"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            Author author \u003d config.getAuthor(authorName, authorEmail);"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"            if (!fileInfo.isFileLineTracked(lineCount / 5) || author.isIgnoringFile(filePath)"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    || CommitHash.isInsideCommitList(commitHash, config.getIgnoreCommitList())"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                    || commitDate.compareTo(sinceDate) \u003c 0 || commitDate.compareTo(untilDate) \u003e 0) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                author \u003d Author.UNKNOWN_AUTHOR;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"            if (config.isLastModifiedDateIncluded()) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                if (config.isShallowCloningPerformed()) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    logger.warning(String.format("},{"lineNumber":177,"author":{"gitId":"-"},"content":"                            MESSAGE_SHALLOW_CLONING_LAST_MODIFIED_DATE_CONFLICT, config.getRepoName()));"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"                fileInfo.setLineLastModifiedDate(lineCount / 5, commitDate);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            fileInfo.setLineAuthor(lineCount / 5, author);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Returns the analysis result from running git blame on {@code filePath} with reference to the root directory"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * given in {@code config}."},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":190,"author":{"gitId":"sikai00"},"content":"    private String getGitBlameResult(RepoConfiguration config, String filePath) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return GitBlame.blame(config.getRepoRoot(), filePath);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Returns the analysis result from running git blame with finding previous authors enabled on {@code filePath}"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * with reference to the root directory given in {@code config}."},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":198,"author":{"gitId":"sikai00"},"content":"    private String getGitBlameWithPreviousAuthorsResult(RepoConfiguration config, String filePath) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return GitBlame.blameWithPreviousAuthors(config.getRepoRoot(), filePath);"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":7,"-":194}},{"path":"src/main/java/reposense/authorship/FileInfoExtractor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Comparator;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.git.GitDiff;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.git.GitRevList;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.util.StringsUtil;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Extracts out all the relevant {@code FileInfo} from the repository."},{"lineNumber":34,"author":{"gitId":"-"},"content":" */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class FileInfoExtractor {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(FileInfoExtractor.class);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_EXTRACTING_FILE_INFO \u003d \"Extracting relevant file info from %s (%s)...\";"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FILE_PATH \u003d \"\\\"%s\\\" is an invalid file path for current OS or \""},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"indicates a possible regex match issue. Skipping this directory.\";"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FILE_SIZE_LIMIT_EXCEEDED \u003d \"File \\\"%s\\\" has %dB size. The file size \""},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"limit is set at %dB. %s\";"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FILE_ANALYSIS_SKIPPED \u003d \"Skipping analysis of this file...\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FILE_EXCLUDED_FROM_REPORT \u003d \"Exact line diffs will be excluded from report...\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String DIFF_FILE_CHUNK_SEPARATOR \u003d \"\\ndiff --git \\\"?\\\u0027?a/.*\\n\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String LINE_CHUNKS_SEPARATOR \u003d \"\\n@@ \";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String LINE_INSERTED_SYMBOL \u003d \"+\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String STARTING_LINE_NUMBER_GROUP_NAME \u003d \"startingLineNumber\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String FILE_CHANGED_GROUP_NAME \u003d \"filePath\";"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String FILE_DELETED_SYMBOL \u003d \"dev/null\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String MATCH_GROUP_FAIL_MESSAGE_FORMAT \u003d \"Failed to match the %s group for:\\n%s\";"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String BINARY_FILE_LINE_DIFF_RESULT \u003d \"-\\t-\\t\";"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final int LINE_CHANGED_HEADER_INDEX \u003d 0;"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final Pattern STARTING_LINE_NUMBER_PATTERN \u003d Pattern.compile("},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \"-(\\\\d)+(,)?(\\\\d)* \\\\+(?\u003cstartingLineNumber\u003e\\\\d+)(,)?(\\\\d)* @@\");"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final Pattern FILE_CHANGED_PATTERN \u003d Pattern.compile(\"\\n(\\\\+){3} b?/(?\u003cfilePath\u003e.*?)\\t?\\n\");"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Extracts a list of relevant non-binary files given in {@code config}."},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"    public List\u003cFileInfo\u003e extractTextFileInfos(RepoConfiguration config) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_START_EXTRACTING_FILE_INFO, config.getLocation(), config.getBranch()));"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // checks out to the latest commit of the date range to ensure the FileInfo generated correspond to the"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // git blame file analyze output"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), config.getUntilDate(),"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                    config.getZoneId());"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (CommitNotFoundException cnfe) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return fileInfos;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String lastCommitHash \u003d GitRevList.getCommitHashUntilDate("},{"lineNumber":77,"author":{"gitId":"-"},"content":"                config.getRepoRoot(), config.getBranch(), config.getSinceDate(), config.getZoneId());"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        fileInfos \u003d (lastCommitHash.isEmpty())"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                ? getAllFileInfo(config, false)"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                : getEditedFileInfos(config, lastCommitHash);"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        fileInfos.sort(Comparator.comparing(FileInfo::getPath));"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return fileInfos;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Extracts a list of relevant binary files given in {@code config}."},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"    public List\u003cFileInfo\u003e extractBinaryFileInfos(RepoConfiguration config) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e binaryFileInfos \u003d getAllFileInfo(config, true);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        binaryFileInfos.sort(Comparator.comparing(FileInfo::getPath));"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return binaryFileInfos;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns a list of {@link FileInfo}s for all files in the repo with lines marked indicating if they were edited"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * in between the current commit and the commit given by {@code lastCommitHash}."},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * The repo is given by {@code config}."},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"sikai00"},"content":"    public List\u003cFileInfo\u003e getEditedFileInfos(RepoConfiguration config, String lastCommitHash) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String fullDiffResult \u003d GitDiff.diffCommit(config.getRepoRoot(), lastCommitHash);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // no diff between the 2 commits, return an empty list"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (fullDiffResult.isEmpty()) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return fileInfos;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String[] fileDiffResultList \u003d fullDiffResult.split(DIFF_FILE_CHUNK_SEPARATOR);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Set\u003cPath\u003e textFilesSet \u003d getFiles(config, false);"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        for (String fileDiffResult : fileDiffResultList) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Matcher filePathMatcher \u003d FILE_CHANGED_PATTERN.matcher(fileDiffResult);"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"            // diff result does not have the markers to indicate that file has any line changes, skip it"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            if (!filePathMatcher.find()) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"            String filePath \u003d filePathMatcher.group(FILE_CHANGED_GROUP_NAME);"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"            if (filePath.equals(FILE_DELETED_SYMBOL) // file is deleted, skip it as well"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    || !isValidTextFile(filePath, textFilesSet)"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    || !config.getFileTypeManager().isInsideWhitelistedFormats(filePath)"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    || FileUtil.isFileIgnoredByGlob(config, Paths.get(filePath))) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"            FileInfo currentFileInfo \u003d generateFileInfo(config, filePath);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            setLinesToTrack(currentFileInfo, fileDiffResult);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            if (currentFileInfo.isFileAnalyzed()) {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                fileInfos.add(currentFileInfo);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return fileInfos;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@link Set} of non-binary files for the repo {@code repoConfig}"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * if {@code isBinaryFiles} is set to `false`."},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Otherwise, returns a {@link Set} of binary files for the repo {@code repoConfig}."},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"sikai00"},"content":"    public Set\u003cPath\u003e getFiles(RepoConfiguration repoConfig, boolean isBinaryFile) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        List\u003cString\u003e modifiedFileList \u003d GitDiff.getModifiedFilesList(Paths.get(repoConfig.getRepoRoot()));"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // Gets rid of files with invalid directory name and filters by the {@code isBinaryFile} flag"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return modifiedFileList.stream()"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .filter(file -\u003e isBinaryFile \u003d\u003d file.startsWith(BINARY_FILE_LINE_DIFF_RESULT))"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .map(file -\u003e StringsUtil.TAB.split(file)[2])"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .filter(FileUtil::isValidPathWithLogging)"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .map(Paths::get)"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .collect(Collectors.toCollection(HashSet::new));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Analyzes the {@code fileDiffResult} and marks each {@link LineInfo} in {@code fileInfo} on whether they were"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * inserted in between the commit range."},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"sikai00"},"content":"    private void setLinesToTrack(FileInfo fileInfo, String fileDiffResult) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String[] linesChangedChunk \u003d fileDiffResult.split(LINE_CHUNKS_SEPARATOR);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        List\u003cLineInfo\u003e lineInfos \u003d fileInfo.getLines();"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        int fileLinePointer \u003d 0;"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // skips the header, index starts from 1"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        for (int sectionIndex \u003d 1; sectionIndex \u003c linesChangedChunk.length; sectionIndex++) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            String linesChangedInSection \u003d linesChangedChunk[sectionIndex];"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            String[] linesChanged \u003d StringsUtil.NEWLINE.split(linesChangedInSection);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            int startingLineNumber \u003d getStartingLineNumber(linesChanged[LINE_CHANGED_HEADER_INDEX]);"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"            // mark all untouched lines between sections as untracked"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            while (fileLinePointer \u003c startingLineNumber - 1) {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                lineInfos.get(fileLinePointer++).setTracked(false);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"            // skips the header, index starts from 1"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            for (int lineIndex \u003d 1; lineIndex \u003c linesChanged.length; lineIndex++) {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                String lineChanged \u003d linesChanged[lineIndex];"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                // set line added to be tracked"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                if (lineChanged.startsWith(LINE_INSERTED_SYMBOL)) {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    lineInfos.get(fileLinePointer++).setTracked(true);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // set all remaining lines in file that were untouched to be untracked"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        while (fileLinePointer \u003c lineInfos.size()) {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            lineInfos.get(fileLinePointer++).setTracked(false);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Traverses each file from the repo root directory, generates the {@link FileInfo} for each relevant file found"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * based on {@code config} and inserts it into {@code fileInfos}."},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Adds binary files to {@link List} if {@code isBinaryFiles} is true. Otherwise, adds non-binary files"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * to {@link List}."},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":198,"author":{"gitId":"sikai00"},"content":"    private List\u003cFileInfo\u003e getAllFileInfo(RepoConfiguration config, boolean isBinaryFiles) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Set\u003cPath\u003e files \u003d getFiles(config, isBinaryFiles);"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        for (Path relativePath : files) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (!config.getFileTypeManager().isInsideWhitelistedFormats(relativePath.toString())"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                    || FileUtil.isFileIgnoredByGlob(config, relativePath)) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"            FileInfo fileInfo \u003d (isBinaryFiles)"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    ? new FileInfo(relativePath.toString())"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                    : generateFileInfo(config, relativePath.toString());"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (fileInfo.isFileAnalyzed()) {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                fileInfos.add(fileInfo);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return fileInfos;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * Returns a {@link FileInfo} with a list of {@link LineInfo} for each line content in the"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * file located in the repository given by {@code config}/{@code relativePath}."},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":223,"author":{"gitId":"sikai00"},"content":"    public FileInfo generateFileInfo(RepoConfiguration config, String relativePath) {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return generateFileInfo(config.getRepoRoot(), relativePath, config.getFileSizeLimit(),"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            config.isFileSizeLimitIgnored(), config.isIgnoredFileAnalysisSkipped());"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * Returns a {@link FileInfo} with a list of {@link LineInfo} for each line content in the"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * file located at the {@link Path} given by {@code repoRoot}/{@code relativePath}. {@code fileSizeLimit} and"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code ignoreFileSizeLimit} are used to set whether the file size limit is exceeding. {@link LineInfo}s are"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * not included in {@link FileInfo} if  {@code skipIgnoredFileAnalysis} is true and file size limit is exceeding."},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":234,"author":{"gitId":"sikai00"},"content":"    public FileInfo generateFileInfo(String repoRoot, String relativePath, long fileSizeLimit,"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            boolean ignoreFileSizeLimit, boolean skipIgnoredFileAnalysis) {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        FileInfo fileInfo \u003d new FileInfo(relativePath);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(repoRoot, fileInfo.getPath());"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(path.toFile()))) {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            long fileSize \u003d Files.size(path);"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            fileInfo.setFileSize(fileSize);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            if (!ignoreFileSizeLimit \u0026\u0026 fileSize \u003e fileSizeLimit) {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                fileInfo.setExceedsSizeLimit(true);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                if (skipIgnoredFileAnalysis) {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    logger.log(Level.WARNING, String.format(MESSAGE_FILE_SIZE_LIMIT_EXCEEDED,"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                            fileInfo.getPath(), fileSize, fileSizeLimit, MESSAGE_FILE_ANALYSIS_SKIPPED));"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    fileInfo.setFileAnalyzed(false);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    return fileInfo;"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                logger.log(Level.WARNING, String.format(MESSAGE_FILE_SIZE_LIMIT_EXCEEDED,"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                        fileInfo.getPath(), fileSize, fileSizeLimit, MESSAGE_FILE_EXCLUDED_FROM_REPORT));"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            String line;"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            int lineNum \u003d 1;"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                fileInfo.addLine(new LineInfo(lineNum++, line));"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, ioe.getMessage(), ioe);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        return fileInfo;"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     * Returns the starting line changed number, within the file diff result, by matching the pattern inside"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * {@code linesChanged}."},{"lineNumber":267,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * @throws AssertionError if matching line number pattern in chunk header fails."},{"lineNumber":269,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":270,"author":{"gitId":"sikai00"},"content":"    private int getStartingLineNumber(String linesChanged) throws AssertionError {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Matcher chunkHeaderMatcher \u003d STARTING_LINE_NUMBER_PATTERN.matcher(linesChanged);"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"        if (!chunkHeaderMatcher.find()) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            logger.severe(String.format(MATCH_GROUP_FAIL_MESSAGE_FORMAT, \"line changed\", linesChanged));"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Should not have error matching line number pattern inside chunk header!\");"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"        return Integer.parseInt(chunkHeaderMatcher.group(STARTING_LINE_NUMBER_GROUP_NAME));"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     * Returns true if {@code filePath} is valid and the file is not in binary (i.e. part of {@code textFilesSet})."},{"lineNumber":283,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":284,"author":{"gitId":"sikai00"},"content":"    private boolean isValidTextFile(String filePath, Set\u003cPath\u003e textFilesSet) {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        boolean isValidFilePath;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            isValidFilePath \u003d FileUtil.isValidPathWithLogging(filePath);"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_INVALID_FILE_PATH, filePath));"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            isValidFilePath \u003d false;"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"        return isValidFilePath \u0026\u0026 textFilesSet.contains(Paths.get(filePath));"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":10,"-":285}},{"path":"src/main/java/reposense/authorship/FileResultAggregator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import reposense.authorship.model.AuthorshipSummary;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Aggregates the file analysis results to get the contribution and issue summary for all authors."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FileResultAggregator {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the {@link AuthorshipSummary} generated from aggregating the {@code fileResults} and {@code fileTypes}"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * for each {@link Author} in the list of {@code authors}."},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public AuthorshipSummary aggregateFileResult(List\u003cFileResult\u003e fileResults, List\u003cAuthor\u003e authors,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            List\u003cFileType\u003e fileTypes) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AuthorshipSummary authorContributionSummary \u003d new AuthorshipSummary(fileResults, authors, fileTypes);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        for (FileResult fileResult : fileResults) {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            if (fileResult.isBinary()) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            for (LineInfo lineInfo : fileResult.getLines()) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                Author author \u003d lineInfo.getAuthor();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                if (!authors.contains(author)) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                authorContributionSummary.addAuthorContributionCount(author, fileResult.getFileType());"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            if (fileResult.isIgnored()) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                fileResult.clearLines();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return authorContributionSummary;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":1,"-":39}},{"path":"src/main/java/reposense/authorship/analyzer/AnnotatorAnalyzer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship.analyzer;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Analyzes the authorship of a {@code FileInfo} using the given annotations on the file."},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Only the lines with the format (START OF LINE) COMMENT_SYMBOL @@author ONE_STRING_WITH_NO_SPACE (END OF LINE)"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * will be analyzed. Otherwise, the line will be ignored and treated as normal lines."},{"lineNumber":18,"author":{"gitId":"-"},"content":" * If the line is analyzed, and the string following the author tag is a valid git id, and there is no author config"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * file, then the code will be attributed to the author with that git id. Otherwise, the code will be attributed to"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unknown author."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AnnotatorAnalyzer {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String AUTHOR_TAG \u003d \"@@author\";"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"    private static final String REGEX_AUTHOR_TAG_FORMAT \u003d \"@@author(\\\\s+.*)?\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String[][] COMMENT_FORMATS \u003d {"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"            {\"//\", null},"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            {\"/\\\\*\", \"\\\\*/\"},"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"            {\"#\", null},"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            {\"\u003c!--\", \"--\u003e\"},"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"            {\"%\", null},"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            {\"\\\\[.*]:\\\\s*#\\\\s*\\\\(\", \"\\\\)\"},"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            {\"\u003c!---\", \"---\u003e\"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern[] COMMENT_PATTERNS \u003d {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[0][0], COMMENT_FORMATS[0][1])),"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[1][0], COMMENT_FORMATS[1][1])),"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[2][0], COMMENT_FORMATS[2][1])),"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[3][0], COMMENT_FORMATS[3][1])),"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[4][0], COMMENT_FORMATS[4][1])),"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[5][0], COMMENT_FORMATS[5][1])),"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            Pattern.compile(generateCommentRegex(COMMENT_FORMATS[6][0], COMMENT_FORMATS[6][1]))"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Overrides the authorship information in {@code fileInfo} based on annotations given on the file."},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param fileInfo FileInfo to be further analyzed with author annotations."},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param authorConfig AuthorConfiguration for current analysis."},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void aggregateAnnotationAuthorInfo(FileInfo fileInfo, AuthorConfiguration authorConfig) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Optional\u003cAuthor\u003e currentAnnotatedAuthor \u003d Optional.empty();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Path filePath \u003d Paths.get(fileInfo.getPath());"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (LineInfo lineInfo : fileInfo.getLines()) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            String lineContent \u003d lineInfo.getContent();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (lineContent.contains(AUTHOR_TAG) \u0026\u0026 isValidCommentLine(lineContent)) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                Optional\u003cAuthor\u003e newAnnotatedAuthor \u003d findAuthorInLine(lineContent, authorConfig);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                boolean isEndOfAnnotatedSegment \u003d currentAnnotatedAuthor.isPresent() \u0026\u0026 !newAnnotatedAuthor.isPresent();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                boolean isUnknownAuthorSegment \u003d !currentAnnotatedAuthor.isPresent() \u0026\u0026 !newAnnotatedAuthor.isPresent();"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"                if (isEndOfAnnotatedSegment) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    lineInfo.setAuthor(currentAnnotatedAuthor.get());"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    currentAnnotatedAuthor \u003d Optional.empty();"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                } else if (isUnknownAuthorSegment) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    currentAnnotatedAuthor \u003d Optional.of(Author.UNKNOWN_AUTHOR);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                } else {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    currentAnnotatedAuthor \u003d newAnnotatedAuthor.filter(author -\u003e !author.isIgnoringFile(filePath));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            currentAnnotatedAuthor.ifPresent(lineInfo::setAuthor);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an optional {@code Author} corresponding to the @@author tag in {@code line}."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * It looks for the corresponding {@code Author} object in the {@code authorAliasMap} inside"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code authorConfig} and returns it. If an author config file is specified and the"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * author name found is not in it, then it returns {@code Author#UNKNOWN_AUTHOR} instead."},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param line Line to be analyzed."},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param authorConfig AuthorConfiguration for the analysis of this repo."},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @return Optional {@code Author} found in the line."},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static Optional\u003cAuthor\u003e findAuthorInLine(String line, AuthorConfiguration authorConfig) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Optional\u003cString\u003e optionalName \u003d extractAuthorName(line);"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"        optionalName.filter(name -\u003e !authorConfig.containsName(name) \u0026\u0026 !authorConfig.hasAuthorConfigFile())"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .ifPresent(name -\u003e authorConfig.addAuthor(new Author(name)));"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return optionalName.map(name -\u003e authorConfig.getAuthor(name, name));"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Extracts the {@link Author} name that follows the specific format from {@code line} at {@code formatIndex}."},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param line Line to extract the author\u0027s name from."},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return An optional string containing the author\u0027s name."},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Optional\u003cString\u003e extractAuthorName(String line) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Optional.of(line)"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                // gets component after AUTHOR_TAG"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .map(l -\u003e l.split(AUTHOR_TAG))"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .filter(array -\u003e array.length \u003e\u003d 2)"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                // separates by end-comment format to obtain the author\u0027s name at the zeroth index"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"                .map(array -\u003e COMMENT_FORMATS[getCommentTypeIndex(line)][1] !\u003d null"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"                        ? array[1].trim().split(COMMENT_FORMATS[getCommentTypeIndex(line)][1])"},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"                        : new String[]{ array[1].trim() })"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .filter(array -\u003e array.length \u003e 0)"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .map(array -\u003e array[0].trim())"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"                // checks if the author name is not empty"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"                .filter(trimmedParameters -\u003e !trimmedParameters.isEmpty());"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Generates regex for valid comment formats in which author tag is found, with {@code REGEX_AUTHOR_TAG_FORMAT}"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * flanked by {@code commentStart} and {@code commentEnd}."},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private static String generateCommentRegex(String commentStart, String commentEnd) {"},{"lineNumber":120,"author":{"gitId":"sikai00"},"content":"        if (commentEnd \u003d\u003d null) {"},{"lineNumber":121,"author":{"gitId":"sikai00"},"content":"            return \"^[\\\\s]*\" + commentStart + \"[\\\\s]*\" + REGEX_AUTHOR_TAG_FORMAT + \"[\\\\s]*$\";"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return \"^[\\\\s]*\" + commentStart + \"[\\\\s]*\" + REGEX_AUTHOR_TAG_FORMAT + \"[\\\\s]*(\" + commentEnd + \")?[\\\\s]*$\";"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns the index in {@code COMMENT_FORMATS} representing the type of comment the @@author tag line is."},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @param line The line to be checked"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @return The index of the comment syntax type if the comment pattern matches, -1 if no match could be found"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static int getCommentTypeIndex(String line) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c COMMENT_PATTERNS.length; i++) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Pattern commentPattern \u003d COMMENT_PATTERNS[i];"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Matcher matcher \u003d commentPattern.matcher(line);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            if (matcher.find()) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                return i;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return -1;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns true if line is one of the supported comment types."},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param line Line to be checked."},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @return True if line is a valid comment line."},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private static boolean isValidCommentLine(String line) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return getCommentTypeIndex(line) \u003e\u003d 0;"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":13,"-":139}},{"path":"src/main/java/reposense/commits/CommitInfoAnalyzer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.util.StringsUtil.removeQuote;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Comparator;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitInfo;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitResult;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.commits.model.ContributionPair;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Analyzes commit information found in the git log."},{"lineNumber":31,"author":{"gitId":"-"},"content":" */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommitInfoAnalyzer {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final DateTimeFormatter GIT_STRICT_ISO_DATE_FORMAT \u003d"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ssz\");"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String TAB_SPLITTER \u003d \"\\t\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String MOVED_FILE_INDICATION \u003d \"\u003d\u003e \";"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String BINARY_FILE_CONTRIBUTION \u003d \"-\";"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final int STAT_ADDITION_INDEX \u003d 0;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final int STAT_DELETION_INDEX \u003d 1;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final int STAT_FILE_PATH_INDEX \u003d 2;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(CommitInfoAnalyzer.class);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_ANALYZING_COMMIT_INFO \u003d \"Analyzing commits info for %s (%s)...\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"    private static final String HASH_SPLITTER \u003d \"\\\\s\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String LOG_SPLITTER \u003d \"\\\\|\\\\n\\\\|\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String REF_SPLITTER \u003d \",\\\\s\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String NEW_LINE_SPLITTER \u003d \"\\\\n\";"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_PREFIX \u003d \"tag:\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final int COMMIT_HASH_INDEX \u003d 0;"},{"lineNumber":53,"author":{"gitId":"ckcherry23"},"content":"    private static final int PARENT_HASHES_INDEX \u003d 1;"},{"lineNumber":54,"author":{"gitId":"ckcherry23"},"content":"    private static final int AUTHOR_INDEX \u003d 2;"},{"lineNumber":55,"author":{"gitId":"ckcherry23"},"content":"    private static final int EMAIL_INDEX \u003d 3;"},{"lineNumber":56,"author":{"gitId":"ckcherry23"},"content":"    private static final int DATE_INDEX \u003d 4;"},{"lineNumber":57,"author":{"gitId":"ckcherry23"},"content":"    private static final int MESSAGE_TITLE_INDEX \u003d 5;"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"    private static final int MESSAGE_BODY_INDEX \u003d 6;"},{"lineNumber":59,"author":{"gitId":"ckcherry23"},"content":"    private static final int REF_NAME_INDEX \u003d 7;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final Pattern MESSAGEBODY_LEADING_PATTERN \u003d Pattern.compile(\"^ {4}\", Pattern.MULTILINE);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Analyzes each {@link CommitInfo} in {@code commitInfos} and returns a list of {@link CommitResult} that is not"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * specified to be ignored or the author is inside {@code config}."},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"    public List\u003cCommitResult\u003e analyzeCommits(List\u003cCommitInfo\u003e commitInfos, RepoConfiguration config) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_START_ANALYZING_COMMIT_INFO, config.getLocation(), config.getBranch()));"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return commitInfos.stream()"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(commitInfo -\u003e analyzeCommit(commitInfo, config))"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .filter(commitResult -\u003e !commitResult.getAuthor().equals(Author.UNKNOWN_AUTHOR)"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                        \u0026\u0026 !CommitHash.isInsideCommitList(commitResult.getHash(), config.getIgnoreCommitList()))"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .distinct()"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(CommitResult::getTime))"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Extracts the relevant data from {@code commitInfo} into a {@link CommitResult}. Retrieves the author of the"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * commit from {@code config}."},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"    public CommitResult analyzeCommit(CommitInfo commitInfo, RepoConfiguration config) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String infoLine \u003d commitInfo.getInfoLine();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String statLine \u003d commitInfo.getStatLine();"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"ckcherry23"},"content":"        String[] elements \u003d infoLine.split(LOG_SPLITTER, 8);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String hash \u003d elements[COMMIT_HASH_INDEX];"},{"lineNumber":89,"author":{"gitId":"ckcherry23"},"content":"        Boolean isMergeCommit \u003d elements[PARENT_HASHES_INDEX].split(HASH_SPLITTER).length \u003e 1;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Author author \u003d config.getAuthor(elements[AUTHOR_INDEX], elements[EMAIL_INDEX]);"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ZonedDateTime date \u003d null;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            date \u003d ZonedDateTime.parse(elements[DATE_INDEX], GIT_STRICT_ISO_DATE_FORMAT);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException pe) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, \"Unable to parse the date from git log result for commit.\", pe);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // Commit date may be in a timezone different from the one given in the config."},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LocalDateTime adjustedDate \u003d date.withZoneSameInstant(config.getZoneId()).toLocalDateTime();"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String messageTitle \u003d (elements.length \u003e MESSAGE_TITLE_INDEX) ? elements[MESSAGE_TITLE_INDEX] : \"\";"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String messageBody \u003d (elements.length \u003e MESSAGE_BODY_INDEX)"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                ? getCommitMessageBody(elements[MESSAGE_BODY_INDEX]) : \"\";"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String[] refs \u003d (elements.length \u003e REF_NAME_INDEX)"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                ? elements[REF_NAME_INDEX].split(REF_SPLITTER)"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                : new String[]{\"\"};"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String[] tags \u003d Arrays.stream(refs).filter(ref -\u003e ref.contains(TAG_PREFIX)).toArray(String[]::new);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (tags.length \u003d\u003d 0) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            tags \u003d null; // set to null so it won\u0027t be converted to json"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            extractTagNames(tags);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (statLine.isEmpty()) { // empty commit, no files changed"},{"lineNumber":117,"author":{"gitId":"ckcherry23"},"content":"            return new CommitResult(author, hash, isMergeCommit, adjustedDate, messageTitle, messageBody, tags);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] statInfos \u003d statLine.split(NEW_LINE_SPLITTER);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] fileTypeContributions \u003d Arrays.copyOfRange(statInfos, 0, statInfos.length - 1);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e fileTypeAndContributionMap \u003d"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                getFileTypesAndContribution(fileTypeContributions, config);"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"ckcherry23"},"content":"        return new CommitResult(author, hash, isMergeCommit, adjustedDate, messageTitle, messageBody, tags,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                fileTypeAndContributionMap);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns the number of lines added and deleted in {@code filePathContributions} for the specified file types"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * in {@code config}."},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"sikai00"},"content":"    private Map\u003cFileType, ContributionPair\u003e getFileTypesAndContribution(String[] filePathContributions,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            RepoConfiguration config) {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e fileTypesAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (String filePathContribution : filePathContributions) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String[] infos \u003d filePathContribution.split(TAB_SPLITTER);"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"            if (isBinaryContribution(infos[STAT_ADDITION_INDEX], infos[STAT_DELETION_INDEX])) {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                continue; // skip binary file contributions"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"            int addition \u003d Integer.parseInt(infos[STAT_ADDITION_INDEX]);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            int deletion \u003d Integer.parseInt(infos[STAT_DELETION_INDEX]);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String filePath \u003d extractFilePath(infos[STAT_FILE_PATH_INDEX]);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            FileType fileType \u003d config.getFileType(filePath);"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"            if (!fileTypesAndContributionMap.containsKey(fileType)) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                fileTypesAndContributionMap.put(fileType, new ContributionPair());"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"            ContributionPair contributionPair \u003d fileTypesAndContributionMap.get(fileType);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            contributionPair.addInsertions(addition);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            contributionPair.addDeletions(deletion);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return fileTypesAndContributionMap;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Extracts the correct file path from the unprocessed git log {@code filePath}."},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"sikai00"},"content":"    private String extractFilePath(String filePath) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String filteredFilePath \u003d filePath;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (filteredFilePath.contains(MOVED_FILE_INDICATION)) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            // moved file has the format: fileA \u003d\u003e newPosition/fileA"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            filteredFilePath \u003d filteredFilePath.substring(filePath.indexOf(MOVED_FILE_INDICATION)"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    + MOVED_FILE_INDICATION.length());"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            // Removes the trailing \u0027}\u0027 character from the file name, as renamed file names have ending \u0027}\u0027 character."},{"lineNumber":169,"author":{"gitId":"-"},"content":"            filteredFilePath \u003d filteredFilePath.replaceAll(\"}$\", \"\");"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Removes the trailing double quotes from the file name, as filenames that have special characters"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // will be escaped and surrounded by double quotes automatically. e.g. READ\\ME.md -\u003e \"READ\\\\ME.md\""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        filteredFilePath \u003d removeQuote(filteredFilePath);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return filteredFilePath;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Detects binary file contribution based on the git log {@code addition} and {@code deletion}."},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"sikai00"},"content":"    private boolean isBinaryContribution(String addition, String deletion) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // git log returns \"-\" for binary file additions and deletions"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return addition.equals(BINARY_FILE_CONTRIBUTION) \u0026\u0026 deletion.equals(BINARY_FILE_CONTRIBUTION);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Extracts the tag names in {@code tags}."},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"sikai00"},"content":"    private void extractTagNames(String[] tags) {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tags.length; i++) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            tags[i] \u003d tags[i].substring(tags[i].lastIndexOf(TAG_PREFIX) + TAG_PREFIX.length()).trim();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"sikai00"},"content":"    private String getCommitMessageBody(String raw) {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d MESSAGEBODY_LEADING_PATTERN.matcher(raw);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return matcher.replaceAll(\"\");"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ckcherry23":12,"sikai00":7,"-":180}},{"path":"src/main/java/reposense/commits/CommitInfoExtractor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitInfo;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.git.GitLog;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Extracts commit information of a repository."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class CommitInfoExtractor {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(CommitInfoExtractor.class);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_EXTRACTING_COMMIT_INFO \u003d \"Extracting commits info for %s (%s)...\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INFO_STAT_SEPARATOR \u003d \"|\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Pattern TRAILING_NEWLINES_PATTERN \u003d Pattern.compile(\"\\n+$\");"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Extracts out and returns the raw information of each commit for the repo in {@code config}."},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    public List\u003cCommitInfo\u003e extractCommitInfos(RepoConfiguration config) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_START_EXTRACTING_COMMIT_INFO, config.getLocation(), config.getBranch()));"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cCommitInfo\u003e repoCommitInfos \u003d new ArrayList\u003c\u003e();"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        for (Author author : config.getAuthorList()) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            String gitLogResult \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            List\u003cCommitInfo\u003e authorCommitInfos \u003d parseGitLogResults(gitLogResult);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            repoCommitInfos.addAll(authorCommitInfos);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return repoCommitInfos;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses the {@code gitLogResult} into a list of {@link CommitInfo} and returns it."},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"    private ArrayList\u003cCommitInfo\u003e parseGitLogResults(String gitLogResult) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ArrayList\u003cCommitInfo\u003e commitInfos \u003d new ArrayList\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String[] rawCommitInfos \u003d gitLogResult.split(GitLog.COMMIT_INFO_DELIMITER);"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (rawCommitInfos.length \u003c 2) {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            //no log (maybe because no contribution for that file type)"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return commitInfos;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Starts from 1 as index 0 is always empty."},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c rawCommitInfos.length; i++) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Matcher matcher \u003d TRAILING_NEWLINES_PATTERN.matcher(rawCommitInfos[i]);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            String rawCommitInfo \u003d matcher.replaceAll(\"\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"            int statLineSeparatorIndex \u003d rawCommitInfo.lastIndexOf(INFO_STAT_SEPARATOR);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            String infoLine \u003d rawCommitInfo.substring(0, statLineSeparatorIndex);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            String statLine \u003d rawCommitInfo.substring(statLineSeparatorIndex + 1).trim();"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            commitInfos.add(new CommitInfo(infoLine, statLine));"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Collections.reverse(commitInfos);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return commitInfos;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":2,"-":70}},{"path":"src/main/java/reposense/commits/CommitResultAggregator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.commits.model.AuthorDailyContribution;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitContributionSummary;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitResult;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Uses the commit analysis results to generate the summary information of a repository."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class CommitResultAggregator {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final int DAYS_IN_MS \u003d 24 * 60 * 60 * 1000;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the {@link CommitContributionSummary} generated from aggregating the {@code commitResults}."},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Uses {@code config} to obtain details like author name, since date and timezone."},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"    public CommitContributionSummary aggregateCommitResults("},{"lineNumber":30,"author":{"gitId":"-"},"content":"            RepoConfiguration config, List\u003cCommitResult\u003e commitResults) {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        LocalDateTime startDate;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ZoneId zoneId \u003d config.getZoneId();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        startDate \u003d (TimeUtil.isEqualToArbitraryFirstDateConverted(config.getSinceDate(), zoneId))"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ? getStartOfDate(getStartDate(commitResults, zoneId), zoneId)"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                : config.getSinceDate();"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap \u003d"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getAuthorDailyContributionsMap(config.getAuthorDisplayNameMap().keySet(), commitResults, zoneId);"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        LocalDateTime lastDate \u003d commitResults.size() \u003d\u003d 0"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ? null"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                : getStartOfDate(commitResults.get(commitResults.size() - 1).getTime(), zoneId);"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, Float\u003e authorContributionVariance \u003d"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                calcAuthorContributionVariance(authorDailyContributionsMap, startDate, lastDate, zoneId);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new CommitContributionSummary("},{"lineNumber":48,"author":{"gitId":"-"},"content":"                config.getAuthorDisplayNameMap(),"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                authorDailyContributionsMap,"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"                authorContributionVariance,"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"                startDate);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Calculates the contribution variance of all authors across contributions made within a date range."},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * This date range is between {@code startDate} and {@code lastDate}, which are determined based on {@code zoneId}."},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * The authors and their respective contributions are stored in {@code intervalContributionMaps}."},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"    private Map\u003cAuthor, Float\u003e calcAuthorContributionVariance("},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e intervalContributionMaps, LocalDateTime startDate,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            LocalDateTime lastDate, ZoneId zoneId) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, Float\u003e result \u003d new HashMap\u003c\u003e();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (Author author : intervalContributionMaps.keySet()) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            List\u003cAuthorDailyContribution\u003e contributions \u003d intervalContributionMaps.get(author);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            result.put(author, getContributionVariance(contributions, startDate, lastDate, zoneId));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return result;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Calculates the contribution variance for each author across the author\u0027s {@code contributions} made"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * between {@code startDate} and {@code lastDate}."},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The {@code startDate} and {@code lastDate} are determined based on {@code zoneId}."},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"    private float getContributionVariance(List\u003cAuthorDailyContribution\u003e contributions, LocalDateTime startDate,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            LocalDateTime lastDate, ZoneId zoneId) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (contributions.size() \u003d\u003d 0) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return 0;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        //get mean"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        float total \u003d 0;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        long startDateInMs \u003d ZonedDateTime.of(startDate, zoneId).toInstant().toEpochMilli();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        long lastDateInMs \u003d ZonedDateTime.of(lastDate, zoneId).toInstant().toEpochMilli();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        long totalDays \u003d (lastDateInMs - startDateInMs) / DAYS_IN_MS + 1;"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        for (AuthorDailyContribution contribution : contributions) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            total +\u003d contribution.getTotalContribution();"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        float mean \u003d total / totalDays;"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        float variance \u003d 0;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        long currentDate \u003d ZonedDateTime.of(startDate, zoneId).toInstant().toEpochMilli();"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"        int contributionIndex \u003d 0;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c totalDays; i +\u003d 1) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"            // Check whether the contributionIndex is valid and the date being looked at has any contributions."},{"lineNumber":98,"author":{"gitId":"-"},"content":"            if (contributionIndex \u003c contributions.size() \u0026\u0026 currentDate"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                    \u003d\u003d ZonedDateTime.of(contributions.get(contributionIndex).getDate(), zoneId)"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .toInstant().toEpochMilli()) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                variance +\u003d Math.pow((mean - contributions.get(contributionIndex).getTotalContribution()), 2);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                contributionIndex +\u003d 1;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                variance +\u003d Math.pow(mean, 2);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            currentDate +\u003d DAYS_IN_MS;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return variance / totalDays;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns a mapping of each {@link Author} to their respective commit contributions."},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * For each author, commit contributions are consolidated into {@link AuthorDailyContribution}s based on the date"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * of each {@link CommitResult}."},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @param authorSet The set of authors."},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @param commitResults The consolidated list of {@link CommitResult}s."},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @param zoneId The timezone for all {@link CommitResult}s\u0027 dates."},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @return a {@link Map} of each author to a list of {@link AuthorDailyContribution} across all dates in which"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * the author made commits."},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"    private Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e getAuthorDailyContributionsMap("},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Set\u003cAuthor\u003e authorSet, List\u003cCommitResult\u003e commitResults, ZoneId zoneId) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        authorSet.forEach(author -\u003e authorDailyContributionsMap.put(author, new ArrayList\u003c\u003e()));"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"        LocalDateTime commitStartDate;"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (CommitResult commitResult : commitResults) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            commitStartDate \u003d getStartOfDate(commitResult.getTime(), zoneId);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            Author commitAuthor \u003d commitResult.getAuthor();"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"            List\u003cAuthorDailyContribution\u003e authorDailyContributions \u003d authorDailyContributionsMap.get(commitAuthor);"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"            // Check whether there are no contribution dates present or if the current commit date is not yet in"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            // the authorDailyContributions list."},{"lineNumber":136,"author":{"gitId":"-"},"content":"            if (authorDailyContributions.isEmpty() || !getStartOfDate(authorDailyContributions"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    .get(authorDailyContributions.size() - 1).getDate(), zoneId)"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                            .equals(commitStartDate)) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                addDailyContributionForNewDate(authorDailyContributions, commitStartDate);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"            authorDailyContributions.get(authorDailyContributions.size() - 1).addCommitContribution(commitResult);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return authorDailyContributionsMap;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"sikai00"},"content":"    private void addDailyContributionForNewDate("},{"lineNumber":149,"author":{"gitId":"-"},"content":"            List\u003cAuthorDailyContribution\u003e authorDailyContributions, LocalDateTime date) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        authorDailyContributions.add(new AuthorDailyContribution(date));"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Gets the starting point of the {@code current} date."},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @return the {@code current} date if it is equal to the {@code ARBITRARY_FIRST_COMMIT_DATE} adjusted to the"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * timezone given by {@code zoneId}. Otherwise, return a {@link LocalDateTime} adjusted to have a time of 00:00:00."},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"sikai00"},"content":"    private LocalDateTime getStartOfDate(LocalDateTime current, ZoneId zoneId) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (TimeUtil.isEqualToArbitraryFirstDateConverted(current, zoneId)) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return current;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return current.withHour(0).withMinute(0).withSecond(0).withNano(0);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Gets the earliest commit date from {@code commitInfos}."},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @return First commit date if there is at least one {@link CommitResult}. Otherwise, return"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * the {@code ARBITRARY_FIRST_COMMIT_DATE} converted to the timezone given by {@code zoneId}."},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"sikai00"},"content":"    private LocalDateTime getStartDate(List\u003cCommitResult\u003e commitInfos, ZoneId zoneId) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return (commitInfos.isEmpty())"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                ? TimeUtil.getArbitraryFirstCommitDateConverted(zoneId)"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                : commitInfos.get(0).getTime();"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":9,"-":169}},{"path":"src/main/java/reposense/commits/CommitsReporter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitContributionSummary;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitInfo;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitResult;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Generates the commit summary data for each repository."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommitsReporter {"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    private final CommitInfoExtractor commitInfoExtractor \u003d new CommitInfoExtractor();"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    private final CommitInfoAnalyzer commitInfoAnalyzer \u003d new CommitInfoAnalyzer();"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    private final CommitResultAggregator commitResultAggregator \u003d new CommitResultAggregator();"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Generates and returns the commit contribution summary for each repo in {@code config}."},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    public CommitContributionSummary generateCommitSummary(RepoConfiguration config) {"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e commitResults \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"        return commitResultAggregator.aggregateCommitResults(config, commitResults);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":7,"-":21}},{"path":"src/main/java/reposense/commits/model/CommitContributionSummary.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores the consolidated results of commit analysis."},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommitContributionSummary {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Map\u003cAuthor, Float\u003e authorContributionVariance;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Map\u003cAuthor, String\u003e authorDisplayNameMap;"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    private final LocalDateTime earliestSinceDate;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommitContributionSummary("},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Map\u003cAuthor, String\u003e authorDisplayNameMap,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e authorDailyContributionsMap,"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"            Map\u003cAuthor, Float\u003e authorContributionVariance,"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"            LocalDateTime earliestSinceDate) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.authorDisplayNameMap \u003d authorDisplayNameMap;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.authorDailyContributionsMap \u003d authorDailyContributionsMap;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.authorContributionVariance \u003d authorContributionVariance;"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"        this.earliestSinceDate \u003d earliestSinceDate;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, String\u003e getAuthorDisplayNameMap() {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return authorDisplayNameMap;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, List\u003cAuthorDailyContribution\u003e\u003e getAuthorDailyContributionsMap() {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return authorDailyContributionsMap;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, Float\u003e getAuthorContributionVariance() {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return authorContributionVariance;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    public LocalDateTime getEarliestSinceDate() {"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"        return earliestSinceDate;"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":9,"-":35}},{"path":"src/main/java/reposense/commits/model/CommitResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Stores the result from analyzing a {@code CommitInfo}."},{"lineNumber":13,"author":{"gitId":"-"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommitResult {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String hash;"},{"lineNumber":16,"author":{"gitId":"ckcherry23"},"content":"    private final Boolean isMergeCommit;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final String messageTitle;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final String messageBody;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final String[] tags;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Map\u003cFileType, ContributionPair\u003e fileTypesAndContributionMap;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final transient Author author;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final transient LocalDateTime time;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"ckcherry23"},"content":"    public CommitResult(Author author, String hash, Boolean isMergeCommit, LocalDateTime time, String messageTitle,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            String messageBody, String[] tags, Map\u003cFileType, ContributionPair\u003e fileTypesAndContributionMap) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.author \u003d author;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.hash \u003d hash;"},{"lineNumber":29,"author":{"gitId":"ckcherry23"},"content":"        this.isMergeCommit \u003d isMergeCommit;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.time \u003d time;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.messageTitle \u003d messageTitle;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.messageBody \u003d messageBody;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.tags \u003d tags;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.fileTypesAndContributionMap \u003d fileTypesAndContributionMap;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"ckcherry23"},"content":"    public CommitResult(Author author, String hash, Boolean isMergeCommit, LocalDateTime time, String messageTitle,"},{"lineNumber":38,"author":{"gitId":"ckcherry23"},"content":"            String messageBody, String[] tags) {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.author \u003d author;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.hash \u003d hash;"},{"lineNumber":41,"author":{"gitId":"ckcherry23"},"content":"        this.isMergeCommit \u003d isMergeCommit;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.time \u003d time;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.messageTitle \u003d messageTitle;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.messageBody \u003d messageBody;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.tags \u003d tags;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.fileTypesAndContributionMap \u003d Collections.emptyMap();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getMessageTitle() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return messageTitle;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getMessageBody() {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return messageBody;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String[] getTags() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return tags;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Author getAuthor() {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return author;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String getHash() {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return hash;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public LocalDateTime getTime() {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return time;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int getInsertions() {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int insertions \u003d 0;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (ContributionPair contributionPair : fileTypesAndContributionMap.values()) {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            insertions +\u003d contributionPair.getInsertions();"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return insertions;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public int getDeletions() {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        int deletions \u003d 0;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        for (ContributionPair contributionPair : fileTypesAndContributionMap.values()) {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            deletions +\u003d contributionPair.getDeletions();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return deletions;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Map\u003cFileType, ContributionPair\u003e getFileTypesAndContributionMap() {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return fileTypesAndContributionMap;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommitResult)) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommitResult otherCommitResult \u003d (CommitResult) other;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return author.equals(otherCommitResult.author)"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u0026\u0026 hash.equals(otherCommitResult.hash)"},{"lineNumber":106,"author":{"gitId":"ckcherry23"},"content":"                \u0026\u0026 isMergeCommit.equals(otherCommitResult.isMergeCommit)"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 time.equals(otherCommitResult.time)"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 messageTitle.equals(otherCommitResult.messageTitle)"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 messageBody.equals(otherCommitResult.messageBody)"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 Arrays.equals(tags, otherCommitResult.tags)"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 fileTypesAndContributionMap.equals(otherCommitResult.fileTypesAndContributionMap);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return hash.hashCode();"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ckcherry23":7,"-":111}},{"path":"src/main/java/reposense/git/GitLog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.system.CommandRunner.runCommand;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.StringsUtil.addQuotesForFilePath;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.util.StringsUtil;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains git log related functionalities."},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Git log is responsible to obtain the commit logs and the authors\u0027 info."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class GitLog {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMIT_INFO_DELIMITER \u003d \"(?m)^\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\\\n\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String PRETTY_FORMAT_STRING \u003d"},{"lineNumber":24,"author":{"gitId":"ckcherry23"},"content":"            \"\\\"\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c%n%H|%n|%p|%n|%aN|%n|%aE|%n|%cI|%n|%s|%n|%w(0,4,4)%b%w(0,0,0)|%n|%D|\\\"\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_EMAIL_IF_MISSING \u003d \"\";"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the git commit log info of {@code author}, in the repository specified in {@code config}."},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String get(RepoConfiguration config, Author author) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(config.getRepoRoot());"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"ckcherry23"},"content":"        String command \u003d \"git log --full-history -i --extended-regexp \";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitDateRangeArgs(config.getSinceDate(), config.getUntilDate(), config.getZoneId());"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        command +\u003d \" --pretty\u003dformat:\" + PRETTY_FORMAT_STRING + \" --shortstat\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToFilterAuthorArgs(author);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitFormatsArgs(config.getFileTypeManager().getFormats());"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitExcludeGlobArgs(rootPath.toFile(), author.getIgnoreGlobList());"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return runCommand(rootPath, command);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the git commit log info of {@code author}, with the files changed, in the repository specified in"},{"lineNumber":46,"author":{"gitId":"ckcherry23"},"content":"     * {@code config}. Merge commits are included."},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getWithFiles(RepoConfiguration config, Author author) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(config.getRepoRoot());"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"ckcherry23"},"content":"        String command \u003d \"git log --full-history -i --extended-regexp \";"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitDateRangeArgs(config.getSinceDate(), config.getUntilDate(), config.getZoneId());"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        command +\u003d \" --pretty\u003dformat:\" + PRETTY_FORMAT_STRING + \" --numstat --shortstat\";"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToFilterAuthorArgs(author);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitFormatsArgs(config.getFileTypeManager().getFormats());"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitExcludeGlobArgs(rootPath.toFile(), author.getIgnoreGlobList());"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return runCommand(rootPath, command);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the authors who modified the file at {@code filePath}, in the repository specified in {@code config}."},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The output is a list of length-2 arrays containing the author\u0027s name and email."},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static List\u003cString[]\u003e getFileAuthors(RepoConfiguration config, String filePath) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path rootPath \u003d Paths.get(config.getRepoRoot());"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String command \u003d \"git log --pretty\u003dformat:\\\"%an\\t%ae\\\" \";"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        command +\u003d GitUtil.convertToGitDateRangeArgs(config.getSinceDate(), config.getUntilDate(), config.getZoneId());"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        command +\u003d \" \" + addQuotesForFilePath(filePath);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String result \u003d runCommand(rootPath, command);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Arrays.stream(StringsUtil.NEWLINE.split(result))"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .map(StringsUtil.TAB::split)"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(authorAndEmailArray -\u003e authorAndEmailArray.length \u003d\u003d 1"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                        ? new String[] {authorAndEmailArray[0], DEFAULT_EMAIL_IF_MISSING}"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                        : authorAndEmailArray)"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ckcherry23":4,"-":76}},{"path":"src/main/java/reposense/model/AuthorConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents author configuration information from CSV config file for a single repository."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AuthorConfiguration {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_BRANCH \u003d \"HEAD\";"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final boolean DEFAULT_HAS_AUTHOR_CONFIG_FILE \u003d false;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(AuthorConfiguration.class);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Pattern EMAIL_PLUS_OPERATOR_PATTERN \u003d"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Pattern.compile(\"^(?\u003cprefix\u003e.+)\\\\+(?\u003csuffix\u003e.*)(?\u003cdomain\u003e@.+)$\");"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"    private boolean hasAuthorConfigFile \u003d DEFAULT_HAS_AUTHOR_CONFIG_FILE;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private RepoLocation location;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String branch;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private transient List\u003cAuthor\u003e authorList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private transient Map\u003cString, Author\u003e authorNamesToAuthorMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private transient Map\u003cString, Author\u003e authorEmailsToAuthorMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private transient Map\u003cAuthor, String\u003e authorDisplayNameMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AuthorConfiguration(RepoLocation location) {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(location, DEFAULT_BRANCH);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AuthorConfiguration(RepoLocation location, String branch) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.location \u003d location;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.branch \u003d location.isEmpty() ? DEFAULT_BRANCH : branch;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Clears authors information and use the information provided from {@code standaloneConfig}. Also updates each"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * author\u0027s {@code ignoreGlobList}."},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void update(StandaloneConfig standaloneConfig, List\u003cString\u003e ignoreGlobList) {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e newAuthorList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Map\u003cString, Author\u003e newAuthorNamesToAuthorMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Map\u003cString, Author\u003e newAuthorEmailsToAuthorMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Map\u003cAuthor, String\u003e newAuthorDisplayNameMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (StandaloneAuthor sa : standaloneConfig.getAuthors()) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Author author \u003d new Author(sa);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            author.importIgnoreGlobList(ignoreGlobList);"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"            newAuthorList.add(author);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            newAuthorDisplayNameMap.put(author, author.getDisplayName());"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            List\u003cString\u003e aliases \u003d new ArrayList\u003c\u003e(author.getAuthorAliases());"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            List\u003cString\u003e emails \u003d new ArrayList\u003c\u003e(author.getEmails());"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            aliases.add(author.getGitId());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            aliases.forEach(alias -\u003e {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                checkDuplicateAliases(newAuthorNamesToAuthorMap, alias, author.getGitId());"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                newAuthorNamesToAuthorMap.put(alias, author);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            emails.forEach(email -\u003e newAuthorEmailsToAuthorMap.put(email, author));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAuthorList(newAuthorList);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setAuthorNamesToAuthorMap(newAuthorNamesToAuthorMap);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAuthorEmailsToAuthorMap(newAuthorEmailsToAuthorMap);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAuthorDisplayNameMap(newAuthorDisplayNameMap);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Checks if {@code alias} of author with {@code gitId} is already being used by another author in"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code authorDetailsToAuthorMap} and generates warnings."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void checkDuplicateAliases(Map\u003cString, Author\u003e authorDetailsToAuthorMap, String alias, String gitId) {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (authorDetailsToAuthorMap.containsKey(alias)) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            logger.warning(String.format("},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    \"Duplicate alias %s found. The alias will belong to the last author - %s\", alias, gitId));"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof AuthorConfiguration)) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AuthorConfiguration otherAuthorConfig \u003d (AuthorConfiguration) other;"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return location.equals(otherAuthorConfig.location)"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 branch.equals(otherAuthorConfig.branch)"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorList.equals(otherAuthorConfig.authorList)"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorNamesToAuthorMap.equals(otherAuthorConfig.authorNamesToAuthorMap)"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorEmailsToAuthorMap.equals(otherAuthorConfig.authorEmailsToAuthorMap)"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorDisplayNameMap.equals(otherAuthorConfig.authorDisplayNameMap);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, String\u003e getAuthorDisplayNameMap() {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return authorDisplayNameMap;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayNameMap(Map\u003cAuthor, String\u003e authorDisplayNameMap) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.authorDisplayNameMap \u003d authorDisplayNameMap;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String getBranch() {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return branch;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setBranch(String branch) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        this.branch \u003d branch;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public List\u003cAuthor\u003e getAuthorList() {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return authorList;"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Sets the details of {@code author} to {@link AuthorConfiguration} including the default alias, aliases"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * and display name."},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setAuthorDetails(Author author) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // Set Git Id and its corresponding email as default"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addAuthorNamesToAuthorMapEntry(author, author.getGitId());"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        addAuthorNamesToAuthorMapEntry(author, author.getAuthorAliases());"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        addAuthorEmailsToAuthorMapEntry(author, author.getEmails());"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        setAuthorDisplayName(author, author.getDisplayName());"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Propagates {@code ignoreGlobList} to {@code author}."},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void propagateIgnoreGlobList(Author author, List\u003cString\u003e ignoreGlobList) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        author.importIgnoreGlobList(ignoreGlobList);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Adds author to the {@code authorList}."},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void addAuthor(Author author) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        authorList.add(author);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        setAuthorDetails(author);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Adds {@code author} to the {@code authorList}, and propagates {@code ignoreGlobList} to the {@code author}."},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void addAuthor(Author author, List\u003cString\u003e ignoreGlobList) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        addAuthor(author);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        propagateIgnoreGlobList(author, ignoreGlobList);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Removes the authors provided in {@code ignoredAuthorsList} from the author list."},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void removeIgnoredAuthors(List\u003cString\u003e ignoredAuthorsList) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        for (String author : ignoredAuthorsList) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            Author authorToRemove \u003d null;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            if (authorEmailsToAuthorMap.containsKey(author)) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                authorToRemove \u003d authorEmailsToAuthorMap.get(author);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            } else if (authorNamesToAuthorMap.containsKey(author.toLowerCase())) {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                authorToRemove \u003d authorNamesToAuthorMap.get(author.toLowerCase());"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"            if (authorToRemove !\u003d null) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                removeAuthorInformation(authorToRemove);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Removes all information of the {@code author} from the configs."},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Precondition: {@code author} must be present in {@code authorDetailsToAuthorMap}."},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @param author the author to be removed."},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void removeAuthorInformation(Author author) {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        authorList.remove(author);"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        authorDisplayNameMap.remove(author);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        authorNamesToAuthorMap.remove(author.getGitId().toLowerCase());"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        List\u003cString\u003e aliases \u003d author.getAuthorAliases();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        aliases.forEach(alias -\u003e authorNamesToAuthorMap.remove(alias.toLowerCase()));"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        List\u003cString\u003e emails \u003d author.getEmails();"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        emails.forEach(email -\u003e authorEmailsToAuthorMap.remove(email));"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Adds new authors from {@code authorList}."},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Also sets the default alias, aliases, emails and display name as well as {@code ignoreGlobList} of the new"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * authors. Skips the authors that have already been added previously."},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void addAuthors(List\u003cAuthor\u003e authorList, List\u003cString\u003e ignoreGlobList) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        for (Author author : authorList) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (containsAuthor(author)) {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                logger.warning(String.format("},{"lineNumber":207,"author":{"gitId":"-"},"content":"                        \"Skipping author as %s already in repository %s %s\", author.getGitId(), location, branch));"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"            addAuthor(author, ignoreGlobList);"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public boolean containsAuthor(Author author) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return authorList.contains(author);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void setAuthorList(List\u003cAuthor\u003e authorList) {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        this.authorList \u003d authorList;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Clears author mapping information."},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void clear() {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        clearAuthorDetailsToAuthorMap();"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        authorDisplayNameMap.clear();"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * Clears author details mapping information."},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void clearAuthorDetailsToAuthorMap() {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        authorNamesToAuthorMap.clear();"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        authorEmailsToAuthorMap.clear();"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * Resets author mapping information with the details of current author list."},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void buildFromAuthorList() {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        authorList.forEach(this::setAuthorDetails);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public Map\u003cString, Author\u003e getAuthorNamesToAuthorMap() {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        return authorNamesToAuthorMap;"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void setAuthorNamesToAuthorMap(Map\u003cString, Author\u003e authorNamesToAuthorMap) {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        this.authorNamesToAuthorMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        authorNamesToAuthorMap.forEach((name, author) -\u003e this.authorNamesToAuthorMap.put(name.toLowerCase(), author));"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public Map\u003cString, Author\u003e getAuthorEmailsToAuthorMap() {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        return authorEmailsToAuthorMap;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public void setAuthorEmailsToAuthorMap(Map\u003cString, Author\u003e authorEmailsToAuthorMap) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        this.authorEmailsToAuthorMap \u003d authorEmailsToAuthorMap;"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayName(Author author, String displayName) {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        authorDisplayNameMap.put(author, displayName);"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * Adds {@code name} as alias of {@code author} into the map."},{"lineNumber":269,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void addAuthorNamesToAuthorMapEntry(Author author, String name) {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        String nameInLowerCase \u003d name.toLowerCase();"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        checkDuplicateAliases(authorNamesToAuthorMap, nameInLowerCase, author.getGitId());"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        authorNamesToAuthorMap.put(nameInLowerCase, author);"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * Adds {@code names} as aliases of {@code author} into the map."},{"lineNumber":278,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public void addAuthorNamesToAuthorMapEntry(Author author, List\u003cString\u003e names) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        names.stream()"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                .map(String::toLowerCase)"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                .forEach(name -\u003e {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    checkDuplicateAliases(authorNamesToAuthorMap, name, author.getGitId());"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    authorNamesToAuthorMap.put(name, author);"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":289,"author":{"gitId":"-"},"content":"     * Adds {@code emails} as aliases of {@code author} into the map."},{"lineNumber":290,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    public void addAuthorEmailsToAuthorMapEntry(Author author, List\u003cString\u003e emails) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        emails.forEach(email -\u003e {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            checkDuplicateAliases(authorEmailsToAuthorMap, email, author.getGitId());"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            authorEmailsToAuthorMap.put(email, author);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"    public RepoLocation getLocation() {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        return location;"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":303,"author":{"gitId":"-"},"content":"     * Attempts to find matching {@link Author} given a {@code name} and an {@code email}."},{"lineNumber":304,"author":{"gitId":"-"},"content":"     * If no matching {@link Author} is found, {@link Author#UNKNOWN_AUTHOR} is returned."},{"lineNumber":305,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    public Author getAuthor(String name, String email) {"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        if (authorNamesToAuthorMap.containsKey(name.toLowerCase())) {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            return authorNamesToAuthorMap.get(name.toLowerCase());"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"        if (authorEmailsToAuthorMap.containsKey(email)) {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            return authorEmailsToAuthorMap.get(email);"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d EMAIL_PLUS_OPERATOR_PATTERN.matcher(email);"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        if (matcher.matches()) {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            return authorEmailsToAuthorMap.getOrDefault(matcher.group(\"suffix\") + matcher.group(\"domain\"),"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                    Author.UNKNOWN_AUTHOR);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"        return Author.UNKNOWN_AUTHOR;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"    public boolean isDefaultBranch() {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        return this.branch.equals(DEFAULT_BRANCH);"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"    public boolean containsName(String name) {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        return authorNamesToAuthorMap.containsKey(name.toLowerCase()) || authorEmailsToAuthorMap.containsKey(name);"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"sikai00"},"content":"    public void setHasAuthorConfigFile(boolean hasAuthorConfigFile) {"},{"lineNumber":333,"author":{"gitId":"sikai00"},"content":"        this.hasAuthorConfigFile \u003d hasAuthorConfigFile;"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"sikai00"},"content":"    public boolean hasAuthorConfigFile() {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        return hasAuthorConfigFile;"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":4,"-":335}},{"path":"src/main/java/reposense/model/CliArguments.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import java.util.Objects;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import reposense.parser.AuthorConfigCsvParser;"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import reposense.parser.GroupConfigCsvParser;"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import reposense.parser.RepoConfigCsvParser;"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import reposense.parser.ReportConfigJsonParser;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents command line arguments user supplied when running the program."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"public class CliArguments {"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    private static final Path EMPTY_PATH \u003d Paths.get(\"\");"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Path outputFilePath;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Path assetsFilePath;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private LocalDateTime sinceDate;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private LocalDateTime untilDate;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private boolean isSinceDateProvided;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private boolean isUntilDateProvided;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cFileType\u003e formats;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private boolean isLastModifiedDateIncluded;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private boolean isShallowCloningPerformed;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private boolean isAutomaticallyLaunching;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private boolean isStandaloneConfigIgnored;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private boolean isFileSizeLimitIgnored;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private int numCloningThreads;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private int numAnalysisThreads;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ZoneId zoneId;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private boolean isFindingPreviousAuthorsPerformed;"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    private boolean isTestMode \u003d ArgsParser.DEFAULT_IS_TEST_MODE;"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"    private boolean isFreshClonePerformed \u003d ArgsParser.DEFAULT_SHOULD_FRESH_CLONE;"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"    private List\u003cString\u003e locations;"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    private boolean isViewModeOnly;"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"    private Path reportDirectoryPath;"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    private Path configFolderPath;"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"    private Path repoConfigFilePath;"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"    private Path authorConfigFilePath;"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"    private Path groupConfigFilePath;"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"    private Path reportConfigFilePath;"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    private ReportConfiguration reportConfiguration;"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Constructs a {@code CliArguments} object without any parameters."},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private CliArguments() {}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ZoneId getZoneId() {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return zoneId;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Path getOutputFilePath() {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return outputFilePath;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Path getAssetsFilePath() {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return assetsFilePath;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public LocalDateTime getSinceDate() {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return sinceDate;"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public LocalDateTime getUntilDate() {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return untilDate;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean isSinceDateProvided() {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return isSinceDateProvided;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isUntilDateProvided() {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return isUntilDateProvided;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean isLastModifiedDateIncluded() {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return isLastModifiedDateIncluded;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean isShallowCloningPerformed() {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return isShallowCloningPerformed;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public List\u003cFileType\u003e getFormats() {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return formats;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean isAutomaticallyLaunching() {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return isAutomaticallyLaunching;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean isStandaloneConfigIgnored() {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return isStandaloneConfigIgnored;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean isFileSizeLimitIgnored() {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return isFileSizeLimitIgnored;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int getNumCloningThreads() {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return numCloningThreads;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int getNumAnalysisThreads() {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return numAnalysisThreads;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean isFindingPreviousAuthorsPerformed() {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return isFindingPreviousAuthorsPerformed;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean isTestMode() {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return isTestMode;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean isFreshClonePerformed() {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return isFreshClonePerformed;"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"MarcusTXK"},"content":"    public List\u003cString\u003e getLocations() {"},{"lineNumber":131,"author":{"gitId":"MarcusTXK"},"content":"        return locations;"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"    public Path getReportDirectoryPath() {"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"        return reportDirectoryPath;"},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"    public Path getConfigFolderPath() {"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"        return configFolderPath;"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":142,"author":{"gitId":"MarcusTXK"},"content":"    public Path getRepoConfigFilePath() {"},{"lineNumber":143,"author":{"gitId":"MarcusTXK"},"content":"        return repoConfigFilePath;"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"    public Path getAuthorConfigFilePath() {"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"        return authorConfigFilePath;"},{"lineNumber":148,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":"    public Path getGroupConfigFilePath() {"},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"        return groupConfigFilePath;"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":"    public Path getReportConfigFilePath() {"},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":"        return reportConfigFilePath;"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"    public ReportConfiguration getReportConfiguration() {"},{"lineNumber":159,"author":{"gitId":"MarcusTXK"},"content":"        return reportConfiguration;"},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":"    public boolean isViewModeOnly() {"},{"lineNumber":163,"author":{"gitId":"MarcusTXK"},"content":"        return isViewModeOnly;"},{"lineNumber":164,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // short circuit if same object"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (this \u003d\u003d other) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // instanceof handles null"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!(other instanceof CliArguments)) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        CliArguments otherCliArguments \u003d (CliArguments) other;"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"MarcusTXK"},"content":"        return Objects.equals(this.outputFilePath, otherCliArguments.outputFilePath)"},{"lineNumber":181,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 Objects.equals(this.sinceDate, otherCliArguments.sinceDate)"},{"lineNumber":182,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 Objects.equals(this.untilDate, otherCliArguments.untilDate)"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isSinceDateProvided \u003d\u003d otherCliArguments.isSinceDateProvided"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isUntilDateProvided \u003d\u003d otherCliArguments.isUntilDateProvided"},{"lineNumber":185,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 Objects.equals(this.formats, otherCliArguments.formats)"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isLastModifiedDateIncluded \u003d\u003d otherCliArguments.isLastModifiedDateIncluded"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isShallowCloningPerformed \u003d\u003d otherCliArguments.isShallowCloningPerformed"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isAutomaticallyLaunching \u003d\u003d otherCliArguments.isAutomaticallyLaunching"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isStandaloneConfigIgnored \u003d\u003d otherCliArguments.isStandaloneConfigIgnored"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.numCloningThreads \u003d\u003d otherCliArguments.numCloningThreads"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.numAnalysisThreads \u003d\u003d otherCliArguments.numAnalysisThreads"},{"lineNumber":192,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 Objects.equals(this.zoneId, otherCliArguments.zoneId)"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isFindingPreviousAuthorsPerformed \u003d\u003d otherCliArguments.isFindingPreviousAuthorsPerformed"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isFileSizeLimitIgnored \u003d\u003d otherCliArguments.isFileSizeLimitIgnored"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \u0026\u0026 this.isTestMode \u003d\u003d otherCliArguments.isTestMode"},{"lineNumber":196,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 this.isFreshClonePerformed \u003d\u003d otherCliArguments.isFreshClonePerformed"},{"lineNumber":197,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 Objects.equals(this.locations, otherCliArguments.locations)"},{"lineNumber":198,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 this.isViewModeOnly \u003d\u003d otherCliArguments.isViewModeOnly"},{"lineNumber":199,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 Objects.equals(this.reportDirectoryPath, otherCliArguments.reportDirectoryPath)"},{"lineNumber":200,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 Objects.equals(this.repoConfigFilePath, otherCliArguments.repoConfigFilePath)"},{"lineNumber":201,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 Objects.equals(this.authorConfigFilePath, otherCliArguments.authorConfigFilePath)"},{"lineNumber":202,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 Objects.equals(this.groupConfigFilePath, otherCliArguments.groupConfigFilePath)"},{"lineNumber":203,"author":{"gitId":"MarcusTXK"},"content":"                \u0026\u0026 Objects.equals(this.reportConfigFilePath, otherCliArguments.reportConfigFilePath);"},{"lineNumber":204,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":206,"author":{"gitId":"MarcusTXK"},"content":"    /**"},{"lineNumber":207,"author":{"gitId":"MarcusTXK"},"content":"     * Builder used to build CliArguments."},{"lineNumber":208,"author":{"gitId":"MarcusTXK"},"content":"     */"},{"lineNumber":209,"author":{"gitId":"MarcusTXK"},"content":"    public static final class Builder {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        private CliArguments cliArguments;"},{"lineNumber":211,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":212,"author":{"gitId":"MarcusTXK"},"content":"        public Builder() {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            this.cliArguments \u003d new CliArguments();"},{"lineNumber":214,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":216,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":217,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code outputFilePath} to CliArguments."},{"lineNumber":218,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":219,"author":{"gitId":"MarcusTXK"},"content":"         * @param outputFilePath The output file path."},{"lineNumber":220,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":221,"author":{"gitId":"MarcusTXK"},"content":"        public Builder outputFilePath(Path outputFilePath) {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.cliArguments.outputFilePath \u003d outputFilePath;"},{"lineNumber":223,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":224,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":225,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":226,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":227,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code assetsFilePath} to CliArguments."},{"lineNumber":228,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":229,"author":{"gitId":"MarcusTXK"},"content":"         * @param assetsFilePath The assets file path."},{"lineNumber":230,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":231,"author":{"gitId":"MarcusTXK"},"content":"        public Builder assetsFilePath(Path assetsFilePath) {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            this.cliArguments.assetsFilePath \u003d assetsFilePath;"},{"lineNumber":233,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":234,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":236,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":237,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code sinceDate} to CliArguments."},{"lineNumber":238,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":239,"author":{"gitId":"MarcusTXK"},"content":"         * @param sinceDate The since date."},{"lineNumber":240,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":241,"author":{"gitId":"MarcusTXK"},"content":"        public Builder sinceDate(LocalDateTime sinceDate) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            this.cliArguments.sinceDate \u003d sinceDate;"},{"lineNumber":243,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":244,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":245,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":246,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":247,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code untilDate} to CliArguments."},{"lineNumber":248,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":249,"author":{"gitId":"MarcusTXK"},"content":"         * @param untilDate The until date."},{"lineNumber":250,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":251,"author":{"gitId":"MarcusTXK"},"content":"        public Builder untilDate(LocalDateTime untilDate) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            this.cliArguments.untilDate \u003d untilDate;"},{"lineNumber":253,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":254,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":256,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":257,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code isSinceDateProvided} to CliArguments."},{"lineNumber":258,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":259,"author":{"gitId":"MarcusTXK"},"content":"         * @param isSinceDateProvided Is the since date provided."},{"lineNumber":260,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":261,"author":{"gitId":"MarcusTXK"},"content":"        public Builder isSinceDateProvided(boolean isSinceDateProvided) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            this.cliArguments.isSinceDateProvided \u003d isSinceDateProvided;"},{"lineNumber":263,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":264,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":265,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":266,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":267,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code isUntilDateProvided} to CliArguments."},{"lineNumber":268,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":269,"author":{"gitId":"MarcusTXK"},"content":"         * @param isUntilDateProvided Is the until date provided."},{"lineNumber":270,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":271,"author":{"gitId":"MarcusTXK"},"content":"        public Builder isUntilDateProvided(boolean isUntilDateProvided) {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            this.cliArguments.isUntilDateProvided \u003d isUntilDateProvided;"},{"lineNumber":273,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":274,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":275,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":276,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":277,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code formats} to CliArguments."},{"lineNumber":278,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":279,"author":{"gitId":"MarcusTXK"},"content":"         * @param formats The list of {@link FileType}."},{"lineNumber":280,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":281,"author":{"gitId":"MarcusTXK"},"content":"        public Builder formats(List\u003cFileType\u003e formats) {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            this.cliArguments.formats \u003d formats;"},{"lineNumber":283,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":284,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":285,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":286,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":287,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code isLastModifiedDateIncluded} to CliArguments."},{"lineNumber":288,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":289,"author":{"gitId":"MarcusTXK"},"content":"         * @param isLastModifiedDateIncluded Is the last modified date included."},{"lineNumber":290,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":291,"author":{"gitId":"MarcusTXK"},"content":"        public Builder isLastModifiedDateIncluded(boolean isLastModifiedDateIncluded) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            this.cliArguments.isLastModifiedDateIncluded \u003d isLastModifiedDateIncluded;"},{"lineNumber":293,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":294,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":295,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":296,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":297,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code isShallowCloningPerformed} to CliArguments."},{"lineNumber":298,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":299,"author":{"gitId":"MarcusTXK"},"content":"         * @param isShallowCloningPerformed Is shallow cloning performed."},{"lineNumber":300,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":301,"author":{"gitId":"MarcusTXK"},"content":"        public Builder isShallowCloningPerformed(boolean isShallowCloningPerformed) {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            this.cliArguments.isShallowCloningPerformed \u003d isShallowCloningPerformed;"},{"lineNumber":303,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":304,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":305,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":306,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":307,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code isAutomaticallyLaunching} to CliArguments."},{"lineNumber":308,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":309,"author":{"gitId":"MarcusTXK"},"content":"         * @param isAutomaticallyLaunching Is automatically launching."},{"lineNumber":310,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":311,"author":{"gitId":"MarcusTXK"},"content":"        public Builder isAutomaticallyLaunching(boolean isAutomaticallyLaunching) {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            this.cliArguments.isAutomaticallyLaunching \u003d isAutomaticallyLaunching;"},{"lineNumber":313,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":314,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":315,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":316,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":317,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code isStandaloneConfigIgnored} to CliArguments."},{"lineNumber":318,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":319,"author":{"gitId":"MarcusTXK"},"content":"         * @param isStandaloneConfigIgnored Is standalone config ignored."},{"lineNumber":320,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":321,"author":{"gitId":"MarcusTXK"},"content":"        public Builder isStandaloneConfigIgnored(boolean isStandaloneConfigIgnored) {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            this.cliArguments.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;"},{"lineNumber":323,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":324,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":325,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":326,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":327,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code isFileSizeLimitIgnored} to CliArguments."},{"lineNumber":328,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":329,"author":{"gitId":"MarcusTXK"},"content":"         * @param isFileSizeLimitIgnored Is file size limit ignored."},{"lineNumber":330,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":331,"author":{"gitId":"MarcusTXK"},"content":"        public Builder isFileSizeLimitIgnored(boolean isFileSizeLimitIgnored) {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"            this.cliArguments.isFileSizeLimitIgnored \u003d isFileSizeLimitIgnored;"},{"lineNumber":333,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":334,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":335,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":336,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":337,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code numCloningThreads} to CliArguments."},{"lineNumber":338,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":339,"author":{"gitId":"MarcusTXK"},"content":"         * @param numCloningThreads The number of cloning threads."},{"lineNumber":340,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":341,"author":{"gitId":"MarcusTXK"},"content":"        public Builder numCloningThreads(int numCloningThreads) {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            this.cliArguments.numCloningThreads \u003d numCloningThreads;"},{"lineNumber":343,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":344,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":345,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":346,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":347,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code numAnalysisThreads} to CliArguments."},{"lineNumber":348,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":349,"author":{"gitId":"MarcusTXK"},"content":"         * @param numAnalysisThreads The number of analysis threads."},{"lineNumber":350,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":351,"author":{"gitId":"MarcusTXK"},"content":"        public Builder numAnalysisThreads(int numAnalysisThreads) {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            this.cliArguments.numAnalysisThreads \u003d numAnalysisThreads;"},{"lineNumber":353,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":354,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":355,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":356,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":357,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code zoneId} to CliArguments."},{"lineNumber":358,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":359,"author":{"gitId":"MarcusTXK"},"content":"         * @param zoneId The timezone Id."},{"lineNumber":360,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":361,"author":{"gitId":"MarcusTXK"},"content":"        public Builder zoneId(ZoneId zoneId) {"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            this.cliArguments.zoneId \u003d zoneId;"},{"lineNumber":363,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":364,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":365,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":366,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":367,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code isFindingPreviousAuthorsPerformed} to CliArguments."},{"lineNumber":368,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":369,"author":{"gitId":"MarcusTXK"},"content":"         * @param isFindingPreviousAuthorsPerformed Is finding previous authors performed."},{"lineNumber":370,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":371,"author":{"gitId":"MarcusTXK"},"content":"        public Builder isFindingPreviousAuthorsPerformed(boolean isFindingPreviousAuthorsPerformed) {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            this.cliArguments.isFindingPreviousAuthorsPerformed \u003d isFindingPreviousAuthorsPerformed;"},{"lineNumber":373,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":374,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":375,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":376,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":377,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code isTestMode} to CliArguments."},{"lineNumber":378,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":379,"author":{"gitId":"MarcusTXK"},"content":"         * @param isTestMode Is test mode."},{"lineNumber":380,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":381,"author":{"gitId":"MarcusTXK"},"content":"        public Builder isTestMode(boolean isTestMode) {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"            this.cliArguments.isTestMode \u003d isTestMode;"},{"lineNumber":383,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":384,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":385,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":386,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":387,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code isFreshClonePerformed} to CliArguments."},{"lineNumber":388,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":389,"author":{"gitId":"MarcusTXK"},"content":"         * @param isFreshClonePerformed Is fresh clone performed."},{"lineNumber":390,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":391,"author":{"gitId":"MarcusTXK"},"content":"        public Builder isFreshClonePerformed(boolean isFreshClonePerformed) {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            this.cliArguments.isFreshClonePerformed \u003d isFreshClonePerformed;"},{"lineNumber":393,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":394,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":395,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":396,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":397,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code locations} to CliArguments."},{"lineNumber":398,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":399,"author":{"gitId":"MarcusTXK"},"content":"         * @param locations The list of locations."},{"lineNumber":400,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":401,"author":{"gitId":"MarcusTXK"},"content":"        public Builder locations(List\u003cString\u003e locations) {"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            this.cliArguments.locations \u003d locations;"},{"lineNumber":403,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":404,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":405,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":406,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":407,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code isViewModeOnly} to CliArguments."},{"lineNumber":408,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":409,"author":{"gitId":"MarcusTXK"},"content":"         * @param isViewModeOnly Is view mode only."},{"lineNumber":410,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":411,"author":{"gitId":"MarcusTXK"},"content":"        public Builder isViewModeOnly(boolean isViewModeOnly) {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"            this.cliArguments.isViewModeOnly \u003d isViewModeOnly;"},{"lineNumber":413,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":414,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":415,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":416,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":417,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code reportDirectoryPath} to CliArguments."},{"lineNumber":418,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":419,"author":{"gitId":"MarcusTXK"},"content":"         * @param reportDirectoryPath The report directory path."},{"lineNumber":420,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":421,"author":{"gitId":"MarcusTXK"},"content":"        public Builder reportDirectoryPath(Path reportDirectoryPath) {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"            this.cliArguments.reportDirectoryPath \u003d reportDirectoryPath;"},{"lineNumber":423,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":424,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":425,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":426,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":427,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code configFolderPath} to CliArguments. {@code configFolderPath} is utilised to configure the"},{"lineNumber":428,"author":{"gitId":"MarcusTXK"},"content":"         * {@code repoConfigFilePath}, {@code authorConfigFilePath}, {@code groupConfigFilePath} and"},{"lineNumber":429,"author":{"gitId":"MarcusTXK"},"content":"         * {@code reportConfigFilePath}."},{"lineNumber":430,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":431,"author":{"gitId":"MarcusTXK"},"content":"         * @param configFolderPath The config folder path."},{"lineNumber":432,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":433,"author":{"gitId":"MarcusTXK"},"content":"        public Builder configFolderPath(Path configFolderPath) {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"            this.cliArguments.configFolderPath \u003d configFolderPath.equals(EMPTY_PATH)"},{"lineNumber":435,"author":{"gitId":"MarcusTXK"},"content":"                ? configFolderPath.toAbsolutePath()"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                : configFolderPath;"},{"lineNumber":437,"author":{"gitId":"-"},"content":"            this.cliArguments.repoConfigFilePath \u003d configFolderPath.resolve("},{"lineNumber":438,"author":{"gitId":"-"},"content":"                    RepoConfigCsvParser.REPO_CONFIG_FILENAME);"},{"lineNumber":439,"author":{"gitId":"-"},"content":"            this.cliArguments.authorConfigFilePath \u003d configFolderPath.resolve("},{"lineNumber":440,"author":{"gitId":"-"},"content":"                    AuthorConfigCsvParser.AUTHOR_CONFIG_FILENAME);"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            this.cliArguments.groupConfigFilePath \u003d configFolderPath.resolve("},{"lineNumber":442,"author":{"gitId":"-"},"content":"                    GroupConfigCsvParser.GROUP_CONFIG_FILENAME);"},{"lineNumber":443,"author":{"gitId":"-"},"content":"            this.cliArguments.reportConfigFilePath \u003d configFolderPath.resolve("},{"lineNumber":444,"author":{"gitId":"-"},"content":"                    ReportConfigJsonParser.REPORT_CONFIG_FILENAME);"},{"lineNumber":445,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":446,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":447,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":448,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":449,"author":{"gitId":"MarcusTXK"},"content":"         * Adds the {@code reportConfiguration} to CliArguments."},{"lineNumber":450,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":451,"author":{"gitId":"MarcusTXK"},"content":"         * @param reportConfiguration The report configuration."},{"lineNumber":452,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":453,"author":{"gitId":"MarcusTXK"},"content":"        public Builder reportConfiguration(ReportConfiguration reportConfiguration) {"},{"lineNumber":454,"author":{"gitId":"-"},"content":"            this.cliArguments.reportConfiguration \u003d reportConfiguration;"},{"lineNumber":455,"author":{"gitId":"MarcusTXK"},"content":"            return this;"},{"lineNumber":456,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":457,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":458,"author":{"gitId":"MarcusTXK"},"content":"        /**"},{"lineNumber":459,"author":{"gitId":"MarcusTXK"},"content":"         * Builds CliArguments."},{"lineNumber":460,"author":{"gitId":"MarcusTXK"},"content":"         *"},{"lineNumber":461,"author":{"gitId":"MarcusTXK"},"content":"         * @return CliArguments"},{"lineNumber":462,"author":{"gitId":"MarcusTXK"},"content":"         */"},{"lineNumber":463,"author":{"gitId":"MarcusTXK"},"content":"        public CliArguments build() {"},{"lineNumber":464,"author":{"gitId":"-"},"content":"            CliArguments built \u003d this.cliArguments;"},{"lineNumber":465,"author":{"gitId":"-"},"content":"            this.cliArguments \u003d new CliArguments();"},{"lineNumber":466,"author":{"gitId":"-"},"content":"            return built;"},{"lineNumber":467,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":469,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MarcusTXK":300,"-":169}},{"path":"src/main/java/reposense/model/CliRunConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import java.util.logging.Level;"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import java.util.logging.Logger;"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidLocationException;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.ParseException;"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import reposense.system.LogsManager;"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":" * Represents RepoSense run configured by CLI."},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":" */"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"public class CliRunConfiguration implements RunConfiguration {"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(CliRunConfiguration.class);"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    private final CliArguments cliArguments;"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    public CliRunConfiguration(CliArguments cliArguments) {"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"        this.cliArguments \u003d cliArguments;"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs a list of {@link RepoConfiguration}."},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     * @throws ParseException if all repo locations are invalid."},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    public List\u003cRepoConfiguration\u003e getRepoConfigurations() throws ParseException {"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        for (String locationString : cliArguments.getLocations()) {"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"            try {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                configs.add("},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        new RepoConfiguration.Builder()"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                                .location(new RepoLocation(locationString))"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                                .build()"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                );"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"            } catch (InvalidLocationException ile) {"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"                logger.log(Level.WARNING, ile.getMessage(), ile);"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        if (configs.isEmpty()) {"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"            throw new ParseException(\"All repository locations are invalid.\");"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        return configs;"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"}"}],"authorContributionMap":{"MarcusTXK":43,"-":7}},{"path":"src/main/java/reposense/model/ConfigRunConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import java.util.logging.Level;"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import java.util.logging.Logger;"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import reposense.parser.AuthorConfigCsvParser;"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import reposense.parser.GroupConfigCsvParser;"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import reposense.parser.RepoConfigCsvParser;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidCsvException;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidHeaderException;"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import reposense.system.LogsManager;"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":" * Represents RepoSense run configured by config files."},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":" */"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"public class ConfigRunConfiguration implements RunConfiguration {"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(ConfigRunConfiguration.class);"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    private final CliArguments cliArguments;"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    public ConfigRunConfiguration(CliArguments cliArguments) {"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        this.cliArguments \u003d cliArguments;"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs a list of {@link RepoConfiguration}."},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"     * @throws IOException if user-supplied csv file does not exist or is not readable."},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"     * @throws InvalidCsvException if user-supplied repo-config csv is malformed."},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"     * @throws InvalidHeaderException if user-supplied csv file has header that cannot be parsed."},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    public List\u003cRepoConfiguration\u003e getRepoConfigurations()"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"            throws IOException, InvalidCsvException, InvalidHeaderException {"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cRepoConfiguration\u003e repoConfigs \u003d new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs;"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs;"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Path authorConfigFilePath \u003d cliArguments.getAuthorConfigFilePath();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Path groupConfigFilePath \u003d cliArguments.getGroupConfigFilePath();"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (authorConfigFilePath !\u003d null \u0026\u0026 Files.exists(authorConfigFilePath)) {"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"            try {"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"                authorConfigs \u003d new AuthorConfigCsvParser(cliArguments.getAuthorConfigFilePath()).parse();"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"                RepoConfiguration.merge(repoConfigs, authorConfigs);"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"                RepoConfiguration.setHasAuthorConfigFileToRepoConfigs(repoConfigs, true);"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"            } catch (IOException | InvalidCsvException e) {"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"                // for all IO and invalid csv exceptions, log the error and continue"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"                logger.log(Level.WARNING, e.getMessage(), e);"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (groupConfigFilePath !\u003d null \u0026\u0026 Files.exists(groupConfigFilePath)) {"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"            try {"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"                groupConfigs \u003d new GroupConfigCsvParser(cliArguments.getGroupConfigFilePath()).parse();"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"                RepoConfiguration.setGroupConfigsToRepos(repoConfigs, groupConfigs);"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"            } catch (IOException | InvalidCsvException e) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                // for all IO and invalid csv exceptions, log the error and continue"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"                logger.log(Level.WARNING, e.getMessage(), e);"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"        return repoConfigs;"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"}"}],"authorContributionMap":{"MarcusTXK":58,"-":13}},{"path":"src/main/java/reposense/model/RepoConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.git.GitBranch;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.parser.ConfigurationBuildException;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents configuration information from CSV config file for a single repository."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class RepoConfiguration {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_BRANCH \u003d \"HEAD\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EXTRA_OUTPUT_FOLDER_NAME \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final long DEFAULT_FILE_SIZE_LIMIT \u003d 500000;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(RepoConfiguration.class);"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private RepoLocation location;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private String branch \u003d DEFAULT_BRANCH;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private String displayName;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private String outputFolderName;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private transient String extraOutputFolderName \u003d DEFAULT_EXTRA_OUTPUT_FOLDER_NAME;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private transient ZoneId zoneId;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private transient LocalDateTime sinceDate;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private transient LocalDateTime untilDate;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private transient String repoFolderName;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private transient FileTypeManager fileTypeManager \u003d new FileTypeManager(Collections.emptyList());"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private transient List\u003cString\u003e ignoreGlobList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private transient List\u003cString\u003e ignoredAuthorsList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private transient AuthorConfiguration authorConfig;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private transient boolean isStandaloneConfigIgnored \u003d false;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private transient boolean isFileSizeLimitIgnored \u003d false;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private transient List\u003cCommitHash\u003e ignoreCommitList \u003d Collections.emptyList();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private transient boolean isLastModifiedDateIncluded;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private transient boolean isShallowCloningPerformed \u003d false;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private transient boolean isFindingPreviousAuthorsPerformed \u003d false;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private transient boolean isFormatsOverriding \u003d false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoreGlobListOverriding;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoreCommitListOverriding \u003d false;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoredAuthorsListOverriding;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private transient long fileSizeLimit \u003d DEFAULT_FILE_SIZE_LIMIT;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private transient boolean isFileSizeLimitOverriding \u003d false;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private transient boolean isIgnoredFileAnalysisSkipped \u003d false;"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Constructs an empty instance of {@code RepoConfiguration}, which is used by the {@code Builder}"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * to construct new {@code RepoConfiguration} instances."},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private RepoConfiguration() {}"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Builds the necessary configurations for RepoConfiguration."},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Obeys the Builder pattern as described in {@link CliArguments}."},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static class Builder {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        private String displayName;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        private String outputFolderName;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        private String repoFolderName;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        private RepoConfiguration repoConfiguration;"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":74,"author":{"gitId":"-"},"content":"         * Returns an empty instance of the RepoConfiguration Builder."},{"lineNumber":75,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        public Builder() {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            this.repoConfiguration \u003d new RepoConfiguration();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         * Processes the author configuration of the repository."},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        private void processAuthor() {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            this.repoConfiguration.authorConfig \u003d new AuthorConfiguration("},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    this.repoConfiguration.location,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    this.repoConfiguration.branch);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * Processes the branch of the repository."},{"lineNumber":91,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private void processBranch() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.repoConfiguration.branch \u003d this.repoConfiguration.location.isEmpty()"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    ? DEFAULT_BRANCH"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    : this.repoConfiguration.branch;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * Processes the relevant names of the repository configs."},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        private void processNames() {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            String repoName \u003d this.repoConfiguration.location.getRepoName();"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            String org \u003d this.repoConfiguration.location.getOrganization();"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String defaultDisplayName \u003d repoName + \"[\" + this.repoConfiguration.branch + \"]\";"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            String defaultOutputFolderName \u003d repoName + \"_\" + this.repoConfiguration.branch;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            String defaultRepoFolderName \u003d repoName;"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (!org.isEmpty()) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                defaultDisplayName \u003d org + \"/\" + defaultDisplayName;"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                defaultRepoFolderName \u003d org + \"_\" + defaultRepoFolderName;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                defaultOutputFolderName \u003d org + \"_\" + defaultOutputFolderName;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"            this.repoConfiguration.displayName \u003d Optional.ofNullable(this.displayName)"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                    .orElse(defaultDisplayName);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            this.repoConfiguration.outputFolderName \u003d Optional.ofNullable(this.outputFolderName)"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                    .orElse(defaultOutputFolderName);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            this.repoConfiguration.repoFolderName \u003d Optional.ofNullable(this.repoFolderName)"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                    .orElse(defaultRepoFolderName);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * Updates the {@code location} for {@code RepoConfiguration}."},{"lineNumber":125,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * @param location A repository location."},{"lineNumber":127,"author":{"gitId":"-"},"content":"         * @return This builder object"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public Builder location(RepoLocation location) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            this.repoConfiguration.location \u003d location;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * Updates the {@code branch} for {@code RepoConfiguration}."},{"lineNumber":136,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * @param branch Branch of the repository of interest."},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public Builder branch(String branch) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            this.repoConfiguration.branch \u003d branch;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Updates the {@code displayName} for {@code RepoConfiguration}."},{"lineNumber":147,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * @param displayName Display name of the repository."},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public Builder displayName(String displayName) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            this.displayName \u003d displayName;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            this.repoConfiguration.displayName \u003d displayName;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Updates the {@code outputFolderName} for {@code RepoConfiguration}."},{"lineNumber":159,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * @param outputFolderName Output folder name of the repository."},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":162,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Builder outputFolderName(String outputFolderName) {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.outputFolderName \u003d outputFolderName;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.repoConfiguration.outputFolderName \u003d outputFolderName;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * Updates the {@code extraOutputFolderName} for {@code RepoConfiguration}."},{"lineNumber":171,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         * @param extraOutputFolderName Extra output folder name of the repository."},{"lineNumber":173,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":174,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Builder extraOutputFolderName(String extraOutputFolderName) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.repoConfiguration.extraOutputFolderName \u003d extraOutputFolderName;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         * Updates the {@code zoneId} for {@code RepoConfiguration}."},{"lineNumber":182,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * @param zoneId Time-zone of the repository."},{"lineNumber":184,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":185,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Builder zoneId(ZoneId zoneId) {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.repoConfiguration.zoneId \u003d zoneId;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * Updates the {@code sinceDate} for {@code RepoConfiguration}."},{"lineNumber":193,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * @param sinceDate Starting date of analysis."},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Builder sinceDate(LocalDateTime sinceDate) {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.repoConfiguration.sinceDate \u003d sinceDate;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Updates the {@code untilDate} for {@code RepoConfiguration}."},{"lineNumber":204,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * @param untilDate Ending date of analysis."},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Builder untilDate(LocalDateTime untilDate) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.repoConfiguration.untilDate \u003d untilDate;"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * Updates the {@code repoFolderName} for {@code RepoConfiguration}."},{"lineNumber":215,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * @param repoFolderName Folder name of the repository."},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":218,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public Builder repoFolderName(String repoFolderName) {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            this.repoFolderName \u003d repoFolderName;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            this.repoConfiguration.repoFolderName \u003d repoFolderName;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         * Updates the {@code fileTypeManager} for {@code RepoConfiguration}."},{"lineNumber":227,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * @param fileTypes List of file types and groupings permitted."},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":230,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public Builder fileTypeManager(List\u003cFileType\u003e fileTypes) {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            this.repoConfiguration.fileTypeManager \u003d new FileTypeManager(fileTypes);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * Updates the {@code ignoreGlobList} for {@code RepoConfiguration}."},{"lineNumber":238,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * @param ignoredGlobList List of glob patterns to ignore."},{"lineNumber":240,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":241,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public Builder ignoreGlobList(List\u003cString\u003e ignoredGlobList) {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            this.repoConfiguration.ignoreGlobList \u003d ignoredGlobList;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":248,"author":{"gitId":"-"},"content":"         * Updates the {@code ignoredAuthorsList} for {@code RepoConfiguration}."},{"lineNumber":249,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":250,"author":{"gitId":"-"},"content":"         * @param ignoredAuthorsList List of authors to ignore."},{"lineNumber":251,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":252,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public Builder ignoredAuthorsList(List\u003cString\u003e ignoredAuthorsList) {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            this.repoConfiguration.ignoredAuthorsList \u003d ignoredAuthorsList;"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         * Updates the {@code authorConfig} for {@code RepoConfiguration}."},{"lineNumber":260,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":261,"author":{"gitId":"-"},"content":"         * @param authorConfig Author configuration information of the repository."},{"lineNumber":262,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":263,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public Builder authorConfig(AuthorConfiguration authorConfig) {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            this.repoConfiguration.authorConfig \u003d authorConfig;"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":270,"author":{"gitId":"-"},"content":"         * Updates the {@code isStandaloneConfigIgnored} for {@code RepoConfiguration}."},{"lineNumber":271,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":272,"author":{"gitId":"-"},"content":"         * @param isStandaloneConfigIgnored Checks if standalone config is ignored."},{"lineNumber":273,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":274,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public Builder isStandaloneConfigIgnored(boolean isStandaloneConfigIgnored) {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            this.repoConfiguration.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":281,"author":{"gitId":"-"},"content":"         * Updates the {@code isFileSizeLimitIgnored} for {@code RepoConfiguration}."},{"lineNumber":282,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":283,"author":{"gitId":"-"},"content":"         * @param isFileSizeLimitIgnored Checks if file size limit is ignored."},{"lineNumber":284,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":285,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        public Builder isFileSizeLimitIgnored(boolean isFileSizeLimitIgnored) {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            this.repoConfiguration.isFileSizeLimitIgnored \u003d isFileSizeLimitIgnored;"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":292,"author":{"gitId":"-"},"content":"         * Updates the {@code ignoreCommitList} for {@code RepoConfiguration}."},{"lineNumber":293,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":294,"author":{"gitId":"-"},"content":"         * @param ignoreCommitList List of commits to ignore."},{"lineNumber":295,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":296,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        public Builder ignoreCommitList(List\u003cCommitHash\u003e ignoreCommitList) {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            this.repoConfiguration.ignoreCommitList \u003d ignoreCommitList;"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":303,"author":{"gitId":"-"},"content":"         * Updates the {@code isLastModifiedDateIncluded} for {@code RepoConfiguration}."},{"lineNumber":304,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":305,"author":{"gitId":"-"},"content":"         * @param isLastModifiedDateIncluded Checks if last modified date is included."},{"lineNumber":306,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":307,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        public Builder isLastModifiedDateIncluded(boolean isLastModifiedDateIncluded) {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            this.repoConfiguration.isLastModifiedDateIncluded \u003d isLastModifiedDateIncluded;"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":314,"author":{"gitId":"-"},"content":"         * Updates the {@code isShallowCloningPerformed} for {@code RepoConfiguration}."},{"lineNumber":315,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":316,"author":{"gitId":"-"},"content":"         * @param isShallowCloningPerformed Checks if shallow cloning is performed."},{"lineNumber":317,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":318,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        public Builder isShallowCloningPerformed(boolean isShallowCloningPerformed) {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            this.repoConfiguration.isShallowCloningPerformed \u003d isShallowCloningPerformed;"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":325,"author":{"gitId":"-"},"content":"         * Updates the {@code isFindingPreviousAuthorsPerformed} for {@code RepoConfiguration}."},{"lineNumber":326,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":327,"author":{"gitId":"-"},"content":"         * @param isFindingPreviousAuthorsPerformed Checks if finding previous authors is performed."},{"lineNumber":328,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":329,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        public Builder isFindingPreviousAuthorsPerformed(boolean isFindingPreviousAuthorsPerformed) {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            this.repoConfiguration.isFindingPreviousAuthorsPerformed \u003d isFindingPreviousAuthorsPerformed;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":336,"author":{"gitId":"-"},"content":"         * Updates the {@code isFormatsOverriding} for {@code RepoConfiguration}."},{"lineNumber":337,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":338,"author":{"gitId":"-"},"content":"         * @param isFormatsOverriding Checks if file formats are overridden."},{"lineNumber":339,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":340,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        public Builder isFormatsOverriding(boolean isFormatsOverriding) {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            this.repoConfiguration.isFormatsOverriding \u003d isFormatsOverriding;"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":347,"author":{"gitId":"-"},"content":"         * Updates the {@code isIgnoreGlobListOverriding} for {@code RepoConfiguration}."},{"lineNumber":348,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":349,"author":{"gitId":"-"},"content":"         * @param isIgnoreGlobListOverriding Checks if the list of ignored glob is overridden."},{"lineNumber":350,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":351,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        public Builder isIgnoreGlobListOverriding(boolean isIgnoreGlobListOverriding) {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"            this.repoConfiguration.isIgnoreGlobListOverriding \u003d isIgnoreGlobListOverriding;"},{"lineNumber":354,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":356,"author":{"gitId":"-"},"content":""},{"lineNumber":357,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":358,"author":{"gitId":"-"},"content":"         * Updates the {@code isIgnoreCommitListOverriding} for {@code RepoConfiguration}."},{"lineNumber":359,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":360,"author":{"gitId":"-"},"content":"         * @param isIgnoreCommitListOverriding Checks if the list of ignored commits is overridden."},{"lineNumber":361,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":362,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        public Builder isIgnoreCommitListOverriding(boolean isIgnoreCommitListOverriding) {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            this.repoConfiguration.isIgnoreCommitListOverriding \u003d isIgnoreCommitListOverriding;"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":369,"author":{"gitId":"-"},"content":"         * Updates the {@code isFileSizeLimitOverriding} for {@code RepoConfiguration}."},{"lineNumber":370,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":371,"author":{"gitId":"-"},"content":"         * @param isIgnoredAuthorsListOverriding Checks if the list of ignored authors is overridden."},{"lineNumber":372,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":373,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        public Builder isIgnoredAuthorsListOverriding(boolean isIgnoredAuthorsListOverriding) {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            this.repoConfiguration.isIgnoredAuthorsListOverriding \u003d isIgnoredAuthorsListOverriding;"},{"lineNumber":376,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":380,"author":{"gitId":"-"},"content":"         * Updates the {@code fileSizeLimit} for {@code RepoConfiguration}."},{"lineNumber":381,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":382,"author":{"gitId":"-"},"content":"         * @param fileSizeLimit File size limit of the repository."},{"lineNumber":383,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":384,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        public Builder fileSizeLimit(long fileSizeLimit) {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"            this.repoConfiguration.fileSizeLimit \u003d fileSizeLimit;"},{"lineNumber":387,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":391,"author":{"gitId":"-"},"content":"         * Updates the {@code isFileSizeLimitOverriding} for {@code RepoConfiguration}."},{"lineNumber":392,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":393,"author":{"gitId":"-"},"content":"         * @param isFileSizeLimitOverriding Checks if the file size limit is overridden."},{"lineNumber":394,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":395,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        public Builder isFileSizeLimitOverriding(boolean isFileSizeLimitOverriding) {"},{"lineNumber":397,"author":{"gitId":"-"},"content":"            this.repoConfiguration.isFileSizeLimitOverriding \u003d isFileSizeLimitOverriding;"},{"lineNumber":398,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":402,"author":{"gitId":"-"},"content":"         * Updates the {@code isIgnoredFileAnalysisSkipped} for {@code RepoConfiguration}."},{"lineNumber":403,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":404,"author":{"gitId":"-"},"content":"         * @param isIgnoredFileAnalysisSkipped Checks if the analysis of ignored files is skipped."},{"lineNumber":405,"author":{"gitId":"-"},"content":"         * @return This builder object."},{"lineNumber":406,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        public Builder isIgnoredFileAnalysisSkipped(boolean isIgnoredFileAnalysisSkipped) {"},{"lineNumber":408,"author":{"gitId":"-"},"content":"            this.repoConfiguration.isIgnoredFileAnalysisSkipped \u003d isIgnoredFileAnalysisSkipped;"},{"lineNumber":409,"author":{"gitId":"-"},"content":"            return this;"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":411,"author":{"gitId":"-"},"content":""},{"lineNumber":412,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":413,"author":{"gitId":"-"},"content":"         * Builds the {@code RepoConfiguration} object with the necessary configurations."},{"lineNumber":414,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":415,"author":{"gitId":"-"},"content":"         * @return {@code RepoConfiguration}."},{"lineNumber":416,"author":{"gitId":"-"},"content":"         * @throws ConfigurationBuildException if there was an issue building the {@code RepoConfiguration}"},{"lineNumber":417,"author":{"gitId":"-"},"content":"         *     object."},{"lineNumber":418,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        public RepoConfiguration build() {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"            if (!validate()) {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"                throw new ConfigurationBuildException();"},{"lineNumber":422,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"            this.processAuthor();"},{"lineNumber":425,"author":{"gitId":"-"},"content":"            this.processBranch();"},{"lineNumber":426,"author":{"gitId":"-"},"content":"            this.processNames();"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"            // save a reference to the current built object"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            RepoConfiguration toReturn \u003d this.repoConfiguration;"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"            // reset the internal reference to avoid aliasing"},{"lineNumber":432,"author":{"gitId":"-"},"content":"            this.repoConfiguration \u003d new RepoConfiguration();"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"            // return the reference to the built RepoConfiguration object"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            return toReturn;"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"        /**"},{"lineNumber":439,"author":{"gitId":"-"},"content":"         * Checks if the current {@code RepoConfiguration} object contains all the necessary parameters"},{"lineNumber":440,"author":{"gitId":"-"},"content":"         * needed to build successfully."},{"lineNumber":441,"author":{"gitId":"-"},"content":"         *"},{"lineNumber":442,"author":{"gitId":"-"},"content":"         * @return true if the {@code RepoConfiguration} object contains all the necessary parameters else false"},{"lineNumber":443,"author":{"gitId":"-"},"content":"         */"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        private boolean validate() {"},{"lineNumber":445,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(this.repoConfiguration.location).isPresent();"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"    public static void setDatesToRepoConfigs(List\u003cRepoConfiguration\u003e configs,"},{"lineNumber":450,"author":{"gitId":"-"},"content":"            LocalDateTime sinceDate, LocalDateTime untilDate) {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"            config.setSinceDate(sinceDate);"},{"lineNumber":453,"author":{"gitId":"-"},"content":"            config.setUntilDate(untilDate);"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":456,"author":{"gitId":"-"},"content":""},{"lineNumber":457,"author":{"gitId":"-"},"content":"    public static void setZoneIdToRepoConfigs(List\u003cRepoConfiguration\u003e configs, ZoneId zoneId) {"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {"},{"lineNumber":459,"author":{"gitId":"-"},"content":"            config.setZoneId(zoneId);"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"    public static void setIsLastModifiedDateIncludedToRepoConfigs(List\u003cRepoConfiguration\u003e configs,"},{"lineNumber":464,"author":{"gitId":"-"},"content":"                                                                  boolean isLastModifiedDateIncluded) {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"            config.setIsLastModifiedDateIncluded(isLastModifiedDateIncluded);"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"    public static void setIsShallowCloningPerformedToRepoConfigs(List\u003cRepoConfiguration\u003e configs,"},{"lineNumber":471,"author":{"gitId":"-"},"content":"                                                                 boolean isShallowCloningPerformed) {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        if (isShallowCloningPerformed) {"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            configs.stream().forEach(config -\u003e config.setIsShallowCloningPerformed(true));"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":476,"author":{"gitId":"-"},"content":""},{"lineNumber":477,"author":{"gitId":"-"},"content":"    public static void setIsFindingPreviousAuthorsPerformedToRepoConfigs(List\u003cRepoConfiguration\u003e configs,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"                                                                         boolean isFindingPreviousAuthorsPerformed) {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        if (isFindingPreviousAuthorsPerformed) {"},{"lineNumber":480,"author":{"gitId":"-"},"content":"            configs.stream().forEach(config -\u003e config.setIsFindingPreviousAuthorsPerformed(true));"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"sikai00"},"content":"    public static void setHasAuthorConfigFileToRepoConfigs(List\u003cRepoConfiguration\u003e configs,"},{"lineNumber":485,"author":{"gitId":"sikai00"},"content":"                                                           boolean setHasAuthorConfigFile) {"},{"lineNumber":486,"author":{"gitId":"sikai00"},"content":"        configs.stream().forEach(config -\u003e config.setHasAuthorConfigFile(setHasAuthorConfigFile));"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":490,"author":{"gitId":"-"},"content":"     * Merges a {@link RepoConfiguration} from {@code repoConfigs} with an {@link AuthorConfiguration} from"},{"lineNumber":491,"author":{"gitId":"-"},"content":"     * {@code authorConfigs} if their {@link RepoLocation} and branch matches."},{"lineNumber":492,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    public static void merge(List\u003cRepoConfiguration\u003e repoConfigs, List\u003cAuthorConfiguration\u003e authorConfigs) {"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        for (AuthorConfiguration authorConfig : authorConfigs) {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"            if (authorConfig.getLocation().isEmpty()) {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"                for (RepoConfiguration repoConfig : repoConfigs) {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"                    repoConfig.addAuthors(authorConfig.getAuthorList());"},{"lineNumber":498,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":499,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":500,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e locationMatchingRepoConfigs \u003d"},{"lineNumber":503,"author":{"gitId":"-"},"content":"                    getMatchingRepoConfigsByLocation(repoConfigs, authorConfig.getLocation());"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"            if (locationMatchingRepoConfigs.isEmpty()) {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"                logger.warning(String.format("},{"lineNumber":507,"author":{"gitId":"-"},"content":"                        \"Repository %s is not found in repo-config.csv.\","},{"lineNumber":508,"author":{"gitId":"-"},"content":"                        authorConfig.getLocation()));"},{"lineNumber":509,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":510,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":511,"author":{"gitId":"-"},"content":"            if (authorConfig.isDefaultBranch()) {"},{"lineNumber":512,"author":{"gitId":"-"},"content":"                locationMatchingRepoConfigs.forEach(matchingRepoConfig -\u003e {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"                    matchingRepoConfig.addAuthors(authorConfig.getAuthorList());"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":515,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"            RepoConfiguration branchMatchingRepoConfig \u003d getMatchingRepoConfig(repoConfigs, authorConfig);"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"            if (branchMatchingRepoConfig \u003d\u003d null) {"},{"lineNumber":521,"author":{"gitId":"-"},"content":"                if (!authorConfig.isDefaultBranch()) {"},{"lineNumber":522,"author":{"gitId":"-"},"content":"                    logger.warning(String.format("},{"lineNumber":523,"author":{"gitId":"-"},"content":"                            \"Repository %s (branch %s) is not found in repo-config.csv.\","},{"lineNumber":524,"author":{"gitId":"-"},"content":"                            authorConfig.getLocation(), authorConfig.getBranch()));"},{"lineNumber":525,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":526,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":527,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":528,"author":{"gitId":"-"},"content":""},{"lineNumber":529,"author":{"gitId":"-"},"content":"            branchMatchingRepoConfig.addAuthors(authorConfig.getAuthorList());"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":534,"author":{"gitId":"-"},"content":"     * Sets the list of groups in {@code groupConfigs} to the respective {@code repoConfigs}."},{"lineNumber":535,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    public static void setGroupConfigsToRepos(List\u003cRepoConfiguration\u003e repoConfigs,"},{"lineNumber":537,"author":{"gitId":"-"},"content":"            List\u003cGroupConfiguration\u003e groupConfigs) {"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        for (GroupConfiguration groupConfig : groupConfigs) {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e matchingRepoConfigs;"},{"lineNumber":540,"author":{"gitId":"-"},"content":"            if (groupConfig.getLocation().isEmpty()) {"},{"lineNumber":541,"author":{"gitId":"-"},"content":"                matchingRepoConfigs \u003d repoConfigs;"},{"lineNumber":542,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"                matchingRepoConfigs \u003d getMatchingRepoConfigsByLocation(repoConfigs,"},{"lineNumber":544,"author":{"gitId":"-"},"content":"                        groupConfig.getLocation());"},{"lineNumber":545,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":546,"author":{"gitId":"-"},"content":"            if (matchingRepoConfigs.isEmpty()) {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"                logger.warning(String.format("},{"lineNumber":548,"author":{"gitId":"-"},"content":"                        \"Repository %s is not found in repo-config.csv.\", groupConfig.getLocation()));"},{"lineNumber":549,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":550,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":551,"author":{"gitId":"-"},"content":"            matchingRepoConfigs.forEach(matchingRepoConfig -\u003e {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"                matchingRepoConfig.addGroups(groupConfig.getGroupsList());"},{"lineNumber":553,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":554,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":555,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":558,"author":{"gitId":"-"},"content":"     * Iterates through {@code repoConfigs} to find a {@link RepoConfiguration} with {@link RepoLocation} and branch"},{"lineNumber":559,"author":{"gitId":"-"},"content":"     * that matches {@code authorConfig}. Returns {@code null} if no match is found."},{"lineNumber":560,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    private static RepoConfiguration getMatchingRepoConfig(List\u003cRepoConfiguration\u003e repoConfigs,"},{"lineNumber":562,"author":{"gitId":"-"},"content":"            AuthorConfiguration authorConfig) {"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        if (authorConfig.isDefaultBranch()) {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        for (RepoConfiguration repoConfig : repoConfigs) {"},{"lineNumber":567,"author":{"gitId":"-"},"content":"            if (repoConfig.getLocation().equals(authorConfig.getLocation())"},{"lineNumber":568,"author":{"gitId":"-"},"content":"                    \u0026\u0026 repoConfig.getBranch().equals(authorConfig.getBranch())) {"},{"lineNumber":569,"author":{"gitId":"-"},"content":"                return repoConfig;"},{"lineNumber":570,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        return null;"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":576,"author":{"gitId":"-"},"content":"     * Returns a list of {@link RepoConfiguration} where the {@link RepoLocation} of a {@link RepoConfiguration}"},{"lineNumber":577,"author":{"gitId":"-"},"content":"     * in the list of {@code configs} matches {@code targetRepoLocation}."},{"lineNumber":578,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    private static List\u003cRepoConfiguration\u003e getMatchingRepoConfigsByLocation(List\u003cRepoConfiguration\u003e configs,"},{"lineNumber":580,"author":{"gitId":"-"},"content":"            RepoLocation targetRepoLocation) {"},{"lineNumber":581,"author":{"gitId":"-"},"content":"        return configs.stream().filter(config -\u003e config.getLocation().equals(targetRepoLocation))"},{"lineNumber":582,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":584,"author":{"gitId":"-"},"content":""},{"lineNumber":585,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":586,"author":{"gitId":"-"},"content":"     * Sets {@code formats} to {@link RepoConfiguration} in {@code configs} if its format list is empty."},{"lineNumber":587,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":588,"author":{"gitId":"-"},"content":"    public static void setFormatsToRepoConfigs(List\u003cRepoConfiguration\u003e configs, List\u003cFileType\u003e formats) {"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"            if (!config.fileTypeManager.hasSpecifiedFormats()) {"},{"lineNumber":591,"author":{"gitId":"-"},"content":"                config.fileTypeManager.setFormats(formats);"},{"lineNumber":592,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":595,"author":{"gitId":"-"},"content":""},{"lineNumber":596,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":597,"author":{"gitId":"-"},"content":"     * Sets each {@link RepoConfiguration} in {@code configs} to ignore its standalone config, if"},{"lineNumber":598,"author":{"gitId":"-"},"content":"     * {@code ignoreAllStandaloneConfigs} is true."},{"lineNumber":599,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":600,"author":{"gitId":"-"},"content":"    public static void setStandaloneConfigIgnoredToRepoConfigs(List\u003cRepoConfiguration\u003e configs,"},{"lineNumber":601,"author":{"gitId":"-"},"content":"            boolean ignoreAllStandaloneConfigs) {"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        if (ignoreAllStandaloneConfigs) {"},{"lineNumber":603,"author":{"gitId":"-"},"content":"            configs.forEach(config -\u003e config.setStandaloneConfigIgnored(true));"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":606,"author":{"gitId":"-"},"content":""},{"lineNumber":607,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":608,"author":{"gitId":"-"},"content":"     * Sets each {@link RepoConfiguration} in {@code configs} to ignore its filesize limit, if"},{"lineNumber":609,"author":{"gitId":"-"},"content":"     * {@code ignoreFilesizeLimit} is true."},{"lineNumber":610,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    public static void setFileSizeLimitIgnoredToRepoConfigs(List\u003cRepoConfiguration\u003e configs,"},{"lineNumber":612,"author":{"gitId":"-"},"content":"                                                            boolean ignoreFileSizeLimit) {"},{"lineNumber":613,"author":{"gitId":"-"},"content":"        if (ignoreFileSizeLimit) {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"            configs.forEach(config -\u003e config.setFileSizeLimitIgnored(true));"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":617,"author":{"gitId":"-"},"content":""},{"lineNumber":618,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":619,"author":{"gitId":"-"},"content":"     * Checks if any of the {@code configs} is finding previous authors for commit analysis."},{"lineNumber":620,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    public static boolean isAnyRepoFindingPreviousAuthors(List\u003cRepoConfiguration\u003e configs) {"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        return configs.stream().anyMatch(RepoConfiguration::isFindingPreviousAuthorsPerformed);"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":624,"author":{"gitId":"-"},"content":""},{"lineNumber":625,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":626,"author":{"gitId":"-"},"content":"     * Clears existing information related to this repository and its authors, and replaces it with information from"},{"lineNumber":627,"author":{"gitId":"-"},"content":"     * {@code standaloneConfig}."},{"lineNumber":628,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    public void update(StandaloneConfig standaloneConfig) {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        // only assign the new values when all the fields in {@code standaloneConfig} pass the validations."},{"lineNumber":631,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e replacementFileTypes \u003d FileType.convertFormatStringsToFileTypes(standaloneConfig.getFormats());"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        CommitHash.validateCommits(standaloneConfig.getIgnoreCommitList());"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"        if (!isIgnoreGlobListOverriding) {"},{"lineNumber":635,"author":{"gitId":"-"},"content":"            ignoreGlobList \u003d standaloneConfig.getIgnoreGlobList();"},{"lineNumber":636,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":637,"author":{"gitId":"-"},"content":"        if (!isFormatsOverriding) {"},{"lineNumber":638,"author":{"gitId":"-"},"content":"            fileTypeManager.setFormats(replacementFileTypes);"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":640,"author":{"gitId":"-"},"content":"        if (!isIgnoreCommitListOverriding) {"},{"lineNumber":641,"author":{"gitId":"-"},"content":"            ignoreCommitList \u003d CommitHash.convertStringsToCommits(standaloneConfig.getIgnoreCommitList());"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":643,"author":{"gitId":"-"},"content":"        if (!isIgnoredAuthorsListOverriding) {"},{"lineNumber":644,"author":{"gitId":"-"},"content":"            ignoredAuthorsList \u003d standaloneConfig.getIgnoreAuthorList();"},{"lineNumber":645,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":646,"author":{"gitId":"-"},"content":"        if (!isFileSizeLimitOverriding) {"},{"lineNumber":647,"author":{"gitId":"-"},"content":"            fileSizeLimit \u003d standaloneConfig.getFileSizeLimit();"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        authorConfig.update(standaloneConfig, ignoreGlobList);"},{"lineNumber":650,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":651,"author":{"gitId":"-"},"content":""},{"lineNumber":652,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":653,"author":{"gitId":"-"},"content":"     * Returns the matching {@link Author} given a {@code name} and an {@code email}."},{"lineNumber":654,"author":{"gitId":"-"},"content":"     * If no matching {@link Author} is found, {@link Author#UNKNOWN_AUTHOR} is returned."},{"lineNumber":655,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":656,"author":{"gitId":"-"},"content":"    public Author getAuthor(String name, String email) {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthor(name, email);"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":659,"author":{"gitId":"-"},"content":""},{"lineNumber":660,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":661,"author":{"gitId":"-"},"content":"     * Updates branch with {@code currentBranch} if default branch is specified."},{"lineNumber":662,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":663,"author":{"gitId":"-"},"content":"    public void updateBranch(String currentBranch) {"},{"lineNumber":664,"author":{"gitId":"-"},"content":"        if (branch.equals(DEFAULT_BRANCH)) {"},{"lineNumber":665,"author":{"gitId":"-"},"content":"            setBranch(currentBranch);"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":667,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":668,"author":{"gitId":"-"},"content":""},{"lineNumber":669,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":670,"author":{"gitId":"-"},"content":"     * Gets the current branch and updates branch with current branch if default branch is specified."},{"lineNumber":671,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":672,"author":{"gitId":"-"},"content":"     * @throws GitBranchException if current branch cannot be retrieved."},{"lineNumber":673,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    public void updateBranch() throws GitBranchException {"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        if (branch.equals(DEFAULT_BRANCH)) {"},{"lineNumber":676,"author":{"gitId":"-"},"content":"            String currentBranch \u003d GitBranch.getCurrentBranch(getRepoRoot());"},{"lineNumber":677,"author":{"gitId":"-"},"content":"            setBranch(currentBranch);"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":679,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":680,"author":{"gitId":"-"},"content":""},{"lineNumber":681,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":682,"author":{"gitId":"-"},"content":"     * Gets the path to the root folder of the repository."},{"lineNumber":683,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    public String getRepoRoot() {"},{"lineNumber":685,"author":{"gitId":"-"},"content":"        String path \u003d FileUtil.REPOS_ADDRESS + File.separator + getRepoFolderName() + File.separator;"},{"lineNumber":686,"author":{"gitId":"-"},"content":""},{"lineNumber":687,"author":{"gitId":"-"},"content":"        if (!getRepoName().isEmpty()) {"},{"lineNumber":688,"author":{"gitId":"-"},"content":"            if (!extraOutputFolderName.isEmpty()) {"},{"lineNumber":689,"author":{"gitId":"-"},"content":"                path +\u003d extraOutputFolderName + File.separator;"},{"lineNumber":690,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":691,"author":{"gitId":"-"},"content":""},{"lineNumber":692,"author":{"gitId":"-"},"content":"            path +\u003d getRepoName() + File.separator;"},{"lineNumber":693,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":694,"author":{"gitId":"-"},"content":""},{"lineNumber":695,"author":{"gitId":"-"},"content":"        return path;"},{"lineNumber":696,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":697,"author":{"gitId":"-"},"content":""},{"lineNumber":698,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":699,"author":{"gitId":"-"},"content":"     * Gets the name of the folder containing the cloned repository; the parent directory of the repo\u0027s root folder."},{"lineNumber":700,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":701,"author":{"gitId":"-"},"content":"    public String getRepoFolderName() {"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        return repoFolderName;"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":704,"author":{"gitId":"-"},"content":""},{"lineNumber":705,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":706,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":707,"author":{"gitId":"-"},"content":""},{"lineNumber":708,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":709,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":710,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"        if (!(other instanceof RepoConfiguration)) {"},{"lineNumber":713,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":714,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":715,"author":{"gitId":"-"},"content":""},{"lineNumber":716,"author":{"gitId":"-"},"content":"        RepoConfiguration otherRepoConfig \u003d (RepoConfiguration) other;"},{"lineNumber":717,"author":{"gitId":"-"},"content":""},{"lineNumber":718,"author":{"gitId":"-"},"content":"        return location.equals(otherRepoConfig.location)"},{"lineNumber":719,"author":{"gitId":"-"},"content":"                \u0026\u0026 branch.equals(otherRepoConfig.branch)"},{"lineNumber":720,"author":{"gitId":"-"},"content":"                \u0026\u0026 authorConfig.equals(otherRepoConfig.authorConfig)"},{"lineNumber":721,"author":{"gitId":"-"},"content":"                \u0026\u0026 ignoreGlobList.equals(otherRepoConfig.ignoreGlobList)"},{"lineNumber":722,"author":{"gitId":"-"},"content":"                \u0026\u0026 ignoredAuthorsList.equals(otherRepoConfig.ignoredAuthorsList)"},{"lineNumber":723,"author":{"gitId":"-"},"content":"                \u0026\u0026 fileSizeLimit \u003d\u003d otherRepoConfig.fileSizeLimit"},{"lineNumber":724,"author":{"gitId":"-"},"content":"                \u0026\u0026 isStandaloneConfigIgnored \u003d\u003d otherRepoConfig.isStandaloneConfigIgnored"},{"lineNumber":725,"author":{"gitId":"-"},"content":"                \u0026\u0026 fileTypeManager.equals(otherRepoConfig.fileTypeManager)"},{"lineNumber":726,"author":{"gitId":"-"},"content":"                \u0026\u0026 isLastModifiedDateIncluded \u003d\u003d otherRepoConfig.isLastModifiedDateIncluded"},{"lineNumber":727,"author":{"gitId":"-"},"content":"                \u0026\u0026 isFormatsOverriding \u003d\u003d otherRepoConfig.isFormatsOverriding"},{"lineNumber":728,"author":{"gitId":"-"},"content":"                \u0026\u0026 isShallowCloningPerformed \u003d\u003d otherRepoConfig.isShallowCloningPerformed"},{"lineNumber":729,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoreGlobListOverriding \u003d\u003d otherRepoConfig.isIgnoreGlobListOverriding"},{"lineNumber":730,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoreCommitListOverriding \u003d\u003d otherRepoConfig.isIgnoreCommitListOverriding"},{"lineNumber":731,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoredAuthorsListOverriding \u003d\u003d otherRepoConfig.isIgnoredAuthorsListOverriding"},{"lineNumber":732,"author":{"gitId":"-"},"content":"                \u0026\u0026 isFileSizeLimitOverriding \u003d\u003d otherRepoConfig.isFileSizeLimitOverriding"},{"lineNumber":733,"author":{"gitId":"-"},"content":"                \u0026\u0026 isFileSizeLimitIgnored \u003d\u003d otherRepoConfig.isFileSizeLimitIgnored"},{"lineNumber":734,"author":{"gitId":"-"},"content":"                \u0026\u0026 isIgnoredFileAnalysisSkipped \u003d\u003d otherRepoConfig.isIgnoredFileAnalysisSkipped;"},{"lineNumber":735,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":736,"author":{"gitId":"-"},"content":""},{"lineNumber":737,"author":{"gitId":"-"},"content":"    public Map\u003cAuthor, String\u003e getAuthorDisplayNameMap() {"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorDisplayNameMap();"},{"lineNumber":739,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":740,"author":{"gitId":"-"},"content":""},{"lineNumber":741,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayNameMap(Map\u003cAuthor, String\u003e authorDisplayNameMap) {"},{"lineNumber":742,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDisplayNameMap(authorDisplayNameMap);"},{"lineNumber":743,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":744,"author":{"gitId":"-"},"content":""},{"lineNumber":745,"author":{"gitId":"-"},"content":"    public String getBranch() {"},{"lineNumber":746,"author":{"gitId":"-"},"content":"        return branch;"},{"lineNumber":747,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":748,"author":{"gitId":"-"},"content":""},{"lineNumber":749,"author":{"gitId":"-"},"content":"    public void setBranch(String branch) {"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        updateDisplayName(branch);"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        updateOutputFolderName(branch);"},{"lineNumber":752,"author":{"gitId":"-"},"content":"        this.branch \u003d branch;"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        authorConfig.setBranch(branch);"},{"lineNumber":754,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":755,"author":{"gitId":"-"},"content":""},{"lineNumber":756,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":757,"author":{"gitId":"-"},"content":"     * Updates the branch in the {@code displayName} to the current {@code branch}."},{"lineNumber":758,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":759,"author":{"gitId":"-"},"content":"    public void updateDisplayName(String branch) {"},{"lineNumber":760,"author":{"gitId":"-"},"content":"        this.displayName \u003d displayName.substring(0, displayName.lastIndexOf(\u0027[\u0027) + 1) + branch + \"]\";"},{"lineNumber":761,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":762,"author":{"gitId":"-"},"content":""},{"lineNumber":763,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":764,"author":{"gitId":"-"},"content":"     * Updates the branch in the {@code outputFolderName} to the current {@code branch}."},{"lineNumber":765,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":766,"author":{"gitId":"-"},"content":"    public void updateOutputFolderName(String branch) {"},{"lineNumber":767,"author":{"gitId":"-"},"content":"        this.outputFolderName \u003d outputFolderName.substring(0, outputFolderName.lastIndexOf(\u0027_\u0027) + 1) + branch;"},{"lineNumber":768,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":769,"author":{"gitId":"-"},"content":""},{"lineNumber":770,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoreGlobList() {"},{"lineNumber":771,"author":{"gitId":"-"},"content":"        return ignoreGlobList;"},{"lineNumber":772,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":773,"author":{"gitId":"-"},"content":""},{"lineNumber":774,"author":{"gitId":"-"},"content":"    public void setIgnoreGlobList(List\u003cString\u003e ignoreGlobList) {"},{"lineNumber":775,"author":{"gitId":"-"},"content":"        this.ignoreGlobList \u003d ignoreGlobList;"},{"lineNumber":776,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":777,"author":{"gitId":"-"},"content":""},{"lineNumber":778,"author":{"gitId":"-"},"content":"    public List\u003cCommitHash\u003e getIgnoreCommitList() {"},{"lineNumber":779,"author":{"gitId":"-"},"content":"        return ignoreCommitList;"},{"lineNumber":780,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":781,"author":{"gitId":"-"},"content":""},{"lineNumber":782,"author":{"gitId":"-"},"content":"    public long getFileSizeLimit() {"},{"lineNumber":783,"author":{"gitId":"-"},"content":"        return fileSizeLimit;"},{"lineNumber":784,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":785,"author":{"gitId":"-"},"content":""},{"lineNumber":786,"author":{"gitId":"-"},"content":"    public void setIgnoreCommitList(List\u003cCommitHash\u003e ignoreCommitList) {"},{"lineNumber":787,"author":{"gitId":"-"},"content":"        this.ignoreCommitList \u003d ignoreCommitList;"},{"lineNumber":788,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":789,"author":{"gitId":"-"},"content":""},{"lineNumber":790,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getIgnoredAuthorsList() {"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        return this.ignoredAuthorsList;"},{"lineNumber":792,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":793,"author":{"gitId":"-"},"content":""},{"lineNumber":794,"author":{"gitId":"-"},"content":"    public void setIgnoredAuthorsList(List\u003cString\u003e ignoredAuthorsList) {"},{"lineNumber":795,"author":{"gitId":"-"},"content":"        this.ignoredAuthorsList \u003d ignoredAuthorsList;"},{"lineNumber":796,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":797,"author":{"gitId":"-"},"content":""},{"lineNumber":798,"author":{"gitId":"-"},"content":"    public boolean isIgnoredAuthorsListOverriding() {"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        return this.isIgnoredAuthorsListOverriding;"},{"lineNumber":800,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":801,"author":{"gitId":"-"},"content":""},{"lineNumber":802,"author":{"gitId":"-"},"content":"    public void setIsLastModifiedDateIncluded(boolean lastModifiedDateIncluded) {"},{"lineNumber":803,"author":{"gitId":"-"},"content":"        this.isLastModifiedDateIncluded \u003d lastModifiedDateIncluded;"},{"lineNumber":804,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":805,"author":{"gitId":"-"},"content":""},{"lineNumber":806,"author":{"gitId":"-"},"content":"    public void setIsShallowCloningPerformed(boolean isShallowCloningPerformed) {"},{"lineNumber":807,"author":{"gitId":"-"},"content":"        this.isShallowCloningPerformed \u003d isShallowCloningPerformed;"},{"lineNumber":808,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":809,"author":{"gitId":"-"},"content":""},{"lineNumber":810,"author":{"gitId":"-"},"content":"    public void setIsFindingPreviousAuthorsPerformed(boolean isFindingPreviousAuthorsPerformed) {"},{"lineNumber":811,"author":{"gitId":"-"},"content":"        this.isFindingPreviousAuthorsPerformed \u003d isFindingPreviousAuthorsPerformed;"},{"lineNumber":812,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":813,"author":{"gitId":"-"},"content":""},{"lineNumber":814,"author":{"gitId":"-"},"content":"    public boolean isLastModifiedDateIncluded() {"},{"lineNumber":815,"author":{"gitId":"-"},"content":"        return this.isLastModifiedDateIncluded;"},{"lineNumber":816,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":817,"author":{"gitId":"-"},"content":""},{"lineNumber":818,"author":{"gitId":"-"},"content":"    public boolean isShallowCloningPerformed() {"},{"lineNumber":819,"author":{"gitId":"-"},"content":"        return this.isShallowCloningPerformed;"},{"lineNumber":820,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":821,"author":{"gitId":"-"},"content":""},{"lineNumber":822,"author":{"gitId":"-"},"content":"    public void setIsIgnoredAuthorsListOverriding(boolean isIgnoredAuthorsListOverriding) {"},{"lineNumber":823,"author":{"gitId":"-"},"content":"        this.isIgnoredAuthorsListOverriding \u003d isIgnoredAuthorsListOverriding;"},{"lineNumber":824,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":825,"author":{"gitId":"-"},"content":""},{"lineNumber":826,"author":{"gitId":"-"},"content":"    public void removeIgnoredAuthors() {"},{"lineNumber":827,"author":{"gitId":"-"},"content":"        authorConfig.removeIgnoredAuthors(ignoredAuthorsList);"},{"lineNumber":828,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":829,"author":{"gitId":"-"},"content":""},{"lineNumber":830,"author":{"gitId":"-"},"content":"    public List\u003cAuthor\u003e getAuthorList() {"},{"lineNumber":831,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorList();"},{"lineNumber":832,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":833,"author":{"gitId":"-"},"content":""},{"lineNumber":834,"author":{"gitId":"-"},"content":"    public void addAuthor(Author author) {"},{"lineNumber":835,"author":{"gitId":"-"},"content":"        authorConfig.addAuthor(author, this.getIgnoreGlobList());"},{"lineNumber":836,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":837,"author":{"gitId":"-"},"content":""},{"lineNumber":838,"author":{"gitId":"-"},"content":"    public void addAuthors(List\u003cAuthor\u003e authorList) {"},{"lineNumber":839,"author":{"gitId":"-"},"content":"        authorConfig.addAuthors(authorList, this.getIgnoreGlobList());"},{"lineNumber":840,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":841,"author":{"gitId":"-"},"content":""},{"lineNumber":842,"author":{"gitId":"-"},"content":"    public void setAuthorConfiguration(AuthorConfiguration authorConfig) {"},{"lineNumber":843,"author":{"gitId":"-"},"content":"        this.authorConfig \u003d authorConfig;"},{"lineNumber":844,"author":{"gitId":"-"},"content":"        for (Author author : authorConfig.getAuthorList()) {"},{"lineNumber":845,"author":{"gitId":"-"},"content":"            AuthorConfiguration.propagateIgnoreGlobList(author, ignoreGlobList);"},{"lineNumber":846,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":847,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":848,"author":{"gitId":"-"},"content":""},{"lineNumber":849,"author":{"gitId":"-"},"content":"    public boolean containsAuthor(Author author) {"},{"lineNumber":850,"author":{"gitId":"-"},"content":"        return authorConfig.containsAuthor(author);"},{"lineNumber":851,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":852,"author":{"gitId":"-"},"content":""},{"lineNumber":853,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":854,"author":{"gitId":"-"},"content":"     * Clears authors information and sets the {@code authorList} to {@link RepoConfiguration}."},{"lineNumber":855,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":856,"author":{"gitId":"-"},"content":"    public void setAuthorList(List\u003cAuthor\u003e authorList) {"},{"lineNumber":857,"author":{"gitId":"-"},"content":"        authorConfig.clear();"},{"lineNumber":858,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorList(authorList);"},{"lineNumber":859,"author":{"gitId":"-"},"content":"        authorConfig.buildFromAuthorList();"},{"lineNumber":860,"author":{"gitId":"-"},"content":"        authorList.forEach(author -\u003e AuthorConfiguration.propagateIgnoreGlobList(author, this.getIgnoreGlobList()));"},{"lineNumber":861,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":862,"author":{"gitId":"-"},"content":""},{"lineNumber":863,"author":{"gitId":"sikai00"},"content":"    public void setHasAuthorConfigFile(boolean hasAuthorConfigFile) {"},{"lineNumber":864,"author":{"gitId":"sikai00"},"content":"        authorConfig.setHasAuthorConfigFile(hasAuthorConfigFile);"},{"lineNumber":865,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":866,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":867,"author":{"gitId":"-"},"content":"    public Map\u003cString, Author\u003e getAuthorNamesToAuthorMap() {"},{"lineNumber":868,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorNamesToAuthorMap();"},{"lineNumber":869,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":870,"author":{"gitId":"-"},"content":""},{"lineNumber":871,"author":{"gitId":"-"},"content":"    public void setAuthorNamesToAuthorMap(Map\u003cString, Author\u003e authorNamesToAuthorMap) {"},{"lineNumber":872,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorNamesToAuthorMap(authorNamesToAuthorMap);"},{"lineNumber":873,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":874,"author":{"gitId":"-"},"content":""},{"lineNumber":875,"author":{"gitId":"-"},"content":"    public Map\u003cString, Author\u003e getAuthorEmailsToAuthorMap() {"},{"lineNumber":876,"author":{"gitId":"-"},"content":"        return authorConfig.getAuthorEmailsToAuthorMap();"},{"lineNumber":877,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":878,"author":{"gitId":"-"},"content":""},{"lineNumber":879,"author":{"gitId":"-"},"content":"    public void setAuthorEmailsToAuthorMap(Map\u003cString, Author\u003e authorEmailsToAuthorMap) {"},{"lineNumber":880,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorEmailsToAuthorMap(authorEmailsToAuthorMap);"},{"lineNumber":881,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":882,"author":{"gitId":"-"},"content":""},{"lineNumber":883,"author":{"gitId":"-"},"content":"    public void clearAuthorDetailsToAuthorMap() {"},{"lineNumber":884,"author":{"gitId":"-"},"content":"        authorConfig.clearAuthorDetailsToAuthorMap();"},{"lineNumber":885,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":886,"author":{"gitId":"-"},"content":""},{"lineNumber":887,"author":{"gitId":"-"},"content":"    public void setFormats(List\u003cFileType\u003e formats) {"},{"lineNumber":888,"author":{"gitId":"-"},"content":"        fileTypeManager.setFormats(formats);"},{"lineNumber":889,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":890,"author":{"gitId":"-"},"content":""},{"lineNumber":891,"author":{"gitId":"-"},"content":"    private void setGroups(List\u003cFileType\u003e groups) {"},{"lineNumber":892,"author":{"gitId":"-"},"content":"        fileTypeManager.setGroups(groups);"},{"lineNumber":893,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":894,"author":{"gitId":"-"},"content":""},{"lineNumber":895,"author":{"gitId":"-"},"content":"    public void addGroups(List\u003cFileType\u003e groups) {"},{"lineNumber":896,"author":{"gitId":"-"},"content":"        fileTypeManager.addGroups(groups);"},{"lineNumber":897,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":898,"author":{"gitId":"-"},"content":""},{"lineNumber":899,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":900,"author":{"gitId":"-"},"content":"     * Returns all format or group types (depending on whether the user has specified a custom grouping)."},{"lineNumber":901,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":902,"author":{"gitId":"-"},"content":"    public List\u003cFileType\u003e getAllFileTypes() {"},{"lineNumber":903,"author":{"gitId":"-"},"content":"        return fileTypeManager.getAllFileTypes();"},{"lineNumber":904,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":905,"author":{"gitId":"-"},"content":""},{"lineNumber":906,"author":{"gitId":"-"},"content":"    public FileType getFileType(String fileName) {"},{"lineNumber":907,"author":{"gitId":"-"},"content":"        return fileTypeManager.getFileType(fileName);"},{"lineNumber":908,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":909,"author":{"gitId":"-"},"content":""},{"lineNumber":910,"author":{"gitId":"-"},"content":"    public FileTypeManager getFileTypeManager() {"},{"lineNumber":911,"author":{"gitId":"-"},"content":"        return fileTypeManager;"},{"lineNumber":912,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":913,"author":{"gitId":"-"},"content":""},{"lineNumber":914,"author":{"gitId":"-"},"content":"    public LocalDateTime getSinceDate() {"},{"lineNumber":915,"author":{"gitId":"-"},"content":"        return sinceDate;"},{"lineNumber":916,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":917,"author":{"gitId":"-"},"content":""},{"lineNumber":918,"author":{"gitId":"-"},"content":"    public void setSinceDate(LocalDateTime sinceDate) {"},{"lineNumber":919,"author":{"gitId":"-"},"content":"        this.sinceDate \u003d sinceDate;"},{"lineNumber":920,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":921,"author":{"gitId":"-"},"content":""},{"lineNumber":922,"author":{"gitId":"-"},"content":"    public LocalDateTime getUntilDate() {"},{"lineNumber":923,"author":{"gitId":"-"},"content":"        return untilDate;"},{"lineNumber":924,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":925,"author":{"gitId":"-"},"content":""},{"lineNumber":926,"author":{"gitId":"-"},"content":"    public void setUntilDate(LocalDateTime untilDate) {"},{"lineNumber":927,"author":{"gitId":"-"},"content":"        this.untilDate \u003d untilDate;"},{"lineNumber":928,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":929,"author":{"gitId":"-"},"content":""},{"lineNumber":930,"author":{"gitId":"-"},"content":"    public ZoneId getZoneId() {"},{"lineNumber":931,"author":{"gitId":"-"},"content":"        return zoneId;"},{"lineNumber":932,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":933,"author":{"gitId":"-"},"content":""},{"lineNumber":934,"author":{"gitId":"-"},"content":"    public void setZoneId(ZoneId zoneId) {"},{"lineNumber":935,"author":{"gitId":"-"},"content":"        this.zoneId \u003d zoneId;"},{"lineNumber":936,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":937,"author":{"gitId":"-"},"content":""},{"lineNumber":938,"author":{"gitId":"-"},"content":"    public void setAuthorDisplayName(Author author, String displayName) {"},{"lineNumber":939,"author":{"gitId":"-"},"content":"        authorConfig.setAuthorDisplayName(author, displayName);"},{"lineNumber":940,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":941,"author":{"gitId":"-"},"content":""},{"lineNumber":942,"author":{"gitId":"-"},"content":"    public void addAuthorNamesToAuthorMapEntry(Author author, String name) {"},{"lineNumber":943,"author":{"gitId":"-"},"content":"        authorConfig.addAuthorNamesToAuthorMapEntry(author, name);"},{"lineNumber":944,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":945,"author":{"gitId":"-"},"content":""},{"lineNumber":946,"author":{"gitId":"-"},"content":"    public void addAuthorNamesToAuthorMapEntry(Author author, List\u003cString\u003e names) {"},{"lineNumber":947,"author":{"gitId":"-"},"content":"        authorConfig.addAuthorNamesToAuthorMapEntry(author, names);"},{"lineNumber":948,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":949,"author":{"gitId":"-"},"content":""},{"lineNumber":950,"author":{"gitId":"-"},"content":"    public void addAuthorEmailsToAuthorMapEntry(Author author, List\u003cString\u003e emails) {"},{"lineNumber":951,"author":{"gitId":"-"},"content":"        authorConfig.addAuthorEmailsToAuthorMapEntry(author, emails);"},{"lineNumber":952,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":953,"author":{"gitId":"-"},"content":""},{"lineNumber":954,"author":{"gitId":"-"},"content":"    public String getDisplayName() {"},{"lineNumber":955,"author":{"gitId":"-"},"content":"        return displayName;"},{"lineNumber":956,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":957,"author":{"gitId":"-"},"content":""},{"lineNumber":958,"author":{"gitId":"-"},"content":"    public String getRepoName() {"},{"lineNumber":959,"author":{"gitId":"-"},"content":"        return location.getRepoName();"},{"lineNumber":960,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":961,"author":{"gitId":"-"},"content":""},{"lineNumber":962,"author":{"gitId":"-"},"content":"    public String getOutputFolderName() {"},{"lineNumber":963,"author":{"gitId":"-"},"content":"        return outputFolderName;"},{"lineNumber":964,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":965,"author":{"gitId":"-"},"content":""},{"lineNumber":966,"author":{"gitId":"-"},"content":"    public void setStandaloneConfigIgnored(boolean isStandaloneConfigIgnored) {"},{"lineNumber":967,"author":{"gitId":"-"},"content":"        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;"},{"lineNumber":968,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":969,"author":{"gitId":"-"},"content":""},{"lineNumber":970,"author":{"gitId":"-"},"content":"    public void setFileSizeLimitIgnored(boolean isFileSizeLimitIgnored) {"},{"lineNumber":971,"author":{"gitId":"-"},"content":"        this.isFileSizeLimitIgnored \u003d isFileSizeLimitIgnored;"},{"lineNumber":972,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":973,"author":{"gitId":"-"},"content":""},{"lineNumber":974,"author":{"gitId":"-"},"content":"    public RepoLocation getLocation() {"},{"lineNumber":975,"author":{"gitId":"-"},"content":"        return location;"},{"lineNumber":976,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":977,"author":{"gitId":"-"},"content":""},{"lineNumber":978,"author":{"gitId":"-"},"content":"    public String getOrganization() {"},{"lineNumber":979,"author":{"gitId":"-"},"content":"        return location.getOrganization();"},{"lineNumber":980,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":981,"author":{"gitId":"-"},"content":""},{"lineNumber":982,"author":{"gitId":"-"},"content":"    public boolean isStandaloneConfigIgnored() {"},{"lineNumber":983,"author":{"gitId":"-"},"content":"        return isStandaloneConfigIgnored;"},{"lineNumber":984,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":985,"author":{"gitId":"-"},"content":""},{"lineNumber":986,"author":{"gitId":"-"},"content":"    public boolean isFileSizeLimitIgnored() {"},{"lineNumber":987,"author":{"gitId":"-"},"content":"        return isFileSizeLimitIgnored;"},{"lineNumber":988,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":989,"author":{"gitId":"-"},"content":""},{"lineNumber":990,"author":{"gitId":"-"},"content":"    public boolean isIgnoredFileAnalysisSkipped() {"},{"lineNumber":991,"author":{"gitId":"-"},"content":"        return isIgnoredFileAnalysisSkipped;"},{"lineNumber":992,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":993,"author":{"gitId":"-"},"content":""},{"lineNumber":994,"author":{"gitId":"-"},"content":"    public boolean isFormatsOverriding() {"},{"lineNumber":995,"author":{"gitId":"-"},"content":"        return isFormatsOverriding;"},{"lineNumber":996,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":997,"author":{"gitId":"-"},"content":""},{"lineNumber":998,"author":{"gitId":"-"},"content":"    public boolean isIgnoreGlobListOverriding() {"},{"lineNumber":999,"author":{"gitId":"-"},"content":"        return isIgnoreGlobListOverriding;"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1001,"author":{"gitId":"-"},"content":""},{"lineNumber":1002,"author":{"gitId":"-"},"content":"    public boolean isIgnoreCommitListOverriding() {"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"        return isIgnoreCommitListOverriding;"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1005,"author":{"gitId":"-"},"content":""},{"lineNumber":1006,"author":{"gitId":"-"},"content":"    public boolean isFileSizeLimitOverriding() {"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"        return isFileSizeLimitOverriding;"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1009,"author":{"gitId":"-"},"content":""},{"lineNumber":1010,"author":{"gitId":"-"},"content":"    public boolean isFindingPreviousAuthorsPerformed() {"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"        return isFindingPreviousAuthorsPerformed;"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1013,"author":{"gitId":"-"},"content":""},{"lineNumber":1014,"author":{"gitId":"-"},"content":"    public AuthorConfiguration getAuthorConfig() {"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"        return authorConfig;"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":7,"-":1010}},{"path":"src/main/java/reposense/model/RunConfiguration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidCsvException;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidHeaderException;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.ParseException;"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":" * Interface to get configurations for current RepoSense run."},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":" */"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"public interface RunConfiguration {"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    List\u003cRepoConfiguration\u003e getRepoConfigurations()"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"            throws ParseException, IOException, InvalidCsvException, InvalidHeaderException;"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"}"}],"authorContributionMap":{"MarcusTXK":15,"-":3}},{"path":"src/main/java/reposense/model/RunConfigurationDecider.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":" * Decides which RepoSense run configuration to utilize."},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":" */"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"public class RunConfigurationDecider {"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"    public static RunConfiguration getRunConfiguration(CliArguments cliArguments) {"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"        if (cliArguments.getLocations() !\u003d null) {"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"            return new CliRunConfiguration(cliArguments);"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"        return new ConfigRunConfiguration(cliArguments);"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"}"}],"authorContributionMap":{"MarcusTXK":13}},{"path":"src/main/java/reposense/parser/ArgsParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSyntaxException;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.ArgumentParsers;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.helper.HelpScreenException;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.impl.Arguments;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.impl.action.HelpArgumentAction;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.impl.action.VersionArgumentAction;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.ArgumentGroup;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParser;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.ArgumentParserException;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.FeatureControl;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.MutuallyExclusiveGroup;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.inf.Namespace;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.RepoSense;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.ParseException;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.parser.types.AlphanumericArgumentType;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.parser.types.AnalysisThreadsArgumentType;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import reposense.parser.types.AssetsFolderArgumentType;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import reposense.parser.types.CloningThreadsArgumentType;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import reposense.parser.types.ConfigFolderArgumentType;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import reposense.parser.types.OutputFolderArgumentType;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import reposense.parser.types.PeriodArgumentType;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import reposense.parser.types.ReportFolderArgumentType;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import reposense.parser.types.SinceDateArgumentType;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import reposense.parser.types.UntilDateArgumentType;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import reposense.parser.types.ZoneIdArgumentType;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":47,"author":{"gitId":"-"},"content":" * Verifies and parses a string-formatted date to a {@link CliArguments} object."},{"lineNumber":48,"author":{"gitId":"-"},"content":" */"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class ArgsParser {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_REPORT_NAME \u003d \"reposense-report\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final int DEFAULT_NUM_CLONING_THREADS \u003d 4;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final int DEFAULT_NUM_ANALYSIS_THREADS \u003d Runtime.getRuntime().availableProcessors();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final boolean DEFAULT_IS_TEST_MODE \u003d false;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final boolean DEFAULT_SHOULD_FRESH_CLONE \u003d false;"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String[] HELP_FLAGS \u003d new String[] {\"--help\", \"-h\"};"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String[] CONFIG_FLAGS \u003d new String[] {\"--config\", \"-c\"};"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String[] REPO_FLAGS \u003d new String[] {\"--repo\", \"--repos\", \"-r\"};"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String[] VIEW_FLAGS \u003d new String[] {\"--view\", \"-v\"};"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String[] OUTPUT_FLAGS \u003d new String[] {\"--output\", \"-o\"};"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String[] ASSETS_FLAGS \u003d new String[] {\"--assets\", \"-a\"};"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String[] SINCE_FLAGS \u003d new String[] {\"--since\", \"-s\"};"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String[] UNTIL_FLAGS \u003d new String[] {\"--until\", \"-u\"};"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String[] PERIOD_FLAGS \u003d new String[] {\"--period\", \"-p\"};"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String[] SHALLOW_CLONING_FLAGS \u003d new String[] {\"--shallow-cloning\", \"-S\"};"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String[] FORMAT_FLAGS \u003d new String[] {\"--formats\", \"-f\"};"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String[] IGNORE_CONFIG_FLAGS \u003d new String[] {\"--ignore-standalone-config\", \"-i\"};"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String[] IGNORE_SIZELIMIT_FLAGS \u003d new String[] {\"--ignore-filesize-limit\", \"-I\"};"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String[] TIMEZONE_FLAGS \u003d new String[] {\"--timezone\", \"-t\"};"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String[] VERSION_FLAGS \u003d new String[] {\"--version\", \"-V\"};"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String[] LAST_MODIFIED_DATE_FLAGS \u003d new String[] {\"--last-modified-date\", \"-l\"};"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String[] FIND_PREVIOUS_AUTHORS_FLAGS \u003d new String[] {\"--find-previous-authors\", \"-F\"};"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String[] CLONING_THREADS_FLAG \u003d new String[] {\"--cloning-threads\"};"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String[] ANALYSIS_THREADS_FLAG \u003d new String[] {\"--analysis-threads\"};"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String[] TEST_MODE_FLAG \u003d new String[] {\"--test-mode\"};"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String[] FRESH_CLONING_FLAG \u003d new String[] {\"--fresh-cloning\"};"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(ArgsParser.class);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static final String PROGRAM_USAGE \u003d \"java -jar RepoSense.jar\";"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static final String PROGRAM_DESCRIPTION \u003d"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            \"RepoSense is a contribution analysis tool for Git repositories.\";"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_HEADER_MUTEX \u003d \"mutual exclusive arguments\";"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_HEADER_TESTING \u003d \"test mode arguments\";"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_HAVE_SINCE_DATE_UNTIL_DATE_AND_PERIOD \u003d"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \"\\\"Since Date\\\", \\\"Until Date\\\", and \\\"Period\\\" cannot be applied together.\";"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_USING_DEFAULT_CONFIG_PATH \u003d"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            \"Config path not provided, using the config folder as default.\";"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_CONFIG_PATH \u003d \"%s is malformed.\";"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_CONFIG_JSON \u003d \"%s Ignoring the report config provided.\";"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_D1_WITH_PERIOD \u003d \"You may be using --since d1 with the --period flag. \""},{"lineNumber":94,"author":{"gitId":"-"},"content":"            + \"This may result in an incorrect date range being analysed.\";"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_DATE_LATER_THAN_UNTIL_DATE \u003d"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \"\\\"Since Date\\\" cannot be later than \\\"Until Date\\\".\";"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_SINCE_DATE_LATER_THAN_TODAY_DATE \u003d"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            \"\\\"Since Date\\\" must not be later than today\u0027s date.\";"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private static final Path EMPTY_PATH \u003d Paths.get(\"\");"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static final Path DEFAULT_CONFIG_PATH \u003d Paths.get(System.getProperty(\"user.dir\")"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            + File.separator + \"config\" + File.separator);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static final Path DEFAULT_ASSETS_PATH \u003d Paths.get(System.getProperty(\"user.dir\")"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            + File.separator + \"assets\" + File.separator);"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static ArgumentParser getArgumentParser() {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ArgumentParser parser \u003d ArgumentParsers"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .newFor(PROGRAM_USAGE)"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .addHelp(false)"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .build()"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .description(PROGRAM_DESCRIPTION);"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        MutuallyExclusiveGroup mutexParser \u003d parser"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .addMutuallyExclusiveGroup(MESSAGE_HEADER_MUTEX)"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .required(false);"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        MutuallyExclusiveGroup mutexParser2 \u003d parser"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .addMutuallyExclusiveGroup(MESSAGE_HEADER_MUTEX)"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .required(false);"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        ArgumentGroup argumentGroup \u003d parser"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .addArgumentGroup(MESSAGE_HEADER_TESTING);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Boolean flags"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        parser.addArgument(HELP_FLAGS)"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .help(\"Show help message.\")"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .action(new HelpArgumentAction());"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        parser.version(\"RepoSense \" + RepoSense.getVersion());"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        parser.addArgument(VERSION_FLAGS)"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .help(\"Show the version of RepoSense.\")"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .action(new VersionArgumentAction());"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        parser.addArgument(IGNORE_CONFIG_FLAGS)"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .dest(IGNORE_CONFIG_FLAGS[0])"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .help(\"A flag to ignore the standalone config file in the repo.\");"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        parser.addArgument(IGNORE_SIZELIMIT_FLAGS)"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .dest(IGNORE_SIZELIMIT_FLAGS[0])"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .help(\"A flag to ignore the filesize limit for analyzed files.\");"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        parser.addArgument(VIEW_FLAGS)"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .dest(VIEW_FLAGS[0])"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .nargs(\"?\")"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .metavar(\"PATH\")"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .type(new ReportFolderArgumentType())"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .setConst(EMPTY_PATH)"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .help(\"Starts a server to display the report in the provided directory. \""},{"lineNumber":150,"author":{"gitId":"-"},"content":"                        + \"If used as a flag (with no argument), \""},{"lineNumber":151,"author":{"gitId":"-"},"content":"                        + \"generates a report and automatically displays the report.\");"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        parser.addArgument(OUTPUT_FLAGS)"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .dest(OUTPUT_FLAGS[0])"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .metavar(\"PATH\")"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .type(new OutputFolderArgumentType())"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .setDefault(Paths.get(ArgsParser.DEFAULT_REPORT_NAME))"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .help(\"The directory to output the report folder, reposense-report. \""},{"lineNumber":159,"author":{"gitId":"-"},"content":"                        + \"If not provided, the report folder will be created in the current working directory.\");"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"        parser.addArgument(ASSETS_FLAGS)"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .dest(ASSETS_FLAGS[0])"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .metavar(\"PATH\")"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .type(new AssetsFolderArgumentType())"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .setDefault(DEFAULT_ASSETS_PATH)"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .help(\"The directory to place assets files to customize report generation. \""},{"lineNumber":167,"author":{"gitId":"-"},"content":"                        + \"If not provided, the assets folder in the current working directory will be used.\");"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        parser.addArgument(SINCE_FLAGS)"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .dest(SINCE_FLAGS[0])"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .metavar(\"dd/MM/yyyy\")"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .type(new SinceDateArgumentType())"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .setDefault(Optional.empty())"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .help(\"The date to start filtering.\");"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        parser.addArgument(UNTIL_FLAGS)"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .dest(UNTIL_FLAGS[0])"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .metavar(\"dd/MM/yyyy\")"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .type(new UntilDateArgumentType())"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .setDefault(Optional.empty())"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .help(\"The date to stop filtering.\");"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        parser.addArgument(PERIOD_FLAGS)"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .dest(PERIOD_FLAGS[0])"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .metavar(\"PERIOD\")"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .type(new PeriodArgumentType())"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .setDefault(Optional.empty())"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .help(\"The number of days of the filtering window.\");"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        parser.addArgument(FORMAT_FLAGS)"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .dest(FORMAT_FLAGS[0])"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .nargs(\"*\")"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .metavar(\"FORMAT\")"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .type(new AlphanumericArgumentType())"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .setDefault(Collections.emptyList())"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .help(\"The alphanumeric file formats to process.\\n\""},{"lineNumber":197,"author":{"gitId":"-"},"content":"                        + \"If not provided, default file formats will be used.\\n\""},{"lineNumber":198,"author":{"gitId":"-"},"content":"                        + \"Please refer to userguide for more information.\");"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        parser.addArgument(TIMEZONE_FLAGS)"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .dest(TIMEZONE_FLAGS[0])"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .metavar(\"ZONE_ID[±hh[mm]]\")"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .type(new ZoneIdArgumentType())"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                .setDefault(ZoneId.systemDefault())"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                .help(\"The timezone to use for the generated report. \""},{"lineNumber":206,"author":{"gitId":"-"},"content":"                        + \"One kind of valid timezones is relative to UTC. E.g. UTC, UTC+08, UTC-1030. \\n\""},{"lineNumber":207,"author":{"gitId":"-"},"content":"                        + \"If not provided, system default timezone will be used.\");"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        parser.addArgument(FIND_PREVIOUS_AUTHORS_FLAGS)"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                .dest(FIND_PREVIOUS_AUTHORS_FLAGS[0])"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                .help(\"A flag to make RepoSense utilize Git blame\u0027s ignore revisions functionality, RepoSense \""},{"lineNumber":213,"author":{"gitId":"-"},"content":"                        + \"will attempt to blame the line changes caused by commits in the ignore commit list to the \""},{"lineNumber":214,"author":{"gitId":"-"},"content":"                        + \"previous authors who altered those lines (if available)\");"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // Mutex flags - these will always be the last parameters in help message."},{"lineNumber":217,"author":{"gitId":"-"},"content":"        mutexParser.addArgument(CONFIG_FLAGS)"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                .dest(CONFIG_FLAGS[0])"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                .type(new ConfigFolderArgumentType())"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                .metavar(\"PATH\")"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                .setDefault(DEFAULT_CONFIG_PATH)"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .help(\"The directory containing the config files.\""},{"lineNumber":223,"author":{"gitId":"-"},"content":"                        + \"If not provided, the config files will be obtained from the config folder.\");"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        mutexParser.addArgument(REPO_FLAGS)"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                .nargs(\"+\")"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .dest(REPO_FLAGS[0])"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .metavar(\"LOCATION\")"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                .help(\"The remote Git host URLs or local directories to clone the repositories from.\");"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"        mutexParser2.addArgument(LAST_MODIFIED_DATE_FLAGS)"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                .dest(LAST_MODIFIED_DATE_FLAGS[0])"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                .help(\"A flag to keep track of the last modified date of each line of code.\");"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"        mutexParser2.addArgument(SHALLOW_CLONING_FLAGS)"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                .dest(SHALLOW_CLONING_FLAGS[0])"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                .help(\"A flag to make RepoSense employ Git\u0027s shallow cloning functionality, which can significantly \""},{"lineNumber":240,"author":{"gitId":"-"},"content":"                        + \"reduce the time taken to clone large repositories. This flag should not be used for \""},{"lineNumber":241,"author":{"gitId":"-"},"content":"                        + \"smaller repositories, where the .git file is smaller than 500 MB.\");"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"        parser.addArgument(CLONING_THREADS_FLAG)"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                .dest(CLONING_THREADS_FLAG[0])"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                .type(new CloningThreadsArgumentType())"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                .setDefault(DEFAULT_NUM_CLONING_THREADS)"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                .help(FeatureControl.SUPPRESS);"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"        parser.addArgument(ANALYSIS_THREADS_FLAG)"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                .dest(ANALYSIS_THREADS_FLAG[0])"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                .type(new AnalysisThreadsArgumentType())"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                .setDefault(DEFAULT_NUM_ANALYSIS_THREADS)"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                .help(FeatureControl.SUPPRESS);"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // Testing flags"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        argumentGroup.addArgument(TEST_MODE_FLAG)"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                .dest(TEST_MODE_FLAG[0])"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                .help(\"Enables testing mode.\");"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"        argumentGroup.addArgument(FRESH_CLONING_FLAG)"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                .dest(FRESH_CLONING_FLAG[0])"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                .action(Arguments.storeTrue())"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                .help(\"Enables fresh cloning. Requires testing mode to be enabled.\");"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"        return parser;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * Parses the given string {@code args} to a {@link CliArguments} object."},{"lineNumber":271,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * @throws HelpScreenException if given args contain the --help flag. Help message will be printed out"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * by the {@link ArgumentParser} hence this is to signal to the caller that the program is safe to exit."},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given string arguments fails to parse to a {@link CliArguments} object."},{"lineNumber":275,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public static CliArguments parse(String[] args) throws HelpScreenException, ParseException {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        ArgumentParser parser \u003d getArgumentParser();"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        Namespace results;"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            results \u003d parser.parseArgs(args);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        } catch (HelpScreenException hse) {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            throw hse;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        } catch (ArgumentParserException ape) {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            throw new ParseException(getArgumentParser().formatUsage() + ape.getMessage() + \"\\n\");"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"        Path configFolderPath \u003d results.get(CONFIG_FLAGS[0]);"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        Path reportFolderPath \u003d results.get(VIEW_FLAGS[0]);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        Path outputFolderPath \u003d results.get(OUTPUT_FLAGS[0]);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        ZoneId zoneId \u003d results.get(TIMEZONE_FLAGS[0]);"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        Path assetsFolderPath \u003d results.get(ASSETS_FLAGS[0]);"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        List\u003cString\u003e locations \u003d results.get(REPO_FLAGS[0]);"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e formats \u003d FileType.convertFormatStringsToFileTypes(results.get(FORMAT_FLAGS[0]));"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        boolean isStandaloneConfigIgnored \u003d results.get(IGNORE_CONFIG_FLAGS[0]);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        boolean isFileSizeLimitIgnored \u003d results.get(IGNORE_SIZELIMIT_FLAGS[0]);"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        boolean shouldIncludeLastModifiedDate \u003d results.get(LAST_MODIFIED_DATE_FLAGS[0]);"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        boolean shouldPerformShallowCloning \u003d results.get(SHALLOW_CLONING_FLAGS[0]);"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        boolean shouldFindPreviousAuthors \u003d results.get(FIND_PREVIOUS_AUTHORS_FLAGS[0]);"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        boolean isTestMode \u003d results.get(TEST_MODE_FLAG[0]);"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        int numCloningThreads \u003d results.get(CLONING_THREADS_FLAG[0]);"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        int numAnalysisThreads \u003d results.get(ANALYSIS_THREADS_FLAG[0]);"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"MarcusTXK"},"content":"        CliArguments.Builder cliArgumentsBuilder \u003d new CliArguments.Builder()"},{"lineNumber":305,"author":{"gitId":"MarcusTXK"},"content":"                .configFolderPath(configFolderPath)"},{"lineNumber":306,"author":{"gitId":"MarcusTXK"},"content":"                .reportDirectoryPath(reportFolderPath)"},{"lineNumber":307,"author":{"gitId":"MarcusTXK"},"content":"                .outputFilePath(outputFolderPath)"},{"lineNumber":308,"author":{"gitId":"MarcusTXK"},"content":"                .zoneId(zoneId)"},{"lineNumber":309,"author":{"gitId":"MarcusTXK"},"content":"                .assetsFilePath(assetsFolderPath)"},{"lineNumber":310,"author":{"gitId":"MarcusTXK"},"content":"                .locations(locations)"},{"lineNumber":311,"author":{"gitId":"MarcusTXK"},"content":"                .formats(formats)"},{"lineNumber":312,"author":{"gitId":"MarcusTXK"},"content":"                .isStandaloneConfigIgnored(isStandaloneConfigIgnored)"},{"lineNumber":313,"author":{"gitId":"MarcusTXK"},"content":"                .isFileSizeLimitIgnored(isFileSizeLimitIgnored)"},{"lineNumber":314,"author":{"gitId":"MarcusTXK"},"content":"                .isLastModifiedDateIncluded(shouldIncludeLastModifiedDate)"},{"lineNumber":315,"author":{"gitId":"MarcusTXK"},"content":"                .isShallowCloningPerformed(shouldPerformShallowCloning)"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                .isFindingPreviousAuthorsPerformed(shouldFindPreviousAuthors)"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                .numCloningThreads(numCloningThreads)"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                .numAnalysisThreads(numAnalysisThreads)"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                .isTestMode(isTestMode);"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"        LogsManager.setLogFolderLocation(outputFolderPath);"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"        if (locations \u003d\u003d null \u0026\u0026 configFolderPath.equals(DEFAULT_CONFIG_PATH)) {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"            logger.info(MESSAGE_USING_DEFAULT_CONFIG_PATH);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"        addReportConfigToBuilder(cliArgumentsBuilder, results);"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        addAnalysisDatesToBuilder(cliArgumentsBuilder, results);"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"        boolean isViewModeOnly \u003d reportFolderPath !\u003d null"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                \u0026\u0026 !reportFolderPath.equals(EMPTY_PATH)"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                \u0026\u0026 configFolderPath.equals(DEFAULT_CONFIG_PATH)"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                \u0026\u0026 locations \u003d\u003d null;"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        cliArgumentsBuilder.isViewModeOnly(isViewModeOnly);"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"        boolean isAutomaticallyLaunching \u003d reportFolderPath !\u003d null;"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        if (isAutomaticallyLaunching \u0026\u0026 !reportFolderPath.equals(EMPTY_PATH) \u0026\u0026 !isViewModeOnly) {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            logger.info(String.format(\"Ignoring argument \u0027%s\u0027 for --view.\", reportFolderPath.toString()));"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        cliArgumentsBuilder.isAutomaticallyLaunching(isAutomaticallyLaunching);"},{"lineNumber":341,"author":{"gitId":"-"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"        boolean shouldPerformFreshCloning \u003d isTestMode"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                ? results.get(FRESH_CLONING_FLAG[0])"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                : DEFAULT_SHOULD_FRESH_CLONE;"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        cliArgumentsBuilder.isFreshClonePerformed(shouldPerformFreshCloning);"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"        return cliArgumentsBuilder.build();"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":352,"author":{"gitId":"-"},"content":"     * Adds the reportConfig field to the given {@code builder}."},{"lineNumber":353,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * @param builder Builder to be supplied with the reportConfig field."},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * @param results Parsed results of the user-supplied CLI arguments."},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private static void addReportConfigToBuilder(CliArguments.Builder builder, Namespace results) {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        ReportConfiguration reportConfig \u003d new ReportConfiguration();"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        List\u003cString\u003e locations \u003d results.get(REPO_FLAGS[0]);"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        Path configFolderPath \u003d results.get(CONFIG_FLAGS[0]);"},{"lineNumber":361,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"        // Report config is ignored if --repos is provided"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        if (locations \u003d\u003d null) {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            Path reportConfigFilePath \u003d configFolderPath.resolve(ReportConfigJsonParser.REPORT_CONFIG_FILENAME);"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                reportConfig \u003d new ReportConfigJsonParser().parse(reportConfigFilePath);"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            } catch (JsonSyntaxException jse) {"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                logger.warning(String.format(MESSAGE_INVALID_CONFIG_PATH, reportConfigFilePath));"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            } catch (IllegalArgumentException iae) {"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                logger.warning(String.format(MESSAGE_INVALID_CONFIG_JSON, iae.getMessage()));"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            } catch (IOException ioe) {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                // IOException thrown as report-config.json is not found."},{"lineNumber":374,"author":{"gitId":"-"},"content":"                // Ignore exception as the file is optional."},{"lineNumber":375,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        builder.reportConfiguration(reportConfig);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":381,"author":{"gitId":"-"},"content":"     * Adds the sinceDate and untilDate fields for analysis to the given {@code builder}."},{"lineNumber":382,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":383,"author":{"gitId":"-"},"content":"     * @param builder Builder to be supplied with the sinceDate and untilDate fields"},{"lineNumber":384,"author":{"gitId":"-"},"content":"     * @param results Parsed results of the user-supplied CLI arguments."},{"lineNumber":385,"author":{"gitId":"-"},"content":"     * @throws ParseException if all of sinceDate, untilDate and (analysis) period is provided"},{"lineNumber":386,"author":{"gitId":"-"},"content":"     * or if the sinceDate is invalid."},{"lineNumber":387,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    private static void addAnalysisDatesToBuilder(CliArguments.Builder builder, Namespace results)"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            throws ParseException {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        ZoneId zoneId \u003d results.get(TIMEZONE_FLAGS[0]);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        Optional\u003cLocalDateTime\u003e cliSinceDate \u003d results.get(SINCE_FLAGS[0]);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        Optional\u003cLocalDateTime\u003e cliUntilDate \u003d results.get(UNTIL_FLAGS[0]);"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        Optional\u003cInteger\u003e cliPeriod \u003d results.get(PERIOD_FLAGS[0]);"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"        boolean isSinceDateProvided \u003d cliSinceDate.isPresent();"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        boolean isUntilDateProvided \u003d cliUntilDate.isPresent();"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        boolean isPeriodProvided \u003d cliPeriod.isPresent();"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        if (isSinceDateProvided \u0026\u0026 isUntilDateProvided \u0026\u0026 isPeriodProvided) {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_HAVE_SINCE_DATE_UNTIL_DATE_AND_PERIOD);"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"        LocalDateTime sinceDate;"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        LocalDateTime untilDate;"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        boolean isUsingArbitraryDate \u003d false;"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"        LocalDateTime currentDate \u003d TimeUtil.getCurrentDate(zoneId);"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"        if (isSinceDateProvided) {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"            sinceDate \u003d TimeUtil.getSinceDate(cliSinceDate.get());"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            // For --since d1, need to adjust the arbitrary date based on timezone"},{"lineNumber":411,"author":{"gitId":"-"},"content":"            if (TimeUtil.isEqualToArbitraryFirstDateUtc(sinceDate)) {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                isUsingArbitraryDate \u003d true;"},{"lineNumber":413,"author":{"gitId":"-"},"content":"                sinceDate \u003d TimeUtil.getArbitraryFirstCommitDateConverted(zoneId);"},{"lineNumber":414,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        } else if (isUntilDateProvided) {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            sinceDate \u003d isPeriodProvided"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                    ? TimeUtil.getDateMinusNDays(cliUntilDate.get(), cliPeriod.get())"},{"lineNumber":418,"author":{"gitId":"-"},"content":"                    : TimeUtil.getDateMinusAMonth(cliUntilDate.get());"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"            sinceDate \u003d isPeriodProvided"},{"lineNumber":421,"author":{"gitId":"-"},"content":"                    ? TimeUtil.getDateMinusNDays(currentDate, cliPeriod.get())"},{"lineNumber":422,"author":{"gitId":"-"},"content":"                    : TimeUtil.getDateMinusAMonth(currentDate);"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"-"},"content":"        if (isPeriodProvided \u0026\u0026 isUsingArbitraryDate) {"},{"lineNumber":426,"author":{"gitId":"-"},"content":"            logger.warning(MESSAGE_SINCE_D1_WITH_PERIOD);"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"        if (isUntilDateProvided) {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            untilDate \u003d TimeUtil.getUntilDate(cliUntilDate.get());"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":432,"author":{"gitId":"-"},"content":"            untilDate \u003d (isSinceDateProvided \u0026\u0026 isPeriodProvided)"},{"lineNumber":433,"author":{"gitId":"-"},"content":"                    ? TimeUtil.getDatePlusNDays(cliSinceDate.get(), cliPeriod.get())"},{"lineNumber":434,"author":{"gitId":"-"},"content":"                    : currentDate;"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"        untilDate \u003d untilDate.compareTo(currentDate) \u003c 0"},{"lineNumber":438,"author":{"gitId":"-"},"content":"                ? untilDate"},{"lineNumber":439,"author":{"gitId":"-"},"content":"                : currentDate;"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"        if (sinceDate.compareTo(currentDate) \u003e 0) {"},{"lineNumber":442,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_SINCE_DATE_LATER_THAN_TODAY_DATE);"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"-"},"content":"        if (sinceDate.compareTo(untilDate) \u003e 0) {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_SINCE_DATE_LATER_THAN_UNTIL_DATE);"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"        builder.sinceDate(sinceDate)"},{"lineNumber":450,"author":{"gitId":"MarcusTXK"},"content":"                .isSinceDateProvided(isSinceDateProvided)"},{"lineNumber":451,"author":{"gitId":"MarcusTXK"},"content":"                .untilDate(untilDate)"},{"lineNumber":452,"author":{"gitId":"-"},"content":"                .isUntilDateProvided(isUntilDateProvided);"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":454,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MarcusTXK":15,"-":439}},{"path":"src/main/java/reposense/parser/AuthorConfigCsvParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVRecord;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidLocationException;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.ParseException;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Container for the values parsed from {@code author-config.csv} file."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AuthorConfigCsvParser extends CsvParser\u003cAuthorConfiguration\u003e {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String AUTHOR_CONFIG_FILENAME \u003d \"author-config.csv\";"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Positions of the elements of a line in author-config.csv config file."},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String[] LOCATION_HEADER \u003d {\"Repository\u0027s Location\"};"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String[] BRANCH_HEADER \u003d {\"Branch\"};"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String[] GIT_ID_HEADERS \u003d {\"Author\u0027s Git Host ID\", \"Author\u0027s GitHub ID\"};"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String[] EMAIL_HEADER \u003d {\"Author\u0027s Emails\"};"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String[] DISPLAY_NAME_HEADER \u003d {\"Author\u0027s Display Name\"};"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String[] ALIAS_HEADER \u003d {\"Author\u0027s Git Author Name\"};"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String[] IGNORE_GLOB_LIST_HEADER \u003d {\"Ignore Glob List\"};"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AuthorConfigCsvParser(Path csvFilePath) throws FileNotFoundException {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super(csvFilePath);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Gets the list of headers that are mandatory for verification."},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    protected String[][] mandatoryHeaders() {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new String[][] {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                GIT_ID_HEADERS,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Gets the list of optional headers that can be parsed."},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected String[][] optionalHeaders() {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new String[][] {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                LOCATION_HEADER, BRANCH_HEADER, EMAIL_HEADER, DISPLAY_NAME_HEADER, ALIAS_HEADER,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                IGNORE_GLOB_LIST_HEADER,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Processes the csv {@code record} line by line and add created {@link AuthorConfiguration} into {@code results}"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * but skips {@code author} already exists in a {@link AuthorConfiguration} that has same {@code location}"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * and {@code branch}."},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    protected void processLine(List\u003cAuthorConfiguration\u003e results, CSVRecord record) throws ParseException {"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e locationsWithBranches \u003d getAsListOrDefault(record, LOCATION_HEADER);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String branch \u003d getOrDefault(record, BRANCH_HEADER, AuthorConfiguration.DEFAULT_BRANCH);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String gitId \u003d get(record, GIT_ID_HEADERS);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cString\u003e emails \u003d getAsList(record, EMAIL_HEADER);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String displayName \u003d get(record, DISPLAY_NAME_HEADER);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cString\u003e aliases \u003d getAsList(record, ALIAS_HEADER);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cString\u003e ignoreGlobList \u003d getAsList(record, IGNORE_GLOB_LIST_HEADER);"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"        for (String locationWithBranches : locationsWithBranches) {"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"            List\u003cString\u003e parsedLocationWithBranches \u003d AuthorConfigLocationParser"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"                    .parseLocation(locationWithBranches, branch);"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":77,"author":{"gitId":"sikai00"},"content":"            String currLocation \u003d parsedLocationWithBranches.get(0);"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"            for (int i \u003d 1; i \u003c parsedLocationWithBranches.size(); i++) {"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"                String currBranch \u003d parsedLocationWithBranches.get(i);"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"                registerLocationAndBranch(results, gitId, emails, displayName, aliases,"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"                        ignoreGlobList, currLocation, currBranch);"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"     * Registers an author for a single location and branch with the information"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"     * provided by each line."},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"     * @throws InvalidLocationException if {@code location} is invalid."},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"    private void registerLocationAndBranch(List\u003cAuthorConfiguration\u003e results, String gitId,"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"                                              List\u003cString\u003e emails, String displayName,"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"                                              List\u003cString\u003e aliases, List\u003cString\u003e ignoreGlobList,"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"                                              String currLocation, String currBranch) throws InvalidLocationException {"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"        AuthorConfiguration config \u003d findMatchingAuthorConfiguration(results, currLocation, currBranch);"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(gitId);"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (config.containsAuthor(author)) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(String.format("},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    \"Skipping author as %s already in repository %s %s\","},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    author.getGitId(), config.getLocation(), config.getBranch()));"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        author.setEmails(new ArrayList\u003c\u003e(emails));"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        author.setDisplayName(!displayName.isEmpty() ? displayName : author.getGitId());"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!aliases.isEmpty()) {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            author.setAuthorAliases(aliases);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!ignoreGlobList.isEmpty()) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            author.setIgnoreGlobList(ignoreGlobList);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"        config.addAuthor(author);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Gets an existing {@link AuthorConfiguration} from {@code results} if {@code location} and {@code branch} matches."},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Otherwise, adds a newly created {@link AuthorConfiguration} into {@code results} and returns it."},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws InvalidLocationException if {@code location} is invalid."},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private static AuthorConfiguration findMatchingAuthorConfiguration(List\u003cAuthorConfiguration\u003e results,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String location, String branch) throws InvalidLocationException {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d new AuthorConfiguration(new RepoLocation(location), branch);"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (AuthorConfiguration authorConfig : results) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            if (authorConfig.getLocation().equals(config.getLocation())"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    \u0026\u0026 authorConfig.getBranch().equals(config.getBranch())) {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                return authorConfig;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        results.add(config);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return config;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":25,"-":113}},{"path":"src/main/java/reposense/parser/AuthorConfigLocationParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static reposense.util.FileUtil.pathExists;"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":"import java.util.regex.Matcher;"},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import java.util.regex.Pattern;"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":" * Contains repository location parsing functionalities specified to {@code author-config.csv} file."},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":" */"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":"public class AuthorConfigLocationParser {"},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"    public static final String LOCATION_BRANCHES_DELIMITER \u003d \"~\";"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"    public static final String BRANCHES_DELIMITER \u003d \"|\";"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"    // String::split requires escape characters"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":"    public static final String SPLIT_SAFE_BRANCHES_DELIMITER \u003d \"\\\\\" + BRANCHES_DELIMITER;"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    private static final Pattern GITHUB_BRANCH_URL_PATTERN \u003d"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"            Pattern.compile(\"(http|https)://github.com/(?\u003corg\u003e.+?)/(?\u003crepoName\u003e.+?)/tree/(?\u003cbranch\u003e.+?)\");"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"     * Parses a repository location and returns a list containing location and branch information"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"     * according to whether it uses no additional special syntax, delimiter syntax or"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":"     * GitHub-specific branch URL syntax."},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"     * The first item in the list is the location, while subsequent items are the"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"     * branches specified."},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"    public static List\u003cString\u003e parseLocation(String location, String defaultSpecifiedBranch) {"},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        if (isGithubBranchUrl(location)) {"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"            return parseGithubBranchUrl(location);"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"        if (isUsingDelimiter(location)) {"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"            return parseDelimiter(location);"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        return parseDefault(location, defaultSpecifiedBranch);"},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"     * Parses a repository location that is not using any additional special syntax"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"     * into a 2-element list containing location and branch information."},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"     * The first item in the list is the location, while the second item is the default branch"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"     * from {@code author-config.csv} branch column."},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"    private static List\u003cString\u003e parseDefault(String location, String defaultSpecifiedBranch) {"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationAndBranch \u003d new ArrayList\u003c\u003e();"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"        parsedLocationAndBranch.add(location);"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"        parsedLocationAndBranch.add(defaultSpecifiedBranch);"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"        return parsedLocationAndBranch;"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"     * Returns true if the given {@code locationAndBranch} is using the location and"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"     * branch delimiter syntax. If the given {@code locationAndBranch} is an actual"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"     * path, then it is considered to not be using the delimiter syntax."},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"    private static boolean isUsingDelimiter(String locationAndBranch) {"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"        int lastLocationBranchDelimiterIndex \u003d locationAndBranch.lastIndexOf(LOCATION_BRANCHES_DELIMITER);"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"        if (lastLocationBranchDelimiterIndex \u003d\u003d -1) {"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"            return false;"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"        return !pathExists(locationAndBranch);"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"     * Parses a repository location into a list containing location and branch information."},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"     * The first item in the list is the location, while subsequent items are the"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"     * branches specified."},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":"     * \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"     * The repository location can contain several ~ or | characters as well. The last ~ character will"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"     * be used as the separator between the actual path and the specified branches."},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"     * \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"     * Example: home~Desktop~RepoSense~master|cypress is parsed to give [home~Desktop~RepoSense, master, cypress]"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":"     * \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":77,"author":{"gitId":"sikai00"},"content":"     * There exist an obscure case where the delimiter syntax will not work due to conflicts in directory names."},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"     * See: \u003ca href\u003d\"https://github.com/reposense/RepoSense/pull/1961#discussion_r1155475445\"\u003ePR #1961 Discussion\u003c/a\u003e"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"    private static List\u003cString\u003e parseDelimiter(String locationAndBranches) {"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationAndBranches \u003d new ArrayList\u003c\u003e();"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"        int lastLocationBranchesDelimiterIndex \u003d locationAndBranches.lastIndexOf("},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"                LOCATION_BRANCHES_DELIMITER);"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"        String location \u003d locationAndBranches.substring(0, lastLocationBranchesDelimiterIndex);"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"        parsedLocationAndBranches.add(location);"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":"        String[] branches \u003d locationAndBranches"},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"                .substring(lastLocationBranchesDelimiterIndex + 1).split(SPLIT_SAFE_BRANCHES_DELIMITER);"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"        for (String branch : branches) {"},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":"            parsedLocationAndBranches.add(branch);"},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"        return parsedLocationAndBranches;"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"     * Returns true if the given {@code url} is a GitHub branch URL."},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"    private static boolean isGithubBranchUrl(String url) {"},{"lineNumber":101,"author":{"gitId":"sikai00"},"content":"        Matcher matcher \u003d GITHUB_BRANCH_URL_PATTERN.matcher(url);"},{"lineNumber":102,"author":{"gitId":"sikai00"},"content":"        return matcher.matches();"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"     * Parses a repository location in the form of a GitHub branch URL into a"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":"     * 2-element list of the form [location, branch]."},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"    private static List\u003cString\u003e parseGithubBranchUrl(String githubBranchUrl) {"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"        Matcher matcher \u003d GITHUB_BRANCH_URL_PATTERN.matcher(githubBranchUrl);"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"        matcher.matches();"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"        String org \u003d matcher.group(\"org\");"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"        String repoName \u003d matcher.group(\"repoName\");"},{"lineNumber":115,"author":{"gitId":"sikai00"},"content":"        String branch \u003d matcher.group(\"branch\");"},{"lineNumber":116,"author":{"gitId":"sikai00"},"content":"        String location \u003d \"https://github.com/\" + org + \"/\" + repoName + \".git\";"},{"lineNumber":117,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":118,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocation \u003d new ArrayList\u003c\u003e();"},{"lineNumber":119,"author":{"gitId":"sikai00"},"content":"        parsedLocation.add(location);"},{"lineNumber":120,"author":{"gitId":"sikai00"},"content":"        parsedLocation.add(branch);"},{"lineNumber":121,"author":{"gitId":"sikai00"},"content":"        return parsedLocation;"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"sikai00"},"content":"}"}],"authorContributionMap":{"sikai00":123}},{"path":"src/main/java/reposense/parser/CsvParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.FileReader;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.StringJoiner;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVFormat;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.apache.commons.csv.CSVRecord;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidCsvException;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidHeaderException;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.ParseException;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains CSV parsing related functionalities."},{"lineNumber":34,"author":{"gitId":"-"},"content":" */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public abstract class CsvParser\u003cT\u003e {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    protected static final String COLUMN_VALUES_SEPARATOR \u003d \";\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    protected static final Logger logger \u003d LogsManager.getLogger(CsvParser.class);"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String EMPTY_STRING \u003d \"\";"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String OVERRIDE_KEYWORD \u003d \"override:\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_EMPTY_LINE \u003d \"[EMPTY LINE]\";"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_UNABLE_TO_READ_CSV_FILE \u003d \"Unable to read the supplied CSV file.\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MALFORMED_LINE_FORMAT \u003d \"Line %d in CSV file, %s, is malformed.\\n\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Content: %s\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_LINE_PARSE_EXCEPTION_FORMAT \u003d \"Error parsing line %d in CSV file, %s.\\n\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Content: %s\\n\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Error: %s\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_EMPTY_CSV_FORMAT \u003d \"The CSV file, %s, is empty.\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MANDATORY_HEADER_MISSING \u003d \"Required column header, %s, not found in \""},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"CSV file, %s\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_DUPLICATE_COLUMN_HEADER \u003d \"Duplicate columns are present in CSV file, %s.\";"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COLUMNS_RECOGNIZED \u003d \"Parsed header of CSV file, %s, and recognized columns: \""},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"%s\";"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ZERO_VALID_CONFIGS \u003d \"No valid configurations in the %s.\";"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_UNKNOWN_COLUMN \u003d \"Unknown column(s) found: %s (%s)\";"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Path csvFilePath;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private Map\u003cString, Integer\u003e headerMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private int numOfLinesBeforeFirstRecord \u003d 0;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates {@link CsvParser} with given {@code csvFilepath}."},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws FileNotFoundException if the csv file cannot be found in the provided {@code csvFilePath}."},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CsvParser(Path csvFilePath) throws FileNotFoundException {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (csvFilePath \u003d\u003d null || !Files.exists(csvFilePath)) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new FileNotFoundException(\"Csv file does not exist at the given path.\\n\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                    + \"Use \u0027-help\u0027 to list all the available subcommands and some concept guides.\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.csvFilePath \u003d csvFilePath;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses the csv file associated with this instance of the {@link CsvParser} and returns a {@link List}"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * containing the records in this file."},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors accessing the given csv file."},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws InvalidCsvException if the csv is malformed."},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws InvalidHeaderException if header of csv file cannot be read."},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public List\u003cT\u003e parse() throws IOException, InvalidCsvException, InvalidHeaderException {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cT\u003e results \u003d new ArrayList\u003c\u003e();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Iterable\u003cCSVRecord\u003e records;"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try (BufferedReader csvReader \u003d new BufferedReader(new FileReader(csvFilePath.toFile()))) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            String[] header \u003d getHeader(csvReader);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                records \u003d CSVFormat.Builder.create(CSVFormat.DEFAULT).setIgnoreEmptyLines(false).setHeader(header)"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        .setTrim(true).setIgnoreHeaderCase(true).build().parse(csvReader);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            } catch (IllegalArgumentException iae) {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                throw new InvalidCsvException("},{"lineNumber":94,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_DUPLICATE_COLUMN_HEADER, csvFilePath.getFileName()));"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"            for (CSVRecord record : records) {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                if (isLineMalformed(record)) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                try {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    processLine(results, record);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                } catch (ParseException pe) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                    logger.warning(String.format(MESSAGE_LINE_PARSE_EXCEPTION_FORMAT, getLineNumber(record),"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                            csvFilePath.getFileName(), getRowContentAsRawString(record), pe.getMessage()));"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                } catch (IllegalArgumentException iae) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                    logger.log(Level.WARNING, iae.getMessage(), iae);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IOException(MESSAGE_UNABLE_TO_READ_CSV_FILE, ioe);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (results.isEmpty()) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new InvalidCsvException(String.format(MESSAGE_ZERO_VALID_CONFIGS, csvFilePath.getFileName()));"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return results;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns the header of a CSV file, which is assumed to be the first non-empty / non-whitespace line in the file"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * read by {@code reader}."},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * The line is split into an array of {@code String}s, using the comma symbol as delimiter."},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws IOException if there is an error accessing the file."},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @throws InvalidCsvException if the file has only empty or blank lines."},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @throws InvalidHeaderException if header of csv file cannot be read."},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private String[] getHeader(BufferedReader reader) throws IOException, InvalidCsvException, InvalidHeaderException {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String currentLine \u003d \"\";"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // read from file until we encounter a line that is neither blank nor empty"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        while (currentLine.isEmpty()) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            currentLine \u003d Optional.ofNullable(reader.readLine())"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    .map(String::trim)"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    .orElseThrow(() -\u003e new InvalidCsvException(String.format("},{"lineNumber":137,"author":{"gitId":"-"},"content":"                            MESSAGE_EMPTY_CSV_FORMAT, csvFilePath.getFileName())));"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"            numOfLinesBeforeFirstRecord++;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String[] header \u003d currentLine.split(\",\");"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        validateHeader(header);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return header;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns true if {@code record} does not contain the same number of columns as the header or contains missing"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * values at the mandatory columns in CSV format."},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private boolean isLineMalformed(CSVRecord record) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!record.isConsistent()) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_MALFORMED_LINE_FORMAT, getLineNumber(record),"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    csvFilePath.getFileName(), getRowContentAsRawString(record)));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"        for (String[] equivalentHeaders : mandatoryHeaders()) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            boolean isLineFormatMalformed \u003d"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    Arrays.stream(equivalentHeaders).allMatch(header -\u003e get(record, header).isEmpty());"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            if (isLineFormatMalformed) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                logger.warning(String.format(MESSAGE_MALFORMED_LINE_FORMAT, getLineNumber(record),"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                        csvFilePath.getFileName(), getRowContentAsRawString(record)));"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                return true;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column with the header {@code header}."},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    protected String get(final CSVRecord record, String header) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return headerMap.containsKey(header) ? record.get(headerMap.get(header)).trim() : EMPTY_STRING;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column that match any of the equivalent headers in"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * {@code equivalentHeaders}."},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    protected String get(final CSVRecord record, String[] equivalentHeaders) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        for (String header : equivalentHeaders) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            if (headerMap.containsKey(header)) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                return record.get(headerMap.get(header)).trim();"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return EMPTY_STRING;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column that match any of the equivalent headers in"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * {@code equivalentHeaders} if present, or returns {@code defaultValue} otherwise."},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    protected String getOrDefault(final CSVRecord record, String[] equivalentHeaders, String defaultValue) {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        String value \u003d get(record, equivalentHeaders);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return value.isEmpty() ? defaultValue : value;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Returns the value of {@code record} at the column that match any of the equivalent headers in"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * {@code equivalentHeaders} as a {@link List} if it is in {@code record} and not empty."},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * The column is delimited by {@code COLUMN_VALUES_SEPARATOR}."},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Returns an empty {@link List} otherwise."},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e getAsList(final CSVRecord record, String[] equivalentHeaders) {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        String value \u003d get(record, equivalentHeaders);"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        if (value.isEmpty()) {"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return Collections.emptyList();"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return Arrays.stream(value.split(COLUMN_VALUES_SEPARATOR))"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .map(String::trim)"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"sikai00"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"sikai00"},"content":"     * Returns the value of {@code record} at {@code colNum} as a {@code List},"},{"lineNumber":219,"author":{"gitId":"sikai00"},"content":"     * delimited by {@code COLUMN_VALUES_SEPARATOR} if it is in {@code record} and not empty, or"},{"lineNumber":220,"author":{"gitId":"sikai00"},"content":"     * returns a single element List containing the empty string otherwise."},{"lineNumber":221,"author":{"gitId":"sikai00"},"content":"     */"},{"lineNumber":222,"author":{"gitId":"sikai00"},"content":"    protected List\u003cString\u003e getAsListOrDefault(final CSVRecord record, String[] equivalentHeaders) {"},{"lineNumber":223,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e list \u003d getAsList(record, equivalentHeaders);"},{"lineNumber":224,"author":{"gitId":"sikai00"},"content":"        return list.isEmpty() ? Collections.singletonList(\"\") : list;"},{"lineNumber":225,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":226,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Returns the values in {@code record} as a list with the {@link CsvParser#OVERRIDE_KEYWORD} prefix removed."},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * Returns an empty list if {@code record} at the column that match any of the equivalent headers in"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * {@code equivalentHeaders} is empty."},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e getAsListWithoutOverridePrefix(final CSVRecord record, String[] equivalentHeaders) {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        List\u003cString\u003e data \u003d getAsList(record, equivalentHeaders);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        if (isElementOverridingStandaloneConfig(record, equivalentHeaders)) {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            data.set(0, data.get(0).replaceFirst(OVERRIDE_KEYWORD, \"\"));"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            data.removeIf(String::isEmpty);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"        return data;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"    private long getLineNumber(final CSVRecord record) {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        return record.getRecordNumber() + numOfLinesBeforeFirstRecord;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * Returns true if the {@code record} at the column that match any of the equivalent headers in"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * {@code equivalentHeaders} is prefixed with the override keyword."},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    protected boolean isElementOverridingStandaloneConfig(final CSVRecord record, String[] equivalentHeaders) {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        return get(record, equivalentHeaders).startsWith(OVERRIDE_KEYWORD);"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * Returns the contents of {@code record} as a raw string."},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    private String getRowContentAsRawString(final CSVRecord record) {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        StringJoiner inputRowString \u003d new StringJoiner(\",\");"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        for (String value : record) {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            inputRowString.add(value);"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        String contentAsString \u003d inputRowString.toString();"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        return (contentAsString.trim().isEmpty()) ? MESSAGE_EMPTY_LINE : contentAsString;"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * Generates map of column header to position number for input {@code possibleHeader}."},{"lineNumber":268,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * @throws InvalidCsvException if {@code possibleHeader} does not contain all the mandatory headers."},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * @throws InvalidHeaderException if a column in {@code possibleHeader} cannot be parsed."},{"lineNumber":271,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    private void validateHeader(String[] possibleHeader) throws InvalidCsvException, InvalidHeaderException {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        int headerSize \u003d possibleHeader.length;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e knownColumns \u003d new HashSet\u003c\u003e();"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        ArrayList\u003cString\u003e unknownColumns \u003d new ArrayList\u003c\u003e();"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        List\u003cString\u003e parsedHeaders \u003d mandatoryAndOptionalHeaders();"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c headerSize; i++) {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            String possible \u003d possibleHeader[i].trim();"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            for (String parsedHeader : parsedHeaders) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                if (possible.equalsIgnoreCase(parsedHeader)) {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    headerMap.put(parsedHeader, i);"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    knownColumns.add(possible);"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"            if (!knownColumns.contains(possible)) {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                unknownColumns.add(possible);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"        if (unknownColumns.size() \u003e 0) {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            String errorMessage \u003d String.join(\", \", unknownColumns);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            throw new InvalidHeaderException("},{"lineNumber":296,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_UNKNOWN_COLUMN, errorMessage, csvFilePath.toString()));"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"        for (String[] equivalentHeaders : mandatoryHeaders()) {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            boolean isAnyEquivalentHeaderPresent \u003d"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                    Arrays.stream(equivalentHeaders).anyMatch(header -\u003e headerMap.containsKey(header));"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"            if (!isAnyEquivalentHeaderPresent) {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                throw new InvalidCsvException(String.format("},{"lineNumber":305,"author":{"gitId":"-"},"content":"                        MESSAGE_MANDATORY_HEADER_MISSING, Arrays.toString(equivalentHeaders),"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                        csvFilePath.getFileName()));"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_COLUMNS_RECOGNIZED, csvFilePath.getFileName(),"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                String.join(\",  \", headerMap.keySet())));"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":315,"author":{"gitId":"-"},"content":"     * Gets the list of headers that are mandatory for verification."},{"lineNumber":316,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    protected abstract String[][] mandatoryHeaders();"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":320,"author":{"gitId":"-"},"content":"     * Gets the list of optional headers that can be parsed."},{"lineNumber":321,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    protected abstract String[][] optionalHeaders();"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":325,"author":{"gitId":"-"},"content":"     * Gets the list of all mandatory and optional headers that can be parsed."},{"lineNumber":326,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    protected List\u003cString\u003e mandatoryAndOptionalHeaders() {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        return Stream.concat(Arrays.stream(mandatoryHeaders()), Arrays.stream(optionalHeaders()))"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                .flatMap(Stream::of)"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":334,"author":{"gitId":"-"},"content":"     * Processes the csv file line by line."},{"lineNumber":335,"author":{"gitId":"-"},"content":"     * All {@link CsvParser}s must use {@link CsvParser#get}, {@link CsvParser#getOrDefault},"},{"lineNumber":336,"author":{"gitId":"-"},"content":"     * {@link CsvParser#getAsList} or {@link CsvParser#getAsListWithoutOverridePrefix} to read contents in"},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * {@code record} and add created objects into {@code results}."},{"lineNumber":338,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":339,"author":{"gitId":"-"},"content":"     * @throws ParseException if any line does not get read successfully."},{"lineNumber":340,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    protected abstract void processLine(List\u003cT\u003e results, final CSVRecord record) throws ParseException;"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":10,"-":332}},{"path":"src/main/java/reposense/report/ReportGenerator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.report;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.InputStream;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.StringWriter;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Iterator;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.concurrent.CompletableFuture;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.concurrent.ExecutorService;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.concurrent.Executors;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.function.Supplier;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSyntaxException;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.RepoSense;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.authorship.AuthorshipReporter;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.authorship.model.AuthorshipSummary;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.commits.CommitsReporter;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitContributionSummary;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import reposense.git.GitBlame;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import reposense.git.GitClone;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import reposense.git.GitRevParse;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import reposense.git.GitShortlog;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import reposense.git.GitShow;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitBranchException;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import reposense.git.exception.GitCloneException;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import reposense.model.ReportConfiguration;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import reposense.model.StandaloneConfig;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import reposense.parser.StandaloneConfigJsonParser;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import reposense.report.exception.NoAuthorsWithCommitsFoundException;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import reposense.util.ProgressTracker;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":57,"author":{"gitId":"-"},"content":" * Contains report generation related functionalities."},{"lineNumber":58,"author":{"gitId":"-"},"content":" */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"public class ReportGenerator {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String REPOSENSE_CONFIG_FOLDER \u003d \"_reposense\";"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String REPOSENSE_CONFIG_FILE \u003d \"config.json\";"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(ReportGenerator.class);"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // zip file which contains all the report template files"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final String TEMPLATE_FILE \u003d \"/templateZip.zip\";"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_CONFIG_JSON \u003d \"%s Ignoring the config provided by %s (%s).\";"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_ERROR_CREATING_DIRECTORY \u003d"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \"Error has occurred while creating repo directory for %s (%s), will skip this repo.\";"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_NO_STANDALONE_CONFIG \u003d \"%s (%s) does not contain a standalone config file.\";"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_IGNORING_STANDALONE_CONFIG \u003d \"Ignoring standalone config file in %s (%s).\";"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MALFORMED_STANDALONE_CONFIG \u003d \"%s/%s/%s is malformed for %s (%s).\";"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_NO_AUTHORS_SPECIFIED \u003d"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \"%s (%s) has no authors specified, using all authors by default.\";"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_NO_AUTHORS_WITH_COMMITS_FOUND \u003d"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \"No authors found with commits for %s (%s).\";"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_START_ANALYSIS \u003d \"Analyzing %s (%s)...\";"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_COMPLETE_ANALYSIS \u003d \"Analysis of %s (%s) completed!\";"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_REPORT_GENERATED \u003d \"The report is generated at %s\";"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_BRANCH_DOES_NOT_EXIST \u003d \"Branch %s does not exist in %s! Analysis terminated.\";"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_MISSING_TEMPLATE \u003d"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            \"Unable to find template file. Proceeding to generate report...\";"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static final String LOG_ERROR_CLONING \u003d \"Failed to clone from %s\";"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static final String LOG_ERROR_EXPANDING_COMMIT \u003d \"Cannot expand %s, it shall remain unexpanded\";"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static final String LOG_BRANCH_DOES_NOT_EXIST \u003d \"Branch \\\"%s\\\" does not exist.\";"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static final String LOG_ERROR_CLONING_OR_BRANCHING \u003d \"Exception met while cloning or checking out.\";"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static final String LOG_UNEXPECTED_ERROR \u003d \"Unexpected error stack trace for %s:\\n\u003e%s\";"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e assetsFilesWhiteList \u003d"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Collections.unmodifiableList(Arrays.asList(new String[] {\"favicon.ico\", \"title.md\"}));"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"    private LocalDateTime earliestSinceDate \u003d null;"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"    private ProgressTracker progressTracker \u003d null;"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Generates the authorship and commits JSON file for each repo in {@code configs} at {@code outputPath}, as"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * well as the summary JSON file of all the repos."},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param configs The list of repos to analyze."},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param outputPath The location at which to save the report."},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @param assetsPath The location at which assets for generating the report are stored."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param reportConfig The config for the output report."},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param generationDate The time at which the report was generated."},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param cliSinceDate The date-time from which to start analyzing commits."},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param untilDate The cut-off date-time for analyzing commits."},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param isSinceDateProvided The boolean variable for whether client provided a sinceDate."},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param isUntilDateProvided The boolean variable for whether client provided an untilDate."},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param numCloningThreads The number of threads to use to clone the repos."},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param numAnalysisThreads The number of threads to use to analyze the repos."},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param reportGenerationTimeProvider Supplier for time taken to generate the report."},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @param zoneId The timezone to adjust all date-times to."},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @param shouldFreshClone The boolean variable for whether to clone a repo again during tests."},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @return the list of file paths that were generated."},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @throws IOException if templateZip.zip does not exists in jar file."},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"sikai00"},"content":"    public List\u003cPath\u003e generateReposReport(List\u003cRepoConfiguration\u003e configs, String outputPath, String assetsPath,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            ReportConfiguration reportConfig, String generationDate, LocalDateTime cliSinceDate,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            LocalDateTime untilDate, boolean isSinceDateProvided, boolean isUntilDateProvided, int numCloningThreads,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            int numAnalysisThreads, Supplier\u003cString\u003e reportGenerationTimeProvider, ZoneId zoneId,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            boolean shouldFreshClone) throws IOException {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        prepareTemplateFile(outputPath);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (Files.exists(Paths.get(assetsPath))) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            FileUtil.copyDirectoryContents(assetsPath, outputPath, assetsFilesWhiteList);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        earliestSinceDate \u003d null;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        progressTracker \u003d new ProgressTracker(configs.size());"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e reportFoldersAndFiles \u003d cloneAndAnalyzeRepos(configs, outputPath,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                numCloningThreads, numAnalysisThreads, shouldFreshClone);"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        LocalDateTime reportSinceDate \u003d (TimeUtil.isEqualToArbitraryFirstDateConverted(cliSinceDate, zoneId))"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                ? earliestSinceDate : cliSinceDate;"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Optional\u003cPath\u003e summaryPath \u003d FileUtil.writeJsonFile("},{"lineNumber":136,"author":{"gitId":"-"},"content":"                new SummaryJson(configs, reportConfig, generationDate,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                        reportSinceDate, untilDate, isSinceDateProvided,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                        isUntilDateProvided, RepoSense.getVersion(), ErrorSummary.getInstance().getErrorSet(),"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                        reportGenerationTimeProvider.get(), zoneId),"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                getSummaryResultPath(outputPath));"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        summaryPath.ifPresent(reportFoldersAndFiles::add);"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_REPORT_GENERATED, outputPath));"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return reportFoldersAndFiles;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Copies the template file to the specified {@code outputPath} for the repo report to be generated."},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @throws IOException if I/O error encountered while copying template file."},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"sikai00"},"content":"    private void prepareTemplateFile(String outputPath) throws IOException {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        InputStream is \u003d RepoSense.class.getResourceAsStream(TEMPLATE_FILE);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (is !\u003d null) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            FileUtil.copyTemplate(is, outputPath);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(MESSAGE_MISSING_TEMPLATE);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Groups {@link RepoConfiguration} with the same {@link RepoLocation} together so that they are only cloned once."},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":165,"author":{"gitId":"sikai00"},"content":"    private Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e groupConfigsByRepoLocation("},{"lineNumber":166,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configs) {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e repoLocationMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        for (RepoConfiguration config : configs) {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            RepoLocation location \u003d config.getLocation();"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"            if (!repoLocationMap.containsKey(location)) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                repoLocationMap.put(location, new ArrayList\u003c\u003e());"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            repoLocationMap.get(location).add(config);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return repoLocationMap;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Clone, analyze and generate the report for repositories in {@code repoLocationMap}."},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Performs cloning and analysis of each repository in parallel, and generates the report."},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Also removes any configs that failed to clone or analyze from {@code configs}."},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * By default, runs in multi-threaded mode with {@code numCloningThreads} threads for cloning"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * and {@code numAnalysisThreads} threads for analysis."},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * To turn off multi-threading, run the program with the flags"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * {@code --cloning-threads 1 --analysis-threads 1}."},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * For test environments, cloning is skipped if it has been done before and {@code shouldFreshClone} is false."},{"lineNumber":188,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * @return A list of paths to the JSON report files generated for each repository."},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":191,"author":{"gitId":"sikai00"},"content":"    private List\u003cPath\u003e cloneAndAnalyzeRepos(List\u003cRepoConfiguration\u003e configs, String outputPath,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            int numCloningThreads, int numAnalysisThreads, boolean shouldFreshClone) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Map\u003cRepoLocation, List\u003cRepoConfiguration\u003e\u003e repoLocationMap \u003d groupConfigsByRepoLocation(configs);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        List\u003cRepoLocation\u003e repoLocationList \u003d new ArrayList\u003c\u003e(repoLocationMap.keySet());"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // Fixed thread pools are used to limit the number of threads used by cloning and analysis jobs at any one time"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        ExecutorService cloneExecutor \u003d Executors.newFixedThreadPool(numCloningThreads);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        ExecutorService analyzeExecutor \u003d Executors.newFixedThreadPool(numAnalysisThreads);"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        List\u003cCompletableFuture\u003cAnalyzeJobOutput\u003e\u003e analyzeJobFutures \u003d new ArrayList\u003c\u003e();"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        for (RepoLocation location : repoLocationList) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            List\u003cRepoConfiguration\u003e configsToAnalyze \u003d repoLocationMap.get(location);"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"            // The `CompletableFuture.supplyAsync` method is used to clone the repo in parallel."},{"lineNumber":205,"author":{"gitId":"-"},"content":"            // Note that the `cloneExecutor` is passed as a parameter to ensure that the number of threads used"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // for cloning is no more than `numCloningThreads`."},{"lineNumber":207,"author":{"gitId":"-"},"content":"            CompletableFuture\u003cCloneJobOutput\u003e cloneFuture \u003d CompletableFuture.supplyAsync(() -\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    cloneRepo(configsToAnalyze.get(0), location, shouldFreshClone), cloneExecutor);"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"            // The `thenApplyAsync` method is used to analyze the cloned repo in parallel."},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // This ensures that the analysis job for each repo will only be run after the repo has been cloned."},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // Note that the `analyzeExecutor` is passed as a parameter to ensure that the number of threads used"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // for analysis is no more than `numAnalysisThreads`."},{"lineNumber":214,"author":{"gitId":"-"},"content":"            CompletableFuture\u003cAnalyzeJobOutput\u003e analyzeFuture \u003d cloneFuture.thenApplyAsync("},{"lineNumber":215,"author":{"gitId":"-"},"content":"                    cloneJobOutput -\u003e analyzeRepos(outputPath, configsToAnalyze, cloneJobOutput), analyzeExecutor);"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"            analyzeJobFutures.add(analyzeFuture);"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // Next, we collect the list of outputs from all the analyze jobs"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        List\u003cAnalyzeJobOutput\u003e jobOutputs \u003d analyzeJobFutures.stream()"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .map(CompletableFuture::join)"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // Finally, the ExecutorService objects are shut down to prevent memory leaks"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        cloneExecutor.shutdown();"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        analyzeExecutor.shutdown();"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d jobOutputs"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                .flatMap(jobOutput -\u003e jobOutput.getFiles().stream())"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"        List\u003cRepoLocation\u003e cloneFailLocations \u003d jobOutputs"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                .filter(jobOutput -\u003e !jobOutput.isCloneSuccessful())"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                .map(jobOutput -\u003e jobOutput.getLocation())"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        cloneFailLocations.forEach(location -\u003e handleCloningFailed(configs, location));"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"        List\u003cAnalysisErrorInfo\u003e analysisErrors \u003d jobOutputs"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                .stream()"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                .flatMap(jobOutput -\u003e jobOutput.getAnalyseErrors().stream())"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        analysisErrors.forEach(errorInfo -\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                handleAnalysisFailed(configs, errorInfo.getFailedConfig(), errorInfo.getErrorMessage()));"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        repoCloner.cleanup();"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return generatedFiles;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * Clones repo specified by {@code config} at {@code location}."},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * For test environments, cloning is skipped if it has been done before and {@code shouldFreshClone} is false."},{"lineNumber":256,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * @return A {@link CloneJobOutput} object comprising the {@code location} of the repo, whether the cloning was"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     * successful, and the {@code defaultBranch} of the repo."},{"lineNumber":259,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":260,"author":{"gitId":"sikai00"},"content":"    private CloneJobOutput cloneRepo(RepoConfiguration config, RepoLocation location, boolean shouldFreshClone) {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        repoCloner.cloneBare(config, shouldFreshClone);"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        RepoLocation clonedRepoLocation \u003d repoCloner.getClonedRepoLocation();"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        if (clonedRepoLocation !\u003d null) {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            String defaultBranch \u003d repoCloner.getCurrentRepoDefaultBranch();"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return new CloneJobOutput(location, defaultBranch);"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return new CloneJobOutput(location);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * Analyzes all repos in {@code configsToAnalyze} and generates their report at {@code outputPath}."},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * Uses {@code cloneJobOutput} to find repo location, default branch and whether cloning was successful."},{"lineNumber":275,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * @return An {@link AnalyzeJobOutput} object comprising the {@code location} of the repo, whether the cloning was"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * successful, the list of {@code generatedFiles} by the analysis and a list of {@code analysisErrors} encountered."},{"lineNumber":278,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":279,"author":{"gitId":"sikai00"},"content":"    private AnalyzeJobOutput analyzeRepos(String outputPath, List\u003cRepoConfiguration\u003e configsToAnalyze,"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            CloneJobOutput cloneJobOutput) {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        RepoLocation location \u003d cloneJobOutput.getLocation();"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        boolean cloneSuccessful \u003d cloneJobOutput.isCloneSuccessful();"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        List\u003cAnalysisErrorInfo\u003e analysisErrors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        RepoCloner repoCloner \u003d new RepoCloner();"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        if (!cloneSuccessful) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            repoCloner.cleanupRepo(configsToAnalyze.get(0));"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            return new AnalyzeJobOutput(location, cloneSuccessful, generatedFiles, analysisErrors);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        Iterator\u003cRepoConfiguration\u003e itr \u003d configsToAnalyze.iterator();"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        while (itr.hasNext()) {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            progressTracker.incrementProgress();"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            RepoConfiguration configToAnalyze \u003d itr.next();"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            configToAnalyze.updateBranch(cloneJobOutput.getDefaultBranch());"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"            Path repoReportDirectory \u003d Paths.get(outputPath, configToAnalyze.getOutputFolderName());"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            logger.info("},{"lineNumber":299,"author":{"gitId":"-"},"content":"                    String.format(progressTracker.getProgress() + \" \""},{"lineNumber":300,"author":{"gitId":"-"},"content":"                            + MESSAGE_START_ANALYSIS, configToAnalyze.getLocation(), configToAnalyze.getBranch()));"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                GitRevParse.assertBranchExists(configToAnalyze, FileUtil.getBareRepoPath(configToAnalyze));"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                GitClone.cloneFromBareAndUpdateBranch(Paths.get(\".\"), configToAnalyze);"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"                FileUtil.createDirectory(repoReportDirectory);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                generatedFiles.addAll(analyzeRepo(configToAnalyze, repoReportDirectory.toString()));"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            } catch (IOException ioe) {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                String logMessage \u003d String.format(MESSAGE_ERROR_CREATING_DIRECTORY,"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                        configToAnalyze.getLocation(), configToAnalyze.getBranch());"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                logger.log(Level.WARNING, logMessage, ioe);"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            } catch (GitBranchException gbe) {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                logger.log(Level.SEVERE, String.format(MESSAGE_BRANCH_DOES_NOT_EXIST,"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                        configToAnalyze.getBranch(), configToAnalyze.getLocation()), gbe);"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                        String.format(LOG_BRANCH_DOES_NOT_EXIST, configToAnalyze.getBranch())));"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            } catch (GitCloneException gce) {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze, LOG_ERROR_CLONING_OR_BRANCHING));"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            } catch (NoAuthorsWithCommitsFoundException nafe) {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                logger.log(Level.WARNING, String.format(MESSAGE_NO_AUTHORS_WITH_COMMITS_FOUND,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                        configToAnalyze.getLocation(), configToAnalyze.getBranch()));"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                generatedFiles.addAll(generateEmptyRepoReport(repoReportDirectory.toString(),"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                        Author.NAME_NO_AUTHOR_WITH_COMMITS_FOUND));"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                generateEmptyRepoReport(repoReportDirectory.toString(), Author.NAME_NO_AUTHOR_WITH_COMMITS_FOUND);"},{"lineNumber":324,"author":{"gitId":"-"},"content":"            } catch (Exception e) {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                StringWriter sw \u003d new StringWriter();"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                e.printStackTrace(new PrintWriter(sw));"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                logger.log(Level.SEVERE, sw.toString());"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                analysisErrors.add(new AnalysisErrorInfo(configToAnalyze,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                        String.format(LOG_UNEXPECTED_ERROR, configToAnalyze.getLocation(), sw.toString())));"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        repoCloner.cleanupRepo(configsToAnalyze.get(0));"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        return new AnalyzeJobOutput(location, cloneSuccessful, generatedFiles, analysisErrors);"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * Analyzes repo specified by {@code config} and generates the report at {@code repoReportDirectory}."},{"lineNumber":338,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":339,"author":{"gitId":"-"},"content":"     * @return A list of paths to the JSON report files generated for the repo specified by {@code config}."},{"lineNumber":340,"author":{"gitId":"-"},"content":"     * @throws NoAuthorsWithCommitsFoundException if there are no authors with commits found for the repo."},{"lineNumber":341,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":342,"author":{"gitId":"sikai00"},"content":"    private List\u003cPath\u003e analyzeRepo(RepoConfiguration config, String repoReportDirectory)"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throws NoAuthorsWithCommitsFoundException {"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        // preprocess the config and repo"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        updateRepoConfig(config);"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        updateAuthorList(config);"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        updateIgnoreCommitList(config);"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"        if (config.isFindingPreviousAuthorsPerformed()) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            generateIgnoreRevsFile(config);"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"sikai00"},"content":"        AuthorshipReporter authorshipReporter \u003d new AuthorshipReporter();"},{"lineNumber":354,"author":{"gitId":"sikai00"},"content":"        AuthorshipSummary authorshipSummary \u003d authorshipReporter.generateAuthorshipSummary(config);"},{"lineNumber":355,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":356,"author":{"gitId":"sikai00"},"content":"        CommitsReporter commitsReporter \u003d new CommitsReporter();"},{"lineNumber":357,"author":{"gitId":"sikai00"},"content":"        CommitContributionSummary commitSummary \u003d commitsReporter.generateCommitSummary(config);"},{"lineNumber":358,"author":{"gitId":"sikai00"},"content":"        earliestSinceDate \u003d commitSummary.getEarliestSinceDate();"},{"lineNumber":359,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d generateIndividualRepoReport(repoReportDirectory, commitSummary, authorshipSummary);"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        logger.info(String.format(MESSAGE_COMPLETE_ANALYSIS, config.getLocation(), config.getBranch()));"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return generatedFiles;"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":366,"author":{"gitId":"-"},"content":"     * Updates {@code config} with configuration provided by repository if exists."},{"lineNumber":367,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":368,"author":{"gitId":"-"},"content":"     * @throws AssertionError if there is a problem with the file existence check."},{"lineNumber":369,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":370,"author":{"gitId":"sikai00"},"content":"    public void updateRepoConfig(RepoConfiguration config) throws AssertionError {"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        Path configJsonPath \u003d"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                Paths.get(config.getRepoRoot(), REPOSENSE_CONFIG_FOLDER, REPOSENSE_CONFIG_FILE).toAbsolutePath();"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"        if (!Files.exists(configJsonPath)) {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_NO_STANDALONE_CONFIG, config.getLocation(), config.getBranch()));"},{"lineNumber":376,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"        if (config.isStandaloneConfigIgnored()) {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_IGNORING_STANDALONE_CONFIG, config.getLocation(), config.getBranch()));"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"            StandaloneConfig standaloneConfig \u003d new StandaloneConfigJsonParser().parse(configJsonPath);"},{"lineNumber":386,"author":{"gitId":"-"},"content":"            config.update(standaloneConfig);"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        } catch (JsonSyntaxException jse) {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_MALFORMED_STANDALONE_CONFIG, config.getDisplayName(),"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                    REPOSENSE_CONFIG_FOLDER, REPOSENSE_CONFIG_FILE, config.getLocation(), config.getBranch()));"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        } catch (IllegalArgumentException iae) {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            logger.warning(String.format(MESSAGE_INVALID_CONFIG_JSON,"},{"lineNumber":392,"author":{"gitId":"-"},"content":"                    iae.getMessage(), config.getLocation(), config.getBranch()));"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            throw new AssertionError("},{"lineNumber":395,"author":{"gitId":"-"},"content":"                    \"This exception should not happen as we have performed the file existence check.\");"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":400,"author":{"gitId":"-"},"content":"     * Find and update {@code config} with all the author identities if author list is empty."},{"lineNumber":401,"author":{"gitId":"-"},"content":"     * Also removes ignored authors from author list."},{"lineNumber":402,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":403,"author":{"gitId":"-"},"content":"     * @throws NoAuthorsWithCommitsFoundException if there are no authors with commits found for the repo."},{"lineNumber":404,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":405,"author":{"gitId":"sikai00"},"content":"    private void updateAuthorList(RepoConfiguration config) throws NoAuthorsWithCommitsFoundException {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        if (config.getAuthorList().isEmpty()) {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"            logger.info(String.format(MESSAGE_NO_AUTHORS_SPECIFIED, config.getLocation(), config.getBranch()));"},{"lineNumber":408,"author":{"gitId":"-"},"content":"            List\u003cAuthor\u003e authorList \u003d GitShortlog.getAuthors(config);"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"            if (authorList.isEmpty()) {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                throw new NoAuthorsWithCommitsFoundException();"},{"lineNumber":412,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"            config.setAuthorList(authorList);"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        config.removeIgnoredAuthors();"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":420,"author":{"gitId":"-"},"content":"     * Updates {@code config} with the exact list of commits if commit ranges are provided."},{"lineNumber":421,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":422,"author":{"gitId":"sikai00"},"content":"    private void updateIgnoreCommitList(RepoConfiguration config) {"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        List\u003cCommitHash\u003e updatedIgnoreCommitList \u003d config.getIgnoreCommitList().stream()"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                .flatMap(x -\u003e CommitHash.getHashes(config.getRepoRoot(), config.getBranch(), x))"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(updatedIgnoreCommitList);"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":430,"author":{"gitId":"-"},"content":"     * Adds {@code configs} that were not successfully cloned from {@code failedRepoLocation}"},{"lineNumber":431,"author":{"gitId":"-"},"content":"     * into the list of errors in the summary report and removes them from the list of {@code configs}."},{"lineNumber":432,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":433,"author":{"gitId":"sikai00"},"content":"    private void handleCloningFailed(List\u003cRepoConfiguration\u003e configs, RepoLocation failedRepoLocation) {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e failedConfigs \u003d configs.stream()"},{"lineNumber":435,"author":{"gitId":"-"},"content":"                .filter(config -\u003e config.getLocation().equals(failedRepoLocation))"},{"lineNumber":436,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        handleFailedConfigs(configs, failedConfigs, String.format(LOG_ERROR_CLONING, failedRepoLocation));"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":441,"author":{"gitId":"-"},"content":"     * Adds {@code failedConfig} that failed analysis into the list of errors in the summary report along with"},{"lineNumber":442,"author":{"gitId":"-"},"content":"     * an {@code errorMessage} and removes {@code failedConfig} from the list of {@code configs}."},{"lineNumber":443,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":444,"author":{"gitId":"sikai00"},"content":"    private void handleAnalysisFailed(List\u003cRepoConfiguration\u003e configs, RepoConfiguration failedConfig,"},{"lineNumber":445,"author":{"gitId":"-"},"content":"            String errorMessage) {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        handleFailedConfigs(configs, Collections.singletonList(failedConfig), errorMessage);"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":450,"author":{"gitId":"-"},"content":"     * Adds {@code failedConfigs} that failed cloning/analysis into the list of errors in the summary report along"},{"lineNumber":451,"author":{"gitId":"-"},"content":"     * with an {@code errorMessage} and removes {@code failedConfigs} from the list of {@code configs}."},{"lineNumber":452,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":453,"author":{"gitId":"sikai00"},"content":"    private void handleFailedConfigs(List\u003cRepoConfiguration\u003e configs, List\u003cRepoConfiguration\u003e failedConfigs,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"            String errorMessage) {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        Iterator\u003cRepoConfiguration\u003e itr \u003d configs.iterator();"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        while (itr.hasNext()) {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"            RepoConfiguration config \u003d itr.next();"},{"lineNumber":458,"author":{"gitId":"-"},"content":"            if (failedConfigs.contains(config)) {"},{"lineNumber":459,"author":{"gitId":"-"},"content":"                ErrorSummary.getInstance().addErrorMessage(config.getDisplayName(), errorMessage);"},{"lineNumber":460,"author":{"gitId":"-"},"content":"                itr.remove();"},{"lineNumber":461,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":464,"author":{"gitId":"-"},"content":""},{"lineNumber":465,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":466,"author":{"gitId":"-"},"content":"     * Generates an empty report at the {@code repoReportDirectory}, with the author display name"},{"lineNumber":467,"author":{"gitId":"-"},"content":"     * as {@code displayName}."},{"lineNumber":468,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":469,"author":{"gitId":"-"},"content":"     * @return A list of paths to the JSON report files generated for this empty report."},{"lineNumber":470,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":471,"author":{"gitId":"sikai00"},"content":"    private List\u003cPath\u003e generateEmptyRepoReport(String repoReportDirectory, String displayName) {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        CommitReportJson emptyCommitReportJson \u003d new CommitReportJson(displayName);"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        FileUtil.writeJsonFile(emptyCommitReportJson, getIndividualCommitsPath(repoReportDirectory))"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                .ifPresent(generatedFiles::add);"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        FileUtil.writeJsonFile(Collections.emptyList(), getIndividualAuthorshipPath(repoReportDirectory))"},{"lineNumber":478,"author":{"gitId":"-"},"content":"                .ifPresent(generatedFiles::add);"},{"lineNumber":479,"author":{"gitId":"-"},"content":""},{"lineNumber":480,"author":{"gitId":"-"},"content":"        return generatedFiles;"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":484,"author":{"gitId":"-"},"content":"     * Generates a report for a single repository at {@code repoReportDirectory} based on {@code commitSummary}"},{"lineNumber":485,"author":{"gitId":"-"},"content":"     * and {@code authorshipSummary}."},{"lineNumber":486,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":487,"author":{"gitId":"-"},"content":"     * @return A list of paths to the JSON report files generated for this report."},{"lineNumber":488,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":489,"author":{"gitId":"sikai00"},"content":"    private List\u003cPath\u003e generateIndividualRepoReport(String repoReportDirectory,"},{"lineNumber":490,"author":{"gitId":"-"},"content":"            CommitContributionSummary commitSummary, AuthorshipSummary authorshipSummary) {"},{"lineNumber":491,"author":{"gitId":"-"},"content":"        CommitReportJson commitReportJson \u003d new CommitReportJson(commitSummary, authorshipSummary);"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"        List\u003cPath\u003e generatedFiles \u003d new ArrayList\u003c\u003e();"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        FileUtil.writeJsonFile(commitReportJson, getIndividualCommitsPath(repoReportDirectory))"},{"lineNumber":495,"author":{"gitId":"-"},"content":"                .ifPresent(generatedFiles::add);"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        FileUtil.writeJsonFile(authorshipSummary.getFileResults(), getIndividualAuthorshipPath(repoReportDirectory))"},{"lineNumber":497,"author":{"gitId":"-"},"content":"                .ifPresent(generatedFiles::add);"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        return generatedFiles;"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":502,"author":{"gitId":"-"},"content":"     * Creates the .git-blame-ignore-revs file containing the contents of {@code ignoreCommitList}"},{"lineNumber":503,"author":{"gitId":"-"},"content":"     * in the repo root directory of {@code config}."},{"lineNumber":504,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":505,"author":{"gitId":"sikai00"},"content":"    private void generateIgnoreRevsFile(RepoConfiguration config) {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        List\u003cCommitHash\u003e expandedIgnoreCommitList \u003d config.getIgnoreCommitList().stream()"},{"lineNumber":507,"author":{"gitId":"-"},"content":"                .map(CommitHash::toString)"},{"lineNumber":508,"author":{"gitId":"-"},"content":"                .map(commitHash -\u003e {"},{"lineNumber":509,"author":{"gitId":"-"},"content":"                    try {"},{"lineNumber":510,"author":{"gitId":"-"},"content":"                        return GitShow.getExpandedCommitHash(config.getRepoRoot(), commitHash);"},{"lineNumber":511,"author":{"gitId":"-"},"content":"                    } catch (CommitNotFoundException e) {"},{"lineNumber":512,"author":{"gitId":"-"},"content":"                        logger.warning(String.format(LOG_ERROR_EXPANDING_COMMIT, commitHash));"},{"lineNumber":513,"author":{"gitId":"-"},"content":"                        return new CommitHash(commitHash);"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":515,"author":{"gitId":"-"},"content":"                })"},{"lineNumber":516,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(expandedIgnoreCommitList);"},{"lineNumber":519,"author":{"gitId":"-"},"content":"        FileUtil.writeIgnoreRevsFile(getIgnoreRevsFilePath(config.getRepoRoot()), config.getIgnoreCommitList());"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":521,"author":{"gitId":"-"},"content":""},{"lineNumber":522,"author":{"gitId":"sikai00"},"content":"    private String getSummaryResultPath(String targetFileLocation) {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"        return targetFileLocation + \"/\" + SummaryJson.SUMMARY_JSON_FILE_NAME;"},{"lineNumber":524,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":525,"author":{"gitId":"-"},"content":""},{"lineNumber":526,"author":{"gitId":"sikai00"},"content":"    private String getIgnoreRevsFilePath(String targetFileLocation) {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        return targetFileLocation + GitBlame.IGNORE_COMMIT_LIST_FILE_NAME;"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":529,"author":{"gitId":"-"},"content":""},{"lineNumber":530,"author":{"gitId":"sikai00"},"content":"    private String getIndividualAuthorshipPath(String repoReportDirectory) {"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        return repoReportDirectory + \"/authorship.json\";"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":533,"author":{"gitId":"-"},"content":""},{"lineNumber":534,"author":{"gitId":"sikai00"},"content":"    private String getIndividualCommitsPath(String repoReportDirectory) {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        return repoReportDirectory + \"/commits.json\";"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"sikai00"},"content":"    public void setEarliestSinceDate(LocalDateTime newEarliestSinceDate) {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        if (earliestSinceDate \u003d\u003d null || newEarliestSinceDate.compareTo(earliestSinceDate) \u003c 0) {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"            earliestSinceDate \u003d newEarliestSinceDate;"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":543,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":30,"-":513}},{"path":"src/main/java/reposense/system/LogsManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.system;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import java.nio.file.StandardCopyOption;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Handler;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import java.util.stream.Collectors;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Configures and manages the loggers and handlers, including their levels."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class LogsManager {"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Whenever the log file size exceeds {@code MAX_FILE_SIZE_IN_BYTES} it rolls over to another file"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // The maximum number of files to store the logs is {@code FILE_COUNT}"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final int FILE_COUNT \u003d 2;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final int MEGABYTE \u003d (1 \u003c\u003c 20);"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d 5 * MEGABYTE; // 5MB"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final ArrayList\u003cLogger\u003e LOGGER_LIST \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // All the log files will be store with a .log extension"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // eg. reposense.log.0, in the logs/ folder of the working directory"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    private static final String LOG_FOLDER_NAME \u003d \"reposense-logs\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE_NAME \u003d \"reposense.log\";"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    private static final Path TEMP_LOG_DIR \u003d Paths.get(System.getProperty(\"user.dir\"));"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static Path logFolderLocation;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static Level currentConsoleLogLevel \u003d Level.INFO;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static Level currentFileLogLevel \u003d Level.INFO;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        removeHandlers(logger);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        addFileHandler(logger);"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        synchronized (LOGGER_LIST) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            LOGGER_LIST.add(logger);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return logger;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@link Logger} for the given {@code clazz} name."},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the {@link ConsoleHandler} to the {@code logger}."},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates the {@link ConsoleHandler} if it is null."},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes all the handlers from {@code logger}."},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Handler[] handlers \u003d logger.getHandlers();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (Handler handler : handlers) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.removeHandler(handler);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Adds the {@link FileHandler} to the {@code logger}."},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates {@link FileHandler} if it is null."},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"        Path path \u003d TEMP_LOG_DIR.resolve(LOG_FOLDER_NAME);"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"            boolean isFileExist \u003d Files.exists(path);"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"            if (!isFileExist) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Files.createDirectories(path);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"            if (!isFileExist) {"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"                logger.info(\"Log temp folder has been successfully created\");"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, e.getMessage(), e);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"MarcusTXK"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"MarcusTXK"},"content":"     * Moves the log file from the temporary directory to the specified output directory."},{"lineNumber":118,"author":{"gitId":"MarcusTXK"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"MarcusTXK"},"content":"     * If the specified output directory is not set (i.e., logFolderLocation is null),"},{"lineNumber":120,"author":{"gitId":"MarcusTXK"},"content":"     * the method does nothing."},{"lineNumber":121,"author":{"gitId":"MarcusTXK"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"MarcusTXK"},"content":"     * Note that this closes the fileHandler."},{"lineNumber":123,"author":{"gitId":"MarcusTXK"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"MarcusTXK"},"content":"    public static void moveLogFileToOutputFolder() {"},{"lineNumber":125,"author":{"gitId":"MarcusTXK"},"content":"        if (logFolderLocation \u003d\u003d null) {"},{"lineNumber":126,"author":{"gitId":"MarcusTXK"},"content":"            getLogger(LogsManager.class.getName())"},{"lineNumber":127,"author":{"gitId":"MarcusTXK"},"content":"                    .warning(\"Log output folder was not set\");"},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"            return;"},{"lineNumber":129,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":131,"author":{"gitId":"MarcusTXK"},"content":"        try {"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"            // Close the FileHandler to release the lock on the log file"},{"lineNumber":133,"author":{"gitId":"MarcusTXK"},"content":"            fileHandler.close();"},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"            Path tempLogDir \u003d TEMP_LOG_DIR.resolve(LOG_FOLDER_NAME);"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"            Path outputLogDir \u003d logFolderLocation.resolve(LOG_FOLDER_NAME);"},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":"            if (!Files.exists(outputLogDir)) {"},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"                Files.createDirectories(outputLogDir);"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"                getLogger(LogsManager.class.getName())"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"                        .info(\"Log output folder has been successfully created\");"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"MarcusTXK"},"content":"            List\u003cPath\u003e logFiles \u003d Files.list(tempLogDir).collect(Collectors.toList());"},{"lineNumber":143,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"            for (Path file : logFiles) {"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":"                Files.move(file, outputLogDir.resolve(file.getFileName()), StandardCopyOption.REPLACE_EXISTING);"},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":148,"author":{"gitId":"MarcusTXK"},"content":"            Files.delete(tempLogDir);"},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"        } catch (IOException e) {"},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":"            getLogger(LogsManager.class.getName())"},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"                    .severe(\"Failed to move log files to output folder: \" + e.getMessage());"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Creates a {@link FileHandler} for the log file."},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file."},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":"        Path path \u003d TEMP_LOG_DIR.resolve(LOG_FOLDER_NAME).resolve(LOG_FILE_NAME);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(path.toString(), MAX_FILE_SIZE_IN_BYTES, FILE_COUNT, true);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentFileLogLevel);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return fileHandler;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Creates a {@link ConsoleHandler} to output the log to console."},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentConsoleLogLevel);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        consoleHandler.setFormatter(new CustomLogFormatter());"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return consoleHandler;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Sets the log folder location using {@code location} and adds file handler with this location to all the loggers"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * created."},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public static void setLogFolderLocation(Path location) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        logFolderLocation \u003d location;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MarcusTXK":55,"-":131}},{"path":"src/main/java/reposense/util/FileUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.FileOutputStream;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.InputStream;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.OutputStream;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.ByteBuffer;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.FileSystems;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.StandardCopyOption;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.logging.Level;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.zip.ZipEntry;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.zip.ZipInputStream;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.zip.ZipOutputStream;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"import com.google.gson.Gson;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import com.google.gson.GsonBuilder;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import com.google.gson.JsonPrimitive;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSerializer;"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import reposense.system.CommandRunner;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import reposense.system.LogsManager;"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Contains file processing related functionalities."},{"lineNumber":43,"author":{"gitId":"-"},"content":" */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class FileUtil {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String REPOS_ADDRESS \u003d \"repos\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // zip file which contains all the specified file types"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ZIP_FILE \u003d \"archive.zip\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(FileUtil.class);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String GITHUB_API_DATE_FORMAT \u003d \"yyyy-MM-dd\";"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final ByteBuffer buffer \u003d ByteBuffer.allocate(1 \u003c\u003c 11); // 2KB"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String BARE_REPO_SUFFIX \u003d \"_bare\";"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String PARTIAL_REPO_SUFFIX \u003d \"_partial\";"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String SHALLOW_PARTIAL_REPO_SUFFIX \u003d \"_shallow_partial\";"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FILE_PATH \u003d \"\\\"%s\\\" is an invalid file path. Skipping this directory.\";"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FAIL_TO_ZIP_FILES \u003d"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \"Exception occurred while attempting to zip the report files.\";"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_FAIL_TO_COPY_ASSETS \u003d"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \"Exception occurred while attempting to copy custom assets.\";"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Zips all files of type {@code fileTypes} that are in the directory {@code pathsToZip} into a single file and"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * output it to {@code sourceAndOutputPath}."},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static void zipFoldersAndFiles(List\u003cPath\u003e pathsToZip, Path sourceAndOutputPath, String... fileTypes) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        zipFoldersAndFiles(pathsToZip, sourceAndOutputPath, sourceAndOutputPath, fileTypes);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Zips all files listed in {@code pathsToZip} of type {@code fileTypes} located in the directory"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code sourcePath} into {@code outputPath}."},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static void zipFoldersAndFiles(List\u003cPath\u003e pathsToZip, Path sourcePath, Path outputPath,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            String... fileTypes) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        try ("},{"lineNumber":79,"author":{"gitId":"-"},"content":"                FileOutputStream fos \u003d new FileOutputStream(outputPath + File.separator + ZIP_FILE);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                ZipOutputStream zos \u003d new ZipOutputStream(fos)"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            for (Path pathToZip : pathsToZip) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                List\u003cPath\u003e allPaths \u003d getFilePaths(pathToZip, fileTypes);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                for (Path path : allPaths) {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    String filePath \u003d sourcePath.relativize(path.toAbsolutePath()).toString();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    String zipEntry \u003d Files.isDirectory(path) ? filePath + File.separator : filePath;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                    zos.putNextEntry(new ZipEntry(zipEntry.replace(\"\\\\\", \"/\")));"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    if (Files.isRegularFile(path)) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                        Files.copy(path, zos);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    zos.closeEntry();"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            logger.severe(MESSAGE_FAIL_TO_ZIP_FILES);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Writes the JSON file representing the {@code object} at the given {@code path}."},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @return An {@link Optional} containing the {@link Path} to the JSON file, or an empty {@link Optional} if there"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * was an error while writing the JSON file."},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Optional\u003cPath\u003e writeJsonFile(Object object, String path) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Gson gson \u003d new GsonBuilder()"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .registerTypeAdapter(LocalDateTime.class, (JsonSerializer\u003cLocalDateTime\u003e) (date, typeOfSrc, context)"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                        -\u003e new JsonPrimitive(date.format(DateTimeFormatter.ofPattern(GITHUB_API_DATE_FORMAT))))"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .registerTypeAdapter(FileType.class, new FileType.FileTypeSerializer())"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .registerTypeAdapter(ZoneId.class, (JsonSerializer\u003cZoneId\u003e) (zoneId, typeOfSrc, context)"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                        -\u003e new JsonPrimitive(zoneId.toString()))"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .create();"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Gson serializer from:"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // https://stackoverflow.com/questions/39192945/serialize-java-8-localdate-as-yyyy-mm-dd-with-gson"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String result \u003d gson.toJson(object);"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try (PrintWriter out \u003d new PrintWriter(path)) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            out.print(result);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            out.print(\"\\n\");"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return Optional.of(path).map(Paths::get);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, e.getMessage(), e);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return Optional.empty();"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Writes the ignore revs file containing the {@code ignoreCommitList} at the given {@code path}."},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @return An {@link Optional} containing the {@link Path} to the ignore revs file, or an empty {@link Optional}"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * if there was an error while writing the ignore revs file."},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static Optional\u003cPath\u003e writeIgnoreRevsFile(String path, List\u003cCommitHash\u003e ignoreCommitList) {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String contentOfIgnoreRevsFile \u003d ignoreCommitList.stream()"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .map(CommitHash::toString)"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .reduce(\"\", (hashes, newHash) -\u003e hashes + newHash + \"\\n\");"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try (PrintWriter out \u003d new PrintWriter(path)) {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            out.print(contentOfIgnoreRevsFile);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Optional.of(path).map(Paths::get);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.log(Level.SEVERE, e.getMessage(), e);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return Optional.empty();"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Deletes the {@code root} directory."},{"lineNumber":151,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @throws IOException if the root path does not exist."},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static void deleteDirectory(String root) throws IOException {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        File rootDirectory \u003d Paths.get(root).toFile();"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (rootDirectory.exists()) {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            for (File file : rootDirectory.listFiles()) {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                if (file.isDirectory()) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    deleteDirectory(file.toString());"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                } else {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    file.delete();"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            rootDirectory.delete();"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            if (rootDirectory.exists()) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                throw new IOException(String.format(\"Fail to delete directory %s\", rootDirectory));"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Unzips the contents of the {@code zipSourcePath} into {@code outputPath}."},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code zipSourcePath} is an invalid path."},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static void unzip(Path zipSourcePath, Path outputPath) throws IOException {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try (InputStream is \u003d Files.newInputStream(zipSourcePath)) {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            unzip(is, outputPath);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Unzips the contents of the {@code is} into {@code outputPath}."},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code is} refers to an invalid path."},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static void unzip(InputStream is, Path outputPath) throws IOException {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try (ZipInputStream zis \u003d new ZipInputStream(is)) {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            ZipEntry entry;"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            Files.createDirectories(outputPath);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            while ((entry \u003d zis.getNextEntry()) !\u003d null) {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                Path path \u003d Paths.get(outputPath.toString(), entry.getName());"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                // create the directories of the zip directory"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                if (entry.isDirectory()) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                    Files.createDirectories(path.toAbsolutePath());"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                    zis.closeEntry();"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                if (!Files.exists(path.getParent())) {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                    Files.createDirectories(path.getParent());"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                try (OutputStream output \u003d Files.newOutputStream(path)) {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                    int length;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                    while ((length \u003d zis.read(buffer.array())) \u003e 0) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                        output.write(buffer.array(), 0, length);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                zis.closeEntry();"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Copies the template files from the {@code is} to the {@code outputPath}."},{"lineNumber":215,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code is} refers to an invalid path."},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public static void copyTemplate(InputStream is, String outputPath) throws IOException {"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        FileUtil.unzip(is, Paths.get(outputPath));"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Copies files from {@code sourcePath} to the {@code outputPath}."},{"lineNumber":224,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code is} refers to an invalid path."},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public static void copyDirectoryContents(String sourcePath, String outputPath) throws IOException {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        copyDirectoryContents(sourcePath, outputPath, null);"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * Copies files from {@code sourcePath} to the {@code outputPath}."},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * If {@code whiteList} is provided, only filenames specified by the whitelist will be copied."},{"lineNumber":234,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * @throws IOException if {@code is} refers to an invalid path."},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public static void copyDirectoryContents(String sourcePath, String outputPath, List\u003cString\u003e whiteList)"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            throws IOException {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        Path source \u003d Paths.get(sourcePath);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Path out \u003d Paths.get(outputPath);"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"        Files.walk(source, 1).skip(1).forEach(file -\u003e {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            if (whiteList \u003d\u003d null || whiteList !\u003d null \u0026\u0026 whiteList.contains(file.getFileName().toString())) {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                try {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    Files.copy(file, out.resolve(source.relativize(file)), StandardCopyOption.REPLACE_EXISTING);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                } catch (IOException ioe) {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    logger.severe(MESSAGE_FAIL_TO_COPY_ASSETS);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * Creates the {@code dest} directory if it does not exist."},{"lineNumber":254,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * @throws IOException if the directory could not be created."},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public static void createDirectory(Path dest) throws IOException {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        Files.createDirectories(dest);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * Returns the relative path to the bare repo version of {@code config}."},{"lineNumber":263,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    public static Path getRepoParentFolder(RepoConfiguration config) {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        return Paths.get(FileUtil.REPOS_ADDRESS, config.getRepoFolderName());"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * Returns the relative path to the bare repo version of {@code config}."},{"lineNumber":270,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    public static Path getBareRepoPath(RepoConfiguration config) {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        return Paths.get(FileUtil.REPOS_ADDRESS,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                config.getRepoFolderName(), config.getRepoName() + BARE_REPO_SUFFIX);"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * Returns the relative path to the partial bare repo version of {@code config}."},{"lineNumber":278,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public static Path getPartialBareRepoPath(RepoConfiguration config) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        return Paths.get(FileUtil.REPOS_ADDRESS,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                config.getRepoFolderName(), config.getRepoName() + PARTIAL_REPO_SUFFIX);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":285,"author":{"gitId":"-"},"content":"     * Returns the relative path to the shallow partial bare repo version of {@code config}."},{"lineNumber":286,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public static Path getShallowPartialBareRepoPath(RepoConfiguration config) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        return Paths.get(FileUtil.REPOS_ADDRESS,"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                config.getRepoFolderName(), config.getRepoName() + SHALLOW_PARTIAL_REPO_SUFFIX);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * Returns the folder name of the bare repo version of {@code config}."},{"lineNumber":294,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public static String getBareRepoFolderName(RepoConfiguration config) {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        return config.getRepoName() + BARE_REPO_SUFFIX;"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":300,"author":{"gitId":"-"},"content":"     * Returns the folder name of the partial bare repo version of {@code config}."},{"lineNumber":301,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    public static String getPartialBareRepoFolderName(RepoConfiguration config) {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        return config.getRepoName() + PARTIAL_REPO_SUFFIX;"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":307,"author":{"gitId":"-"},"content":"     * Returns the folder name of the shallow partial bare repo version of {@code config}."},{"lineNumber":308,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public static String getShallowPartialBareRepoFolderName(RepoConfiguration config) {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        return config.getRepoName() + SHALLOW_PARTIAL_REPO_SUFFIX;"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":314,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} is a valid path."},{"lineNumber":315,"author":{"gitId":"-"},"content":"     * Produces log messages when the invalid file path is skipped."},{"lineNumber":316,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    public static boolean isValidPathWithLogging(String path) {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            Paths.get(path);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            logger.log(Level.WARNING, String.format(MESSAGE_INVALID_FILE_PATH, path));"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":328,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} is a valid path."},{"lineNumber":329,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"            Paths.get(path);"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public static boolean isEmptyFile(String directoryPath, String relativeFilePath) {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        return (new File(directoryPath, relativeFilePath).length() \u003d\u003d 0);"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":344,"author":{"gitId":"-"},"content":"     * Returns the Bash expanded version of the {@code filePath}."},{"lineNumber":345,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    public static String getVariableExpandedFilePath(String filePath) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        String echoOutput \u003d CommandRunner.runCommand(Paths.get(\".\"), \"echo \" + filePath);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        // CommandRunner returns some white space characters at the end"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        return echoOutput.trim();"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":353,"author":{"gitId":"-"},"content":"     *  Returns true if {@code relativePath} has been specified to be ignored in the {@code config}."},{"lineNumber":354,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    public static boolean isFileIgnoredByGlob(RepoConfiguration config, Path relativePath) {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        boolean hasNoGlobMatches \u003d config.getIgnoreGlobList().stream()"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                .map(glob -\u003e FileSystems.getDefault().getPathMatcher(\"glob:\" + glob))"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                .filter(pathMatcher -\u003e pathMatcher.matches(relativePath))"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()).isEmpty();"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        return !hasNoGlobMatches;"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":364,"author":{"gitId":"-"},"content":"     * Returns a list of {@link Path} of {@code fileTypes} contained in the given {@code directoryPath} directory."},{"lineNumber":365,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":366,"author":{"gitId":"-"},"content":"     * @throws IOException if an error occurs while trying to access {@code directoryPath}."},{"lineNumber":367,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    private static List\u003cPath\u003e getFilePaths(Path directoryPath, String... fileTypes) throws IOException {"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        return Files.walk(directoryPath)"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                .filter(p -\u003e FileUtil.isFileTypeInPath(p, fileTypes) || Files.isDirectory(p))"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":375,"author":{"gitId":"-"},"content":"     * Returns true if the {@code path} contains one of the {@code fileTypes} extension."},{"lineNumber":376,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    private static boolean isFileTypeInPath(Path path, String... fileTypes) {"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        return Arrays.stream(fileTypes).anyMatch(path.toString()::endsWith);"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":380,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":381,"author":{"gitId":"sikai00"},"content":"    /**"},{"lineNumber":382,"author":{"gitId":"sikai00"},"content":"     * Returns true if the {@code path} exists corresponding to the given String."},{"lineNumber":383,"author":{"gitId":"sikai00"},"content":"     */"},{"lineNumber":384,"author":{"gitId":"sikai00"},"content":"    public static boolean pathExists(String path) {"},{"lineNumber":385,"author":{"gitId":"sikai00"},"content":"        boolean isValidPathLocation;"},{"lineNumber":386,"author":{"gitId":"sikai00"},"content":"        try {"},{"lineNumber":387,"author":{"gitId":"sikai00"},"content":"            Path pathLocation \u003d Paths.get(path);"},{"lineNumber":388,"author":{"gitId":"sikai00"},"content":"            isValidPathLocation \u003d Files.exists(pathLocation);"},{"lineNumber":389,"author":{"gitId":"sikai00"},"content":"        } catch (InvalidPathException ipe) {"},{"lineNumber":390,"author":{"gitId":"sikai00"},"content":"            isValidPathLocation \u003d false;"},{"lineNumber":391,"author":{"gitId":"sikai00"},"content":"        }"},{"lineNumber":392,"author":{"gitId":"sikai00"},"content":"        return isValidPathLocation;"},{"lineNumber":393,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":394,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":14,"-":380}},{"path":"src/main/java/reposense/util/TimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.ResolverStyle;"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import java.util.logging.Logger;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.parser.types.SinceDateArgumentType;"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import reposense.system.LogsManager;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains time related functionalities."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class TimeUtil {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static Long startTime;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String DATE_FORMAT_REGEX \u003d"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \"^((0?[1-9]|[12][0-9]|3[01])\\\\/(0?[1-9]|1[012])\\\\/(19|2[0-9])[0-9]{2})\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // \"uuuu\" is used for year since \"yyyy\" does not work with ResolverStyle.STRICT"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter CLI_ARGS_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/uuuu HH:mm:ss\");"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    private static final String EARLIEST_VALID_DATE \u003d \"1970-01-01T00:00:00\";"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    private static final String LATEST_VALID_DATE \u003d \"2099-12-31T23:59:59\";"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    private static final String MESSAGE_SINCE_DATE_EARLIER_THAN_EARLIEST_VALID_DATE \u003d"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"            \"Date of %s must not be earlier than \""},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"            + String.format(\"%s, resetting it to earliest valid date\", EARLIEST_VALID_DATE);"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    private static final String MESSAGE_UNTIL_DATE_LATER_THAN_LATEST_VALID_DATE \u003d"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"            \"Date of %s must not be later than \""},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"            + String.format(\"%s, resetting it to latest valid date\", LATEST_VALID_DATE);"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    private static final Logger logger \u003d LogsManager.getLogger(TimeUtil.class);"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the {@code startTime} to be the current time."},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void startTimer() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        startTime \u003d System.nanoTime();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the formatted elapsed time from {@code startTime} until current time."},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getElapsedTime() {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        long endTime \u003d System.nanoTime();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        double elapsedTime \u003d (double) (endTime - startTime) / 1_000_000_000.0;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int elapsedHours \u003d (int) elapsedTime / 3600;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        int elapsedMinutes \u003d (int) (elapsedTime % 3600) / 60;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        double elapsedSeconds \u003d elapsedTime % 60;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String formattedElapsedTime \u003d \"\";"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (elapsedHours \u003e 0) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            formattedElapsedTime +\u003d String.format(\" %d hour(s)\", elapsedHours);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (elapsedMinutes \u003e 0) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            formattedElapsedTime +\u003d String.format(\" %d minute(s)\", elapsedMinutes);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        formattedElapsedTime +\u003d String.format(\" %.2f second(s)\", elapsedSeconds);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return formattedElapsedTime;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns the formatted elapsed time from {@code startTime} until current time,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * with an additional explanatory string."},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String getElapsedTimeMessage() {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return \"Elapsed processing time:\" + getElapsedTime();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"     * Returns a valid {@link LocalDateTime} that is set to midnight for the given {@code sinceDate}."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static LocalDateTime getSinceDate(LocalDateTime sinceDate) {"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"        return getValidDate(sinceDate).withHour(0).withMinute(0).withSecond(0);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"     * Returns a valid {@link LocalDateTime} that is set to 23:59:59 for the given {@code untilDate}."},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static LocalDateTime getUntilDate(LocalDateTime untilDate) {"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"        return getValidDate(untilDate).withHour(23).withMinute(59).withSecond(59);"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"     * Returns a valid {@link LocalDateTime} that is within {@value EARLIEST_VALID_DATE} and {@value LATEST_VALID_DATE}."},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"     * Resets {@code date} passed the closest valid date if it exceeds the date range."},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"    public static LocalDateTime getValidDate(LocalDateTime date) {"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"        if (date.isBefore(LocalDateTime.parse(EARLIEST_VALID_DATE))) {"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"            logger.warning(String.format(MESSAGE_SINCE_DATE_EARLIER_THAN_EARLIEST_VALID_DATE, date));"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"            return LocalDateTime.parse(EARLIEST_VALID_DATE);"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"        if (date.isAfter(LocalDateTime.parse(LATEST_VALID_DATE))) {"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"            logger.warning(String.format(MESSAGE_UNTIL_DATE_LATER_THAN_LATEST_VALID_DATE, date));"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"            return LocalDateTime.parse(LATEST_VALID_DATE);"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"        return date;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns a {@link LocalDateTime} that is one month before {@code cliUntilDate} (if present) or one month"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * before report generation date otherwise."},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static LocalDateTime getDateMinusAMonth(LocalDateTime cliUntilDate) {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return getSinceDate(cliUntilDate.minusMonths(1));"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns a {@link LocalDateTime} that is {@code numOfDays} before {@code cliUntilDate} (if present) or one month"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * before report generation date otherwise."},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static LocalDateTime getDateMinusNDays(LocalDateTime cliUntilDate, int numOfDays) {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return getSinceDate(cliUntilDate.minusDays(numOfDays));"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns a {@link LocalDateTime} that is {@code numOfDays} after {@code cliSinceDate} (if present)."},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static LocalDateTime getDatePlusNDays(LocalDateTime cliSinceDate, int numOfDays) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return getUntilDate(cliSinceDate.plusDays(numOfDays));"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns current date with time set to 23:59:59. The time zone is adjusted to the given {@code zoneId}."},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static LocalDateTime getCurrentDate(ZoneId zoneId) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return LocalDateTime.now(zoneId).withHour(23).withMinute(59).withSecond(59).withNano(0);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns the {@link LocalDateTime} of {@code ARBITRARY_FIRST_COMMIT_DATE} in the UTC time zone."},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static LocalDateTime getArbitraryFirstCommitDateLocal() {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return SinceDateArgumentType.getArbitraryFirstCommitDateLocal();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns the {@link LocalDateTime} of {@code ARBITRARY_FIRST_COMMIT_DATE} adjusted for the time zone based on"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code toZoneId}."},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static LocalDateTime getArbitraryFirstCommitDateConverted(ZoneId toZoneId) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return SinceDateArgumentType.getArbitraryFirstCommitDateConverted(toZoneId);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Checks whether the given {@code dateTime} is the {@code ARBITRARY_FIRST_COMMIT_DATE} in UTC time."},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static boolean isEqualToArbitraryFirstDateUtc(LocalDateTime dateTime) {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return dateTime.equals(getArbitraryFirstCommitDateLocal());"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Checks whether the given {@code dateTime} is the {@code ARBITRARY_FIRST_COMMIT_DATE} in the time zone given by"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * {@code zoneId}."},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public static boolean isEqualToArbitraryFirstDateConverted(LocalDateTime dateTime, ZoneId zoneId) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return dateTime.equals(getArbitraryFirstCommitDateConverted(zoneId));"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Extracts the first substring of {@code date} string that matches the {@code DATE_FORMAT_REGEX}."},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static String extractDate(String date) {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d Pattern.compile(DATE_FORMAT_REGEX).matcher(date);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String extractedDate \u003d date;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (matcher.find()) {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            extractedDate \u003d matcher.group(1);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return extractedDate;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Parses the given {@code date} string as a {@link LocalDateTime} based on the {@code CLI_ARGS_DATE_FORMAT}."},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Uses {@link ResolverStyle#STRICT} to avoid unexpected dates like 31/02/2020."},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @throws java.text.ParseException if date cannot be parsed by the required format."},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public static LocalDateTime parseDate(String date) throws java.text.ParseException {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return LocalDateTime.parse(date, CLI_ARGS_DATE_FORMAT.withResolverStyle(ResolverStyle.STRICT));"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            throw new java.text.ParseException(String.format("},{"lineNumber":189,"author":{"gitId":"-"},"content":"                    \"Exception message: %s\\n\", e.getMessage()), e.getErrorIndex());"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MarcusTXK":33,"-":159}},{"path":"src/systemtest/java/reposense/LocalRepoSystemTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterAll;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.parallel.Execution;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.parallel.ExecutionMode;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.SupportedDomainUrlMap;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.parser.types.SinceDateArgumentType;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.report.ErrorSummary;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.util.SystemTestUtil;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.util.TestRepoCloner;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"@Execution(ExecutionMode.SAME_THREAD)"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LocalRepoSystemTest {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String LOCAL_DIRECTORY_ONE_PARENT \u003d \"parent1\";"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String LOCAL_DIRECTORY_TWO_PARENT \u003d \"parent2\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String LOCAL_DIRECTORY_ONE \u003d \"parent1/test-repo\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String LOCAL_DIRECTORY_TWO \u003d \"parent2/test-repo\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"    private static final String LAST_COMMIT_DATE \u003d \"31/01/2023\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String OUTPUT_DIRECTORY \u003d \"local-test\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String TIME_ZONE \u003d \"UTC+08\";"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Path REPORT_DIRECTORY_PATH \u003d Paths.get(OUTPUT_DIRECTORY, \"reposense-report\");"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @BeforeAll"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static void setupLocalRepos() throws Exception {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        TestRepoCloner.clone("},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new RepoConfiguration.Builder()"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        .location(new RepoLocation(\"https://github.com/reposense/testrepo-Alpha\"))"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        .build(),"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                Paths.get(\".\"), LOCAL_DIRECTORY_ONE"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        TestRepoCloner.clone("},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new RepoConfiguration.Builder()"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        .location(new RepoLocation(\"https://github.com/reposense/testrepo-Alpha\"))"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        .build(),"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                Paths.get(\".\"), LOCAL_DIRECTORY_TWO"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setupLocalTest() throws Exception {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        SupportedDomainUrlMap.clearAccessedSet();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(OUTPUT_DIRECTORY);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ErrorSummary.getInstance().clearErrorSet();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @AfterEach"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void deleteReportDirectory() throws Exception {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(OUTPUT_DIRECTORY);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @AfterAll"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static void deleteClonedLocalRepos() throws Exception {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(LOCAL_DIRECTORY_ONE_PARENT);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FileUtil.deleteDirectory(LOCAL_DIRECTORY_TWO_PARENT);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void testSameFinalDirectory() {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d new InputBuilder()"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .addRepos(LOCAL_DIRECTORY_ONE, LOCAL_DIRECTORY_TWO)"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .addSinceDate(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND)"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .addUntilDate(LAST_COMMIT_DATE)"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .addOutput(Paths.get(OUTPUT_DIRECTORY))"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .addTimezone(TIME_ZONE);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        runTest(inputBuilder, \"LocalRepoSystemTest/testSameFinalDirectory\");"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void testRelativePathing() {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String relativePathForTesting \u003d \"parent1/../parent1/./test-repo\";"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"        InputBuilder inputBuilder \u003d new InputBuilder()"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .addRepos(relativePathForTesting)"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .addSinceDate(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND)"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .addUntilDate(LAST_COMMIT_DATE)"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .addOutput(Paths.get(OUTPUT_DIRECTORY))"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .addTimezone(TIME_ZONE);"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        runTest(inputBuilder, \"LocalRepoSystemTest/testRelativePathing\");"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Runs RepoSense with {@code inputBuilder} and tests it against the expected"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * files in {@code expectedFilesPathString}."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void runTest(InputBuilder inputBuilder, String expectedFilesPathString) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        RepoSense.main(translateCommandline(inputBuilder.build()));"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path expectedFilesPath \u003d loadResource(getClass(), expectedFilesPathString);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        SystemTestUtil.verifyReportJsonFiles(expectedFilesPath, REPORT_DIRECTORY_PATH);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":1,"-":107}},{"path":"src/test/java/reposense/authorship/AnnotatorAnalyzerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.model.Author.UNKNOWN_AUTHOR;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.Month;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.authorship.analyzer.AnnotatorAnalyzer;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AnnotatorAnalyzerTest extends GitTestTemplate {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final LocalDateTime SINCE_DATE \u003d TestUtil.getSinceDate(2018, Month.FEBRUARY.getValue(), 8);"},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"    private static final LocalDateTime UNTIL_DATE \u003d TestUtil.getUntilDate(2023, Month.JANUARY.getValue(), 31);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_OVERRIDE_AUTHORSHIP_TEST \u003d {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"            UNCONVENTIONAL_AUTHOR, UNCONVENTIONAL_AUTHOR, UNCONVENTIONAL_AUTHOR, UNCONVENTIONAL_AUTHOR,"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"            UNCONVENTIONAL_AUTHOR,"},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"            FAKE_AUTHOR,"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"            WHITESPACE_AUTHOR, WHITESPACE_AUTHOR, WHITESPACE_AUTHOR,"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_DISOWN_CODE_TEST \u003d {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR,"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"            FAKE_AUTHOR,"},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"            UNKNOWN_AUTHOR, UNKNOWN_AUTHOR, UNKNOWN_AUTHOR,"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"            FAKE_AUTHOR, FAKE_AUTHOR"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        config \u003d configs.get();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        config.setSinceDate(SINCE_DATE);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config.setUntilDate(UNTIL_DATE);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID);"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"        config.setHasAuthorConfigFile(AuthorConfiguration.DEFAULT_HAS_AUTHOR_CONFIG_FILE);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @AfterEach"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void after() {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super.after();"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"        config.setHasAuthorConfigFile(AuthorConfiguration.DEFAULT_HAS_AUTHOR_CONFIG_FILE);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void analyzeAnnotation_authorNamePresentInConfig_overrideAuthorship() {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        config.setAuthorList(new ArrayList\u003c\u003e(Arrays.asList(FAKE_AUTHOR)));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"annotationTest.java\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_OVERRIDE_AUTHORSHIP_TEST));"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void analyzeAnnotation_authorNameNotInConfigAndNoAuthorConfigFile_acceptTaggedAuthor() {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        config.setAuthorList(new ArrayList\u003c\u003e(Arrays.asList(FAKE_AUTHOR)));"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"annotationTest.java\");"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_OVERRIDE_AUTHORSHIP_TEST));"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void analyzeAnnotation_authorNameNotInConfigAndHaveAuthorConfigFile_disownCode() {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        config.setAuthorList(new ArrayList\u003c\u003e(Arrays.asList(FAKE_AUTHOR)));"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"        config.setHasAuthorConfigFile(true);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"annotationTest.java\");"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_DISOWN_CODE_TEST));"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchCommentPattern0_returnAuthorName() {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        int index \u003d 0;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        line \u003d \"//@@author fakeAuthor\";"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        line \u003d \"// @@author fakeauthor  \";"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        line \u003d \"  //  @@author   fake-4u-th0r  \";"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":"        line \u003d \"// @@author   fake 4u-th0r\";"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake 4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"        line \u003d \"// @@author   --fake4u-th0r--\";"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"--fake4u-th0r--\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"        line \u003d \"// @@author   --fake--  __4u-th0r--   \";"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"--fake--  __4u-th0r--\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchCommentPattern1_returnAuthorName() {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        int index \u003d 1;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        line \u003d \"/*@@author fakeAuthor\";"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"        line \u003d \"/* @@author fakeauthor  \";"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        line \u003d \"  /*  @@author   fake-4u-th0r  \";"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        line \u003d \"/*@@author fakeAuthor*/\";"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"        line \u003d \"/* @@author fakeauthor */\";"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        line \u003d \"  /*  @@author   fake-4u-th0r  */  \";"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":144,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":145,"author":{"gitId":"sikai00"},"content":"        line \u003d \"/*  @@author   fake  4u-th0r  */\";"},{"lineNumber":146,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":147,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake  4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":148,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":149,"author":{"gitId":"sikai00"},"content":"        line \u003d \"/*  @@author   --_fake4u-th0r  */\";"},{"lineNumber":150,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":151,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"--_fake4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchCommentPattern2_returnAuthorName() {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        int index \u003d 2;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        line \u003d \"#@@author fakeAuthor\";"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        line \u003d \"# @@author fakeauthor  \";"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"        line \u003d \"  #  @@author   fake-4u-th0r  \";"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":169,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":170,"author":{"gitId":"sikai00"},"content":"        line \u003d \"#  @@author   fake  4u-th0r\";"},{"lineNumber":171,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":172,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake  4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":173,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":174,"author":{"gitId":"sikai00"},"content":"        line \u003d \"#  @@author   fake -4u-th0r     \";"},{"lineNumber":175,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":176,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake -4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchCommentPattern3_returnAuthorName() {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        int index \u003d 3;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!--@@author fakeAuthor\";"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!-- @@author fakeauthor  \";"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"sikai00"},"content":"        line \u003d \"\u003c!-- @@author fake  author  \";"},{"lineNumber":192,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":193,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake  author\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":194,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"        line \u003d \"  \u003c!--  @@author   fake-4u-th0r  \";"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!--@@author fakeAuthor--\u003e\";"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!-- @@author fakeauthor --\u003e\";"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"        line \u003d \"  \u003c!--  @@author   fake-4u-th0r  --\u003e  \";"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":210,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":211,"author":{"gitId":"sikai00"},"content":"        line \u003d \"  \u003c!--  @@author   fake-4u-th0r--\u003e  --\u003e  \";"},{"lineNumber":212,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":213,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":214,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":215,"author":{"gitId":"sikai00"},"content":"        line \u003d \"  \u003c!--  @@author   fake-4u-th0r---\u003e  --\u003e  \";"},{"lineNumber":216,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":217,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"fake-4u-th0r-\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchCommentPattern4_returnAuthorName() {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        int index \u003d 4;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        line \u003d \"%@@author fakeAuthor\";"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"        line \u003d \"% @@author fakeauthor  \";"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        line \u003d \" % @@author fake-4u-th0r\";"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":235,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":236,"author":{"gitId":"-"},"content":"        line \u003d \"  %  @@author   fake-4u-th0r  \";"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":239,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":240,"author":{"gitId":"sikai00"},"content":"        line \u003d \"  %  @@author   *()fake-4u-th0r-- %%  \";"},{"lineNumber":241,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":242,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"*()fake-4u-th0r-- %%\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchMarkdownCommentPattern5_returnAuthorName() {"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        int index \u003d 5;"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"        line \u003d \"[//]:#(@@author fakeAuthor\";"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"        line \u003d \"[//]: # (@@author fakeAuthor\";"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"        line \u003d \"[//]: # (@@author fakeauthor   \";"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"        line \u003d \"  [//]:   #   (@@author    fake-4u-th0r  \";"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"        line \u003d \"[//]: # (@@author fakeAuthor)\";"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"        line \u003d \"[//]: # (@@author fakeauthor   )\";"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"        line \u003d \"   [//]:   #   (@@author fake-4u-th0r   )  \";"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"        line \u003d \"   [fake inner text 123+%^\u0026!@#$(`]:   #   (@@author fake-4u-th0r   )  \";"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"        line \u003d \"   [    space   separated   inner   text   ]:   #   (  @@author fake-4u-th0r   )  \";"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    public void extractAuthorName_matchCommentPattern6_returnAuthorName() {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        int index \u003d 6;"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!---@@author fakeAuthor\";"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!--- @@author fakeauthor  \";"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"        line \u003d \"  \u003c!---  @@author   fake-4u-th0r  \";"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!---@@author fakeAuthor---\u003e\";"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeAuthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"        line \u003d \"\u003c!--- @@author fakeauthor ---\u003e\";"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fakeauthor\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"        line \u003d \"  \u003c!---  @@author   fake-4u-th0r  ---\u003e  \";"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(index, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(\"fake-4u-th0r\", AnnotatorAnalyzer.extractAuthorName(line).get());"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    public void extractAuthorName_noAuthorName_returnNull() {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        String line;"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"        line \u003d \"//@@author\";"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(0, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"        line \u003d \"/*@@author \";"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"        line \u003d \"/* @@author*/ \";"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"        line \u003d \"#@@author \";"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"        line \u003d \"  \u003c!--@@author --\u003e \";"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"        line \u003d \"% @@author \";"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"        line \u003d \"[//]: # (@@author)\";"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"        line \u003d \"  \u003c!---@@author ---\u003e \";"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, AnnotatorAnalyzer.getCommentTypeIndex(line));"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(AnnotatorAnalyzer.extractAuthorName(line).isPresent());"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern0_success() {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(0, AnnotatorAnalyzer.getCommentTypeIndex(\"//@@author fakeAuthor\"));"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(0, AnnotatorAnalyzer.getCommentTypeIndex(\"// @@author fakeAuthor\"));"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(0, AnnotatorAnalyzer.getCommentTypeIndex(\"   // @@author fakeAuthor\"));"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(0, AnnotatorAnalyzer.getCommentTypeIndex(\"   //    @@author  fakeAuthor     \"));"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern1_success() {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, AnnotatorAnalyzer.getCommentTypeIndex(\"/*@@author fakeAuthor\"));"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, AnnotatorAnalyzer.getCommentTypeIndex(\"/* @@author fakeAuthor\"));"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, AnnotatorAnalyzer.getCommentTypeIndex(\"   /* @@author fakeAuthor*/\"));"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, AnnotatorAnalyzer.getCommentTypeIndex(\"   /*  @@author  fakeAuthor  */  \"));"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern2_success() {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, AnnotatorAnalyzer.getCommentTypeIndex(\"#@@author fakeAuthor\"));"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, AnnotatorAnalyzer.getCommentTypeIndex(\"# @@author fakeAuthor\"));"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, AnnotatorAnalyzer.getCommentTypeIndex(\"   # @@author fakeAuthor\"));"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, AnnotatorAnalyzer.getCommentTypeIndex(\"   #    @@author  fakeAuthor     \"));"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern3_success() {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, AnnotatorAnalyzer.getCommentTypeIndex(\"\u003c!--@@author fakeAuthor\"));"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, AnnotatorAnalyzer.getCommentTypeIndex(\"\u003c!-- @@author fakeAuthor\"));"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, AnnotatorAnalyzer.getCommentTypeIndex(\"   \u003c!-- @@author fakeAuthor--\u003e\"));"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, AnnotatorAnalyzer.getCommentTypeIndex(\"   \u003c!--  @@author  fakeAuthor  --\u003e  \"));"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern4_success() {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, AnnotatorAnalyzer.getCommentTypeIndex(\"%@@author fakeAuthor\"));"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, AnnotatorAnalyzer.getCommentTypeIndex(\"% @@author fakeAuthor\"));"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, AnnotatorAnalyzer.getCommentTypeIndex(\"   % @@author fakeAuthor\"));"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, AnnotatorAnalyzer.getCommentTypeIndex(\"   %    @@author  fakeAuthor     \"));"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern5_success() {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, AnnotatorAnalyzer.getCommentTypeIndex(\"[//]:#(@@author fakeAuthor)\"));"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, AnnotatorAnalyzer.getCommentTypeIndex(\"[//]: # (@@author fakeAuthor)\"));"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, AnnotatorAnalyzer.getCommentTypeIndex(\"   [//]:  #  (@@author fakeAuthor)  \"));"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, AnnotatorAnalyzer.getCommentTypeIndex(\"   [//]:  #  (  @@author   fakeAuthor  )  \"));"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":401,"author":{"gitId":"-"},"content":""},{"lineNumber":402,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    public void getCommentType_matchCommentPattern6_success() {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, AnnotatorAnalyzer.getCommentTypeIndex(\"\u003c!---@@author fakeAuthor\"));"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, AnnotatorAnalyzer.getCommentTypeIndex(\"\u003c!--- @@author fakeAuthor\"));"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, AnnotatorAnalyzer.getCommentTypeIndex(\"   \u003c!--- @@author fakeAuthor---\u003e\"));"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, AnnotatorAnalyzer.getCommentTypeIndex(\"   \u003c!---  @@author  fakeAuthor  ---\u003e  \"));"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    public void getCommentType_invalidCommentPattern_returnMinus1() {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"@@author fakeAuthor\"));"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"/@@author fakeAuthor\"));"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"@@author fakeAuthor */\"));"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"# something @@author fakeAuthor\"));"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"something % @@author fakeAuthor\"));"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"\u003c!--@@authorfakeAuthor--\u003e\"));"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    public void getCommentType_invalidMarkdownCommentPattern_returnMinus1() {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"@@author fakeAuthor\"));"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"/@@author fakeAuthor\"));"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"@@author fakeAuthor */\"));"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"# something @@author fakeAuthor\"));"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"something % @@author fakeAuthor\"));"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"\u003c!--@@authorfakeAuthor--\u003e\"));"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(-1, AnnotatorAnalyzer.getCommentTypeIndex(\"[//]: # (@@authorfakeAuthor)\"));"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":430,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":57,"-":373}},{"path":"src/test/java/reposense/authorship/FileAnalyzerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Month;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class FileAnalyzerTest extends GitTestTemplate {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final LocalDateTime BLAME_TEST_SINCE_DATE \u003d"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2018, Month.FEBRUARY.getValue(), 6);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final LocalDateTime BLAME_TEST_UNTIL_DATE \u003d"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2018, Month.FEBRUARY.getValue(), 8);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final LocalDateTime PREVIOUS_AUTHOR_BLAME_TEST_SINCE_DATE \u003d"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2018, Month.FEBRUARY.getValue(), 6);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final LocalDateTime PREVIOUS_AUTHOR_BLAME_TEST_UNTIL_DATE \u003d"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2021, Month.AUGUST.getValue(), 7);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final LocalDateTime EMAIL_WITH_ADDITION_TEST_SINCE_DATE \u003d"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2019, Month.MARCH.getValue(), 28);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final LocalDateTime EMAIL_WITH_ADDITION_TEST_UNTIL_DATE \u003d"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2019, Month.MARCH.getValue(), 28);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final LocalDateTime MOVED_FILE_SINCE_DATE \u003d"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2018, Month.FEBRUARY.getValue(), 7);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final LocalDateTime MOVED_FILE_UNTIL_DATE \u003d"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2018, Month.FEBRUARY.getValue(), 9);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final LocalDateTime SHOULD_INCLUDE_LAST_MODIFIED_IN_LINES_SINCE_DATE \u003d"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2018, Month.FEBRUARY.getValue(), 7);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final LocalDateTime LAST_MODIFIED_DATE \u003d"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            LocalDateTime.of(2020, Month.OCTOBER.getValue(), 27, 18, 0, 7);"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final LocalDateTime SHOULD_INCLUDE_LAST_MODIFIED_IN_LINES_UNTIL_DATE \u003d"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2018, Month.FEBRUARY.getValue(), 9);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ANALYZE_BINARY_FILES_SINCE_DATE \u003d"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2017, Month.JANUARY.getValue(), 1);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ANALYZE_BINARY_FILES_UNTIL_DATE \u003d"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2020, Month.JANUARY.getValue(), 1);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ANALYZE_LARGE_FILES_SINCE_DATE \u003d"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2017, Month.JANUARY.getValue(), 1);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ANALYZE_LARGE_FILES_UNTIL_DATE \u003d"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2022, Month.MARCH.getValue(), 8);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ANALYZE_FILES_EMPTY_EMAIL_COMMIT_SINCE_DATE \u003d"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2022, Month.FEBRUARY.getValue(), 10);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final LocalDateTime ANALYZE_FILES_EMPTY_EMAIL_COMMIT_UNTIL_DATE \u003d"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2022, Month.FEBRUARY.getValue(), 14);"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_BLAME_TEST \u003d {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            MAIN_AUTHOR, MAIN_AUTHOR, FAKE_AUTHOR, MAIN_AUTHOR"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_MOVED_FILE \u003d {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR, MAIN_AUTHOR"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final Author[] EXPECTED_LINE_AUTHORS_PREVIOUS_AUTHORS_BLAME_TEST \u003d {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            MAIN_AUTHOR, MAIN_AUTHOR, FAKE_AUTHOR, MAIN_AUTHOR"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"    private FileInfoExtractor fileInfoExtractor \u003d new FileInfoExtractor();"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":"    private FileInfoAnalyzer fileInfoAnalyzer \u003d new FileInfoAnalyzer();"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        config \u003d configs.get();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(IGNORED_AUTHOR_NAME), IGNORED_AUTHOR_NAME);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void blameTest() {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"blameTest.java\");"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_BLAME_TEST));"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void blameWithPreviousAuthorsTest() {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        config.setSinceDate(PREVIOUS_AUTHOR_BLAME_TEST_SINCE_DATE);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        config.setUntilDate(PREVIOUS_AUTHOR_BLAME_TEST_UNTIL_DATE);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        config.setIsFindingPreviousAuthorsPerformed(true);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        config.setBranch(TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        createTestIgnoreRevsFile(AUTHOR_TO_IGNORE_BLAME_COMMIT_LIST_07082021);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"blameTest.java\");"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_PREVIOUS_AUTHORS_BLAME_TEST));"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void movedFileBlameTest() {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        config.setSinceDate(MOVED_FILE_SINCE_DATE);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        config.setUntilDate(MOVED_FILE_UNTIL_DATE);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"newPos/movedFile.java\");"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_MOVED_FILE));"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void blameTestDateRange() throws Exception {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), BLAME_TEST_UNTIL_DATE, config.getZoneId());"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"blameTest.java\");"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_BLAME_TEST));"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void blameWithPreviousAuthorsTestDateRange() throws Exception {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        config.setSinceDate(PREVIOUS_AUTHOR_BLAME_TEST_SINCE_DATE);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        config.setUntilDate(PREVIOUS_AUTHOR_BLAME_TEST_UNTIL_DATE);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        config.setIsFindingPreviousAuthorsPerformed(true);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        config.setBranch(TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), PREVIOUS_AUTHOR_BLAME_TEST_UNTIL_DATE,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                config.getZoneId());"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        createTestIgnoreRevsFile(AUTHOR_TO_IGNORE_BLAME_COMMIT_LIST_07082021);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"blameTest.java\");"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_PREVIOUS_AUTHORS_BLAME_TEST));"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void movedFileBlameTestDateRange() throws Exception {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), MOVED_FILE_UNTIL_DATE, config.getZoneId());"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        config.setSinceDate(MOVED_FILE_SINCE_DATE);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        config.setUntilDate(MOVED_FILE_UNTIL_DATE);"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        FileResult fileResult \u003d getFileResult(\"newPos/movedFile.java\");"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertFileAnalysisCorrectness(fileResult, Arrays.asList(EXPECTED_LINE_AUTHORS_MOVED_FILE));"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_blameTestFileIgnoreFakeAuthorCommitFullHash_success() {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"},{"lineNumber":161,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfoFull \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Collections.singletonList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018));"},{"lineNumber":163,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfoShort \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList("},{"lineNumber":167,"author":{"gitId":"-"},"content":"                Collections.singletonList("},{"lineNumber":168,"author":{"gitId":"-"},"content":"                        new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8))));"},{"lineNumber":169,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoShort);"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfoFull, fileInfoShort);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new Author(MAIN_AUTHOR_NAME), fileInfoFull.getLine(1).getAuthor());"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new Author(MAIN_AUTHOR_NAME), fileInfoFull.getLine(2).getAuthor());"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new Author(MAIN_AUTHOR_NAME), fileInfoFull.getLine(4).getAuthor());"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // line added in commit that was ignored"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(Author.UNKNOWN_AUTHOR, fileInfoFull.getLine(3).getAuthor());"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void analyzeFile_blameWithPreviousAuthorsIgnoreFirstCommitThatChangedLine_assignLineToUnknownAuthor() {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        config.setSinceDate(PREVIOUS_AUTHOR_BLAME_TEST_SINCE_DATE);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        config.setUntilDate(PREVIOUS_AUTHOR_BLAME_TEST_UNTIL_DATE);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        config.setIsFindingPreviousAuthorsPerformed(true);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        config.setBranch(TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfoFull \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Collections.singletonList(MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018));"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        createTestIgnoreRevsFile(config.getIgnoreCommitList());"},{"lineNumber":193,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfoShort \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Collections.singletonList("},{"lineNumber":198,"author":{"gitId":"-"},"content":"                        new CommitHash(MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING.substring(0, 8))));"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(createTestIgnoreRevsFile(config.getIgnoreCommitList()));"},{"lineNumber":200,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoShort);"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfoFull, fileInfoShort);"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new Author(IGNORED_AUTHOR_NAME), fileInfoFull.getLine(2).getAuthor());"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new Author(FAKE_AUTHOR_NAME), fileInfoFull.getLine(3).getAuthor());"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new Author(IGNORED_AUTHOR_NAME), fileInfoFull.getLine(4).getAuthor());"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // line added in commit that was ignored"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(Author.UNKNOWN_AUTHOR, fileInfoFull.getLine(1).getAuthor());"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_blameTestFileIgnoreAllCommit_success() {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"},{"lineNumber":217,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfoFull \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018));"},{"lineNumber":220,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfoShort \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.convertStringsToCommits("},{"lineNumber":224,"author":{"gitId":"-"},"content":"                Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8),"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                        MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING.substring(0, 8))));"},{"lineNumber":226,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoShort);"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfoFull, fileInfoShort);"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        fileInfoFull.getLines().forEach(lineInfo -\u003e"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                Assertions.assertEquals(Author.UNKNOWN_AUTHOR, lineInfo.getAuthor()));"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void analyzeFile_blameWithPreviousAuthorTestFileIgnoreAllCommit_success() {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        config.setSinceDate(PREVIOUS_AUTHOR_BLAME_TEST_SINCE_DATE);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        config.setUntilDate(PREVIOUS_AUTHOR_BLAME_TEST_UNTIL_DATE);"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        config.setIsFindingPreviousAuthorsPerformed(true);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        config.setBranch(TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH);"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfoFull \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018,"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018, AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021));"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        createTestIgnoreRevsFile(config.getIgnoreCommitList());"},{"lineNumber":245,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfoShort \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.convertStringsToCommits("},{"lineNumber":250,"author":{"gitId":"-"},"content":"                Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8),"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                        MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING.substring(0, 8),"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                        AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021_STRING.substring(0, 8))));"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        createTestIgnoreRevsFile(config.getIgnoreCommitList());"},{"lineNumber":254,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoShort);"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        removeTestIgnoreRevsFile();"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfoFull, fileInfoShort);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        fileInfoFull.getLines().forEach(lineInfo -\u003e"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                Assertions.assertEquals(Author.UNKNOWN_AUTHOR, lineInfo.getAuthor()));"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_blameTestFileIgnoreRangedCommit_success() {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"},{"lineNumber":266,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfoFull \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(FAKE_AUTHOR_BLAME_RANGED_COMMIT_LIST_09022018);"},{"lineNumber":268,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfoRanged \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        String rangedCommit \u003d FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING + \"..\""},{"lineNumber":272,"author":{"gitId":"-"},"content":"                + FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING;"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.getHashes(config.getRepoRoot(), config.getBranch(),"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                new CommitHash(rangedCommit)).collect(Collectors.toList()));"},{"lineNumber":275,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoRanged);"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfoFull, fileInfoRanged);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        fileInfoFull.getLines().forEach(lineInfo -\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                Assertions.assertEquals(Author.UNKNOWN_AUTHOR, lineInfo.getAuthor()));"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_blameTestFileIgnoreRangedCommitShort_success() {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        config.setSinceDate(BLAME_TEST_SINCE_DATE);"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        config.setUntilDate(BLAME_TEST_UNTIL_DATE);"},{"lineNumber":286,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfoFull \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(FAKE_AUTHOR_BLAME_RANGED_COMMIT_LIST_09022018);"},{"lineNumber":288,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoFull);"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfoRangedShort \u003d fileInfoExtractor.generateFileInfo(config, \"blameTest.java\");"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        String rangedCommitShort \u003d FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING.substring(0, 8) + \"..\""},{"lineNumber":292,"author":{"gitId":"-"},"content":"                + FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING.substring(0, 8);"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.getHashes(config.getRepoRoot(), config.getBranch(),"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                new CommitHash(rangedCommitShort)).collect(Collectors.toList()));"},{"lineNumber":295,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfoRangedShort);"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfoFull, fileInfoRangedShort);"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        fileInfoFull.getLines().forEach(lineInfo -\u003e"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                Assertions.assertEquals(Author.UNKNOWN_AUTHOR, lineInfo.getAuthor()));"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_emailWithAdditionOperator_success() {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        config.setSinceDate(EMAIL_WITH_ADDITION_TEST_SINCE_DATE);"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        config.setUntilDate(EMAIL_WITH_ADDITION_TEST_UNTIL_DATE);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MINGYI_AUTHOR_NAME);"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(config, \"pr_617.java\");"},{"lineNumber":312,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfo);"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, fileInfo.getLines().size());"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        fileInfo.getLines().forEach(lineInfo -\u003e Assertions.assertEquals(author, lineInfo.getAuthor()));"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_shouldIncludeLastModifiedDateInLines_success() {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        config.setSinceDate(SHOULD_INCLUDE_LAST_MODIFIED_IN_LINES_SINCE_DATE);"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        config.setUntilDate(SHOULD_INCLUDE_LAST_MODIFIED_IN_LINES_UNTIL_DATE);"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        config.setIsLastModifiedDateIncluded(true);"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        config.setBranch(\"1345-FileAnalyzerTest-analyzeFile_shouldIncludeLastModifiedDateInLines_success\");"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(config, \"includeLastModifiedDateInLinesTest.java\");"},{"lineNumber":329,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfo);"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, fileInfo.getLines().size());"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        fileInfo.getLines().forEach(lineInfo -\u003e"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                Assertions.assertEquals(LAST_MODIFIED_DATE, lineInfo.getLastModifiedDate()));"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public void analyzeTextFile_fileExceedingFileSizeLimit_success() {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        config.setSinceDate(ANALYZE_LARGE_FILES_SINCE_DATE);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        config.setUntilDate(ANALYZE_LARGE_FILES_UNTIL_DATE);"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        config.setBranch(\"1647-FileAnalyzerTest-analyzeTextFile_fileExceedingFileSizeLimit_success\");"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(config, \"largeFile.json\");"},{"lineNumber":344,"author":{"gitId":"sikai00"},"content":"        fileInfoAnalyzer.analyzeTextFile(config, fileInfo);"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(46902, fileInfo.getLines().size());"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfo.getFileSize() \u003e config.getFileSizeLimit(), fileInfo.exceedsFileLimit());"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    public void analyzeBinaryFile_shouldSetLinesToBeEmpty_success() {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        config.setSinceDate(ANALYZE_BINARY_FILES_SINCE_DATE);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        config.setUntilDate(ANALYZE_BINARY_FILES_UNTIL_DATE);"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        config.setBranch(\"728-FileInfoExtractorTest-getNonBinaryFilesList_directoryWithBinaryFiles_success\");"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":356,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e binaryFileInfos \u003d fileInfoExtractor.extractBinaryFileInfos(config);"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"        for (FileInfo binaryFileInfo: binaryFileInfos) {"},{"lineNumber":359,"author":{"gitId":"sikai00"},"content":"            fileInfoAnalyzer.analyzeBinaryFile(config, binaryFileInfo);"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            Assertions.assertEquals(0, binaryFileInfo.getLines().size());"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    public void analyzeBinaryFile_nonExistingFilePath_success() {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        config.setSinceDate(ANALYZE_BINARY_FILES_SINCE_DATE);"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        config.setUntilDate(ANALYZE_BINARY_FILES_UNTIL_DATE);"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        config.setBranch(\"728-FileInfoExtractorTest-getNonBinaryFilesList_directoryWithBinaryFiles_success\");"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"        List\u003cFileInfo\u003e binaryFileInfos \u003d Arrays.asList(new FileInfo(\"/nonExistingJpgPicture.jpg\"),"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                new FileInfo(\"/nonExistingPngPicture.png\"));"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"        for (FileInfo binaryFileInfo: binaryFileInfos) {"},{"lineNumber":375,"author":{"gitId":"sikai00"},"content":"            Assertions.assertNull(fileInfoAnalyzer.analyzeBinaryFile(config, binaryFileInfo));"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    public void analyzeFile_filesWithEmptyEmailCommit_success() {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        config.setSinceDate(ANALYZE_FILES_EMPTY_EMAIL_COMMIT_SINCE_DATE);"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        config.setUntilDate(ANALYZE_FILES_EMPTY_EMAIL_COMMIT_UNTIL_DATE);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        config.setBranch(\"1636-FileAnalyzerTest-analyzeFile_filesWithEmptyEmailCommit_success\");"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        config.setAuthorList(Arrays.asList(new Author(\"chan-j-d\")));"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        List\u003cString\u003e relevantFileFormats \u003d Arrays.asList(\"txt\", \"png\");"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(relevantFileFormats));"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d fileInfoExtractor.extractTextFileInfos(config);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        FileInfo textFileInfo \u003d fileInfos.get(0);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        FileInfo binaryFileInfo \u003d new FileInfo(\"empty-email-commit-binary-file.png\");"},{"lineNumber":392,"author":{"gitId":"-"},"content":""},{"lineNumber":393,"author":{"gitId":"sikai00"},"content":"        Assertions.assertNotNull(fileInfoAnalyzer.analyzeTextFile(config, textFileInfo));"},{"lineNumber":394,"author":{"gitId":"sikai00"},"content":"        Assertions.assertNotNull(fileInfoAnalyzer.analyzeBinaryFile(config, binaryFileInfo));"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":396,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":38,"-":358}},{"path":"src/test/java/reposense/authorship/FileInfoExtractorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.model.RepoConfiguration.DEFAULT_FILE_SIZE_LIMIT;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.Month;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FileInfoExtractorTest extends GitTestTemplate {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"resources\", \"FileInfoExtractorTest\");"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Path FILE_WITH_SPECIAL_CHARACTER \u003d TEST_DATA_FOLDER.resolve(\"fileWithSpecialCharacters.txt\");"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Path FILE_WITHOUT_SPECIAL_CHARACTER \u003d TEST_DATA_FOLDER"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .resolve(\"fileWithoutSpecialCharacters.txt\");"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String EDITED_FILE_INFO_BRANCH \u003d \"getEditedFileInfos-test\";"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DIRECTORY_WITH_VALID_WHITELISTED_NAME_BRANCH \u003d \"directory-with-valid-whitelisted-name\";"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String BRANCH_WITH_VALID_WHITELISTED_FILE_NAME_BRANCH \u003d"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \"535-FileInfoExtractorTest-branchWithValidWhitelistedFileName.txt\";"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String BRANCH_WITH_BINARY_FILES \u003d"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \"728-FileInfoExtractorTest-getNonBinaryFilesList_directoryWithBinaryFiles_success\";"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String BRANCH_WITH_RARE_FILE_FORMATS \u003d"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \"708-FileInfoExtractorTest-extractFileInfos_withoutSpecifiedFormats_success\";"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String BRANCH_WITH_LARGE_FILE \u003d"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \"1647-FileAnalyzerTest-analyzeTextFile_fileExceedingFileSizeLimit_success\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String FILE_WITH_LARGE_SIZE \u003d \"largeFile.json\";"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String FEBRUARY_EIGHT_COMMIT_HASH \u003d \"768015345e70f06add2a8b7d1f901dc07bf70582\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"    private FileInfoExtractor fileInfoExtractor \u003d new FileInfoExtractor();"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        config \u003d configs.get();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void extractFileInfosTest() {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_COMMIT_HASH);"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, files.size());"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"blameTest.java\"), files));"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"newFile.java\"), files));"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void extractFileInfos_skipGlobs_success() {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        config.setIgnoreGlobList(Arrays.asList(\"newPos/**.java\", \"**.md\"));"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), TEST_COMMIT_HASH);"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, files.size());"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"README.md\"), files));"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"blameTest.java\"), files));"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"newFile.java\"), files));"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void extractFileInfos_sinceDateFebrauaryNineToLatestCommit_success() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TestUtil.getSinceDate(2018, Month.FEBRUARY.getValue(), 9);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        config.setSinceDate(date);"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, files.size());"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // files edited within commit range"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // files not edited within commit range"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"blameTest.java\"), files));"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"newFile.java\"), files));"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void extractFileInfos_directoryWithValidWhitelistedName_success() {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), DIRECTORY_WITH_VALID_WHITELISTED_NAME_BRANCH);"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(7, files.size());"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\".gradle/anything.txt\"), files));"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void extractFileInfos_branchWithValidWhitelistedFileName_success() {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), BRANCH_WITH_VALID_WHITELISTED_FILE_NAME_BRANCH);"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"whitelisted-format.txt\"), files));"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void extractFileInfos_sinceDateAfterLatestCommit_emptyResult() {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TestUtil.getSinceDate(2050, Month.DECEMBER.getValue(), 31);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        config.setSinceDate(date);"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(files.isEmpty());"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void extractFileInfos_untilDateBeforeFirstCommit_emptyResult() {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        LocalDateTime date \u003d TestUtil.getUntilDate(2015, Month.DECEMBER.getValue(), 31);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        config.setUntilDate(date);"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(files.isEmpty());"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void getEditedFileInfos_editFileInfoBranchSinceFebrauryEight_success() {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), EDITED_FILE_INFO_BRANCH);"},{"lineNumber":148,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.getEditedFileInfos(config, FEBRUARY_EIGHT_COMMIT_HASH);"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, files.size());"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // file renamed without changing content, not included"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"renamedFile.java\"), files));"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void getEditedFileInfos_editFileInfoBranchSinceFebrauryEightSkipGlobs_success() {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), EDITED_FILE_INFO_BRANCH);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        config.setIgnoreGlobList(Arrays.asList(\"**.md\"));"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.getEditedFileInfos(config, FEBRUARY_EIGHT_COMMIT_HASH);"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, files.size());"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"README.md\"), files));"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // file renamed without changing content, not included"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"renamedFile.java\"), files));"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void getEditedFileInfos_editFileInfoBranchSinceFirstCommit_success() {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), EDITED_FILE_INFO_BRANCH);"},{"lineNumber":179,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.getEditedFileInfos(config, FIRST_COMMIT_HASH);"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, files.size());"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // empty file created, not included"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void generateFileInfo_fileWithSpecialCharacters_correctFileInfoGenerated() {"},{"lineNumber":189,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(\".\", FILE_WITH_SPECIAL_CHARACTER.toString(),"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                DEFAULT_FILE_SIZE_LIMIT, false, false);"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, fileInfo.getLines().size());"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void generateFileInfo_fileWithoutSpecialCharacters_correctFileInfoGenerated() {"},{"lineNumber":196,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(\".\", FILE_WITHOUT_SPECIAL_CHARACTER.toString(),"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                DEFAULT_FILE_SIZE_LIMIT, false, false);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, fileInfo.getLines().size());"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void generateFileInfo_fileExceedingSizeLimit_correctFileInfoGenerated() {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        config.setBranch(BRANCH_WITH_LARGE_FILE);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), config.getBranch());"},{"lineNumber":205,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(config.getRepoRoot(), FILE_WITH_LARGE_SIZE,"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                DEFAULT_FILE_SIZE_LIMIT, false, false);"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(fileInfo.isFileAnalyzed());"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(46902, fileInfo.getLines().size());"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfo.getFileSize() \u003e DEFAULT_FILE_SIZE_LIMIT, fileInfo.exceedsFileLimit());"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void generateFileInfo_fileExceedingSizeLimitAndSkipped_correctFileInfoGenerated() {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        config.setBranch(BRANCH_WITH_LARGE_FILE);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), config.getBranch());"},{"lineNumber":217,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(config.getRepoRoot(), FILE_WITH_LARGE_SIZE,"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                DEFAULT_FILE_SIZE_LIMIT, false, true);"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(fileInfo.isFileAnalyzed());"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(0, fileInfo.getLines().size());"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileInfo.getFileSize() \u003e DEFAULT_FILE_SIZE_LIMIT, fileInfo.exceedsFileLimit());"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void generateFileInfo_fileExceedingSizeLimitAndLimitIgnored_correctFileInfoGenerated() {"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        config.setBranch(BRANCH_WITH_LARGE_FILE);"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), config.getBranch());"},{"lineNumber":229,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(config.getRepoRoot(), FILE_WITH_LARGE_SIZE,"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                DEFAULT_FILE_SIZE_LIMIT, true, false);"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(fileInfo.isFileAnalyzed());"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(46902, fileInfo.getLines().size());"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(fileInfo.exceedsFileLimit());"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void getFilesList_getTextFilesFromRepoWithBinaryFiles_success() {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        List\u003cString\u003e textFilesList \u003d Arrays.asList("},{"lineNumber":240,"author":{"gitId":"-"},"content":"                \"binaryFileTest/nonBinaryFile.txt\", \"My Documents/wordToHtml.htm\", \"My Pictures/notPngPicture.png\","},{"lineNumber":241,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/colorschememapping.xml\", \"My Documents/wordToHtml_files/filelist.xml\","},{"lineNumber":242,"author":{"gitId":"-"},"content":"                \"My Documents/notPdfDocument.pdf\");"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        List\u003cString\u003e binaryFilesList \u003d Arrays.asList("},{"lineNumber":244,"author":{"gitId":"-"},"content":"                \"binaryFileTest/binaryFile.txt\", \"My Documents/word.docx\", \"My Documents/pdfDocument.pdf\","},{"lineNumber":245,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/themedata.thmx\", \"My Pictures/pngPicture.png\");"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), BRANCH_WITH_BINARY_FILES);"},{"lineNumber":247,"author":{"gitId":"sikai00"},"content":"        Set\u003cPath\u003e textFiles \u003d fileInfoExtractor.getFiles(config, false);"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(6, textFiles.size());"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // Non binary files should be captured"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        textFilesList.forEach(textFile -\u003e Assertions.assertTrue(textFiles.contains(Paths.get(textFile))));"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        // Binary files should be ignored"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        binaryFilesList.forEach(binFile -\u003e Assertions.assertFalse(textFiles.contains(Paths.get(binFile))));"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public void getFilesList_getBinaryFilesFromRepoWithTextFiles_success() {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        List\u003cString\u003e textFilesList \u003d Arrays.asList("},{"lineNumber":259,"author":{"gitId":"-"},"content":"                \"binaryFileTest/nonBinaryFile.txt\", \"My Documents/wordToHtml.htm\", \"My Pictures/notPngPicture.png\","},{"lineNumber":260,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/colorschememapping.xml\", \"My Documents/wordToHtml_files/filelist.xml\","},{"lineNumber":261,"author":{"gitId":"-"},"content":"                \"My Documents/notPdfDocument.pdf\");"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        List\u003cString\u003e binaryFilesList \u003d Arrays.asList("},{"lineNumber":263,"author":{"gitId":"-"},"content":"                \"binaryFileTest/binaryFile.txt\", \"My Documents/word.docx\", \"My Documents/pdfDocument.pdf\","},{"lineNumber":264,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/themedata.thmx\", \"My Pictures/pngPicture.png\");"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), BRANCH_WITH_BINARY_FILES);"},{"lineNumber":266,"author":{"gitId":"sikai00"},"content":"        Set\u003cPath\u003e binaryFiles \u003d fileInfoExtractor.getFiles(config, true);"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(5, binaryFiles.size());"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        // Binary files should be captured"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        binaryFilesList.forEach(binFile -\u003e Assertions.assertTrue(binaryFiles.contains(Paths.get(binFile))));"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        // Non binary files should be ignored"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        textFilesList.forEach(textFile -\u003e Assertions.assertFalse(binaryFiles.contains(Paths.get(textFile))));"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public void extractFileInfos_withoutSpecifiedFormats_success() {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        List\u003cString\u003e textFilesList \u003d Arrays.asList("},{"lineNumber":278,"author":{"gitId":"-"},"content":"                \"binaryFileTest/nonBinaryFile.ARBIFORMAT\", \"My Documents/wordToHtml.htm\","},{"lineNumber":279,"author":{"gitId":"-"},"content":"                \"My Pictures/notPngPicture.png\", \"My Documents/wordToHtml_files/colorschememapping.xml\","},{"lineNumber":280,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/filelist.xml\", \"My Documents/notPdfDocument.fdp\");"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        List\u003cString\u003e binaryFilesList \u003d Arrays.asList("},{"lineNumber":282,"author":{"gitId":"-"},"content":"                \"binaryFileTest/binaryFile.ARBIFORMAT\", \"My Documents/word.docx\", \"My Documents/pdfDocument.fdp\","},{"lineNumber":283,"author":{"gitId":"-"},"content":"                \"My Documents/wordToHtml_files/themedata.thmx\", \"My Pictures/pngPicture.png\");"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), BRANCH_WITH_RARE_FILE_FORMATS);"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e files \u003d fileInfoExtractor.extractTextFileInfos(config);"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(textFilesList.size(), files.size());"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        // Non binary files should be captured"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        textFilesList.forEach(textFile -\u003e Assertions.assertTrue(isFileExistence(Paths.get(textFile), files)));"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        // Binary files should be ignored"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        binaryFilesList.forEach(binFile -\u003e Assertions.assertFalse(isFileExistence(Paths.get(binFile), files)));"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    public void getEditedFileInfos_repoWithFilesWithSpaces_success() {"},{"lineNumber":298,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e fileInfos \u003d fileInfoExtractor.getEditedFileInfos(config, FEBRUARY_EIGHT_COMMIT_HASH);"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(isFileExistence(Paths.get(\"space test.txt\"), fileInfos));"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"    private boolean isFileExistence(Path filePath, List\u003cFileInfo\u003e files) {"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        return files.stream().anyMatch(file -\u003e Paths.get(file.getPath()).equals(filePath));"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":20,"-":286}},{"path":"src/test/java/reposense/authorship/FileResultAggregatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.authorship;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Month;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class FileResultAggregatorTest extends GitTestTemplate {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final LocalDateTime CLEAR_FILE_LINES_SINCE_DATE \u003d"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            TestUtil.getSinceDate(2017, Month.JANUARY.getValue(), 1);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final LocalDateTime CLEAR_FILE_LINES_UNTIL_DATE \u003d"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            TestUtil.getUntilDate(2022, Month.MARCH.getValue(), 8);"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    private FileInfoExtractor fileInfoExtractor \u003d new FileInfoExtractor();"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":"    private FileInfoAnalyzer fileInfoAnalyzer \u003d new FileInfoAnalyzer();"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        config \u003d configs.get();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void aggregateFileResult_clearFileLines_success() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        config.setSinceDate(CLEAR_FILE_LINES_SINCE_DATE);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        config.setUntilDate(CLEAR_FILE_LINES_UNTIL_DATE);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        config.setBranch(\"1647-FileAnalyzerTest-analyzeTextFile_fileExceedingFileSizeLimit_success\");"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        config.setAuthorList(new ArrayList\u003c\u003e());"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(config.getRepoRoot(), config.getBranch());"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Logic identical to AuthorshipReporter.java"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"        List\u003cFileInfo\u003e textFileInfos \u003d fileInfoExtractor.extractTextFileInfos(config);"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cFileResult\u003e fileResults \u003d textFileInfos.stream()"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .filter(f -\u003e !f.getPath().equals(\"annotationTest.java\"))"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"                .map(fileInfo -\u003e fileInfoAnalyzer.analyzeTextFile(config, fileInfo))"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .filter(Objects::nonNull)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        //"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"        FileResultAggregator fileResultAggregator \u003d new FileResultAggregator();"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"        fileResultAggregator.aggregateFileResult(fileResults, config.getAuthorList(), config.getAllFileTypes());"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(fileResults.stream()"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .filter(f -\u003e f.getPath().contains(\"largeFile.json\"))"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .findFirst()"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .map(f -\u003e f.getLines().size()), Optional.of(0));"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":6,"-":58}},{"path":"src/test/java/reposense/commits/CommitInfoAnalyzerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Month;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assumptions;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitInfo;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitResult;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.commits.model.ContributionPair;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.util.SystemUtil;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommitInfoAnalyzerTest extends GitTestTemplate {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final int NUMBER_EUGENE_COMMIT \u003d 1;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final int NUMBER_MINGYI_COMMIT \u003d 1;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final int NUMBER_EMPTY_MESSAGE_COMMIT \u003d 1;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final FileType FILETYPE_JAVA \u003d new FileType(\"java\", Collections.singletonList(\"**java\"));"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final FileType FILETYPE_MD \u003d new FileType(\"md\", Collections.singletonList(\"**md\"));"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final FileType FILETYPE_TXT \u003d new FileType(\"txt\", Collections.singletonList(\"**txt\"));"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String DUPLICATE_AUTHORS_DUPLICATE_COMMITS_HASH \u003d \"f34c20ec2c3be63e0764d4079a575dd75269ffeb\";"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"    private CommitInfoExtractor commitInfoExtractor \u003d new CommitInfoExtractor();"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":"    private CommitInfoAnalyzer commitInfoAnalyzer \u003d new CommitInfoAnalyzer();"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        config \u003d configs.get();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        config.clearAuthorDetailsToAuthorMap();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void analyzeCommits_allAuthorNoIgnoredCommitsNoDateRange_success() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(EUGENE_AUTHOR_NAME), EUGENE_AUTHOR_NAME);"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e commitResults \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(commitInfos.size(), commitResults.size());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void analyzeCommits_fakeMainAuthorNoIgnoredCommitsNoDateRange_success() {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e commitResults \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(commitInfos.size() - NUMBER_EUGENE_COMMIT, commitResults.size());"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void analyzeCommits_eugeneAuthorNoIgnoredCommitsNoDateRange_success() {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(EUGENE_AUTHOR_NAME), EUGENE_AUTHOR_NAME);"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e commitResults \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(NUMBER_EUGENE_COMMIT, commitResults.size());"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void analyzeCommits_allAuthorSingleCommitIgnoredNoDateRange_success() {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(EUGENE_AUTHOR_NAME), EUGENE_AUTHOR_NAME);"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Collections.singletonList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018));"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e commitResultsFull \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(Collections.singletonList("},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8))"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        ));"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e commitResultsShort \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(commitResultsShort, commitResultsFull);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(commitInfos.size() - 1, commitResultsFull.size());"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void analyzeCommits_allAuthorMultipleCommitIgnoredNoDateRange_success() {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(MAIN_AUTHOR_NAME), MAIN_AUTHOR_NAME);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(FAKE_AUTHOR_NAME), FAKE_AUTHOR_NAME);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(EUGENE_AUTHOR_NAME), EUGENE_AUTHOR_NAME);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList("},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Arrays.asList(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018, EUGENE_AUTHOR_README_FILE_COMMIT_07052018));"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e commitResultsFull \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        config.setIgnoreCommitList(CommitHash.convertStringsToCommits(Arrays.asList("},{"lineNumber":116,"author":{"gitId":"-"},"content":"                FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING.substring(0, 8),"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING.substring(0, 8))));"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e commitResultsShort \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(commitResultsShort, commitResultsFull);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(commitInfos.size() - 2, commitResultsFull.size());"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void analyzeCommits_noCommitMessage_success() {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        config.setBranch(\"empty-commit-message\");"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        config.clearAuthorDetailsToAuthorMap();"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        config.addAuthorNamesToAuthorMapEntry(new Author(YONG_AUTHOR_NAME), YONG_AUTHOR_NAME);"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":132,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e commitResults \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commitResults.removeIf(s -\u003e !s.getMessageTitle().isEmpty());"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(NUMBER_EMPTY_MESSAGE_COMMIT, commitResults.size());"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void analyzeCommits_emailWithAdditionOperator_success() {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MINGYI_AUTHOR_NAME);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e commitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":145,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e commitResults \u003d commitInfoAnalyzer.analyzeCommits(commitInfos, config);"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(NUMBER_MINGYI_COMMIT, commitResults.size());"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void analyzeCommits_duplicateAuthorsDuplicateCommits_success() throws Exception {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(FAKE_AUTHOR_NAME);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e fileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        fileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(3, 3));"},{"lineNumber":156,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, DUPLICATE_AUTHORS_DUPLICATE_COMMITS_HASH, false,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2021-08-03T12:53:39+08:00\"),"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \"Update annotationTest.java\","},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \"\", null, fileTypeAndContributionMap));"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"        config.setAuthorList(Arrays.asList(author, author));"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2021, Month.AUGUST, 3, 0, 0));"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2021, Month.AUGUST, 4, 0, 0));"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":166,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(actualCommitInfos.size(), 2);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void analyzeCommits_commitsWithEmptyCommitMessageTitleOrBody_success() throws Exception {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JINYAO_AUTHOR_NAME);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(1, 0));"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(0, 1));"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // 1st test: Contains commit message title but no commit message body."},{"lineNumber":184,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"e54ae8fdb77c6c7d2c39131b816bfc03e6a6dd44\", false,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-07-02T12:35:46+08:00\"), \"Test 1: With message title but no body\","},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \"\", null, firstFileTypeAndContributionMap));"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // 2nd test: Contains no commit message title and no commit message body."},{"lineNumber":188,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"57fa22fc2550210203c2941692f69ccb0cf18252\", false,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-07-02T12:36:14+08:00\"), \"\", \"\", null,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                secondFileTypeAndContributionMap));"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"        config.setBranch(\"751-CommitInfoAnalyzerTest-analyzeCommits_commitsWithEmptyCommitMessageTitleOrBody_success\");"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2019, Month.JULY, 2, 0, 0));"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2019, Month.JULY, 3, 0, 0));"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":198,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void analyzeCommits_multipleCommitsWithCommitMessageBody_success() throws Exception {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JINYAO_AUTHOR_NAME);"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(1, 0));"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(0, 1));"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"2eccc111e813e8b2977719b5959e32b674c56afe\", false,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-06-19T13:02:01+08:00\"), \"\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\","},{"lineNumber":216,"author":{"gitId":"-"},"content":"                \"Hi there!\\n\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n\", null,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                firstFileTypeAndContributionMap));"},{"lineNumber":218,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"8f8359649361f6736c31b87d499a4264f6cf7ed7\", false,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-06-19T13:03:39+08:00\"), \"[#123] Reverted 1st commit\","},{"lineNumber":220,"author":{"gitId":"-"},"content":"                \"This is a test to see if the commit message body works. \""},{"lineNumber":221,"author":{"gitId":"-"},"content":"                        + \"All should be same same.\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n|The end.\", null,"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                secondFileTypeAndContributionMap));"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"        config.setBranch(\"751-CommitInfoAnalyzerTest-analyzeCommits_multipleCommitsWithCommitMessageBody_success\");"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2019, Month.JUNE, 19, 0, 0));"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2019, Month.JUNE, 20, 0, 0));"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":230,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void analyzeCommits_multipleCommitsWithCommitMessageBodyAndDifferentTimeZone_success() throws Exception {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // Re-uses analyzeCommits_multipleCommitsWithCommitMessageBody_success() test."},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // But for this test, changes config timezone such that the commit date is one day behind"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // in the config timezone compared to commit timezone."},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JINYAO_AUTHOR_NAME);"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(1, 0));"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_JAVA, new ContributionPair(0, 1));"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"        ZoneId originalZoneId \u003d config.getZoneId();"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        config.setZoneId(ZoneId.of(\"UTC-0530\"));"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2019, Month.JUNE, 18, 0, 0));"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2019, Month.JUNE, 19, 0, 0));"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"        // Equivalent to 2019-06-18 23:32:01 in UTC-0530 time."},{"lineNumber":255,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"2eccc111e813e8b2977719b5959e32b674c56afe\", false,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-06-19T13:02:01+08:00\"), \"\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\","},{"lineNumber":257,"author":{"gitId":"-"},"content":"                \"Hi there!\\n\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n\", null,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                firstFileTypeAndContributionMap));"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"        // Equivalent to 2019-06-18 23:33:39 in UTC-0530 time."},{"lineNumber":261,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"8f8359649361f6736c31b87d499a4264f6cf7ed7\", false,"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-06-19T13:03:39+08:00\"), \"[#123] Reverted 1st commit\","},{"lineNumber":263,"author":{"gitId":"-"},"content":"                \"This is a test to see if the commit message body works. \""},{"lineNumber":264,"author":{"gitId":"-"},"content":"                        + \"All should be same same.\\n\u003e\u003e\u003eCOMMIT INFO\u003c\u003c\u003c\\n|The end.\", null,"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                secondFileTypeAndContributionMap));"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"        config.setBranch(\"751-CommitInfoAnalyzerTest-analyzeCommits_multipleCommitsWithCommitMessageBody_success\");"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":271,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"        config.setZoneId(originalZoneId);"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public void analyzeCommits_commitsWithMultipleTags_success() throws Exception {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_MD, new ContributionPair(2, 1));"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_MD, new ContributionPair(1, 0));"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"62c3a50ef9b3580b2070deac1eed2b3e2d701e04\", false,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-12-20T22:45:18+08:00\"), \"Single Tag Commit\","},{"lineNumber":291,"author":{"gitId":"-"},"content":"                \"\", new String[] {\"1st\"}, firstFileTypeAndContributionMap));"},{"lineNumber":292,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"c5e36ec059390233ac036db61a84fa6b55952506\", false,"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-12-20T22:47:21+08:00\"), \"Double Tag Commit\","},{"lineNumber":294,"author":{"gitId":"-"},"content":"                \"\", new String[] {\"2nd-tag\", \"1st-tag\"}, secondFileTypeAndContributionMap));"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"        config.setBranch(\"879-CommitInfoAnalyzerTest-analyzeCommits_commitsWithMultipleTags_success\");"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2019, Month.DECEMBER, 20, 0, 0));"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2019, Month.DECEMBER, 21, 0, 0));"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":302,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    public void analyzeCommits_commitsWithMultipleTagsAndDifferentTimeZone_success() throws Exception {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        // Re-uses analyzeCommits_commitsWithMultipleTags_success() test."},{"lineNumber":310,"author":{"gitId":"-"},"content":"        // But for this test, changes config timezone such that the commit date is one day ahead"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        // in the config timezone compared to the commit timezone."},{"lineNumber":312,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_MD, new ContributionPair(2, 1));"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_MD, new ContributionPair(1, 0));"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"        ZoneId originalZoneId \u003d config.getZoneId();"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"        config.setBranch(\"879-CommitInfoAnalyzerTest-analyzeCommits_commitsWithMultipleTags_success\");"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"        config.setZoneId(ZoneId.of(\"UTC+10\"));"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2019, Month.DECEMBER, 21, 0, 0));"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2019, Month.DECEMBER, 22, 0, 0));"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"        // Date-time equivalent to 2019-12-21 00:45:18 in UTC+10 time"},{"lineNumber":331,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"62c3a50ef9b3580b2070deac1eed2b3e2d701e04\", false,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-12-20T22:45:18+08:00\"), \"Single Tag Commit\","},{"lineNumber":333,"author":{"gitId":"-"},"content":"                \"\", new String[] {\"1st\"}, firstFileTypeAndContributionMap));"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"        // Date-time equivalent to 2019-12-21 00:47:21 in UTC+10 time"},{"lineNumber":336,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"c5e36ec059390233ac036db61a84fa6b55952506\", false,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2019-12-20T22:47:21+08:00\"), \"Double Tag Commit\","},{"lineNumber":338,"author":{"gitId":"-"},"content":"                \"\", new String[] {\"2nd-tag\", \"1st-tag\"}, secondFileTypeAndContributionMap));"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":341,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":342,"author":{"gitId":"-"},"content":""},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"        config.setZoneId(originalZoneId);"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    public void analyzeCommits_emptyCommits_success() throws Exception {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"016ab87c4afe89a98225b96c98ff28dd4774410f\", false,"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2020-01-27T22:20:51+08:00\"), \"empty commit\", \"\", null));"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"        config.setBranch(\"1019-CommitInfoAnalyzerTest-emptyCommits\");"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2020, Month.JANUARY, 27, 0, 0));"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2020, Month.JANUARY, 28, 0, 0));"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":363,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    public void analyzeCommits_emptyCommitsWithDifferentTimeZone_success() throws Exception {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        // Re-uses analyzeCommits_emptyCommits_success() test."},{"lineNumber":371,"author":{"gitId":"-"},"content":"        // But for this test, changes config timezone to be different from what would be given in CommitInfo."},{"lineNumber":372,"author":{"gitId":"-"},"content":"        // However, the date should still be the same."},{"lineNumber":373,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"        // Equivalent to 2020-01-27 23:20:51 in UTC+9 time."},{"lineNumber":377,"author":{"gitId":"-"},"content":"        ZoneId originalZoneId \u003d config.getZoneId();"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        config.setZoneId(ZoneId.of(\"UTC+9\"));"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2020, Month.JANUARY, 27, 0, 0));"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2020, Month.JANUARY, 28, 0, 0));"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"016ab87c4afe89a98225b96c98ff28dd4774410f\", false,"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2020-01-27T22:20:51+08:00\"), \"empty commit\", \"\", null));"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"        config.setBranch(\"1019-CommitInfoAnalyzerTest-emptyCommits\");"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":390,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        config.setZoneId(originalZoneId);"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"ckcherry23"},"content":"    @Test"},{"lineNumber":397,"author":{"gitId":"ckcherry23"},"content":"    public void analyzeCommits_mergeCommits_success() throws Exception {"},{"lineNumber":398,"author":{"gitId":"ckcherry23"},"content":"        Author author \u003d new Author(CHENGYU_AUTHOR_NAME);"},{"lineNumber":399,"author":{"gitId":"ckcherry23"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":400,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":401,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"188e6afc49cafe0cf4c2a88d55e97679fa0b798b\", true,"},{"lineNumber":402,"author":{"gitId":"ckcherry23"},"content":"                parseGitStrictIsoDate(\"2023-01-31T15:08:54+08:00\"),"},{"lineNumber":403,"author":{"gitId":"ckcherry23"},"content":"                \"Merge pull request #15 from sikai00/update-authorship-tags\","},{"lineNumber":404,"author":{"gitId":"ckcherry23"},"content":"                \"Update authorship tags\", null));"},{"lineNumber":405,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":406,"author":{"gitId":"ckcherry23"},"content":"        config.setBranch(\"1882-CommitInfoAnalyzerTest-analyzeCommits_mergeCommits_success\");"},{"lineNumber":407,"author":{"gitId":"ckcherry23"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":408,"author":{"gitId":"ckcherry23"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);"},{"lineNumber":409,"author":{"gitId":"ckcherry23"},"content":"        config.setSinceDate(LocalDateTime.of(2023, Month.JANUARY, 31, 0, 0));"},{"lineNumber":410,"author":{"gitId":"ckcherry23"},"content":"        config.setUntilDate(LocalDateTime.of(2023, Month.FEBRUARY, 1, 0, 0));"},{"lineNumber":411,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":412,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":413,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":414,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":415,"author":{"gitId":"ckcherry23"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":416,"author":{"gitId":"ckcherry23"},"content":"    }"},{"lineNumber":417,"author":{"gitId":"ckcherry23"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    public void analyzeCommits_commitsWithBinaryFileContribution_success() throws Exception {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_AUTHOR_NAME);"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"        // binary file contribution will have 0 contribution and won\u0027t be added to fileTypesAndContributionMap"},{"lineNumber":424,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"a00c51138cbf5ab7d14f52b52abb182c8a369169\", false,"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2020-04-06T16:41:10+08:00\"), \"Add binary file\", \"\", null));"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"        config.setBranch(\"1192-CommitInfoAnalyzerTest-analyzeCommits_commitsWithBinaryContribution_success\");"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.NO_SPECIFIED_FORMATS);"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2020, Month.APRIL, 6, 0, 0));"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2020, Month.APRIL, 7, 0, 0));"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":434,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":435,"author":{"gitId":"-"},"content":""},{"lineNumber":436,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    public void analyzeCommits_fileNameWithSpecialChars_success() throws Exception {"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        // Runs test only on non Windows (Unix) operating systems as the file names are invalid in windows"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        Assumptions.assumeTrue(!SystemUtil.isWindows());"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(JAMES_ALTERNATIVE_AUTHOR_NAME);"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        List\u003cCommitResult\u003e expectedCommitResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e firstFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        firstFileTypeAndContributionMap.put(FILETYPE_TXT, new ContributionPair(1, 0));"},{"lineNumber":448,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"cfb3c8dc477cb0af19fce8bead4d278f35afa396\", false,"},{"lineNumber":449,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2020-04-20T12:09:39+08:00\"),"},{"lineNumber":450,"author":{"gitId":"-"},"content":"                \"Create file name without special chars\","},{"lineNumber":451,"author":{"gitId":"-"},"content":"                \"\", null, firstFileTypeAndContributionMap));"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        Map\u003cFileType, ContributionPair\u003e secondFileTypeAndContributionMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        secondFileTypeAndContributionMap.put(FILETYPE_TXT, new ContributionPair(0, 0));"},{"lineNumber":454,"author":{"gitId":"ckcherry23"},"content":"        expectedCommitResults.add(new CommitResult(author, \"17bde492e9a80d8699ad193cf87e677341f936cc\", false,"},{"lineNumber":455,"author":{"gitId":"-"},"content":"                parseGitStrictIsoDate(\"2020-04-20T12:17:40+08:00\"),"},{"lineNumber":456,"author":{"gitId":"-"},"content":"                \"Rename to file name with special chars\","},{"lineNumber":457,"author":{"gitId":"-"},"content":"                \"\", null, secondFileTypeAndContributionMap));"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"        config.setBranch(\"1244-CommitInfoAnalyzerTest-analyzeCommits_fileNameWithSpecialChars_success\");"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        config.setSinceDate(LocalDateTime.of(2020, Month.APRIL, 20, 0, 0));"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        config.setUntilDate(LocalDateTime.of(2020, Month.APRIL, 21, 0, 0));"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e actualCommitInfos \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":465,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitResult\u003e actualCommitResults \u003d commitInfoAnalyzer.analyzeCommits(actualCommitInfos, config);"},{"lineNumber":466,"author":{"gitId":"-"},"content":""},{"lineNumber":467,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, actualCommitInfos.size());"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedCommitResults, actualCommitResults);"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":470,"author":{"gitId":"-"},"content":""},{"lineNumber":471,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":472,"author":{"gitId":"-"},"content":"     * Returns a {@link LocalDateTime} from a string {@code gitStrictIsoDate}."},{"lineNumber":473,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    private LocalDateTime parseGitStrictIsoDate(String gitStrictIsoDate) {"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        return ZonedDateTime.parse(gitStrictIsoDate, CommitInfoAnalyzer.GIT_STRICT_ISO_DATE_FORMAT)"},{"lineNumber":476,"author":{"gitId":"-"},"content":"                .withZoneSameInstant(config.getZoneId()).toLocalDateTime();"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":478,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ckcherry23":36,"sikai00":40,"-":402}},{"path":"src/test/java/reposense/commits/CommitInfoExtractorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.commits;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Month;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.commits.model.CommitInfo;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CommitInfoExtractorTest extends GitTestTemplate {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;"},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"    private CommitInfoExtractor commitInfoExtractor \u003d new CommitInfoExtractor();"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        config \u003d configs.get();"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void withContentTest() {"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e commits \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(commits.isEmpty());"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void withoutContentTest() {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        LocalDateTime sinceDate \u003d TestUtil.getSinceDate(2050, Month.JANUARY.getValue(), 1);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        config.setSinceDate(sinceDate);"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":"        List\u003cCommitInfo\u003e commits \u003d commitInfoExtractor.extractCommitInfos(config);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(commits.isEmpty());"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":3,"-":37}},{"path":"src/test/java/reposense/git/GitLogTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Month;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class GitLogTest extends GitTestTemplate {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        config \u003d configs.get();"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void gitLog_existingFormats_hasContent() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(content.isEmpty());"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void gitLog_nonExistingFormats_noContent() {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"py\")));"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void gitLog_includeAllJavaFiles_success() {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(12, content));"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void gitLog_fakeAuthorNameOnly_success() {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Author fakeAuthorName \u003d new Author(FAKE_AUTHOR_NAME);"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, fakeAuthorName);"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(8, content));"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void gitLog_authorNameIncorrectCase_success() {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Author fakeAuthorName \u003d new Author(FAKE_AUTHOR_NAME.toUpperCase());"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, fakeAuthorName);"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(8, content));"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void gitLog_fakeAuthorNameWithSpecialCharacter_success() {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Author fakeAuthorWithSpecialCharacter \u003d new Author(FAKE_AUTHOR_NAME.replace(\"fake\", \"#()!\"));"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, fakeAuthorWithSpecialCharacter);"},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(8, content));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void gitLog_includeAllJavaFilesAuthorIgnoreMovedFile_success() {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Author ignoreMovedFileAuthor \u003d getAlphaAllAliasAuthor();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ignoreMovedFileAuthor.setIgnoreGlobList(Collections.singletonList(\"**movedFile.java\"));"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, ignoreMovedFileAuthor);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(4, content));"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void gitLog_authorIgnoreAllJavaFiles_success() {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        config.setFormats(FileType.convertFormatStringsToFileTypes(Collections.singletonList(\"java\")));"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Author ignoreAllJavaFilesAuthor \u003d getAlphaAllAliasAuthor();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ignoreAllJavaFilesAuthor.setIgnoreGlobList(Collections.singletonList(\"*.java\"));"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, ignoreAllJavaFilesAuthor);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(0, content));"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void gitLog_validIgnoreGlobs_success() {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Author author \u003d getAlphaAllAliasAuthor();"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"annotationTest.java\"));"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(6, content));"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"**Test**\"));"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(5, content));"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"README.md\"));"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(6, content));"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"**.java\"));"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(1, content));"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"./newPos\"));"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(6, content));"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void gitLog_invalidIgnoreGlobs_filtered() {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Author author \u003d getAlphaAllAliasAuthor();"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"../testrepo-Alpha\"));"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(7, content));"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"../*.java\"));"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(7, content));"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"/newPos\"));"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(7, content));"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(Collections.singletonList(\"..\"));"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        content \u003d GitLog.getWithFiles(config, author);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberFilesChanged(7, content));"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void gitLog_authorWithAllCharactersRegexAlias_emptyResult() {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Author authorWithAllCharactersRegexAlias \u003d new Author(\"none\");"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        authorWithAllCharactersRegexAlias.setAuthorAliases(Collections.singletonList(\".*\"));"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, authorWithAllCharactersRegexAlias);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void gitLog_sinceDateInFuture_noContent() {"},{"lineNumber":148,"author":{"gitId":"MarcusTXK"},"content":"        LocalDateTime date \u003d TimeUtil.getSinceDate("},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"                LocalDateTime.of(2050, Month.JANUARY, 1, 0, 0));"},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":"        config.setSinceDate(date);"},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertTrue(content.isEmpty());"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":"    @Test"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"    public void gitLog_invalidSinceDateInFuture_noContent() {"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":"        LocalDateTime date \u003d TimeUtil.getSinceDate("},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"                LocalDateTime.of(2100, Month.JANUARY, 1, 0, 0));"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        config.setSinceDate(date);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void gitLog_untilDateBeforeAnyCommit_noContent() {"},{"lineNumber":166,"author":{"gitId":"MarcusTXK"},"content":"        LocalDateTime date \u003d TimeUtil.getUntilDate("},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":"                LocalDateTime.of(2010, Month.JANUARY, 1, 0, 0));"},{"lineNumber":168,"author":{"gitId":"MarcusTXK"},"content":"        config.setUntilDate(date);"},{"lineNumber":169,"author":{"gitId":"MarcusTXK"},"content":"        config.setSinceDate(null);"},{"lineNumber":170,"author":{"gitId":"MarcusTXK"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":171,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertTrue(content.isEmpty());"},{"lineNumber":172,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":174,"author":{"gitId":"MarcusTXK"},"content":"    @Test"},{"lineNumber":175,"author":{"gitId":"MarcusTXK"},"content":"    public void gitLog_invalidUntilDateBeforeAnyCommit_noContent() {"},{"lineNumber":176,"author":{"gitId":"MarcusTXK"},"content":"        LocalDateTime date \u003d TimeUtil.getUntilDate("},{"lineNumber":177,"author":{"gitId":"MarcusTXK"},"content":"                LocalDateTime.of(1969, Month.JANUARY, 1, 0, 0));"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        config.setUntilDate(date);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        config.setSinceDate(null);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, getAlphaAllAliasAuthor());"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(content.isEmpty());"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void gitLog_emailWithAdditionOperator_success() {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        config.setBranch(\"617-FileAnalyzerTest-analyzeFile_emailWithAdditionOperator_success\");"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        GitCheckout.checkoutBranch(config.getRepoRoot(), config.getBranch());"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MINGYI_AUTHOR_NAME);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(author));"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        String content \u003d GitLog.get(config, author);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TestUtil.compareNumberExpectedCommitsToGitLogLines(1, content));"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MarcusTXK":24,"sikai00":4,"-":166}},{"path":"src/test/java/reposense/git/GitShortlogTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.git;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Month;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import reposense.template.GitTestTemplate;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class GitShortlogTest extends GitTestTemplate {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private RepoConfiguration config;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        super.before();"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        config \u003d configs.get();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void getAuthors_validRepoNoDateRange_success() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"Eugene Peh\"));"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"FH-30\"));"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"        expectedAuthorList.add(new Author(\"HCY123902\"));"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"WANG CHAO\"));"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"chan-j-d\"));"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"eugenepeh\"));"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"fakeAuthor\"));"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"harryggg\"));"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        expectedAuthorList.add(new Author(\"sikai00\"));"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthorList.size(), actualAuthorList.size());"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthorList, actualAuthorList);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void getAuthors_validRepoDateRange_success() {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedAuthorList.add(new Author(\"eugenepeh\"));"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        config.setSinceDate(TestUtil.getSinceDate(2018, Month.MAY.getValue(), 5));"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        config.setUntilDate(TestUtil.getUntilDate(2018, Month.MAY.getValue(), 10));"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthorList.size(), actualAuthorList.size());"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedAuthorList, actualAuthorList);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void getAuthors_validRepoDateOutOfRange_success() {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config.setSinceDate(TestUtil.getSinceDate(2018, Month.JUNE.getValue(), 1));"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        config.setUntilDate(TestUtil.getUntilDate(2018, Month.JUNE.getValue(), 20));"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e actualAuthorList \u003d GitShortlog.getAuthors(config);"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(actualAuthorList.isEmpty());"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":2,"-":65}},{"path":"src/test/java/reposense/model/RepoConfigurationTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.lang.reflect.Method;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.parser.ArgsParser;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.parser.AuthorConfigCsvParser;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.parser.ConfigurationBuildException;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.parser.GroupConfigCsvParser;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.parser.RepoConfigCsvParser;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.report.ReportGenerator;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.util.TestRepoCloner;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class RepoConfigurationTest {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_STANDALONE_TEST_CONFIG_FILES \u003d"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class, \"RepoConfigurationTest/repoconfig_ignoreStandAlone_test\");"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_STANDALONE_KEYWORD_TEST_CONFIG_FILES \u003d"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class, \"RepoConfigurationTest/repoconfig_ignoreStandAloneKeyword_test\");"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Path FORMATS_TEST_CONFIG_FILES \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_formats_test\");"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Path WITHOUT_FORMATS_TEST_CONFIG_FILES \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_withoutformats_test\");"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Path GROUPS_TEST_CONFIG_FILES \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_groups_test\");"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Path OVERRIDE_STANDALONE_TEST_CONFIG_FILE \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_overrideStandAlone_test\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_AUTHORS_TEST_CONFIG_FILE \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_ignoreAuthors_test\");"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_STANDALONE_FLAG_OVERRIDE_CSV_TEST \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_ignoreStandaloneOverrideCsv_test\");"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_FILESIZE_LIMIT_TEST_CONFIG_FILES \u003d loadResource(RepoConfigurationTest.class,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_ignoreFileSizeLimit_test\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Path IGNORE_FILESIZE_LIMIT_OVERRIDE_CSV_TEST_CONFIG_FILES \u003d"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_ignoreFileSizeLimitOverrideCsv_test\");"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final Path SHALLOW_CLONING_TEST_CONFIG_FILES \u003d"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class, \"RepoConfigurationTest/repoconfig_shallowCloning_test\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final Path SHALLOW_CLONING_FLAG_OVERRIDE_TEST_CONFIG_FILES \u003d"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_shallowCloningOverrideCsv_test\");"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final Path FIND_PREVIOUS_AUTHORS_TEST_CONFIG_FILES \u003d"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_findPreviousAuthors_test\");"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final Path FIND_PREVIOUS_AUTHORS_FLAG_OVERRIDE_TEST_CONFIG_FILES \u003d"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigurationTest.class,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \"RepoConfigurationTest/repoconfig_findPreviousAuthorsOverrideCsv_test\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA \u003d \"https://github.com/reposense/testrepo-Beta.git\";"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_DELTA \u003d \"https://github.com/reposense/testrepo-Delta.git\";"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_MINIMAL_STANDALONE_CONFIG \u003d"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \"https://github.com/reposense/testrepo-minimalstandaloneconfig.git\";"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final Author FIRST_AUTHOR \u003d new Author(\"lithiumlkid\");"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final Author SECOND_AUTHOR \u003d new Author(\"codeeong\");"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static final Author THIRD_AUTHOR \u003d new Author(\"jordancjq\");"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static final Author FOURTH_AUTHOR \u003d new Author(\"lohtianwei\");"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FIRST_AUTHOR_ALIASES \u003d Collections.singletonList(\"Ahmad Syafiq\");"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SECOND_AUTHOR_ALIASES \u003d Collections.emptyList();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e THIRD_AUTHOR_ALIASES \u003d Collections.singletonList(\"Jordan Chong\");"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FOURTH_AUTHOR_ALIASES \u003d Collections.singletonList(\"Tianwei\");"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e REPO_LEVEL_GLOB_LIST \u003d Collections.singletonList(\"collated**\");"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FIRST_AUTHOR_GLOB_LIST \u003d"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Arrays.asList(\"*.aa1\", \"**.aa2\", \"**.java\", \"collated**\");"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SECOND_AUTHOR_GLOB_LIST \u003d Arrays.asList(\"\", \"collated**\");"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e THIRD_AUTHOR_GLOB_LIST \u003d Arrays.asList(\"**[!(.md)]\", \"collated**\");"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FOURTH_AUTHOR_GLOB_LIST \u003d Collections.singletonList(\"collated**\");"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e CONFIG_FORMATS \u003d FileType.convertFormatStringsToFileTypes(Arrays.asList("},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \"java\", \"adoc\", \"md\"));"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e FIRST_CONFIG_GROUPS \u003d Arrays.asList("},{"lineNumber":88,"author":{"gitId":"-"},"content":"            new FileType(\"test\", Collections.singletonList(\"src/test**\")),"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            new FileType(\"code\", Collections.singletonList(\"**.java\")),"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            new FileType(\"docs\", Collections.singletonList(\"docs**\")));"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e SECOND_CONFIG_GROUPS \u003d Arrays.asList("},{"lineNumber":92,"author":{"gitId":"-"},"content":"            new FileType(\"docs\", Collections.singletonList(\"docs**\")));"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e CLI_FORMATS \u003d Arrays.asList(\"css\", \"html\");"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static RepoConfiguration repoDeltaStandaloneConfig;"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"    private ReportGenerator reportGenerator \u003d new ReportGenerator();"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @BeforeAll"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void setUp() throws Exception {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        FIRST_AUTHOR.setAuthorAliases(FIRST_AUTHOR_ALIASES);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setAuthorAliases(SECOND_AUTHOR_ALIASES);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        THIRD_AUTHOR.setAuthorAliases(THIRD_AUTHOR_ALIASES);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        FOURTH_AUTHOR.setAuthorAliases(FOURTH_AUTHOR_ALIASES);"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        FIRST_AUTHOR.setIgnoreGlobList(FIRST_AUTHOR_GLOB_LIST);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setIgnoreGlobList(SECOND_AUTHOR_GLOB_LIST);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        THIRD_AUTHOR.setIgnoreGlobList(THIRD_AUTHOR_GLOB_LIST);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        FOURTH_AUTHOR.setIgnoreGlobList(FOURTH_AUTHOR_GLOB_LIST);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        expectedAuthors.add(FIRST_AUTHOR);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        expectedAuthors.add(SECOND_AUTHOR);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        expectedAuthors.add(THIRD_AUTHOR);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        expectedAuthors.add(FOURTH_AUTHOR);"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorList(expectedAuthors);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.addAuthorNamesToAuthorMapEntry(FIRST_AUTHOR, FIRST_AUTHOR_ALIASES);"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.addAuthorNamesToAuthorMapEntry(FOURTH_AUTHOR, FOURTH_AUTHOR_ALIASES);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorDisplayName(FIRST_AUTHOR, \"Ahm\");"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorDisplayName(SECOND_AUTHOR, \"Cod\");"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorDisplayName(THIRD_AUTHOR, \"Jor\");"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setAuthorDisplayName(FOURTH_AUTHOR, \"Loh\");"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setEmails(Arrays.asList(\"codeeong@gmail.com\", \"33129797+codeeong@users.noreply.github.com\"));"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (Author author : expectedAuthors) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            repoDeltaStandaloneConfig.addAuthorEmailsToAuthorMapEntry(author, author.getEmails());"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        repoDeltaStandaloneConfig.setFormats(CONFIG_FORMATS);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void repoConfig_usesStandaloneConfig_success() throws Exception {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);"},{"lineNumber":144,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaStandaloneConfig, actualConfig);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void repoConfig_ignoresStandaloneConfig_success() throws Exception {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(FIRST_AUTHOR);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedAuthors.add(author);"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorList(expectedAuthors);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedConfig.addAuthorNamesToAuthorMapEntry(author, FIRST_AUTHOR_ALIASES);"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorDisplayName(author, \"Ahm\");"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_STANDALONE_TEST_CONFIG_FILES)"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":175,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d"},{"lineNumber":177,"author":{"gitId":"MarcusTXK"},"content":"                new AuthorConfigCsvParser(cliArguments.getAuthorConfigFilePath()).parse();"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(actualConfigs, authorConfigs);"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);"},{"lineNumber":182,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void repoConfig_ignoresStandaloneConfigInCli_success() throws Exception {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_DELTA)"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":202,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":203,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d RunConfigurationDecider"},{"lineNumber":204,"author":{"gitId":"MarcusTXK"},"content":"                .getRunConfiguration(cliArguments)"},{"lineNumber":205,"author":{"gitId":"MarcusTXK"},"content":"                .getRepoConfigurations();"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                cliArguments.isStandaloneConfigIgnored());"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);"},{"lineNumber":211,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void repoConfig_ignoreStandaloneConfigInCli_overrideCsv() throws Exception {"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_BETA))"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_STANDALONE_FLAG_OVERRIDE_CSV_TEST)"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":236,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs,"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                cliArguments.isStandaloneConfigIgnored());"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);"},{"lineNumber":244,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);"},{"lineNumber":245,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void repoConfig_ignoreFileSizeLimit_success() throws Exception {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        expectedConfig.setFileSizeLimitIgnored(true);"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_FILESIZE_LIMIT_TEST_CONFIG_FILES)"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":268,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);"},{"lineNumber":273,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public void repoConfig_ignoreFileSizeLimitInCli_overrideCsv() throws Exception {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_BETA))"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFileSizeLimitIgnored(true);"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setFileSizeLimitIgnored(true);"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_FILESIZE_LIMIT_OVERRIDE_CSV_TEST_CONFIG_FILES)"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                .addIgnoreFilesizeLimit()"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":299,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFileSizeLimitIgnoredToRepoConfigs(actualConfigs,"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                cliArguments.isFileSizeLimitIgnored());"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);"},{"lineNumber":308,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);"},{"lineNumber":309,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    public void repoConfig_withoutIgnoreStandaloneConfigInCli_useCsv() throws Exception {"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_BETA))"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_STANDALONE_FLAG_OVERRIDE_CSV_TEST).build();"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":326,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs,"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                cliArguments.isStandaloneConfigIgnored());"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);"},{"lineNumber":334,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);"},{"lineNumber":335,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaStandaloneConfig, repoDeltaActualConfig);"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    public void repoConfig_wrongKeywordUseStandaloneConfig_success() throws Exception {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_STANDALONE_KEYWORD_TEST_CONFIG_FILES)"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":349,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":350,"author":{"gitId":"-"},"content":""},{"lineNumber":351,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);"},{"lineNumber":353,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaStandaloneConfig, actualConfig);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    public void repoConfig_shallowCloning_success() throws Exception {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":361,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":362,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        expectedConfig.setIsShallowCloningPerformed(true);"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(SHALLOW_CLONING_TEST_CONFIG_FILES)"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":376,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);"},{"lineNumber":381,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":382,"author":{"gitId":"-"},"content":""},{"lineNumber":383,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    public void repoConfig_shallowCloningInCli_success() throws Exception {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":390,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        expectedConfig.setIsShallowCloningPerformed(true);"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_DELTA)"},{"lineNumber":398,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":399,"author":{"gitId":"-"},"content":"                .addShallowCloning()"},{"lineNumber":400,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":402,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d RunConfigurationDecider"},{"lineNumber":403,"author":{"gitId":"MarcusTXK"},"content":"                .getRunConfiguration(cliArguments)"},{"lineNumber":404,"author":{"gitId":"MarcusTXK"},"content":"                .getRepoConfigurations();"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(actualConfigs,"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                cliArguments.isShallowCloningPerformed());"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);"},{"lineNumber":412,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":416,"author":{"gitId":"-"},"content":""},{"lineNumber":417,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    public void repoConfig_shallowCloningInCli_overrideCsv() throws Exception {"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":420,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_BETA))"},{"lineNumber":421,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":422,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setIsShallowCloningPerformed(true);"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":427,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":428,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":429,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setIsShallowCloningPerformed(true);"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(SHALLOW_CLONING_FLAG_OVERRIDE_TEST_CONFIG_FILES)"},{"lineNumber":434,"author":{"gitId":"-"},"content":"                .addShallowCloning()"},{"lineNumber":435,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":438,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(actualConfigs,"},{"lineNumber":441,"author":{"gitId":"-"},"content":"                cliArguments.isShallowCloningPerformed());"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);"},{"lineNumber":447,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);"},{"lineNumber":448,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":452,"author":{"gitId":"-"},"content":""},{"lineNumber":453,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    public void repoConfig_withoutShallowCloningInInCli_useCsv() throws Exception {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":456,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_BETA))"},{"lineNumber":457,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":458,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setIsShallowCloningPerformed(true);"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":463,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":464,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":465,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(SHALLOW_CLONING_FLAG_OVERRIDE_TEST_CONFIG_FILES).build();"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":471,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsShallowCloningPerformedToRepoConfigs(actualConfigs,"},{"lineNumber":474,"author":{"gitId":"-"},"content":"                cliArguments.isShallowCloningPerformed());"},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);"},{"lineNumber":480,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);"},{"lineNumber":481,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":485,"author":{"gitId":"-"},"content":""},{"lineNumber":486,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    public void repoConfig_findPreviousAuthors_success() throws Exception {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":489,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":490,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        expectedConfig.setIsFindingPreviousAuthorsPerformed(true);"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(FIND_PREVIOUS_AUTHORS_TEST_CONFIG_FILES)"},{"lineNumber":499,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":500,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":504,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":508,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);"},{"lineNumber":509,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":513,"author":{"gitId":"-"},"content":""},{"lineNumber":514,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    public void repoConfig_findPreviousAuthorsInCli_success() throws Exception {"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":517,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":518,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":519,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":520,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":521,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":522,"author":{"gitId":"-"},"content":"        expectedConfig.setIsFindingPreviousAuthorsPerformed(true);"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_DELTA)"},{"lineNumber":526,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":527,"author":{"gitId":"-"},"content":"                .addFindPreviousAuthors()"},{"lineNumber":528,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":530,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d RunConfigurationDecider"},{"lineNumber":531,"author":{"gitId":"MarcusTXK"},"content":"                .getRunConfiguration(cliArguments)"},{"lineNumber":532,"author":{"gitId":"MarcusTXK"},"content":"                .getRepoConfigurations();"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsFindingPreviousAuthorsPerformedToRepoConfigs(actualConfigs,"},{"lineNumber":536,"author":{"gitId":"-"},"content":"                cliArguments.isFindingPreviousAuthorsPerformed());"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);"},{"lineNumber":540,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":544,"author":{"gitId":"-"},"content":""},{"lineNumber":545,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    public void repoConfig_findPreviousAuthorsInCli_overrideCsv() throws Exception {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":548,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_BETA))"},{"lineNumber":549,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":550,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setIsFindingPreviousAuthorsPerformed(true);"},{"lineNumber":554,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":555,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":556,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":557,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":559,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setIsFindingPreviousAuthorsPerformed(true);"},{"lineNumber":560,"author":{"gitId":"-"},"content":""},{"lineNumber":561,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(FIND_PREVIOUS_AUTHORS_FLAG_OVERRIDE_TEST_CONFIG_FILES)"},{"lineNumber":562,"author":{"gitId":"-"},"content":"                .addShallowCloning()"},{"lineNumber":563,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":566,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsFindingPreviousAuthorsPerformedToRepoConfigs(actualConfigs,"},{"lineNumber":569,"author":{"gitId":"-"},"content":"                cliArguments.isFindingPreviousAuthorsPerformed());"},{"lineNumber":570,"author":{"gitId":"-"},"content":""},{"lineNumber":571,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);"},{"lineNumber":574,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);"},{"lineNumber":575,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);"},{"lineNumber":576,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":582,"author":{"gitId":"-"},"content":"    public void repoConfig_withoutFindPreviousAuthorsInCli_useCsv() throws Exception {"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":584,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_BETA))"},{"lineNumber":585,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":586,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setIsFindingPreviousAuthorsPerformed(true);"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":591,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":592,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":593,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":595,"author":{"gitId":"-"},"content":""},{"lineNumber":596,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(FIND_PREVIOUS_AUTHORS_FLAG_OVERRIDE_TEST_CONFIG_FILES).build();"},{"lineNumber":597,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":599,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":601,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsFindingPreviousAuthorsPerformedToRepoConfigs(actualConfigs,"},{"lineNumber":602,"author":{"gitId":"-"},"content":"                cliArguments.isFindingPreviousAuthorsPerformed());"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);"},{"lineNumber":608,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);"},{"lineNumber":609,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);"},{"lineNumber":611,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);"},{"lineNumber":612,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":613,"author":{"gitId":"-"},"content":""},{"lineNumber":614,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    public void repoConfig_userEnvironmentCannotRunFindPreviousAuthors_setFindPreviousAuthorsToFalseInAllRepoConfigs()"},{"lineNumber":616,"author":{"gitId":"-"},"content":"            throws Exception {"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_BETA))"},{"lineNumber":619,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":620,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":621,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setFormats(FileType.convertFormatStringsToFileTypes(CLI_FORMATS));"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        repoBetaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":623,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaExpectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":624,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":625,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":626,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        repoDeltaExpectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(FIND_PREVIOUS_AUTHORS_FLAG_OVERRIDE_TEST_CONFIG_FILES).build();"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":632,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        RepoConfiguration.setStandaloneConfigIgnoredToRepoConfigs(actualConfigs, true);"},{"lineNumber":634,"author":{"gitId":"-"},"content":"        RepoConfiguration.setIsFindingPreviousAuthorsPerformedToRepoConfigs(actualConfigs,"},{"lineNumber":635,"author":{"gitId":"-"},"content":"                cliArguments.isFindingPreviousAuthorsPerformed());"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"        RepoConfiguration repoBetaActualConfig \u003d actualConfigs.get(0);"},{"lineNumber":638,"author":{"gitId":"-"},"content":"        RepoConfiguration repoDeltaActualConfig \u003d actualConfigs.get(1);"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoBetaActualConfig);"},{"lineNumber":640,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(repoDeltaActualConfig);"},{"lineNumber":641,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoBetaActualConfig);"},{"lineNumber":642,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(repoDeltaActualConfig);"},{"lineNumber":643,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoBetaExpectedConfig, repoBetaActualConfig);"},{"lineNumber":644,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(repoDeltaExpectedConfig, repoDeltaActualConfig);"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":646,"author":{"gitId":"-"},"content":""},{"lineNumber":647,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":648,"author":{"gitId":"-"},"content":"    public void repoConfig_withFormats_ignoreCliFormats() throws Exception {"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":650,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(FORMATS_TEST_CONFIG_FILES)"},{"lineNumber":651,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":652,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":653,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":654,"author":{"gitId":"-"},"content":""},{"lineNumber":655,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":656,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());"},{"lineNumber":658,"author":{"gitId":"-"},"content":""},{"lineNumber":659,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, actualConfigs.size());"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(CONFIG_FORMATS, actualConfigs.get(0).getFileTypeManager().getFormats());"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":662,"author":{"gitId":"-"},"content":""},{"lineNumber":663,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    public void repoConfig_withoutFormats_useCliFormats() throws Exception {"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(WITHOUT_FORMATS_TEST_CONFIG_FILES)"},{"lineNumber":667,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":668,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":672,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, actualConfigs.size());"},{"lineNumber":676,"author":{"gitId":"-"},"content":""},{"lineNumber":677,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e actualFormats \u003d actualConfigs.get(0).getFileTypeManager().getFormats();"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FileType.convertFormatStringsToFileTypes(CLI_FORMATS), actualFormats);"},{"lineNumber":679,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":680,"author":{"gitId":"-"},"content":""},{"lineNumber":681,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":682,"author":{"gitId":"-"},"content":"    public void repoConfig_withCustomGroups_useCustomGroups() throws Exception {"},{"lineNumber":683,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(GROUPS_TEST_CONFIG_FILES).build();"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":685,"author":{"gitId":"-"},"content":""},{"lineNumber":686,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":687,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        List\u003cGroupConfiguration\u003e groupConfigs \u003d"},{"lineNumber":689,"author":{"gitId":"MarcusTXK"},"content":"                new GroupConfigCsvParser(cliArguments.getGroupConfigFilePath()).parse();"},{"lineNumber":690,"author":{"gitId":"-"},"content":""},{"lineNumber":691,"author":{"gitId":"-"},"content":"        RepoConfiguration.setGroupConfigsToRepos(actualConfigs, groupConfigs);"},{"lineNumber":692,"author":{"gitId":"-"},"content":""},{"lineNumber":693,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, actualConfigs.size());"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FIRST_CONFIG_GROUPS, actualConfigs.get(0).getFileTypeManager().getGroups());"},{"lineNumber":695,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(SECOND_CONFIG_GROUPS, actualConfigs.get(1).getFileTypeManager().getGroups());"},{"lineNumber":696,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":697,"author":{"gitId":"-"},"content":""},{"lineNumber":698,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":699,"author":{"gitId":"-"},"content":"    public void repoConfig_withoutFormatsAndCliFormats_useAllFormats() throws Exception {"},{"lineNumber":700,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(WITHOUT_FORMATS_TEST_CONFIG_FILES).build();"},{"lineNumber":701,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":702,"author":{"gitId":"-"},"content":""},{"lineNumber":703,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":704,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":705,"author":{"gitId":"-"},"content":"        RepoConfiguration.setFormatsToRepoConfigs(actualConfigs, cliArguments.getFormats());"},{"lineNumber":706,"author":{"gitId":"-"},"content":""},{"lineNumber":707,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, actualConfigs.size());"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, actualConfigs.get(0).getFileTypeManager()"},{"lineNumber":709,"author":{"gitId":"-"},"content":"                .getFormats());"},{"lineNumber":710,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":713,"author":{"gitId":"-"},"content":"    public void repoConfig_emptyLocationDifferentBranch_equal() throws Exception {"},{"lineNumber":714,"author":{"gitId":"-"},"content":"        RepoConfiguration emptyLocationEmptyBranchRepoConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":715,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(\"\"))"},{"lineNumber":716,"author":{"gitId":"-"},"content":"                .branch(\"\")"},{"lineNumber":717,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        RepoConfiguration emptyLocationDefaultBranchRepoConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":719,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(\"\")).build();"},{"lineNumber":720,"author":{"gitId":"-"},"content":"        RepoConfiguration emptyLocationWithBranchRepoConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":721,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(\"\"))"},{"lineNumber":722,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":723,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":724,"author":{"gitId":"-"},"content":""},{"lineNumber":725,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(emptyLocationDefaultBranchRepoConfig, emptyLocationEmptyBranchRepoConfig);"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(emptyLocationWithBranchRepoConfig, emptyLocationEmptyBranchRepoConfig);"},{"lineNumber":727,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":728,"author":{"gitId":"-"},"content":""},{"lineNumber":729,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":730,"author":{"gitId":"-"},"content":"    public void repoConfig_sameLocationDifferentBranch_notEqual() throws Exception {"},{"lineNumber":731,"author":{"gitId":"-"},"content":"        RepoConfiguration validLocationValidBranchRepoConfig \u003d"},{"lineNumber":732,"author":{"gitId":"-"},"content":"                new RepoConfiguration.Builder()"},{"lineNumber":733,"author":{"gitId":"-"},"content":"                        .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":734,"author":{"gitId":"-"},"content":"                        .branch(\"master\")"},{"lineNumber":735,"author":{"gitId":"-"},"content":"                        .build();"},{"lineNumber":736,"author":{"gitId":"-"},"content":"        RepoConfiguration validLocationDefaultBranchRepoConfig \u003d"},{"lineNumber":737,"author":{"gitId":"-"},"content":"                new RepoConfiguration.Builder().location(new RepoLocation(TEST_REPO_DELTA)).build();"},{"lineNumber":738,"author":{"gitId":"-"},"content":""},{"lineNumber":739,"author":{"gitId":"-"},"content":"        Assertions.assertNotEquals(validLocationDefaultBranchRepoConfig, validLocationValidBranchRepoConfig);"},{"lineNumber":740,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":741,"author":{"gitId":"-"},"content":""},{"lineNumber":742,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":743,"author":{"gitId":"-"},"content":"    public void repoConfig_overrideStandaloneConfig_success() throws Exception {"},{"lineNumber":744,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":745,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":746,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":747,"author":{"gitId":"-"},"content":"                .fileTypeManager(Collections.emptyList())"},{"lineNumber":748,"author":{"gitId":"-"},"content":"                .ignoreGlobList(Collections.emptyList())"},{"lineNumber":749,"author":{"gitId":"-"},"content":"                .fileSizeLimit(RepoConfiguration.DEFAULT_FILE_SIZE_LIMIT)"},{"lineNumber":750,"author":{"gitId":"-"},"content":"                .isStandaloneConfigIgnored(false)"},{"lineNumber":751,"author":{"gitId":"-"},"content":"                .isFileSizeLimitIgnored(false)"},{"lineNumber":752,"author":{"gitId":"-"},"content":"                .ignoreCommitList(Collections.emptyList())"},{"lineNumber":753,"author":{"gitId":"-"},"content":"                .isFormatsOverriding(true)"},{"lineNumber":754,"author":{"gitId":"-"},"content":"                .isIgnoreGlobListOverriding(true)"},{"lineNumber":755,"author":{"gitId":"-"},"content":"                .isIgnoreCommitListOverriding(true)"},{"lineNumber":756,"author":{"gitId":"-"},"content":"                .isFileSizeLimitOverriding(false)"},{"lineNumber":757,"author":{"gitId":"-"},"content":"                .isShallowCloningPerformed(false)"},{"lineNumber":758,"author":{"gitId":"-"},"content":"                .isFindingPreviousAuthorsPerformed(false)"},{"lineNumber":759,"author":{"gitId":"-"},"content":"                .isIgnoredFileAnalysisSkipped(false)"},{"lineNumber":760,"author":{"gitId":"-"},"content":"                .ignoredAuthorsList(Arrays.asList(\"lithiumlkid\"))"},{"lineNumber":761,"author":{"gitId":"-"},"content":"                .isIgnoredAuthorsListOverriding(true)"},{"lineNumber":762,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":763,"author":{"gitId":"-"},"content":""},{"lineNumber":764,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthorList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":765,"author":{"gitId":"-"},"content":"        Author[] authors \u003d new Author[]{FIRST_AUTHOR, SECOND_AUTHOR, THIRD_AUTHOR, FOURTH_AUTHOR};"},{"lineNumber":766,"author":{"gitId":"-"},"content":"        for (Author author : authors) {"},{"lineNumber":767,"author":{"gitId":"-"},"content":"            Author expectedAuthor \u003d new Author(author);"},{"lineNumber":768,"author":{"gitId":"-"},"content":"            List\u003cString\u003e expectedAuthorIgnoreGlobList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":769,"author":{"gitId":"-"},"content":"            expectedAuthorIgnoreGlobList.addAll(author.getIgnoreGlobList());"},{"lineNumber":770,"author":{"gitId":"-"},"content":""},{"lineNumber":771,"author":{"gitId":"-"},"content":"            // Authors\u0027 original ignoreGlobList contains values from StandaloneConfig repo level, thus need to remove"},{"lineNumber":772,"author":{"gitId":"-"},"content":"            expectedAuthorIgnoreGlobList.removeAll(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":773,"author":{"gitId":"-"},"content":"            expectedAuthor.setIgnoreGlobList(expectedAuthorIgnoreGlobList);"},{"lineNumber":774,"author":{"gitId":"-"},"content":"            expectedAuthorList.add(expectedAuthor);"},{"lineNumber":775,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorList(expectedAuthorList);"},{"lineNumber":777,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorDisplayNameMap(repoDeltaStandaloneConfig.getAuthorDisplayNameMap());"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorNamesToAuthorMap(repoDeltaStandaloneConfig.getAuthorNamesToAuthorMap());"},{"lineNumber":779,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorEmailsToAuthorMap(repoDeltaStandaloneConfig.getAuthorEmailsToAuthorMap());"},{"lineNumber":780,"author":{"gitId":"-"},"content":""},{"lineNumber":781,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":782,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(OVERRIDE_STANDALONE_TEST_CONFIG_FILE)"},{"lineNumber":783,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":784,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":785,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":786,"author":{"gitId":"-"},"content":""},{"lineNumber":787,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":788,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":789,"author":{"gitId":"-"},"content":""},{"lineNumber":790,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);"},{"lineNumber":792,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":793,"author":{"gitId":"-"},"content":""},{"lineNumber":794,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":795,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":796,"author":{"gitId":"-"},"content":""},{"lineNumber":797,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":798,"author":{"gitId":"-"},"content":"    public void repoConfig_minimalStandaloneConfig_fieldsAssignedDefaultValues() throws Exception {"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":800,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG))"},{"lineNumber":801,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":802,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":803,"author":{"gitId":"-"},"content":""},{"lineNumber":804,"author":{"gitId":"-"},"content":"        Author firstAuthor \u003d new Author(\"bluein-green\");"},{"lineNumber":805,"author":{"gitId":"-"},"content":"        Author secondAuthor \u003d new Author(\"jylee-git\");"},{"lineNumber":806,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d Arrays.asList(firstAuthor, secondAuthor);"},{"lineNumber":807,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorList(expectedAuthors);"},{"lineNumber":808,"author":{"gitId":"-"},"content":""},{"lineNumber":809,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(Collections.emptyList());"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(Collections.emptyList());"},{"lineNumber":811,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreCommitList(Collections.emptyList());"},{"lineNumber":812,"author":{"gitId":"-"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":814,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG))"},{"lineNumber":815,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":816,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":817,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);"},{"lineNumber":818,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":819,"author":{"gitId":"-"},"content":""},{"lineNumber":820,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":821,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":822,"author":{"gitId":"-"},"content":""},{"lineNumber":823,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":824,"author":{"gitId":"-"},"content":"    public void repoConfig_removeIgnoredAuthors_success() throws Exception {"},{"lineNumber":825,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":826,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(FIRST_AUTHOR);"},{"lineNumber":827,"author":{"gitId":"-"},"content":"        author.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":828,"author":{"gitId":"-"},"content":"        expectedAuthors.add(author);"},{"lineNumber":829,"author":{"gitId":"-"},"content":""},{"lineNumber":830,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":831,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_DELTA))"},{"lineNumber":832,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":833,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":834,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorList(expectedAuthors);"},{"lineNumber":835,"author":{"gitId":"-"},"content":"        expectedConfig.addAuthorNamesToAuthorMapEntry(author, FIRST_AUTHOR_ALIASES);"},{"lineNumber":836,"author":{"gitId":"-"},"content":"        expectedConfig.setAuthorDisplayName(author, \"Ahm\");"},{"lineNumber":837,"author":{"gitId":"-"},"content":""},{"lineNumber":838,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":839,"author":{"gitId":"-"},"content":"        expectedConfig.setFormats(CONFIG_FORMATS);"},{"lineNumber":840,"author":{"gitId":"-"},"content":"        expectedConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":841,"author":{"gitId":"-"},"content":"        expectedConfig.setIgnoredAuthorsList(Arrays.asList(\"jordancjq\", \"Eugene Peh\"));"},{"lineNumber":842,"author":{"gitId":"-"},"content":""},{"lineNumber":843,"author":{"gitId":"-"},"content":"        String formats \u003d String.join(\" \", CLI_FORMATS);"},{"lineNumber":844,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(IGNORE_AUTHORS_TEST_CONFIG_FILE)"},{"lineNumber":845,"author":{"gitId":"-"},"content":"                .addFormats(formats)"},{"lineNumber":846,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":847,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":848,"author":{"gitId":"-"},"content":""},{"lineNumber":849,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":850,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":851,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d"},{"lineNumber":852,"author":{"gitId":"MarcusTXK"},"content":"                new AuthorConfigCsvParser(cliArguments.getAuthorConfigFilePath()).parse();"},{"lineNumber":853,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(actualConfigs, authorConfigs);"},{"lineNumber":854,"author":{"gitId":"-"},"content":""},{"lineNumber":855,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d actualConfigs.get(0);"},{"lineNumber":856,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(actualConfig);"},{"lineNumber":857,"author":{"gitId":"sikai00"},"content":"        reportGenerator.updateRepoConfig(actualConfig);"},{"lineNumber":858,"author":{"gitId":"-"},"content":"        Method updateAuthorList \u003d ReportGenerator.class.getDeclaredMethod(\"updateAuthorList\", RepoConfiguration.class);"},{"lineNumber":859,"author":{"gitId":"-"},"content":"        updateAuthorList.setAccessible(true);"},{"lineNumber":860,"author":{"gitId":"sikai00"},"content":"        updateAuthorList.invoke(reportGenerator, actualConfig);"},{"lineNumber":861,"author":{"gitId":"-"},"content":""},{"lineNumber":862,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfig, actualConfig);"},{"lineNumber":863,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":864,"author":{"gitId":"-"},"content":""},{"lineNumber":865,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":866,"author":{"gitId":"-"},"content":"    public void repoBuilder_displayName_success() throws Exception {"},{"lineNumber":867,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":868,"author":{"gitId":"-"},"content":"                .displayName(\"CS3281\")"},{"lineNumber":869,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG))"},{"lineNumber":870,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":871,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":872,"author":{"gitId":"-"},"content":""},{"lineNumber":873,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(actualConfig.getDisplayName(), \"CS3281\");"},{"lineNumber":874,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":875,"author":{"gitId":"-"},"content":""},{"lineNumber":876,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":877,"author":{"gitId":"-"},"content":"    public void repoBuilder_outputFolderName_success() throws Exception {"},{"lineNumber":878,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":879,"author":{"gitId":"-"},"content":"                .outputFolderName(\"CS3281 Folder\")"},{"lineNumber":880,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG))"},{"lineNumber":881,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":882,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":883,"author":{"gitId":"-"},"content":""},{"lineNumber":884,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(actualConfig.getOutputFolderName(), \"CS3281 Folder\");"},{"lineNumber":885,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":886,"author":{"gitId":"-"},"content":""},{"lineNumber":887,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":888,"author":{"gitId":"-"},"content":"    public void repoBuilder_repoFolderName_success() throws Exception {"},{"lineNumber":889,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":890,"author":{"gitId":"-"},"content":"                .repoFolderName(\"CS3281 Folder\")"},{"lineNumber":891,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG))"},{"lineNumber":892,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":893,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":894,"author":{"gitId":"-"},"content":""},{"lineNumber":895,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(actualConfig.getRepoFolderName(), \"CS3281 Folder\");"},{"lineNumber":896,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":897,"author":{"gitId":"-"},"content":""},{"lineNumber":898,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":899,"author":{"gitId":"-"},"content":"    public void repoBuilder_zoneID_success() throws Exception {"},{"lineNumber":900,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":901,"author":{"gitId":"-"},"content":"                .zoneId(ZoneId.systemDefault())"},{"lineNumber":902,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG))"},{"lineNumber":903,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":904,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":905,"author":{"gitId":"-"},"content":""},{"lineNumber":906,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(actualConfig.getZoneId(), ZoneId.systemDefault());"},{"lineNumber":907,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":908,"author":{"gitId":"-"},"content":""},{"lineNumber":909,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":910,"author":{"gitId":"-"},"content":"    public void repoBuilder_sinceDate_success() throws Exception {"},{"lineNumber":911,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":912,"author":{"gitId":"-"},"content":"                .sinceDate(LocalDateTime.of(2024, 1, 1, 12, 0, 0))"},{"lineNumber":913,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG))"},{"lineNumber":914,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":915,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":916,"author":{"gitId":"-"},"content":""},{"lineNumber":917,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(actualConfig.getSinceDate(),"},{"lineNumber":918,"author":{"gitId":"-"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0, 0));"},{"lineNumber":919,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":920,"author":{"gitId":"-"},"content":""},{"lineNumber":921,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":922,"author":{"gitId":"-"},"content":"    public void repoBuilder_untilDate_success() throws Exception {"},{"lineNumber":923,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":924,"author":{"gitId":"-"},"content":"                .untilDate(LocalDateTime.of(2024, 1, 1, 12, 0, 0))"},{"lineNumber":925,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG))"},{"lineNumber":926,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":927,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":928,"author":{"gitId":"-"},"content":""},{"lineNumber":929,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(actualConfig.getUntilDate(),"},{"lineNumber":930,"author":{"gitId":"-"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0, 0));"},{"lineNumber":931,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":932,"author":{"gitId":"-"},"content":""},{"lineNumber":933,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":934,"author":{"gitId":"-"},"content":"    public void repoBuilder_authorConfig_success() throws Exception {"},{"lineNumber":935,"author":{"gitId":"-"},"content":"        RepoLocation loc \u003d new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG);"},{"lineNumber":936,"author":{"gitId":"-"},"content":"        String branch \u003d \"master\";"},{"lineNumber":937,"author":{"gitId":"-"},"content":""},{"lineNumber":938,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":939,"author":{"gitId":"-"},"content":"                .authorConfig(new AuthorConfiguration(loc, branch))"},{"lineNumber":940,"author":{"gitId":"-"},"content":"                .location(loc)"},{"lineNumber":941,"author":{"gitId":"-"},"content":"                .branch(branch)"},{"lineNumber":942,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":943,"author":{"gitId":"-"},"content":""},{"lineNumber":944,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(actualConfig.getAuthorConfig(),"},{"lineNumber":945,"author":{"gitId":"-"},"content":"                new AuthorConfiguration(loc, branch));"},{"lineNumber":946,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":947,"author":{"gitId":"-"},"content":""},{"lineNumber":948,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":949,"author":{"gitId":"-"},"content":"    public void repoBuilder_isLastModifiedDateIncluded_success() throws Exception {"},{"lineNumber":950,"author":{"gitId":"-"},"content":"        RepoConfiguration actualConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":951,"author":{"gitId":"-"},"content":"                .isLastModifiedDateIncluded(true)"},{"lineNumber":952,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_MINIMAL_STANDALONE_CONFIG))"},{"lineNumber":953,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":954,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":955,"author":{"gitId":"-"},"content":""},{"lineNumber":956,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(actualConfig.isLastModifiedDateIncluded());"},{"lineNumber":957,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":958,"author":{"gitId":"-"},"content":""},{"lineNumber":959,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":960,"author":{"gitId":"-"},"content":"    public void repoBuilder_buildWithInvalid_failure() {"},{"lineNumber":961,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ConfigurationBuildException.class, () -\u003e new RepoConfiguration.Builder().build());"},{"lineNumber":962,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":963,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MarcusTXK":32,"sikai00":30,"-":901}},{"path":"src/test/java/reposense/model/RunConfigurationDeciderTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package reposense.model;"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import static reposense.model.RunConfigurationDecider.getRunConfiguration;"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import reposense.parser.ArgsParser;"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"import reposense.parser.ArgsParserTest;"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"import reposense.util.FileUtil;"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"import reposense.util.InputBuilder;"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"public class RunConfigurationDeciderTest {"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    private static final Path PROJECT_DIRECTORY \u003d Paths.get(System.getProperty(\"user.dir\"));"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    private static final Path CONFIG_FOLDER_ABSOLUTE \u003d loadResource(ArgsParserTest.class, \"cli_location_test\");"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    private static final String NONEXISTENT_DIRECTORY \u003d \"some_non_existent_dir/\";"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    private static final InputBuilder DEFAULT_INPUT_BUILDER \u003d new InputBuilder();"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    private static final String TEST_REPO_REPOSENSE \u003d \"https://github.com/reposense/RepoSense.git\";"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    private static final String TEST_REPO_BETA \u003d \"https://github.com/reposense/testrepo-Beta.git\";"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"    @BeforeEach"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    public void before() {"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        DEFAULT_INPUT_BUILDER.reset().addConfig(CONFIG_FOLDER_ABSOLUTE);"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"    @AfterEach"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    public void after() {"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"            FileUtil.deleteDirectory(PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY).toString());"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"            System.err.println(e.getMessage());"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    public void parse_addConfig_returnsConfigRunConfiguration() throws Exception {"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"        String input \u003d new InputBuilder()"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"                .addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"                .addSinceDate(\"01/07/2017\")"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"                .addUntilDate(\"30/11/2017\")"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"                .addView()"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"                .build();"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        RunConfiguration runConfiguration \u003d getRunConfiguration(cliArguments);"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertTrue(runConfiguration instanceof ConfigRunConfiguration);"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"    public void parse_addRepos_returnsCliRunConfiguration() throws Exception {"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_BETA)"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"                .build();"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"        RunConfiguration runConfiguration \u003d getRunConfiguration(cliArguments);"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertTrue(runConfiguration instanceof CliRunConfiguration);"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"    public void parse_reposAndConfigNotSpecified_returnsConfigRunConfiguration() throws Exception {"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"        String input \u003d new InputBuilder()"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"                .addSinceDate(\"01/07/2017\")"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"                .addUntilDate(\"30/11/2017\")"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"                .addView()"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"                .build();"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"        RunConfiguration runConfiguration \u003d getRunConfiguration(cliArguments);"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertTrue(runConfiguration instanceof ConfigRunConfiguration);"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"}"}],"authorContributionMap":{"MarcusTXK":83}},{"path":"src/test/java/reposense/parser/ArgsParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.Month;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"import net.sourceforge.argparse4j.helper.HelpScreenException;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"import reposense.model.RunConfigurationDecider;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.ParseException;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.parser.types.SinceDateArgumentType;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import reposense.util.TimeUtil;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class ArgsParserTest {"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Path PROJECT_DIRECTORY \u003d Paths.get(System.getProperty(\"user.dir\"));"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Path CONFIG_DIRECTORY \u003d Paths.get(System.getProperty(\"user.dir\")"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + File.separator + \"config\" + File.separator);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Path CONFIG_FOLDER_ABSOLUTE \u003d loadResource(ArgsParserTest.class, \"cli_location_test\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Path OUTPUT_DIRECTORY_ABSOLUTE \u003d loadResource(ArgsParserTest.class, \"output\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Path CONFIG_FOLDER_RELATIVE \u003d PROJECT_DIRECTORY.relativize(CONFIG_FOLDER_ABSOLUTE);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Path OUTPUT_DIRECTORY_RELATIVE \u003d PROJECT_DIRECTORY.relativize(OUTPUT_DIRECTORY_ABSOLUTE);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_CSV_FILE \u003d"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            CONFIG_FOLDER_ABSOLUTE.resolve(RepoConfigCsvParser.REPO_CONFIG_FILENAME);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_CSV_FILE \u003d"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            CONFIG_FOLDER_ABSOLUTE.resolve(AuthorConfigCsvParser.AUTHOR_CONFIG_FILENAME);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String NONEXISTENT_DIRECTORY \u003d \"some_non_existent_dir/\";"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final InputBuilder DEFAULT_INPUT_BUILDER \u003d new InputBuilder();"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_REPOSENSE \u003d \"https://github.com/reposense/RepoSense.git\";"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA \u003d \"https://github.com/reposense/testrepo-Beta.git\";"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_CHARLIE \u003d \"https://github.com/reposense/testrepo-Charlie.git\";"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_DELTA \u003d \"https://github.com/reposense/testrepo-Delta.git\";"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String DEFAULT_TIME_ZONE_STRING \u003d \"Asia/Singapore\";"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final ZoneId DEFAULT_TIME_ZONE_ID \u003d TestUtil.getZoneId(DEFAULT_TIME_ZONE_STRING);"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void before() {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DEFAULT_INPUT_BUILDER.reset().addConfig(CONFIG_FOLDER_ABSOLUTE);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @AfterEach"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void after() {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            FileUtil.deleteDirectory(PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY).toString());"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            System.err.println(e.getMessage());"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_d1CorrectTimeZone_success() throws Exception {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .addSinceDate(SinceDateArgumentType.FIRST_COMMIT_DATE_SHORTHAND)"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TimeUtil.getArbitraryFirstCommitDateConverted(DEFAULT_TIME_ZONE_ID);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.NOVEMBER.getValue(), 30);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(DEFAULT_TIME_ZONE_ID, cliArguments.getZoneId());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parse_allCorrectInputs_success() throws Exception {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .addFormats(\"java adoc html css js\")"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .addIgnoreFilesizeLimit()"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .addView()"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":114,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TestUtil.getSinceDate(2017, Month.JULY.getValue(), 1);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.NOVEMBER.getValue(), 30);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes("},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"adoc\", \"html\", \"css\", \"js\"));"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedFormats, cliArguments.getFormats());"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isFileSizeLimitIgnored());"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(DEFAULT_TIME_ZONE_ID, cliArguments.getZoneId());"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_help_throwsHelpScreenException() {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String input \u003d \"--help\";"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(HelpScreenException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_allCorrectInputsAlias_success() throws Exception {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String input \u003d String.format("},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \"-c \\\"%s\\\" -o \\\"%s\\\" -s 01/07/2017 -u 30/11/2017 -f java adoc html css js -i -I -v -t %s\","},{"lineNumber":141,"author":{"gitId":"-"},"content":"                CONFIG_FOLDER_ABSOLUTE, OUTPUT_DIRECTORY_ABSOLUTE, DEFAULT_TIME_ZONE_STRING);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":148,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TestUtil.getSinceDate(2017, Month.JULY.getValue(), 1);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.NOVEMBER.getValue(), 30);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes("},{"lineNumber":156,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"adoc\", \"html\", \"css\", \"js\"));"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedFormats, cliArguments.getFormats());"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isFileSizeLimitIgnored());"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(DEFAULT_TIME_ZONE_ID, cliArguments.getZoneId());"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_withExtraWhitespaces_success() throws Exception {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).addWhiteSpace(5)"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE).addWhiteSpace(4)"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\").addWhiteSpace(3)"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\").addWhiteSpace(6)"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .addFormats(\"java   adoc  html      css js   \")"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig().addWhiteSpace(1)"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .addIgnoreFilesizeLimit().addWhiteSpace(2)"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .addView().addWhiteSpace(4)"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING).addWhiteSpace(5)"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":179,"author":{"gitId":"MarcusTXK"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":181,"author":{"gitId":"MarcusTXK"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":183,"author":{"gitId":"-"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME), cliArguments.getOutputFilePath()));"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TestUtil.getSinceDate(2017, Month.JULY.getValue(), 1);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.NOVEMBER.getValue(), 30);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes(Arrays.asList("},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \"java\", \"adoc\", \"html\", \"css\", \"js\"));"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedFormats, cliArguments.getFormats());"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isFileSizeLimitIgnored());"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(DEFAULT_TIME_ZONE_ID, cliArguments.getZoneId());"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parse_configFolderOnly_success() throws Exception {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).build();"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":205,"author":{"gitId":"MarcusTXK"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":207,"author":{"gitId":"MarcusTXK"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // Optional arguments have default values"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertDateDiffOneMonth(cliArguments.getSinceDate(), cliArguments.getUntilDate());"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertDateDiffEndOfDay(cliArguments.getUntilDate());"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ArgsParser.DEFAULT_REPORT_NAME,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                cliArguments.getOutputFilePath().getFileName().toString());"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, cliArguments.getFormats());"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE).build();"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":218,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":220,"author":{"gitId":"MarcusTXK"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":222,"author":{"gitId":"MarcusTXK"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // Optional arguments have default values"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertDateDiffOneMonth(cliArguments.getSinceDate(), cliArguments.getUntilDate());"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertDateDiffEndOfDay(cliArguments.getUntilDate());"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ArgsParser.DEFAULT_REPORT_NAME,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                cliArguments.getOutputFilePath().getFileName().toString());"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FileTypeTest.NO_SPECIFIED_FORMATS, cliArguments.getFormats());"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ZoneId.systemDefault(), cliArguments.getZoneId());"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void parse_viewOnly_success() throws Exception {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView(OUTPUT_DIRECTORY_ABSOLUTE).build();"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":238,"author":{"gitId":"MarcusTXK"},"content":"                OUTPUT_DIRECTORY_ABSOLUTE, cliArguments.getReportDirectoryPath()));"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void parse_withIgnore_success() throws Exception {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                .addIgnoreStandaloneConfig()"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"        String inputWithAlias \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                .add(\"-i\")"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        CliArguments cliArgumentsWithAlias \u003d ArgsParser.parse(translateCommandline(inputWithAlias));"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertTrue(cliArguments.isStandaloneConfigIgnored());"},{"lineNumber":254,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertTrue(cliArgumentsWithAlias.isStandaloneConfigIgnored());"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertTrue(cliArguments.equals(cliArgumentsWithAlias));"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(cliArguments, cliArgumentsWithAlias);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public void parse_withoutIgnore_success() throws Exception {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertFalse(cliArguments.isStandaloneConfigIgnored());"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void parse_viewOnlyWithoutArgs_returnsConfigCliArguments() throws Exception {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addView().build();"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(CONFIG_DIRECTORY.toString(), ("},{"lineNumber":275,"author":{"gitId":"MarcusTXK"},"content":"                cliArguments).getConfigFolderPath().toString());"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    public void parse_configFolderAndOutputDirectory_success() throws Exception {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        Path expectedRelativeOutputDirectoryPath \u003d OUTPUT_DIRECTORY_RELATIVE.resolve(ArgsParser.DEFAULT_REPORT_NAME);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        Path expectedAbsoluteOutputDirectoryPath \u003d OUTPUT_DIRECTORY_ABSOLUTE.resolve(ArgsParser.DEFAULT_REPORT_NAME);"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_RELATIVE)"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":289,"author":{"gitId":"MarcusTXK"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":291,"author":{"gitId":"MarcusTXK"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(expectedRelativeOutputDirectoryPath, cliArguments.getOutputFilePath()));"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE)"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":299,"author":{"gitId":"MarcusTXK"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":301,"author":{"gitId":"MarcusTXK"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile(expectedAbsoluteOutputDirectoryPath, cliArguments.getOutputFilePath()));"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    public void parse_configFolderAndViewWithouthArgs_returnsConfigCliArguments() throws Exception {"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                .addView()"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":313,"author":{"gitId":"MarcusTXK"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":315,"author":{"gitId":"MarcusTXK"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_RELATIVE)"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                .addView()"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":324,"author":{"gitId":"MarcusTXK"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":326,"author":{"gitId":"MarcusTXK"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    public void parse_configFolderAndViewWithArgs_returnsConfigCliArguments() throws Exception {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                .addView(OUTPUT_DIRECTORY_ABSOLUTE)"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":336,"author":{"gitId":"-"},"content":""},{"lineNumber":337,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":338,"author":{"gitId":"MarcusTXK"},"content":"                REPO_CONFIG_CSV_FILE, cliArguments.getRepoConfigFilePath()));"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":340,"author":{"gitId":"MarcusTXK"},"content":"                AUTHOR_CONFIG_CSV_FILE, cliArguments.getAuthorConfigFilePath()));"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":343,"author":{"gitId":"-"},"content":""},{"lineNumber":344,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    public void sinceDate_correctFormat_success() throws Exception {"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":351,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TestUtil.getSinceDate(2017, Month.JULY.getValue(), 1);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    public void untilDate_correctFormat_success() throws Exception {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)"},{"lineNumber":361,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":363,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.NOVEMBER.getValue(), 30);"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    public void sinceDate_withExtraDate_success() throws Exception {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                .addSinceDate(\"\\\"01/07/2017 01/07/2018\\\"\")"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":375,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TestUtil.getSinceDate(2017, Month.JULY.getValue(), 1);"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    public void untilDate_withExtraTime_success() throws Exception {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                .addUntilDate(\"\\\"30/11/2017 10:10:10\\\"\")"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":387,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.NOVEMBER.getValue(), 30);"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    public void period_inDaysWithSinceDate_success() throws Exception {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":395,"author":{"gitId":"-"},"content":"                .addSinceDate(\"01/07/2017\")"},{"lineNumber":396,"author":{"gitId":"-"},"content":"                .addPeriod(\"2d\")"},{"lineNumber":397,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)"},{"lineNumber":398,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":400,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"        LocalDateTime expectedUntilDate \u003d TestUtil.getUntilDate(2017, Month.JULY.getValue(), 3);"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedUntilDate, cliArguments.getUntilDate());"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    public void period_inWeeksWithUntilDate_success() throws Exception {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                .addUntilDate(\"14/07/2017\")"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                .addTimezone(DEFAULT_TIME_ZONE_STRING)"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                .addPeriod(\"2w\")"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":413,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"        LocalDateTime expectedSinceDate \u003d TestUtil.getSinceDate(2017, Month.JUNE.getValue(), 30);"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedSinceDate, cliArguments.getSinceDate());"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    public void formats_inAlphanumeric_success() throws Exception {"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addFormats(\"java js css 7z\").build();"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":422,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"        List\u003cFileType\u003e expectedFormats \u003d FileType.convertFormatStringsToFileTypes("},{"lineNumber":424,"author":{"gitId":"-"},"content":"                Arrays.asList(\"java\", \"js\", \"css\", \"7z\"));"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedFormats, cliArguments.getFormats());"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    public void numCloningThreads_default_success() throws Exception {"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.build();"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":432,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d ArgsParser.DEFAULT_NUM_CLONING_THREADS;"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedNumThreads, cliArguments.getNumCloningThreads());"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    public void numCloningThreads_isNumeric_success() throws Exception {"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":440,"author":{"gitId":"-"},"content":"                .addNumCloningThreads(2)"},{"lineNumber":441,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        System.out.println(input);"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":444,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":445,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d 2;"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedNumThreads, cliArguments.getNumCloningThreads());"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    public void numAnalysisThreads_default_success() throws Exception {"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.build();"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":453,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d ArgsParser.DEFAULT_NUM_ANALYSIS_THREADS;"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedNumThreads, cliArguments.getNumAnalysisThreads());"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":457,"author":{"gitId":"-"},"content":""},{"lineNumber":458,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    public void numAnalysisThreads_isNumeric_success() throws Exception {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER"},{"lineNumber":461,"author":{"gitId":"-"},"content":"                .addNumAnalysisThreads(2)"},{"lineNumber":462,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":464,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":465,"author":{"gitId":"-"},"content":"        int expectedNumThreads \u003d 2;"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedNumThreads, cliArguments.getNumAnalysisThreads());"},{"lineNumber":467,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":468,"author":{"gitId":"-"},"content":""},{"lineNumber":469,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    public void parse_validGitRepoLocations_repoConfigurationListCorrectSize() throws Exception {"},{"lineNumber":471,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":473,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cRepoConfiguration\u003e repoConfigs \u003d RunConfigurationDecider"},{"lineNumber":474,"author":{"gitId":"MarcusTXK"},"content":"                .getRunConfiguration(cliArguments)"},{"lineNumber":475,"author":{"gitId":"MarcusTXK"},"content":"                .getRepoConfigurations();"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, repoConfigs.size());"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    public void parse_repoLocationsAndView_returnsLocationCliArguments() throws Exception {"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)"},{"lineNumber":482,"author":{"gitId":"-"},"content":"                .addView()"},{"lineNumber":483,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":485,"author":{"gitId":"-"},"content":""},{"lineNumber":486,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);"},{"lineNumber":488,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertEquals(expectedLocations, cliArguments.getLocations());"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    public void parse_repoLocationsOnly_success() throws Exception {"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA).build();"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":495,"author":{"gitId":"-"},"content":""},{"lineNumber":496,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);"},{"lineNumber":498,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertEquals(expectedLocations, cliArguments.getLocations());"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    public void parse_repoLocationsAndViewWithArgs_returnsLocationsCliArguments() throws Exception {"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_REPOSENSE, TEST_REPO_DELTA)"},{"lineNumber":504,"author":{"gitId":"-"},"content":"                .addView(OUTPUT_DIRECTORY_ABSOLUTE)"},{"lineNumber":505,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":507,"author":{"gitId":"-"},"content":""},{"lineNumber":508,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(cliArguments.isAutomaticallyLaunching());"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expectedLocations \u003d Arrays.asList(TEST_REPO_REPOSENSE, TEST_REPO_DELTA);"},{"lineNumber":510,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertEquals(expectedLocations, cliArguments.getLocations());"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":514,"author":{"gitId":"-"},"content":"    public void parse_configOrLocationsSimilar_success() throws Exception {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE).build();"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        CliArguments configCliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":517,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cRepoConfiguration\u003e actualRepoConfigs \u003d RunConfigurationDecider"},{"lineNumber":518,"author":{"gitId":"MarcusTXK"},"content":"                .getRunConfiguration(configCliArguments)"},{"lineNumber":519,"author":{"gitId":"MarcusTXK"},"content":"                .getRepoConfigurations();"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().addRepos(TEST_REPO_BETA, TEST_REPO_CHARLIE, TEST_REPO_DELTA).build();"},{"lineNumber":522,"author":{"gitId":"-"},"content":"        CliArguments locationCliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":523,"author":{"gitId":"MarcusTXK"},"content":"        List\u003cRepoConfiguration\u003e expectedRepoConfigs \u003d RunConfigurationDecider"},{"lineNumber":524,"author":{"gitId":"MarcusTXK"},"content":"                .getRunConfiguration(locationCliArguments)"},{"lineNumber":525,"author":{"gitId":"MarcusTXK"},"content":"                .getRepoConfigurations();"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(actualRepoConfigs, expectedRepoConfigs);"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":529,"author":{"gitId":"-"},"content":""},{"lineNumber":530,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    public void emptyArgs_defaultConfigFolderPath() throws Exception {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(new String[]{});"},{"lineNumber":533,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":534,"author":{"gitId":"MarcusTXK"},"content":"        Assertions.assertEquals(CONFIG_DIRECTORY.toString(), cliArguments.getConfigFolderPath().toString());"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":536,"author":{"gitId":"-"},"content":""},{"lineNumber":537,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    public void parse_repoAliases_sameResult() throws Exception {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addRepos(TEST_REPO_BETA).build();"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        CliArguments repoAliasCliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"        input \u003d new InputBuilder().add(String.format(\"--repos %s\", TEST_REPO_BETA)).build();"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        CliArguments reposAliasCliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":544,"author":{"gitId":"-"},"content":""},{"lineNumber":545,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(repoAliasCliArguments, reposAliasCliArguments);"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    public void absoluteConfigFolder_withoutRequiredConfigFiles_throwsParseException() {"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        Path absDirectory \u003d PROJECT_DIRECTORY.getParent().toAbsolutePath();"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(absDirectory).build();"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":556,"author":{"gitId":"-"},"content":"    public void relativeConfigFolder_withoutRequiredConfigFiles_throwsParseException() {"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        Path relDirectory \u003d PROJECT_DIRECTORY.getParent();"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(relDirectory).build();"},{"lineNumber":559,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":561,"author":{"gitId":"-"},"content":""},{"lineNumber":562,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":563,"author":{"gitId":"-"},"content":"    public void parse_notExistsConfigFolder_throwsParseException() {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        Path absConfigFolder \u003d PROJECT_DIRECTORY.resolve(\"non_existing_random_folder\");"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(absConfigFolder).build();"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":568,"author":{"gitId":"-"},"content":""},{"lineNumber":569,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":570,"author":{"gitId":"-"},"content":"    public void parse_configCsvFileAsConfigFolder_throwsParseException() {"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(REPO_CONFIG_CSV_FILE).build();"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    public void parse_missingConfigValue_throwsParseException() {"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(new File(\"\").toPath()).build();"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":580,"author":{"gitId":"-"},"content":""},{"lineNumber":581,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":582,"author":{"gitId":"-"},"content":"    public void outputPath_nonExistentDirectory_success() throws Exception {"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        Path nonExistentDirectory \u003d PROJECT_DIRECTORY.resolve(NONEXISTENT_DIRECTORY);"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        Path expectedRelativeOutputDirectoryPath \u003d nonExistentDirectory.resolve(ArgsParser.DEFAULT_REPORT_NAME);"},{"lineNumber":585,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addOutput(nonExistentDirectory).build();"},{"lineNumber":586,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":587,"author":{"gitId":"MarcusTXK"},"content":""},{"lineNumber":588,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(Files.isSameFile("},{"lineNumber":589,"author":{"gitId":"-"},"content":"                expectedRelativeOutputDirectoryPath, cliArguments.getOutputFilePath()));"},{"lineNumber":590,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":591,"author":{"gitId":"-"},"content":""},{"lineNumber":592,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    public void sinceDate_unsupportedFormats_throwsParseException() {"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01 July 17\").build();"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":597,"author":{"gitId":"-"},"content":""},{"lineNumber":598,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":599,"author":{"gitId":"-"},"content":"    public void untilDate_unsupportedFormats_throwsParseException() {"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addUntilDate(\"11/31/2017\").build();"},{"lineNumber":601,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    public void sinceDate_laterThanUntilDate_throwsParseException() {"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(\"01/12/2017\")"},{"lineNumber":607,"author":{"gitId":"-"},"content":"                .addUntilDate(\"30/11/2017\")"},{"lineNumber":608,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":610,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":611,"author":{"gitId":"-"},"content":""},{"lineNumber":612,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    public void sinceDate_laterThanCurrentDate_throwsParseException() {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        LocalDateTime tomorrowDateTime \u003d LocalDateTime.now()"},{"lineNumber":615,"author":{"gitId":"-"},"content":"                .plusDays(1L);"},{"lineNumber":616,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        String tomorrow \u003d tomorrowDateTime.format(formatter);"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":""},{"lineNumber":620,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(tomorrow)"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":624,"author":{"gitId":"-"},"content":""},{"lineNumber":625,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    public void sinceDate_beforeUntilDateAndLaterThanCurrentDate_throwsParseException() {"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        LocalDateTime tomorrowDateTime \u003d LocalDateTime.now()"},{"lineNumber":628,"author":{"gitId":"-"},"content":"                .plusDays(1L);"},{"lineNumber":629,"author":{"gitId":"-"},"content":"        LocalDateTime dayAfterDateTime \u003d LocalDateTime.now()"},{"lineNumber":630,"author":{"gitId":"-"},"content":"                .plusDays(2L);"},{"lineNumber":631,"author":{"gitId":"-"},"content":""},{"lineNumber":632,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        String tomorrow \u003d tomorrowDateTime.format(formatter);"},{"lineNumber":634,"author":{"gitId":"-"},"content":"        String dayAfter \u003d dayAfterDateTime.format(formatter);"},{"lineNumber":635,"author":{"gitId":"-"},"content":""},{"lineNumber":636,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addSinceDate(tomorrow)"},{"lineNumber":637,"author":{"gitId":"-"},"content":"                .addUntilDate(dayAfter)"},{"lineNumber":638,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":641,"author":{"gitId":"-"},"content":""},{"lineNumber":642,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":643,"author":{"gitId":"-"},"content":"    public void period_withBothSinceDateAndUntilDate_throwsParseException() {"},{"lineNumber":644,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"18d\")"},{"lineNumber":645,"author":{"gitId":"-"},"content":"                .addSinceDate(\"30/11/2017\")"},{"lineNumber":646,"author":{"gitId":"-"},"content":"                .addUntilDate(\"01/12/2017\")"},{"lineNumber":647,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":649,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":650,"author":{"gitId":"-"},"content":""},{"lineNumber":651,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":652,"author":{"gitId":"-"},"content":"    public void period_notNumeric_throwsParseExcpetion() {"},{"lineNumber":653,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"abcd\").build();"},{"lineNumber":654,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":655,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":656,"author":{"gitId":"-"},"content":""},{"lineNumber":657,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":658,"author":{"gitId":"-"},"content":"    public void period_isZero_throwsParseExcpetion() {"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addPeriod(\"0w\").build();"},{"lineNumber":660,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":662,"author":{"gitId":"-"},"content":""},{"lineNumber":663,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    public void formats_notInAlphanumeric_throwsParseException() {"},{"lineNumber":665,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addFormats(\".java\").build();"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":667,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":668,"author":{"gitId":"-"},"content":""},{"lineNumber":669,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":670,"author":{"gitId":"-"},"content":"    public void parse_mutuallyExclusiveArgumentsConfigAndReposTogether_throwsParseException() {"},{"lineNumber":671,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":672,"author":{"gitId":"-"},"content":"                .addRepos(TEST_REPO_REPOSENSE)"},{"lineNumber":673,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":674,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":675,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":676,"author":{"gitId":"-"},"content":""},{"lineNumber":677,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    public void parse_extraArgumentForIgnore_throwsParseException() {"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addIgnoreStandaloneConfig().add(\"true\").build();"},{"lineNumber":680,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":681,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":682,"author":{"gitId":"-"},"content":""},{"lineNumber":683,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    public void parse_withTimezone_success() throws Exception {"},{"lineNumber":685,"author":{"gitId":"-"},"content":"        String zoneId \u003d \"UTC+11\";"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":688,"author":{"gitId":"-"},"content":""},{"lineNumber":689,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());"},{"lineNumber":690,"author":{"gitId":"-"},"content":""},{"lineNumber":691,"author":{"gitId":"-"},"content":"        zoneId \u003d \"UTC-1030\";"},{"lineNumber":692,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();"},{"lineNumber":693,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":694,"author":{"gitId":"-"},"content":""},{"lineNumber":695,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());"},{"lineNumber":696,"author":{"gitId":"-"},"content":""},{"lineNumber":697,"author":{"gitId":"-"},"content":"        zoneId \u003d \"UTC\";"},{"lineNumber":698,"author":{"gitId":"-"},"content":"        input \u003d DEFAULT_INPUT_BUILDER.addTimezone(zoneId).build();"},{"lineNumber":699,"author":{"gitId":"-"},"content":"        cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":700,"author":{"gitId":"-"},"content":""},{"lineNumber":701,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(ZoneId.of(zoneId), cliArguments.getZoneId());"},{"lineNumber":702,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":703,"author":{"gitId":"-"},"content":""},{"lineNumber":704,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":705,"author":{"gitId":"-"},"content":"    public void parse_incorrectTimezone_throwsParseException() {"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"UTC+\").build();"},{"lineNumber":707,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));;"},{"lineNumber":708,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":709,"author":{"gitId":"-"},"content":""},{"lineNumber":710,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":711,"author":{"gitId":"-"},"content":"    public void parse_timezoneWithoutArgument_throwsParseException() {"},{"lineNumber":712,"author":{"gitId":"-"},"content":"        String input \u003d DEFAULT_INPUT_BUILDER.addTimezone(\"\").build();"},{"lineNumber":713,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(ParseException.class, () -\u003e ArgsParser.parse(translateCommandline(input)));"},{"lineNumber":714,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":715,"author":{"gitId":"-"},"content":""},{"lineNumber":716,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":717,"author":{"gitId":"-"},"content":"    public void parse_shallowCloning_success() throws Exception {"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":719,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)"},{"lineNumber":720,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":721,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":722,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(false, cliArguments.isShallowCloningPerformed());"},{"lineNumber":723,"author":{"gitId":"-"},"content":""},{"lineNumber":724,"author":{"gitId":"-"},"content":"        String inputShallow \u003d new InputBuilder().addConfig(CONFIG_FOLDER_ABSOLUTE)"},{"lineNumber":725,"author":{"gitId":"-"},"content":"                .addOutput(OUTPUT_DIRECTORY_ABSOLUTE)"},{"lineNumber":726,"author":{"gitId":"-"},"content":"                .addShallowCloning()"},{"lineNumber":727,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":728,"author":{"gitId":"-"},"content":"        CliArguments cliArgumentsShallow \u003d ArgsParser.parse(translateCommandline(inputShallow));"},{"lineNumber":729,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(true, cliArgumentsShallow.isShallowCloningPerformed());"},{"lineNumber":730,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":731,"author":{"gitId":"-"},"content":""},{"lineNumber":732,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":733,"author":{"gitId":"-"},"content":"     * Ensures that {@code actualSinceDate} is exactly one month before {@code untilDate}."},{"lineNumber":734,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":735,"author":{"gitId":"-"},"content":"     * @throws AssertionError if {@code actualSinceDate} is not one month before {@code untilDate}."},{"lineNumber":736,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":737,"author":{"gitId":"-"},"content":"    private void assertDateDiffOneMonth(LocalDateTime actualSinceDate, LocalDateTime untilDate) {"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        LocalDateTime oneMonthBeforeUntilDate \u003d untilDate.withHour(0).withMinute(0).withSecond(0).minusMonths(1);"},{"lineNumber":739,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(actualSinceDate.equals(oneMonthBeforeUntilDate));"},{"lineNumber":740,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":741,"author":{"gitId":"-"},"content":""},{"lineNumber":742,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":743,"author":{"gitId":"-"},"content":"     * Ensures that {@code actualUntilDate} falls on the date of report generation with time at 23:59:59."},{"lineNumber":744,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":745,"author":{"gitId":"-"},"content":"     * @throws AssertionError if {@code actualUntilDate} does not fall on the date of report generation"},{"lineNumber":746,"author":{"gitId":"-"},"content":"     * with time at 23:59:59."},{"lineNumber":747,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":748,"author":{"gitId":"-"},"content":"    private void assertDateDiffEndOfDay(LocalDateTime actualUntilDate) {"},{"lineNumber":749,"author":{"gitId":"-"},"content":""},{"lineNumber":750,"author":{"gitId":"-"},"content":"        LocalDateTime currentDate \u003d LocalDateTime.now().withHour(23).withMinute(59).withSecond(59).withNano(0);"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(actualUntilDate.equals(currentDate));"},{"lineNumber":752,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":753,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MarcusTXK":56,"-":697}},{"path":"src/test/java/reposense/parser/AuthorConfigLocationParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sikai00"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":3,"author":{"gitId":"sikai00"},"content":"import static reposense.parser.AuthorConfigLocationParser.BRANCHES_DELIMITER;"},{"lineNumber":4,"author":{"gitId":"sikai00"},"content":"import static reposense.parser.AuthorConfigLocationParser.LOCATION_BRANCHES_DELIMITER;"},{"lineNumber":5,"author":{"gitId":"sikai00"},"content":"import static reposense.parser.AuthorConfigLocationParser.parseLocation;"},{"lineNumber":6,"author":{"gitId":"sikai00"},"content":"import static reposense.util.TestUtil.isWindows;"},{"lineNumber":7,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":8,"author":{"gitId":"sikai00"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"sikai00"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"sikai00"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"sikai00"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"sikai00"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":14,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":15,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.Assumptions;"},{"lineNumber":16,"author":{"gitId":"sikai00"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":17,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":18,"author":{"gitId":"sikai00"},"content":"public class AuthorConfigLocationParserTest {"},{"lineNumber":19,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"sikai00"},"content":"    public void parseLocation_localLocationDefault_success() {"},{"lineNumber":21,"author":{"gitId":"sikai00"},"content":"        String location \u003d \"/Users/sikai/RepoSense\";"},{"lineNumber":22,"author":{"gitId":"sikai00"},"content":"        String defaultSpecifiedBranch \u003d \"master\";"},{"lineNumber":23,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationWithBranch \u003d parseLocation(location, defaultSpecifiedBranch);"},{"lineNumber":24,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":25,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e expectedResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(location);"},{"lineNumber":27,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(defaultSpecifiedBranch);"},{"lineNumber":28,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":29,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResults, parsedLocationWithBranch);"},{"lineNumber":30,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":32,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"sikai00"},"content":"    public void parseLocation_remoteLocationDefault_success() {"},{"lineNumber":34,"author":{"gitId":"sikai00"},"content":"        String location \u003d \"https://github.com/reposense/RepoSense.git\";"},{"lineNumber":35,"author":{"gitId":"sikai00"},"content":"        String defaultSpecifiedBranch \u003d \"release\";"},{"lineNumber":36,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationWithBranch \u003d parseLocation(location, defaultSpecifiedBranch);"},{"lineNumber":37,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":38,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e expectedResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":39,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(location);"},{"lineNumber":40,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(defaultSpecifiedBranch);"},{"lineNumber":41,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":42,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResults, parsedLocationWithBranch);"},{"lineNumber":43,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":45,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"sikai00"},"content":"    public void parseLocation_localLocationSingleBranch_success() {"},{"lineNumber":47,"author":{"gitId":"sikai00"},"content":"        String defaultSpecifiedBranch \u003d \"master\";"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"        String branch \u003d \"release\";"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"        String localPath \u003d \"/Users/sikai/RepoSense\";"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"        String location \u003d localPath + LOCATION_BRANCHES_DELIMITER + branch;"},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationWithBranch \u003d parseLocation(location, defaultSpecifiedBranch);"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e expectedResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(localPath);"},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(branch);"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":57,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResults, parsedLocationWithBranch);"},{"lineNumber":58,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":61,"author":{"gitId":"sikai00"},"content":"    public void parseLocation_remoteLocationSingleBranch_success() {"},{"lineNumber":62,"author":{"gitId":"sikai00"},"content":"        String defaultSpecifiedBranch \u003d \"master\";"},{"lineNumber":63,"author":{"gitId":"sikai00"},"content":"        String branch \u003d \"release\";"},{"lineNumber":64,"author":{"gitId":"sikai00"},"content":"        String remoteUrl \u003d \"https://github.com/reposense/RepoSense.git\";"},{"lineNumber":65,"author":{"gitId":"sikai00"},"content":"        String location \u003d remoteUrl + LOCATION_BRANCHES_DELIMITER + branch;"},{"lineNumber":66,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationWithBranch \u003d parseLocation(location, defaultSpecifiedBranch);"},{"lineNumber":67,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":68,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e expectedResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":69,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(remoteUrl);"},{"lineNumber":70,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(branch);"},{"lineNumber":71,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":72,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResults, parsedLocationWithBranch);"},{"lineNumber":73,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":75,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"sikai00"},"content":"    public void parseLocation_localLocationSingleBranchDelimiterInPath_success() {"},{"lineNumber":77,"author":{"gitId":"sikai00"},"content":"        String defaultSpecifiedBranch \u003d \"master\";"},{"lineNumber":78,"author":{"gitId":"sikai00"},"content":"        String branch \u003d \"release\";"},{"lineNumber":79,"author":{"gitId":"sikai00"},"content":"        String localLocation \u003d \"/Users/si\" + LOCATION_BRANCHES_DELIMITER"},{"lineNumber":80,"author":{"gitId":"sikai00"},"content":"                + \"kai/Repo\" + LOCATION_BRANCHES_DELIMITER"},{"lineNumber":81,"author":{"gitId":"sikai00"},"content":"                + \"Sense\";"},{"lineNumber":82,"author":{"gitId":"sikai00"},"content":"        String location \u003d localLocation + LOCATION_BRANCHES_DELIMITER + branch;"},{"lineNumber":83,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationWithBranch \u003d parseLocation(location, defaultSpecifiedBranch);"},{"lineNumber":84,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":85,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e expectedResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":86,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(localLocation);"},{"lineNumber":87,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(branch);"},{"lineNumber":88,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":89,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResults, parsedLocationWithBranch);"},{"lineNumber":90,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":92,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":93,"author":{"gitId":"sikai00"},"content":"    public void parseLocation_actualLocalLocationContainingDelimiter_success() throws Exception {"},{"lineNumber":94,"author":{"gitId":"sikai00"},"content":"        // Location contains ~ delimiter but no intended use of delimiter"},{"lineNumber":95,"author":{"gitId":"sikai00"},"content":"        String localLocation \u003d \"delimiter\" + LOCATION_BRANCHES_DELIMITER"},{"lineNumber":96,"author":{"gitId":"sikai00"},"content":"                + \"in\" + LOCATION_BRANCHES_DELIMITER"},{"lineNumber":97,"author":{"gitId":"sikai00"},"content":"                + \"directory\";"},{"lineNumber":98,"author":{"gitId":"sikai00"},"content":"        Path localPath \u003d Paths.get(localLocation);"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"        Files.createDirectories(localPath);"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"        String defaultBranch \u003d \"master\";"},{"lineNumber":101,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":102,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationWithBranch \u003d parseLocation(localLocation, defaultBranch);"},{"lineNumber":103,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":104,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e expectedResult \u003d new ArrayList\u003c\u003e();"},{"lineNumber":105,"author":{"gitId":"sikai00"},"content":"        expectedResult.add(localLocation);"},{"lineNumber":106,"author":{"gitId":"sikai00"},"content":"        expectedResult.add(defaultBranch);"},{"lineNumber":107,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":108,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResult, parsedLocationWithBranch);"},{"lineNumber":109,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":110,"author":{"gitId":"sikai00"},"content":"        Files.deleteIfExists(localPath);"},{"lineNumber":111,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":114,"author":{"gitId":"sikai00"},"content":"    public void parseLocation_actualLocalLocationContainingBothDelimiter_success() throws Exception {"},{"lineNumber":115,"author":{"gitId":"sikai00"},"content":"        // Windows do not allow pipe as part of directory name"},{"lineNumber":116,"author":{"gitId":"sikai00"},"content":"        Assumptions.assumeFalse(isWindows());"},{"lineNumber":117,"author":{"gitId":"sikai00"},"content":"        // Location contains ~ and | delimiter but no intended use of delimiter"},{"lineNumber":118,"author":{"gitId":"sikai00"},"content":"        String localLocation \u003d \"delimiter\" + LOCATION_BRANCHES_DELIMITER"},{"lineNumber":119,"author":{"gitId":"sikai00"},"content":"                + \"in\" + LOCATION_BRANCHES_DELIMITER"},{"lineNumber":120,"author":{"gitId":"sikai00"},"content":"                + \"directory\" + BRANCHES_DELIMITER"},{"lineNumber":121,"author":{"gitId":"sikai00"},"content":"                + \"fakebranch\";"},{"lineNumber":122,"author":{"gitId":"sikai00"},"content":"        Path localPath \u003d Paths.get(localLocation);"},{"lineNumber":123,"author":{"gitId":"sikai00"},"content":"        Files.createDirectory(localPath);"},{"lineNumber":124,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":125,"author":{"gitId":"sikai00"},"content":"        String defaultBranch \u003d \"master\";"},{"lineNumber":126,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":127,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationWithBranch \u003d parseLocation(localLocation, defaultBranch);"},{"lineNumber":128,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":129,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e expectedResult \u003d new ArrayList\u003c\u003e();"},{"lineNumber":130,"author":{"gitId":"sikai00"},"content":"        expectedResult.add(localLocation);"},{"lineNumber":131,"author":{"gitId":"sikai00"},"content":"        expectedResult.add(defaultBranch);"},{"lineNumber":132,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":133,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResult, parsedLocationWithBranch);"},{"lineNumber":134,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":135,"author":{"gitId":"sikai00"},"content":"        Files.deleteIfExists(localPath);"},{"lineNumber":136,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":138,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":139,"author":{"gitId":"sikai00"},"content":"    public void parseLocation_emptyStringAfterDelimiter_success() {"},{"lineNumber":140,"author":{"gitId":"sikai00"},"content":"        String localPath \u003d \"/Users/sikai/RepoSense\";"},{"lineNumber":141,"author":{"gitId":"sikai00"},"content":"        String location \u003d localPath + LOCATION_BRANCHES_DELIMITER;"},{"lineNumber":142,"author":{"gitId":"sikai00"},"content":"        // defaultSpecifiedBranch is not used and is thus null"},{"lineNumber":143,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationWithBranch \u003d parseLocation(location, null);"},{"lineNumber":144,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":145,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e expectedResult \u003d new ArrayList\u003c\u003e();"},{"lineNumber":146,"author":{"gitId":"sikai00"},"content":"        expectedResult.add(\"/Users/sikai/RepoSense\");"},{"lineNumber":147,"author":{"gitId":"sikai00"},"content":"        expectedResult.add(\"\");"},{"lineNumber":148,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":149,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResult, parsedLocationWithBranch);"},{"lineNumber":150,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":152,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":153,"author":{"gitId":"sikai00"},"content":"    public void parseLocation_localLocationMultipleBranch_success() {"},{"lineNumber":154,"author":{"gitId":"sikai00"},"content":"        String defaultSpecifiedBranch \u003d \"master\";"},{"lineNumber":155,"author":{"gitId":"sikai00"},"content":"        String localPath \u003d \"/Users/sikai/RepoSense\";"},{"lineNumber":156,"author":{"gitId":"sikai00"},"content":"        String branch0 \u003d \"release\";"},{"lineNumber":157,"author":{"gitId":"sikai00"},"content":"        String branch1 \u003d \"master\";"},{"lineNumber":158,"author":{"gitId":"sikai00"},"content":"        String branch2 \u003d \"cypress\";"},{"lineNumber":159,"author":{"gitId":"sikai00"},"content":"        String location \u003d localPath + LOCATION_BRANCHES_DELIMITER + branch0"},{"lineNumber":160,"author":{"gitId":"sikai00"},"content":"                + BRANCHES_DELIMITER + branch1 + BRANCHES_DELIMITER + branch2;"},{"lineNumber":161,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationWithBranch \u003d parseLocation(location, defaultSpecifiedBranch);"},{"lineNumber":162,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":163,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e expectedResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":164,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(localPath);"},{"lineNumber":165,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(branch0);"},{"lineNumber":166,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(branch1);"},{"lineNumber":167,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(branch2);"},{"lineNumber":168,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":169,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResults, parsedLocationWithBranch);"},{"lineNumber":170,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":172,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":173,"author":{"gitId":"sikai00"},"content":"    public void parseLocation_remoteLocationMultipleBranch_success() {"},{"lineNumber":174,"author":{"gitId":"sikai00"},"content":"        String defaultSpecifiedBranch \u003d \"master\";"},{"lineNumber":175,"author":{"gitId":"sikai00"},"content":"        String remoteUrl \u003d \"https://github.com/reposense/RepoSense.git\";"},{"lineNumber":176,"author":{"gitId":"sikai00"},"content":"        String branch0 \u003d \"release\";"},{"lineNumber":177,"author":{"gitId":"sikai00"},"content":"        String branch1 \u003d \"master\";"},{"lineNumber":178,"author":{"gitId":"sikai00"},"content":"        String branch2 \u003d \"cypress\";"},{"lineNumber":179,"author":{"gitId":"sikai00"},"content":"        String location \u003d remoteUrl + LOCATION_BRANCHES_DELIMITER + branch0"},{"lineNumber":180,"author":{"gitId":"sikai00"},"content":"                + BRANCHES_DELIMITER + branch1 + BRANCHES_DELIMITER + branch2;"},{"lineNumber":181,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationWithBranch \u003d parseLocation(location, defaultSpecifiedBranch);"},{"lineNumber":182,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":183,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e expectedResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":184,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(remoteUrl);"},{"lineNumber":185,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(branch0);"},{"lineNumber":186,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(branch1);"},{"lineNumber":187,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(branch2);"},{"lineNumber":188,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":189,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResults, parsedLocationWithBranch);"},{"lineNumber":190,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":192,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":193,"author":{"gitId":"sikai00"},"content":"    public void parseLocation_githubBranchUrl_success() {"},{"lineNumber":194,"author":{"gitId":"sikai00"},"content":"        String githubBranchUrl \u003d \"https://github.com/reposense/RepoSense/tree/release\";"},{"lineNumber":195,"author":{"gitId":"sikai00"},"content":"        String defaultSpecifiedBranch \u003d \"master\";"},{"lineNumber":196,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationWithBranch \u003d parseLocation(githubBranchUrl, defaultSpecifiedBranch);"},{"lineNumber":197,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":198,"author":{"gitId":"sikai00"},"content":"        String location \u003d \"https://github.com/reposense/RepoSense.git\";"},{"lineNumber":199,"author":{"gitId":"sikai00"},"content":"        String branch \u003d \"release\";"},{"lineNumber":200,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e expectedResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":201,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(location);"},{"lineNumber":202,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(branch);"},{"lineNumber":203,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":204,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResults, parsedLocationWithBranch);"},{"lineNumber":205,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":206,"author":{"gitId":"sikai00"},"content":"        githubBranchUrl \u003d \"https://github.com/reposense/RepoSense/tree/master\";"},{"lineNumber":207,"author":{"gitId":"sikai00"},"content":"        defaultSpecifiedBranch \u003d \"release\";"},{"lineNumber":208,"author":{"gitId":"sikai00"},"content":"        parsedLocationWithBranch \u003d parseLocation(githubBranchUrl, defaultSpecifiedBranch);"},{"lineNumber":209,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":210,"author":{"gitId":"sikai00"},"content":"        location \u003d \"https://github.com/reposense/RepoSense.git\";"},{"lineNumber":211,"author":{"gitId":"sikai00"},"content":"        branch \u003d \"master\";"},{"lineNumber":212,"author":{"gitId":"sikai00"},"content":"        expectedResults \u003d new ArrayList\u003c\u003e();"},{"lineNumber":213,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(location);"},{"lineNumber":214,"author":{"gitId":"sikai00"},"content":"        expectedResults.add(branch);"},{"lineNumber":215,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":216,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResults, parsedLocationWithBranch);"},{"lineNumber":217,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":219,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":220,"author":{"gitId":"sikai00"},"content":"    public void parseLocation_faultyGithubBranchUrl_null() {"},{"lineNumber":221,"author":{"gitId":"sikai00"},"content":"        String githubBranchUrl \u003d \"https://github.com/reposense/RepoSense/threeeee/release\";"},{"lineNumber":222,"author":{"gitId":"sikai00"},"content":"        String defaultBranch \u003d \"master\";"},{"lineNumber":223,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e parsedLocationWithBranch \u003d parseLocation(githubBranchUrl, defaultBranch);"},{"lineNumber":224,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":225,"author":{"gitId":"sikai00"},"content":"        List\u003cString\u003e expectedResult \u003d new ArrayList\u003c\u003e();"},{"lineNumber":226,"author":{"gitId":"sikai00"},"content":"        expectedResult.add(githubBranchUrl);"},{"lineNumber":227,"author":{"gitId":"sikai00"},"content":"        expectedResult.add(defaultBranch);"},{"lineNumber":228,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":229,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(expectedResult, parsedLocationWithBranch);"},{"lineNumber":230,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"sikai00"},"content":"}"}],"authorContributionMap":{"sikai00":231}},{"path":"src/test/java/reposense/parser/AuthorConfigParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.AbstractMap.SimpleEntry;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidCsvException;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidHeaderException;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AuthorConfigParserTest {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_EMPTY_LOCATION_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_emptyLocation_test.csv\");"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_EMPTY_CONFIG_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/require_trailing_whitespaces/authorconfig_emptyConfig_test.csv\");"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_noSpecialCharacter_test.csv\");"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_SPECIAL_CHARACTER_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_specialCharacter_test.csv\");"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_COMMAS_AND_DOUBLEQUOTES_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_commasAndDoubleQuotes_test.csv\");"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_MULTIPLE_EMAILS_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_multipleEmails_test.csv\");"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_DIFFERENT_COLUMN_ORDER \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_differentColumnOrder_test.csv\");"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_MISSING_OPTIONAL_HEADER \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_missingOptionalHeader_test.csv\");"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_MISSING_MANDATORY_HEADER \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_missingMandatoryHeader_test.csv\");"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_UNKNOWN_HEADER \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_unknownHeaders_test.csv\");"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_GITHUB_ID_HEADER \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_gitHubIdHeader_test.csv\");"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Path AUTHOR_CONFIG_GIT_HOST_ID_HEADER \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \"AuthorConfigParserTest/authorconfig_gitHostIdHeader_test.csv\");"},{"lineNumber":48,"author":{"gitId":"sikai00"},"content":"    private static final Path AUTHOR_CONFIG_MULTIPLE_REPO_IN_ROW_FILE \u003d loadResource(AuthorConfigParserTest.class,"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"            \"AuthorConfigParserTest/authorconfig_multipleReposInRow_test.csv\");"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"    private static final Path AUTHOR_CONFIG_MULTIPLE_REPO_IN_ROW_SINGLE_BRANCH_PER_REPO_FILE \u003d loadResource("},{"lineNumber":51,"author":{"gitId":"sikai00"},"content":"            AuthorConfigParserTest.class,"},{"lineNumber":52,"author":{"gitId":"sikai00"},"content":"            \"AuthorConfigParserTest/authorconfig_multipleReposInRowSingleBranchPerRepo_test.csv\");"},{"lineNumber":53,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":54,"author":{"gitId":"sikai00"},"content":"    private static final Path AUTHOR_CONFIG_MULTIPLE_REPO_IN_ROW_MULTIPLE_BRANCH_PER_REPO_FILE \u003d loadResource("},{"lineNumber":55,"author":{"gitId":"sikai00"},"content":"            AuthorConfigParserTest.class,"},{"lineNumber":56,"author":{"gitId":"sikai00"},"content":"            \"AuthorConfigParserTest/authorconfig_multipleReposInRowMultipleBranchPerRepo_test.csv\");"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_LOCATION \u003d \"https://github.com/reposense/testrepo-Beta.git\";"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_MASTER_BRANCH \u003d \"master\";"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final Author FIRST_AUTHOR \u003d new Author(\"nbriannl\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final Author SECOND_AUTHOR \u003d new Author(\"zacharytang\");"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final List\u003cAuthor\u003e AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_AUTHORS \u003d"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Arrays.asList(FIRST_AUTHOR, SECOND_AUTHOR);"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static final Author FIRST_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"‘Processed�‘Cooked�\");"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static final Author SECOND_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"(codeeong)\");"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final Author THIRD_SPECIAL_CHARACTER_AUTHOR \u003d new Author(\"^:jordancjq;$\");"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final List\u003cAuthor\u003e AUTHOR_CONFIG_SPECIAL_CHARACTER_AUTHORS \u003d Arrays.asList("},{"lineNumber":70,"author":{"gitId":"-"},"content":"            FIRST_SPECIAL_CHARACTER_AUTHOR, SECOND_SPECIAL_CHARACTER_AUTHOR, THIRD_SPECIAL_CHARACTER_AUTHOR);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final Author FIRST_COMMAS_AND_DOUBLEQUOTES_AUTHOR \u003d new Author(\"ProcessedCooked\");"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static final Author SECOND_COMMAS_AND_DOUBLEQUOTES_AUTHOR \u003d new Author(\"codeeong\");"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static final Author THIRD_COMMAS_AND_DOUBLEQUOTES_AUTHOR \u003d new Author(\"jordancjq\");"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static final String FIRST_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME \u003d \"Tay Fan Gao, Douya\";"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static final String SECOND_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME \u003d \"\\\"\\\"Tora, S/O,\\\" Doyua, T.\\\"\";"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static final String THIRD_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME \u003d \"jordancjq\";"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FIRST_COMMAS_AND_DOUBLEQUOTES_ALIAS \u003d"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Collections.singletonList(\"Tay Fan Gao, Douya \\\"SOC, Y2S1\\\"\");"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SECOND_COMMAS_AND_DOUBLEQUOTES_ALIAS \u003d Collections.emptyList();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e THIRD_COMMAS_AND_DOUBLEQUOTES_ALIAS \u003d"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            Arrays.asList(\"Borex T\\\"ony Tong\");"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static final Map\u003cAuthor, List\u003cString\u003e\u003e AUTHOR_ALIAS_COMMAS_AND_DOUBLE_QUOTES_MAP \u003d"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Stream.of(new SimpleEntry\u003c\u003e(FIRST_COMMAS_AND_DOUBLEQUOTES_AUTHOR, FIRST_COMMAS_AND_DOUBLEQUOTES_ALIAS),"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                    new SimpleEntry\u003c\u003e(SECOND_COMMAS_AND_DOUBLEQUOTES_AUTHOR, SECOND_COMMAS_AND_DOUBLEQUOTES_ALIAS),"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                    new SimpleEntry\u003c\u003e(THIRD_COMMAS_AND_DOUBLEQUOTES_AUTHOR, THIRD_COMMAS_AND_DOUBLEQUOTES_ALIAS))"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                    .collect(Collectors.toMap(entry -\u003e entry.getKey(), entry -\u003e entry.getValue()));"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static final Map\u003cAuthor, String\u003e AUTHOR_DISPLAY_NAME_COMMAS_AND_DOUBLE_QUOTES_MAP \u003d"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            Stream.of(new SimpleEntry\u003c\u003e(FIRST_COMMAS_AND_DOUBLEQUOTES_AUTHOR,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                            FIRST_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME),"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    new SimpleEntry\u003c\u003e(SECOND_COMMAS_AND_DOUBLEQUOTES_AUTHOR,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                            SECOND_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME),"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                    new SimpleEntry\u003c\u003e(THIRD_COMMAS_AND_DOUBLEQUOTES_AUTHOR, THIRD_COMMAS_AND_DOUBLEQUOTES_DISPLAY_NAME))"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    .collect(Collectors.toMap(entry -\u003e entry.getKey(), entry -\u003e entry.getValue()));"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FIRST_AUTHOR_EMAIL_LIST \u003d"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Arrays.asList(\"nbr@example.com\", \"nbriannl@test.net\", \"nbriannl@users.noreply.github.com\","},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    \"nbriannl@users.noreply.gitlab.com\");"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void authorConfig_noSpecialCharacter_success() throws Exception {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_FILE);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, configs.size());"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_AUTHORS, config.getAuthorList());"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void authorConfig_emptyLocation_success() throws Exception {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        AuthorConfiguration expectedConfig \u003d new AuthorConfiguration(new RepoLocation(\"\"));"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_EMPTY_LOCATION_FILE);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d authorConfigCsvParser.parse();"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AuthorConfiguration authorConfig \u003d authorConfigs.get(0);"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, authorConfigs.size());"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedConfig.getLocation(), authorConfig.getLocation());"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedConfig.getBranch(), authorConfig.getBranch());"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_AUTHORS, authorConfig.getAuthorList());"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void authorConfig_emptyConfig_throwsInvalidCsvException() throws Exception {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_EMPTY_CONFIG_FILE);"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(InvalidCsvException.class, () -\u003e authorConfigCsvParser.parse());"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void authorConfig_specialCharacter_success() throws Exception {"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_SPECIAL_CHARACTER_FILE);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, configs.size());"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(AUTHOR_CONFIG_SPECIAL_CHARACTER_AUTHORS, config.getAuthorList());"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void authorConfig_multipleEmails_success() throws Exception {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_MULTIPLE_EMAILS_FILE);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, configs.size());"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Author actualAuthor \u003d config.getAuthorList().get(0);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FIRST_AUTHOR_EMAIL_LIST.size(), actualAuthor.getEmails().size());"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(actualAuthor.getEmails().containsAll(FIRST_AUTHOR_EMAIL_LIST));"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void authorConfig_differentColumnOrder_success() throws Exception {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(AUTHOR_CONFIG_DIFFERENT_COLUMN_ORDER);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, configs.size());"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(AUTHOR_CONFIG_NO_SPECIAL_CHARACTER_AUTHORS, config.getAuthorList());"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void authorConfig_missingOptionalHeader_success() throws Exception {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_MISSING_OPTIONAL_HEADER);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, configs.size());"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(4, config.getAuthorList().size());"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void authorConfig_newGitHostIdHeader_success() throws Exception {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser;"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_GIT_HOST_ID_HEADER);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configsWithGitHostIdHeader \u003d authorConfigCsvParser.parse();"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_GITHUB_ID_HEADER);"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configsWithGitHubIdHeader \u003d authorConfigCsvParser.parse();"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(configsWithGitHubIdHeader, configsWithGitHostIdHeader);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void authorConfig_missingMandatoryHeader_throwsInvalidCsvException() throws Exception {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_MISSING_MANDATORY_HEADER);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(InvalidCsvException.class, () -\u003e authorConfigCsvParser.parse());"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void authorConfig_unknownHeaders_throwsInvalidHeaderException() throws Exception {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser(AUTHOR_CONFIG_UNKNOWN_HEADER);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(InvalidHeaderException.class, () -\u003e authorConfigCsvParser.parse());"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void parse_multipleColumnsWithCommasAndDoubleQuotes_success() throws Exception {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                new AuthorConfigCsvParser(AUTHOR_CONFIG_COMMAS_AND_DOUBLEQUOTES_FILE);"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":223,"author":{"gitId":"-"},"content":""},{"lineNumber":224,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, configs.size());"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(AUTHOR_DISPLAY_NAME_COMMAS_AND_DOUBLE_QUOTES_MAP, config.getAuthorDisplayNameMap());"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(AUTHOR_ALIAS_COMMAS_AND_DOUBLE_QUOTES_MAP.size(), config.getAuthorList().size());"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        config.getAuthorList().forEach(author -\u003e {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            Assertions.assertEquals(AUTHOR_ALIAS_COMMAS_AND_DOUBLE_QUOTES_MAP.get(author), author.getAuthorAliases());"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":238,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":239,"author":{"gitId":"sikai00"},"content":"    public void authorConfig_multipleReposInRow_success() throws Exception {"},{"lineNumber":240,"author":{"gitId":"sikai00"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser("},{"lineNumber":241,"author":{"gitId":"sikai00"},"content":"                AUTHOR_CONFIG_MULTIPLE_REPO_IN_ROW_FILE);"},{"lineNumber":242,"author":{"gitId":"sikai00"},"content":"        String defaultSpecifiedBranch \u003d \"master\";"},{"lineNumber":243,"author":{"gitId":"sikai00"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":244,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":245,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(4, configs.size());"},{"lineNumber":246,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":247,"author":{"gitId":"sikai00"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":248,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(\"https://github.com/reposense/reposense.git\"), config.getLocation());"},{"lineNumber":249,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(defaultSpecifiedBranch, config.getBranch());"},{"lineNumber":250,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":251,"author":{"gitId":"sikai00"},"content":"        config \u003d configs.get(1);"},{"lineNumber":252,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(\"https://github.com/markbind/markbind.git\"), config.getLocation());"},{"lineNumber":253,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(defaultSpecifiedBranch, config.getBranch());"},{"lineNumber":254,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":255,"author":{"gitId":"sikai00"},"content":"        config \u003d configs.get(2);"},{"lineNumber":256,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(\"https://github.com/TEAMMATES/teammates.git\"), config.getLocation());"},{"lineNumber":257,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(defaultSpecifiedBranch, config.getBranch());"},{"lineNumber":258,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":259,"author":{"gitId":"sikai00"},"content":"        config \u003d configs.get(3);"},{"lineNumber":260,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(\"https://github.com/CATcher-org/CATcher.git\"), config.getLocation());"},{"lineNumber":261,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(defaultSpecifiedBranch, config.getBranch());"},{"lineNumber":262,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":264,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":265,"author":{"gitId":"sikai00"},"content":"    public void authorConfig_multipleReposInRowSingleBranchPerRepo_success() throws Exception {"},{"lineNumber":266,"author":{"gitId":"sikai00"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser("},{"lineNumber":267,"author":{"gitId":"sikai00"},"content":"                AUTHOR_CONFIG_MULTIPLE_REPO_IN_ROW_SINGLE_BRANCH_PER_REPO_FILE);"},{"lineNumber":268,"author":{"gitId":"sikai00"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":269,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":270,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(4, configs.size());"},{"lineNumber":271,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":272,"author":{"gitId":"sikai00"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":273,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":274,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":275,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":276,"author":{"gitId":"sikai00"},"content":"        config \u003d configs.get(1);"},{"lineNumber":277,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":278,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"add-config-json\", config.getBranch());"},{"lineNumber":279,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":280,"author":{"gitId":"sikai00"},"content":"        config \u003d configs.get(2);"},{"lineNumber":281,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(\"https://github.com/reposense/RepoSense.git\"), config.getLocation());"},{"lineNumber":282,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"release\", config.getBranch());"},{"lineNumber":283,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":284,"author":{"gitId":"sikai00"},"content":"        config \u003d configs.get(3);"},{"lineNumber":285,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(\"/Users/sikai/RepoSense\"), config.getLocation());"},{"lineNumber":286,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"master\", config.getBranch());"},{"lineNumber":287,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":288,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":289,"author":{"gitId":"sikai00"},"content":"    @Test"},{"lineNumber":290,"author":{"gitId":"sikai00"},"content":"    public void authorConfig_multipleReposInRowMultipleBranchPerRepo_success() throws Exception {"},{"lineNumber":291,"author":{"gitId":"sikai00"},"content":"        AuthorConfigCsvParser authorConfigCsvParser \u003d new AuthorConfigCsvParser("},{"lineNumber":292,"author":{"gitId":"sikai00"},"content":"                AUTHOR_CONFIG_MULTIPLE_REPO_IN_ROW_MULTIPLE_BRANCH_PER_REPO_FILE);"},{"lineNumber":293,"author":{"gitId":"sikai00"},"content":"        List\u003cAuthorConfiguration\u003e configs \u003d authorConfigCsvParser.parse();"},{"lineNumber":294,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":295,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(5, configs.size());"},{"lineNumber":296,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":297,"author":{"gitId":"sikai00"},"content":"        AuthorConfiguration config \u003d configs.get(0);"},{"lineNumber":298,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":299,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"add-config-json\", config.getBranch());"},{"lineNumber":300,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":301,"author":{"gitId":"sikai00"},"content":"        config \u003d configs.get(1);"},{"lineNumber":302,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":303,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":304,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":305,"author":{"gitId":"sikai00"},"content":"        config \u003d configs.get(2);"},{"lineNumber":306,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(\"/Users/sikai/RepoSense\"), config.getLocation());"},{"lineNumber":307,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"master\", config.getBranch());"},{"lineNumber":308,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":309,"author":{"gitId":"sikai00"},"content":"        config \u003d configs.get(3);"},{"lineNumber":310,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(\"/Users/sikai/RepoSense\"), config.getLocation());"},{"lineNumber":311,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"release\", config.getBranch());"},{"lineNumber":312,"author":{"gitId":"sikai00"},"content":""},{"lineNumber":313,"author":{"gitId":"sikai00"},"content":"        config \u003d configs.get(4);"},{"lineNumber":314,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(new RepoLocation(\"/Users/sikai/RepoSense\"), config.getLocation());"},{"lineNumber":315,"author":{"gitId":"sikai00"},"content":"        Assertions.assertEquals(\"gh-pages\", config.getBranch());"},{"lineNumber":316,"author":{"gitId":"sikai00"},"content":"    }"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"sikai00":89,"-":228}},{"path":"src/test/java/reposense/parser/RepoConfigParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.parser;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.apache.tools.ant.types.Commandline.translateCommandline;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static reposense.model.RepoConfiguration.DEFAULT_FILE_SIZE_LIMIT;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static reposense.util.TestUtil.loadResource;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import reposense.model.AuthorConfiguration;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import reposense.model.CliArguments;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.model.FileType;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidCsvException;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.parser.exceptions.InvalidHeaderException;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.util.InputBuilder;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.util.TestUtil;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class RepoConfigParserTest {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Path TEST_CONFIG_FOLDER \u003d loadResource(RepoConfigParserTest.class, \"repoconfig_merge_test\");"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Path TEST_EMPTY_BRANCH_CONFIG_FOLDER \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"repoconfig_empty_branch_test\");"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_NO_SPECIAL_CHARACTER_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_noSpecialCharacter_test.csv\");"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_OVERRIDE_KEYWORD_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_overrideKeyword_test.csv\");"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_REDUNDANT_LINES_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/require_trailing_whitespaces/repoconfig_redundantLines_test.csv\");"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_UNRECOGNIZED_VALUES_FOR_YES_KEYWORD_HEADERS_FILE \u003d"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigParserTest.class,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_unrecognizedValuesForYesKeywordHeaders_test.csv\");"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_DUPLICATE_HEADERS_CASE_SENSITIVE_FILE \u003d"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigParserTest.class,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_duplicateHeadersCaseSensitive_test.csv\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_DUPLICATE_HEADERS_CASE_INSENSITIVE_FILE \u003d"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            loadResource(RepoConfigParserTest.class,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_duplicateHeadersCaseInsensitive_test.csv\");"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_DIFFERENT_COLUMN_ORDER_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_differentColumnOrder_test.csv\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_OPTIONAL_HEADER_MISSING_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_missingOptionalHeader_test.csv\");"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_MANDATORY_HEADER_MISSING_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_missingMandatoryHeader_test.csv\");"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final Path MERGE_EMPTY_LOCATION_FOLDER \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_merge_empty_location_test\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_UNKNOWN_HEADER_FILE \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_unknownHeaders_test.csv\");"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_INVALID_FILE_SIZE_LIMIT \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_invalidFileSizeLimit_test.csv\");"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_IGNORE_FILE_SIZE_LIMIT \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \"RepoConfigParserTest/repoconfig_ignoreFileSizeLimit_test.csv\");"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final Path REPO_CONFIG_ZERO_VALID_RECORDS \u003d loadResource(RepoConfigParserTest.class,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \"CsvParserTest/repoconfig_zeroValidRecords_test.csv\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_LOCATION \u003d \"https://github.com/reposense/testrepo-Beta.git\";"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_MASTER_BRANCH \u003d \"master\";"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_BETA_ADD_CONFIG_JSON_BRANCH \u003d \"add-config-json\";"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_DELTA_LOCATION \u003d \"https://github.com/reposense/testrepo-Delta.git\";"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_DELTA_BRANCH \u003d \"HEAD\";"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e TEST_REPO_DELTA_FORMATS \u003d"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            FileType.convertFormatStringsToFileTypes(Arrays.asList(\"java\", \"fxml\"));"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final List\u003cFileType\u003e TEST_REPO_BETA_CONFIG_FORMATS \u003d"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            FileType.convertFormatStringsToFileTypes(Arrays.asList(\"java\", \"adoc\", \"md\"));"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e TEST_REPO_BETA_CONFIG_IGNORED_COMMITS \u003d"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            Arrays.asList(\"abcde12345\", \"67890fdecba\");"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static final int FILE_SIZE_LIMIT_VALUE \u003d 100000;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_CHARLIE_LOCATION \u003d \"https://github.com/reposense/testrepo-Charlie.git\";"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private static final String TEST_REPO_CHARLIE_BRANCH \u003d \"HEAD\";"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static final Author FIRST_AUTHOR \u003d new Author(\"nbriannl\");"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static final Author SECOND_AUTHOR \u003d new Author(\"zacharytang\");"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SECOND_AUTHOR_ALIASES \u003d Arrays.asList(\"Zachary Tang\");"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e REPO_LEVEL_GLOB_LIST \u003d Arrays.asList(\"collated**\");"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e FIRST_AUTHOR_GLOB_LIST \u003d Arrays.asList(\"**.java\", \"collated**\");"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e SECOND_AUTHOR_GLOB_LIST \u003d Arrays.asList(\"**.doc\", \"collated**\");"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void repoConfig_noSpecialCharacter_success() throws Exception {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_NO_SPECIAL_CHARACTER_FILE);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, configs.size());"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d configs.get(0);"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_CONFIG_FORMATS, config.getFileTypeManager().getFormats());"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(config.isStandaloneConfigIgnored());"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(config.getIgnoreCommitList(),"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                CommitHash.convertStringsToCommits(TEST_REPO_BETA_CONFIG_IGNORED_COMMITS));"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(config.getFileSizeLimit(), FILE_SIZE_LIMIT_VALUE);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(config.isShallowCloningPerformed());"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isFormatsOverriding());"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isIgnoreGlobListOverriding());"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isIgnoreCommitListOverriding());"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isFileSizeLimitOverriding());"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isFileSizeLimitIgnored());"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(config.isIgnoredFileAnalysisSkipped());"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void merge_twoRepoConfigs_success() throws Exception {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        FIRST_AUTHOR.setIgnoreGlobList(FIRST_AUTHOR_GLOB_LIST);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setIgnoreGlobList(SECOND_AUTHOR_GLOB_LIST);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setAuthorAliases(SECOND_AUTHOR_ALIASES);"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        expectedAuthors.add(FIRST_AUTHOR);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        expectedAuthors.add(SECOND_AUTHOR);"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RepoConfiguration firstRepo \u003d new RepoConfiguration.Builder()"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_BETA_LOCATION))"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .branch(TEST_REPO_BETA_MASTER_BRANCH)"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        firstRepo.setAuthorList(expectedAuthors);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        firstRepo.setAuthorDisplayName(FIRST_AUTHOR, \"Nbr\");"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        firstRepo.setAuthorDisplayName(SECOND_AUTHOR, \"Zac\");"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        firstRepo.addAuthorNamesToAuthorMapEntry(SECOND_AUTHOR, Arrays.asList(\"Zachary Tang\"));"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        firstRepo.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        RepoConfiguration secondRepo \u003d new RepoConfiguration.Builder()"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_BETA_LOCATION))"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .branch(TEST_REPO_BETA_ADD_CONFIG_JSON_BRANCH)"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        secondRepo.setAuthorList(Arrays.asList(SECOND_AUTHOR));"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        secondRepo.setAuthorDisplayName(SECOND_AUTHOR, \"Zac\");"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        secondRepo.addAuthorNamesToAuthorMapEntry(SECOND_AUTHOR, Arrays.asList(\"Zachary Tang\"));"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        secondRepo.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(TEST_CONFIG_FOLDER).build();"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d"},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":"                new AuthorConfigCsvParser(cliArguments.getAuthorConfigFilePath()).parse();"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(actualConfigs, authorConfigs);"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, actualConfigs.size());"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(firstRepo, actualConfigs.get(0));"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(secondRepo, actualConfigs.get(1));"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void merge_emptyLocation_success() throws Exception {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        FIRST_AUTHOR.setIgnoreGlobList(FIRST_AUTHOR_GLOB_LIST);"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        SECOND_AUTHOR.setAuthorAliases(SECOND_AUTHOR_ALIASES);"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedBetaAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedBetaAuthors.add(FIRST_AUTHOR);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedBetaAuthors.add(SECOND_AUTHOR);"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        List\u003cAuthor\u003e expectedDeltaAuthors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedDeltaAuthors.add(FIRST_AUTHOR);"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedBetaConfig \u003d"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                new RepoConfiguration.Builder()"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                        .location(new RepoLocation(TEST_REPO_BETA_LOCATION))"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                        .branch(TEST_REPO_BETA_MASTER_BRANCH)"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                        .build();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        expectedBetaConfig.setAuthorList(expectedBetaAuthors);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        expectedBetaConfig.setAuthorDisplayName(FIRST_AUTHOR, \"Nbr\");"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        expectedBetaConfig.setAuthorDisplayName(SECOND_AUTHOR, \"Zac\");"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        expectedBetaConfig.addAuthorNamesToAuthorMapEntry(SECOND_AUTHOR, Arrays.asList(\"Zachary Tang\"));"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        expectedBetaConfig.setIgnoreGlobList(REPO_LEVEL_GLOB_LIST);"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedBetaConfig.setIsShallowCloningPerformed(true);"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedDeltaConfig \u003d"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                new RepoConfiguration.Builder()"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                        .location(new RepoLocation(TEST_REPO_DELTA_LOCATION))"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                        .branch(TEST_REPO_DELTA_BRANCH)"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                        .build();"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        expectedDeltaConfig.setAuthorList(expectedDeltaAuthors);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        expectedDeltaConfig.setAuthorDisplayName(FIRST_AUTHOR, \"Nbr\");"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        expectedDeltaConfig.setStandaloneConfigIgnored(true);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        expectedDeltaConfig.setFormats(TEST_REPO_DELTA_FORMATS);"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e expectedConfigs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        expectedConfigs.add(expectedBetaConfig);"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        expectedConfigs.add(expectedDeltaConfig);"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(MERGE_EMPTY_LOCATION_FOLDER).build();"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":206,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d"},{"lineNumber":208,"author":{"gitId":"MarcusTXK"},"content":"                new AuthorConfigCsvParser(cliArguments.getAuthorConfigFilePath()).parse();"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(actualConfigs, authorConfigs);"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(2, actualConfigs.size());"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedConfigs, actualConfigs);"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfigs.get(0), actualConfigs.get(0));"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        TestUtil.compareRepoConfig(expectedConfigs.get(1), actualConfigs.get(1));"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void repoConfig_defaultBranch_success() throws Exception {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        RepoConfiguration expectedConfig \u003d new RepoConfiguration.Builder()"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_BETA_LOCATION))"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .branch(RepoConfiguration.DEFAULT_BRANCH)"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        String input \u003d new InputBuilder().addConfig(TEST_EMPTY_BRANCH_CONFIG_FOLDER).build();"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        CliArguments cliArguments \u003d ArgsParser.parse(translateCommandline(input));"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e actualConfigs \u003d"},{"lineNumber":229,"author":{"gitId":"MarcusTXK"},"content":"                new RepoConfigCsvParser(cliArguments.getRepoConfigFilePath()).parse();"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        List\u003cAuthorConfiguration\u003e authorConfigs \u003d"},{"lineNumber":231,"author":{"gitId":"MarcusTXK"},"content":"                new AuthorConfigCsvParser(cliArguments.getAuthorConfigFilePath()).parse();"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        RepoConfiguration.merge(actualConfigs, authorConfigs);"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, actualConfigs.size());"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedConfig.getBranch(), actualConfigs.get(0).getBranch());"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedConfig.getBranch(), authorConfigs.get(0).getBranch());"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public void repoConfig_overrideKeyword_success() throws Exception {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_OVERRIDE_KEYWORD_FILE);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d configs.get(0);"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, configs.size());"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_CONFIG_FORMATS, config.getFileTypeManager().getFormats());"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isStandaloneConfigIgnored());"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(CommitHash.convertStringsToCommits(TEST_REPO_BETA_CONFIG_IGNORED_COMMITS),"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                config.getIgnoreCommitList());"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(FILE_SIZE_LIMIT_VALUE, config.getFileSizeLimit());"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(config.isFormatsOverriding());"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(config.isIgnoreGlobListOverriding());"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(config.isIgnoreCommitListOverriding());"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(config.isFileSizeLimitOverriding());"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void repoConfig_redundantLines_success() throws Exception {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_REDUNDANT_LINES_FILE);"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(3, configs.size());"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        RepoConfiguration betaConfig \u003d configs.get(0);"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        RepoConfiguration charlieConfig \u003d configs.get(1);"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        RepoConfiguration deltaConfig \u003d configs.get(2);"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), betaConfig.getLocation());"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, betaConfig.getBranch());"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_CHARLIE_LOCATION), charlieConfig.getLocation());"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_CHARLIE_BRANCH, charlieConfig.getBranch());"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_DELTA_LOCATION), deltaConfig.getLocation());"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_DELTA_BRANCH, deltaConfig.getBranch());"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(deltaConfig.isStandaloneConfigIgnored());"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    public void repoConfig_differentColumnOrder_success() throws Exception {"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_DIFFERENT_COLUMN_ORDER_FILE);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, configs.size());"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d configs.get(0);"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_CONFIG_FORMATS, config.getFileTypeManager().getFormats());"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(config.isStandaloneConfigIgnored());"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(config.getIgnoreCommitList(),"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                CommitHash.convertStringsToCommits(TEST_REPO_BETA_CONFIG_IGNORED_COMMITS));"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isFormatsOverriding());"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isIgnoreGlobListOverriding());"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isIgnoreCommitListOverriding());"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    public void repoConfig_missingOptionalHeader_success() throws Exception {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_OPTIONAL_HEADER_MISSING_FILE);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(1, configs.size());"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d configs.get(0);"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(new RepoLocation(TEST_REPO_BETA_LOCATION), config.getLocation());"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_MASTER_BRANCH, config.getBranch());"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TEST_REPO_BETA_CONFIG_FORMATS, config.getFileTypeManager().getFormats());"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(DEFAULT_FILE_SIZE_LIMIT, config.getFileSizeLimit());"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(config.isStandaloneConfigIgnored());"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isFormatsOverriding());"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isIgnoreGlobListOverriding());"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isIgnoreCommitListOverriding());"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(config.isFileSizeLimitOverriding());"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public void repoConfig_withUnrecognizedValuesForYesKeywordHeaders_valuesIgnored() throws Exception {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(REPO_CONFIG_UNRECOGNIZED_VALUES_FOR_YES_KEYWORD_HEADERS_FILE);"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(configs.get(0).isStandaloneConfigIgnored());"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(configs.get(0).isShallowCloningPerformed());"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(configs.get(0).isFindingPreviousAuthorsPerformed());"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(configs.get(0).isFileSizeLimitIgnored());"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(configs.get(0).isIgnoredFileAnalysisSkipped());"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public void repoConfig_invalidFileSizeLimit_valueIgnored() throws Exception {"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(REPO_CONFIG_INVALID_FILE_SIZE_LIMIT);"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(configs.get(0).getFileSizeLimit(), DEFAULT_FILE_SIZE_LIMIT);"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(configs.get(0).isFileSizeLimitOverriding());"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    public void repoConfig_ignoreFileSizeLimit_ignoreFileSizeColumns() throws Exception {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(REPO_CONFIG_IGNORE_FILE_SIZE_LIMIT);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        List\u003cRepoConfiguration\u003e configs \u003d repoConfigCsvParser.parse();"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(configs.get(0).isFileSizeLimitIgnored());"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(configs.get(0).isFileSizeLimitOverriding());"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(configs.get(0).isIgnoredFileAnalysisSkipped());"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    public void repoConfig_mandatoryHeaderMissing_throwsInvalidCsvException() throws Exception {"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_MANDATORY_HEADER_MISSING_FILE);"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(InvalidCsvException.class, () -\u003e repoConfigCsvParser.parse());"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    public void repoConfig_zeroValidRecords_throwsInvalidCsvException() throws Exception {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d new RepoConfigCsvParser(REPO_CONFIG_ZERO_VALID_RECORDS);"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(InvalidCsvException.class, () -\u003e repoConfigCsvParser.parse());"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    public void repoConfig_duplicateHeadersCaseSensitive_throwsInvalidCsvException() throws Exception {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d"},{"lineNumber":375,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(REPO_CONFIG_DUPLICATE_HEADERS_CASE_SENSITIVE_FILE);"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(InvalidCsvException.class, () -\u003e repoConfigCsvParser.parse());"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    public void repoConfig_duplicateHeadersCaseInsensitive_throwsInvalidCsvException() throws Exception {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d"},{"lineNumber":382,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(REPO_CONFIG_DUPLICATE_HEADERS_CASE_INSENSITIVE_FILE);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(InvalidCsvException.class, () -\u003e repoConfigCsvParser.parse());"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    public void repoConfig_unknownHeaders_throwsInvalidHeaderException() throws Exception {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        RepoConfigCsvParser repoConfigCsvParser \u003d"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                new RepoConfigCsvParser(REPO_CONFIG_UNKNOWN_HEADER_FILE);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(InvalidHeaderException.class, () -\u003e repoConfigCsvParser.parse());"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":392,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"MarcusTXK":6,"-":386}},{"path":"src/test/java/reposense/template/GitTestTemplate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package reposense.template;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Iterator;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Supplier;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"import reposense.authorship.FileInfoAnalyzer;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import reposense.authorship.FileInfoExtractor;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileInfo;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import reposense.authorship.model.FileResult;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import reposense.authorship.model.LineInfo;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import reposense.git.GitCheckout;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import reposense.git.GitShow;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import reposense.git.exception.CommitNotFoundException;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import reposense.model.Author;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import reposense.model.CommitHash;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import reposense.model.FileTypeTest;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import reposense.model.RepoConfiguration;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import reposense.model.RepoLocation;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import reposense.util.FileUtil;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import reposense.util.TestRepoCloner;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains templates for git testing."},{"lineNumber":36,"author":{"gitId":"-"},"content":" */"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class GitTestTemplate {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    protected static final String TEST_REPO_GIT_LOCATION \u003d \"https://github.com/reposense/testrepo-Alpha.git\";"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    protected static final String IGNORE_REVS_FILE_NAME \u003d \".git-blame-ignore-revs\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    protected static final String TEST_REPO_BLAME_WITH_PREVIOUS_AUTHORS_BRANCH \u003d \"1565-find-previous-authors\";"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected static final String FIRST_COMMIT_HASH \u003d \"7d7584f\";"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected static final String ROOT_COMMIT_HASH \u003d \"fd425072e12004b71d733a58d819d845509f8db3\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected static final String TEST_COMMIT_HASH \u003d \"2fb6b9b\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected static final String TEST_COMMIT_HASH_LONG \u003d \"2fb6b9b2dd9fa40bf0f9815da2cb0ae8731436c7\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected static final String TEST_COMMIT_HASH_PARENT \u003d \"c5a6dc774e22099cd9ddeb0faff1e75f9cf4f151\";"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected static final String MAIN_AUTHOR_NAME \u003d \"harryggg\";"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_NAME \u003d \"fakeAuthor\";"},{"lineNumber":49,"author":{"gitId":"sikai00"},"content":"    protected static final String UNCONVENTIONAL_AUTHOR_NAME \u003d \"-unconventional_author-\";"},{"lineNumber":50,"author":{"gitId":"sikai00"},"content":"    protected static final String WHITESPACE_AUTHOR_NAME \u003d \"whitespace author\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected static final String IGNORED_AUTHOR_NAME \u003d \"FH-30\";"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected static final String EUGENE_AUTHOR_NAME \u003d \"eugenepeh\";"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected static final String YONG_AUTHOR_NAME \u003d \"Yong Hao TENG\";"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected static final String MINGYI_AUTHOR_NAME \u003d \"myteo\";"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected static final String JAMES_AUTHOR_NAME \u003d \"jamessspanggg\";"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected static final String JAMES_ALTERNATIVE_AUTHOR_NAME \u003d \"James Pang\";"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    protected static final String JINYAO_AUTHOR_NAME \u003d \"jylee-git\";"},{"lineNumber":58,"author":{"gitId":"ckcherry23"},"content":"    protected static final String CHENGYU_AUTHOR_NAME \u003d \"HCY123902\";"},{"lineNumber":59,"author":{"gitId":"sikai00"},"content":"    protected static final String LATEST_COMMIT_HASH \u003d \"abbd5888d5cd4e411c6a8e58e661b0eafdae1335\";"},{"lineNumber":60,"author":{"gitId":"sikai00"},"content":"    protected static final String LATEST_COMMIT_HASH_PARENT \u003d \"f768b9b1d9d1478f8ac8cf3b4c7f868479edc07a\";"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    protected static final String EMPTY_TREE_HASH \u003d \"4b825dc642cb6eb9a060e54bf8d69288fbee4904\";"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    protected static final String EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING \u003d"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \"2d87a431fcbb8f73a731b6df0fcbee962c85c250\";"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    protected static final CommitHash EUGENE_AUTHOR_README_FILE_COMMIT_07052018 \u003d"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            new CommitHash(EUGENE_AUTHOR_README_FILE_COMMIT_07052018_STRING);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING \u003d"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \"768015345e70f06add2a8b7d1f901dc07bf70582\";"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    protected static final CommitHash FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018 \u003d"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_TEST_FILE_COMMIT_08022018_STRING);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    protected static final String MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING \u003d"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            \"8d0ac2ee20f04dce8df0591caed460bffacb65a4\";"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    protected static final CommitHash MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018 \u003d"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            new CommitHash(MAIN_AUTHOR_BLAME_TEST_FILE_COMMIT_06022018_STRING);"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    protected static final String AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021_STRING \u003d"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \"1d29339e7d16eb5b2bc8fb542e08acedd3d4b0eb\";"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    protected static final CommitHash AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021 \u003d"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            new CommitHash(AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021_STRING);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING \u003d"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \"7d7584fc204922cc5ff3bd5ca073cad6bed2c46a\";"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_TWO_06022018_STRING \u003d"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \"8d0ac2ee20f04dce8df0591caed460bffacb65a4\";"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_THREE_07022018_STRING \u003d"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            \"8e4ca1da5d413e9ab84a1e8d1474918afa97f7a1\";"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    protected static final String FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING \u003d"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \"768015345e70f06add2a8b7d1f901dc07bf70582\";"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    protected static final List\u003cCommitHash\u003e FAKE_AUTHOR_BLAME_RANGED_COMMIT_LIST_09022018 \u003d Arrays.asList("},{"lineNumber":87,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_ONE_06022018_STRING),"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_TWO_06022018_STRING),"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_THREE_07022018_STRING),"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            new CommitHash(FAKE_AUTHOR_BLAME_RANGED_COMMIT_FOUR_08022018_STRING));"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    protected static final List\u003cCommitHash\u003e AUTHOR_TO_IGNORE_BLAME_COMMIT_LIST_07082021 \u003d Collections.singletonList("},{"lineNumber":92,"author":{"gitId":"-"},"content":"            new CommitHash(AUTHOR_TO_IGNORE_BLAME_TEST_FILE_COMMIT_07082021_STRING)"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    protected static final String NONEXISTENT_COMMIT_HASH \u003d \"nonExistentCommitHash\";"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    protected static final ZoneId TIME_ZONE_ID \u003d ZoneId.of(\"Asia/Singapore\");"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    protected static final Author MAIN_AUTHOR \u003d new Author(MAIN_AUTHOR_NAME);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    protected static final Author FAKE_AUTHOR \u003d new Author(FAKE_AUTHOR_NAME);"},{"lineNumber":99,"author":{"gitId":"sikai00"},"content":"    protected static final Author UNCONVENTIONAL_AUTHOR \u003d new Author(UNCONVENTIONAL_AUTHOR_NAME);"},{"lineNumber":100,"author":{"gitId":"sikai00"},"content":"    protected static final Author WHITESPACE_AUTHOR \u003d new Author(WHITESPACE_AUTHOR_NAME);"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    protected static ThreadLocal\u003cRepoConfiguration\u003e configs \u003d ThreadLocal.withInitial(() -\u003e {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return newRepoConfiguration();"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private static final Supplier\u003cString\u003e EXTRA_OUTPUT_FOLDER_NAME_SUPPLIER \u003d () -\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            String.valueOf(Thread.currentThread().getId());"},{"lineNumber":112,"author":{"gitId":"sikai00"},"content":"    private FileInfoExtractor fileInfoExtractor \u003d new FileInfoExtractor();"},{"lineNumber":113,"author":{"gitId":"sikai00"},"content":"    private FileInfoAnalyzer fileInfoAnalyzer \u003d new FileInfoAnalyzer();"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @BeforeEach"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void before() throws Exception {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d newRepoConfiguration();"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        config.setAuthorList(Collections.singletonList(getAlphaAllAliasAuthor()));"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        config.setFormats(FileTypeTest.DEFAULT_TEST_FORMATS);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID);"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        config.setIsLastModifiedDateIncluded(false);"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"        configs.set(config);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @BeforeAll"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void beforeClass() throws Exception {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        RepoConfiguration config \u003d newRepoConfiguration();"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        config.setZoneId(TIME_ZONE_ID);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        configs.set(config);"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        TestRepoCloner.cloneAndBranch(config, EXTRA_OUTPUT_FOLDER_NAME_SUPPLIER.get());"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @AfterEach"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void after() {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        GitCheckout.checkout(configs.get().getRepoRoot(), \"master\");"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private static RepoConfiguration newRepoConfiguration() throws Exception {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return new RepoConfiguration.Builder()"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .location(new RepoLocation(TEST_REPO_GIT_LOCATION))"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .branch(\"master\")"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .extraOutputFolderName(EXTRA_OUTPUT_FOLDER_NAME_SUPPLIER.get())"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Generates the .git-blame-ignore-revs file containing {@link CommitHash}es"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * from {@code toIgnore} for the test repo."},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public List\u003cCommitHash\u003e createTestIgnoreRevsFile(List\u003cCommitHash\u003e toIgnore) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String repoRoot \u003d configs.get().getRepoRoot();"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cCommitHash\u003e expandedIgnoreCommitList \u003d toIgnore.stream()"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .map(CommitHash::toString)"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .map(commitHash -\u003e {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    try {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                        return GitShow.getExpandedCommitHash(repoRoot, commitHash);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    } catch (CommitNotFoundException e) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                        return new CommitHash(commitHash);"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                })"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String fileLocation \u003d repoRoot + IGNORE_REVS_FILE_NAME;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        FileUtil.writeIgnoreRevsFile(fileLocation, expandedIgnoreCommitList);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return expandedIgnoreCommitList;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void removeTestIgnoreRevsFile() {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String fileLocation \u003d configs.get().getRepoRoot() + IGNORE_REVS_FILE_NAME;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        new File(fileLocation).delete();"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * For each line in {@link FileResult}, assert that it is attributed to the expected author provided by"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * {@code expectedLineAuthors}."},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void assertFileAnalysisCorrectness(FileResult fileResult, List\u003cAuthor\u003e expectedLineAuthors) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        List\u003cLineInfo\u003e lines \u003d fileResult.getLines();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expectedLineAuthors.size(), lines.size());"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Iterator\u003cAuthor\u003e lineAuthorsItr \u003d expectedLineAuthors.iterator();"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Iterator\u003cLineInfo\u003e linesItr \u003d lines.iterator();"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"        while (linesItr.hasNext() \u0026\u0026 lineAuthorsItr.hasNext()) {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            assertEquals(lineAuthorsItr.next(), linesItr.next().getAuthor());"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public FileResult getFileResult(String relativePath) {"},{"lineNumber":192,"author":{"gitId":"sikai00"},"content":"        FileInfo fileInfo \u003d fileInfoExtractor.generateFileInfo(configs.get(), relativePath);"},{"lineNumber":193,"author":{"gitId":"sikai00"},"content":"        return fileInfoAnalyzer.analyzeTextFile(configs.get(), fileInfo);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Returns a {@link Author} that has git id and aliases of all authors in testrepo-Alpha, so that no commits"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * will be filtered out in the `git log` command."},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    protected Author getAlphaAllAliasAuthor() {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Author author \u003d new Author(MAIN_AUTHOR_NAME);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        author.setAuthorAliases(Arrays.asList(FAKE_AUTHOR_NAME, EUGENE_AUTHOR_NAME, YONG_AUTHOR_NAME));"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return author;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ckcherry23":1,"sikai00":10,"-":194}}]
